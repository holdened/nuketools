set cut_paste_input [stack 0]
version 13.2 v8
BackdropNode {
 inputs 0
 name BackdropNode1
 tile_color 0x191919ff
 label "Seb's\nPresentation"
 note_font_size 100
 selected true
 xpos -499
 ypos 6381
 bdwidth 674
 bdheight 437
}
BackdropNode {
 inputs 0
 name BackdropNode2
 tile_color 0x191919ff
 label "simple\nblur/unpremult\n(1 iteration)"
 note_font_size 100
 selected true
 xpos -495
 ypos 6955
 bdwidth 748
 bdheight 973
}
BackdropNode {
 inputs 0
 name BackdropNode3
 tile_color 0x191919ff
 label "importance of setting up a proper core matte"
 note_font_size 100
 selected true
 xpos -500
 ypos 8056
 bdwidth 2775
 bdheight 2380
}
BackdropNode {
 inputs 0
 name BackdropNode4
 tile_color 0x191919ff
 label "your choice: keymixing multiple edge extends vs. tweaking\nspecific areas of your core matte and stick with only one\nedge extend"
 note_font_size 100
 selected true
 xpos -487
 ypos 10609
 bdwidth 2719
 bdheight 1918
}
BackdropNode {
 inputs 0
 name BackdropNode5
 tile_color 0x191919ff
 label "technique to bring back detail"
 note_font_size 100
 selected true
 xpos -476
 ypos 12725
 bdwidth 1470
 bdheight 1628
}
StickyNote {
 inputs 0
 name StickyNote6
 label "\n<b>EdgeSpread</b>\n\n- blur, unpremult technique\n\n\n<font color=green>- easy to set up\n\n</font>\n\n<font color=red>- erode can't be split (or has to be done &nbsp;&nbsp;internally)\n- only 1 blur iteration\n\n</font>\n"
 note_font_size 30
 selected true
 xpos -24667
 ypos 6707
}
StickyNote {
 inputs 0
 name StickyNote15
 label "\n- erode / dilate technique\n\n\n<font color=green>- easy to tweak\n- option to maintain or blur &nbsp;&nbsp;detail\n- choice of Merge operation\n\n</font>\n\n<font color=red>\n\n</font>\n"
 note_font_size 30
 selected true
 xpos -7806
 ypos 6633
}
push $cut_paste_input
Reformat {
 format "4096 2160 0 0 4096 2160 1 4K_DCP"
 name Reformat3
 selected true
 xpos 592
 ypos 8638
}
Roto {
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x45000000 x44870000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Ellipse1 512 bezier
     {{cc
       {f 8192}
       {px
        {x447a4000 x447a8000}
        {{{xc42a8496 -}}
      {{0 -}}}
        {{{x4500c000 -}}
      {{x43f00000 -}}}
        {{{x442a8498 -}}
      {{0 -}}}
        {{{0 -}}
      {{xc395cea8 -}}}
        {{{x454df000 -}}
      {{x447fa000 -}}}
        {{{0 -}}
      {{x4395cea8 -}}}
        {{{x442a8498 -}}
      {{0 -}}}
        {{{x4500c000 -}}
      {{x44c3a000 -}}}
        {{{xc42a8496 -}}
      {{0 -}}}
        {{{0 -}}
      {{x4395cea8 -}}}
        {{{x444e4000 -}}
      {{x447fa000 -}}}
        {{{0 -}}
      {{xc395cea8 -}}}}}
      {cc
       {f 8192}
       {px
        {x447a4000 x447a8000}
        {{{xc42a8496 -}}
      {{0 -}}}
        {{{0 -}
       {xc0430c00 -}}
      {{xc1fe6660 0 1 x41fe6660 1}
       {xc173cf40 x41fe6660 1 0 1}}}
        {{{x442a8498 -}}
      {{0 -}}}
        {{{0 -}}
      {{xc395cea8 -}}}
        {{{x43f12660 0 1 xc3f12660 1}
       {x415b6e00 xc3f12660 1 0 1}}
      {{xc1299980 0 1 x41299980 1}
       {0 x41299980 1 0 1}}}
        {{{0 -}}
      {{x4395cea8 -}}}
        {{{x442a8498 -}}
      {{0 -}}}
        {{{x3f8cd000 0 1 xbf8cd000 1}
       {0 xbf8cd000 1 0 1}}
      {{x3ff33400 0 1 xbff33400 1}
       {x41924940 xbff33400 1 0 1}}}
        {{{xc42a8496 -}}
      {{0 -}}}
        {{{0 -}}
      {{x4395cea8 -}}}
        {{{xc2693320 0 1 x42693320 1}
       {xc1b6db80 x42693320 1 0 1}}
      {{xc0a99a00 0 1 x40a99a00 1}
       {0 x40a99a00 1 0 1}}}
        {{{0 -}}
      {{xc395cea8 -}}}}}}
     {tx x43998000 x4500c000 x447fa000}
     {a osw x41200000 osf 0 str 1 spx x45000000 spy x44870000 sb 1 ltn x43998000 ltm x43998000 tt x40e00000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 tt 7 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {2048 1080}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 307
 lifetime_end 307
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto3
 selected true
 xpos 592
 ypos 8706
}
Reformat {
 name Reformat4
 selected true
 xpos 592
 ypos 8788
}
Dot {
 name Dot5
 selected true
 xpos 626
 ypos 8828
}
set N2b4ae0b0 [stack 0]
Dot {
 name Dot6
 selected true
 xpos 771
 ypos 8828
}
Dot {
 name Dot7
 selected true
 xpos 771
 ypos 9019
}
push $N2b4ae0b0
Invert {
 name Invert3
 selected true
 xpos 592
 ypos 8886
}
Dot {
 name Dot4
 selected true
 xpos 626
 ypos 8950
}
Constant {
 inputs 0
 channels rgb
 color 0.5
 name Constant5
 selected true
 xpos 234
 ypos 8754
}
Shuffle2 {
 fromInput1 {{0} B}
 fromInput2 {{0} B}
 mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 white -1 -1 rgba.alpha 0 3"
 name Shuffle9
 selected true
 xpos 234
 ypos 8854
}
Dot {
 name Dot82
 selected true
 xpos 268
 ypos 8950
}
Constant {
 inputs 0
 channels rgb
 color {0.555 0.098 0.33 0}
 color_panelDropped true
 name Constant10
 selected true
 xpos 513
 ypos 8397
}
CheckerBoard2 {
 inputs 0
 centerlinewidth 0
 name CheckerBoard4
 selected true
 xpos 378
 ypos 8300
}
Merge2 {
 inputs 2
 operation multiply
 output {rgba.red rgba.green rgba.blue -rgba.alpha}
 name Merge23
 selected true
 xpos 378
 ypos 8420
}
Dot {
 name Dot1
 selected true
 xpos 412
 ypos 8494
}
Merge2 {
 inputs 2+1
 name Merge10
 selected true
 xpos 378
 ypos 8946
}
Copy {
 inputs 2
 from0 rgba.alpha
 to0 rgba.alpha
 name Copy9
 selected true
 xpos 378
 ypos 9009
}
Premult {
 name Premult4
 selected true
 xpos 378
 ypos 9074
}
Dot {
 name Dot8
 selected true
 xpos 412
 ypos 9269
}
set N369ad740 [stack 0]
Dot {
 name Dot170
 selected true
 xpos 1215
 ypos 9269
}
set N35f60e20 [stack 0]
Dot {
 name Dot2
 selected true
 xpos 1757
 ypos 9269
}
Dot {
 name Dot110
 selected true
 xpos 1757
 ypos 9355
}
set N35f94ff0 [stack 0]
Dot {
 name Dot3
 selected true
 xpos 1627
 ypos 9355
}
Grade {
 channels alpha
 blackpoint 0.96
 black_clamp false
 name Grade1
 selected true
 xpos 1593
 ypos 9392
}
Dot {
 name Dot111
 selected true
 xpos 1627
 ypos 9514
}
push $N35f94ff0
Group {
 inputs 2
 name ColorDilate3
 knobChanged "\ntn = nuke.thisNode()\ntk = nuke.thisKnob()\n\nfullList =  tn\['fullList'].value().strip(\"\[']\").split(\"', '\")\nnodeList = fullList\[0], fullList\[1], fullList\[2], fullList\[3], fullList\[4], fullList\[5], fullList\[6]\npreviousLoopNum = tn\['previousLoopNum'].getValue()\n\ngrowTexture = tn\['growTexture'].getValue()\nqualityVal = int( tn\['quality'].getValue() )\n\n\n##### DEFINE VALUE CHANGES ##################\n\ndef valChange():\n    qualityBias = tn\['qualityBias'].getValue()\n    blurCenter = tn\['blurCenter'].getValue()\n    bcDistribution = tn\['bcDistribution'].getValue()\n    for i in range (0, qualityVal):\n        blurVal = nuke.toNode(fullList\[i*len(nodeList)])\n        erodeVal = nuke.toNode(fullList\[i*len(nodeList)+3])\n        blurCenterVal = nuke.toNode(fullList\[i*len(nodeList)+5])\n        if isinstance(growTexture, float) == True:\n            blurValSize = (growTexture/qualityVal*(i+1)*(1-qualityBias)) + (growTexture/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2)))\n            blurVal\['size'].setValue( blurValSize )\n            erodeVal\['size'].setValue(blurVal\['size'].getValue()/2)\n            blurCenterVal\['size'].setValue( ( blurValSize*(1-bcDistribution) +  (blurValSize*(bcDistribution*(pow(i+1, 2)/pow(qualityVal, 2)))) ) * blurCenter )\n        else:\n            blurVal\['size'].setValue(\[ (growTexture\[0]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[0]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) , (growTexture\[1]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[1]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) ])\n            erodeVal\['size'].setValue(\[blurVal\['size'].getValue()\[0]/2,blurVal\['size'].getValue()\[1]/2])\n            blurCenterVal\['size'].setValue(\[ (growTexture\[0]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[0]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) , (growTexture\[1]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[1]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) ])\n\ndef filterChange():\n    filters = int( tn\['filter'].getValue() )\n    filterQuality = int( tn\['filterQuality'].getValue() )\n    crop = int( tn\['crop'].getValue() )\n    for i in range (0, qualityVal):\n        blurVal = nuke.toNode(fullList\[i*len(nodeList)])\n        blurVal\['filter'].setValue( filters )\n        blurVal\['quality'].setValue( filterQuality )\n        blurVal\['crop'].setValue( crop )\n        blurCenterVal = nuke.toNode(fullList\[i*len(nodeList)])\n        blurCenterVal\['filter'].setValue( filters )\n        blurCenterVal\['quality'].setValue( filterQuality )\n        blurCenterVal\['crop'].setValue( crop )\n\n\n##### CREATE THE NODES ###################\n\nif tk.name()=='quality':\n    if qualityVal < 1:\n        qualityVal = 1\n    elif qualityVal >100:\n        qualityVal = 100\n    tn\['quality'].setValue( qualityVal )\n    \n\n    if qualityVal != previousLoopNum:\n\n\n        inputDep = nuke.dependencies(\[nuke.toNode('Unpremult1')], nuke.INPUTS)\n        resultOver = nuke.toNode( inputDep\[0].name() )\n\n        difference = qualityVal-previousLoopNum\n        if difference > 0:\n            for i in range (1, int(difference+1)):\n                \n                blur = nuke.nodes.Blur ()\n                blur\['channels'].setValue('rgba')\n                blur\['maskChannelInput'].setValue('none')\n                blur.setInput (0, nuke.toNode('Switch2'))\n                \n                unpremult = nuke.nodes.Unpremult ()\n                unpremult\['channels'].setValue('rgb')\n                unpremult\['alpha'].setValue('rgba.alpha')\n                unpremult\['invert'].setValue(0)\n                unpremult.setInput (0, blur)\n                \n                expression = nuke.nodes.Expression(expr3 = 'a==0?0:1')\n                expression.setInput (0, unpremult)\n                \n                erode = nuke.nodes.FilterErode ()\n                erode\['channels'].setValue( 'rgba.alpha' )\n                erode\['filter'].setValue( 'gaussian' )\n                erode.setInput (0, expression)\n                \n                premult = nuke.nodes.Premult ()\n                premult\['channels'].setValue( 'rgb' )\n                premult\['alpha'].setValue( 'rgba.alpha' )\n                premult.setInput (0, erode)\n\n                blurCenter = nuke.nodes.Blur ()\n                blurCenter\['channels'].setValue('rgba')\n                blurCenter\['maskChannelInput'].setValue('none')\n                blurCenter.setInput (0, premult)\n\n                mergeOver = nuke.nodes.Merge2 ()\n                mergeOver\['operation'].setValue( 'over' )\n                mergeOver\['sRGB'].setValue( 0 )\n                mergeOver\['screen_alpha'].setValue( 0 )\n                mergeOver\['bbox'].setValue( 'union' )\n                mergeOver\['Achannels'].setValue( 'rgba' )\n                mergeOver\['Bchannels'].setValue( 'rgba' )\n                mergeOver\['output'].setValue( 'rgba' )\n                mergeOver\['also_merge'].setValue( 'none' )\n                mergeOver.setInput (0, blurCenter)\n                mergeOver.setInput (1, resultOver)\n                \n                \n                resultOver = mergeOver\n                \n                \n                nodeList = blur.name(), unpremult.name(), expression.name(), erode.name(), premult.name(), blurCenter.name(), resultOver.name()\n                fullList.extend(nodeList)\n\n\n##### DELETE THE NODES ##################################\n\n        else:\n            fullList.reverse()\n            for i in range (int(qualityVal), int(previousLoopNum)):\n                for i in range (0, len(nodeList)):\n                    nuke.delete(nuke.toNode(fullList\[0]))\n                    del fullList\[0]\n                resultOver = nuke.toNode(fullList\[0])\n                resultExpression = nuke.toNode(fullList\[3])\n            fullList.reverse()\n\n        nuke.toNode('Unpremult1').setInput(0, resultOver)\n        valChange()\n        filterChange()\n                \n        previousLoopNum = qualityVal\n        \n        tn\['previousLoopNum'].setValue( int(previousLoopNum) )\n        tn\['fullList'].setValue( str(fullList) )\n\n\n\n##### CHANGE EXISTING VALUES #####################\n\nif tk.name()=='growTexture':\n    valChange()\n    \nif tk.name()=='qualityBias':\n    valChange()\n\nif tk.name()=='blurCenter':\n    valChange()\n\nif tk.name()=='bcDistribution':\n    valChange()\n    \nif tk.name()=='filter':\n    filterChange()\n    \nif tk.name()=='filterQuality':\n    filterChange()\n    \nif tk.name()=='crop':\n    filterChange()\n\n\n"
 note_font "Bitstream Vera Sans"
 selected true
 xpos 1723
 ypos 9510
 addUserKnob {20 User l fColourDilate}
 addUserKnob {14 growTexture l "Grow Texture" R 0 100}
 growTexture {160 40}
 addUserKnob {14 erodeMatte l "Erode Matte" t "Dilate or erode the matte to adjust the grow start paint" R -100 100}
 addUserKnob {7 expandMatte l "Expand Matte" t "Expand or compress the matte to adjust the grow start point" R -0.99999 0.99999}
 addUserKnob {7 quality l Iterations t "The number of iterations Colour Dilate will go through.  More is slower.  Max steps is 100" R 1 20}
 quality 7
 addUserKnob {7 qualityBias l Distribution t "0 is a linear distribution.  1 is exponential distribution.\nExponential is smoother with low quality.\nLinear is better with high quality."}
 qualityBias 1
 addUserKnob {26 ""}
 addUserKnob {7 blurCenter l "Blur Center" t "Soften central area where opposite dilates meet creating a hard line.  Is a multiple of Grow Texture." R 0 5}
 addUserKnob {7 bcDistribution l "BC Distribution" t "0 blurs a direct multiple of Grow Texture. 1 blurs exponentially more towards the center."}
 addUserKnob {26 ""}
 addUserKnob {4 filter l Filter t "filter\n" M {box triangle quadratic gaussian ""}}
 filter gaussian
 addUserKnob {3 filterQuality l " " -STARTLINE}
 filterQuality 15
 addUserKnob {6 crop l "crop to format" -STARTLINE}
 crop true
 addUserKnob {4 matteOutput l "Matte Output" M {rgb.alpha matte "dilated matte" "dilated area" "grain matte" ""}}
 addUserKnob {26 blank l "" -STARTLINE T "      "}
 addUserKnob {6 invertMatte l "invert Matte" -STARTLINE}
 invertMatte true
 addUserKnob {26 blank2 l "" -STARTLINE T "      "}
 addUserKnob {6 rgbIsPremult l "RGB is Premult?" -STARTLINE}
 rgbIsPremult true
 addUserKnob {1 colorDilate l INVISIBLE t "Keep me hidden" +INVISIBLE}
 addUserKnob {3 previousLoopNum l INVISIBLE +INVISIBLE}
 previousLoopNum 7
 addUserKnob {1 fullList l INVISIBLE +INVISIBLE}
 fullList "\['Blur1', 'Unpremult2', 'Expression1', 'FilterErode2', 'Premult1', 'BlurCenter', 'Merge2', 'Blur2', 'Unpremult3', 'Expression2', 'FilterErode3', 'Premult2', 'Blur3', 'Merge5', 'Blur4', 'Unpremult4', 'Expression3', 'FilterErode4', 'Premult3', 'Blur5', 'Merge6', 'Blur6', 'Unpremult5', 'Expression4', 'FilterErode5', 'Premult4', 'Blur7', 'Merge7', 'Blur8', 'Unpremult6', 'Expression5', 'FilterErode6', 'Premult5', 'Blur9', 'Merge8', 'Blur10', 'Unpremult7', 'Expression6', 'FilterErode7', 'Premult6', 'Blur11', 'Merge9', 'Blur12', 'Unpremult8', 'Expression7', 'FilterErode8', 'Premult7', 'Blur13', 'Merge10']"
}
 Input {
  inputs 0
  name InputMask
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -665
  number 1
 }
set N38f48560 [stack 0]
 AddChannels {
  channels alpha
  name AddChannels2
  note_font "Bitstream Vera Sans"
  xpos 365
  ypos 1125
 }
 Dot {
  name Dot3
  note_font "Bitstream Vera Sans"
  xpos 399
  ypos 1183
 }
 Input {
  inputs 0
  name InputRGB
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -531
 }
set N191eeb80 [stack 0]
 AddChannels {
  channels alpha
  name AddChannels1
  note_font "Bitstream Vera Sans"
  xpos 348
  ypos 949
 }
 Dot {
  name Dot2
  note_font "Bitstream Vera Sans"
  xpos 382
  ypos 1078
 }
push $N38f48560
 FilterErode {
  channels alpha
  size {{invertMatte==0?erodeMatte.w:-erodeMatte.w i} {invertMatte==0?erodeMatte.h:-erodeMatte.h i}}
  name FilterErode1
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -621
 }
 Invert {
  channels alpha
  mix {{invertMatte i}}
  name Invert2
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -563
 }
 Grade {
  channels alpha
  blackpoint {{"clamp(expandMatte, 0, 1)" i}}
  whitepoint {{"clamp(1+expandMatte, 0, 1)" i}}
  white_clamp true
  name Grade1
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -505
 }
 Grade {
  channels alpha
  whitepoint 0.5
  black_clamp false
  white_clamp true
  name Grade6
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -345
 }
 Dot {
  name Dot1
  note_font "Bitstream Vera Sans"
  xpos 837
  ypos -287
 }
set N36086ca0 [stack 0]
push $N191eeb80
 AddChannels {
  channels alpha
  name AddChannels3
  note_font "Bitstream Vera Sans"
  xpos 1120
  ypos -444
 }
push $N191eeb80
 Shuffle {
  alpha white
  name Shuffle1
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -458
 }
 Crop {
  box {{InputRGB.bbox.x i x1001 542} {InputRGB.bbox.y i} {InputRGB.bbox.r i} {InputRGB.bbox.t i}}
  name Crop3
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -414
 }
 Switch {
  inputs 2
  which {{rgbIsPremult i}}
  name Switch1
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -370
 }
 Dot {
  name Dot5
  note_font "Bitstream Vera Sans"
  xpos 1047
  ypos -326
 }
set N35ff13b0 [stack 0]
 Merge2 {
  inputs 2
  operation stencil
  bbox intersection
  name Merge1
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -292
 }
push $N36086ca0
 Dot {
  name Dot4
  note_font "Bitstream Vera Sans"
  xpos 837
  ypos -253
 }
push $N35ff13b0
 Dot {
  name Dot6
  note_font "Bitstream Vera Sans"
  xpos 946
  ypos -326
 }
 Merge2 {
  inputs 2
  operation stencil
  bbox B
  name Merge3
  note_font "Bitstream Vera Sans"
  xpos 912
  ypos -258
 }
 Dot {
  name Dot7
  note_font "Bitstream Vera Sans"
  xpos 946
  ypos -192
 }
 Switch {
  inputs 2
  which {{invertMatte i}}
  name Switch2
  note_font "Bitstream Vera Sans"
  xpos 1002
  ypos -196
 }
set N13a10f60 [stack 0]
push $N13a10f60
 Blur {
  channels rgba
  size {0.4664723032 0.1166180758}
  name Blur1
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos -26
 }
 Unpremult {
  name Unpremult2
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 18
 }
 Expression {
  expr3 a==0?0:1
  name Expression1
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 62
 }
 FilterErode {
  channels alpha
  size {0.2332361516 0.0583090379}
  filter gaussian
  name FilterErode2
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 106
 }
 Premult {
  name Premult1
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 164
 }
 Blur {
  channels rgba
  size {0.4664723032 0.1166180758}
  name BlurCenter
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 222
 }
 Merge2 {
  inputs 2
  name Merge2
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 280
 }
push $N13a10f60
 Blur {
  channels rgba
  size {3.731778426 0.9329446064}
  name Blur2
 }
 Unpremult {
  name Unpremult3
 }
 Expression {
  expr3 a==0?0:1
  name Expression2
 }
 FilterErode {
  channels alpha
  size {1.865889213 0.4664723032}
  filter gaussian
  name FilterErode3
 }
 Premult {
  name Premult2
 }
 Blur {
  channels rgba
  size {3.731778426 0.9329446064}
  name Blur3
 }
 Merge2 {
  inputs 2
  name Merge5
 }
push $N13a10f60
 Blur {
  channels rgba
  size {12.59475219 3.148688047}
  name Blur4
 }
 Unpremult {
  name Unpremult4
 }
 Expression {
  expr3 a==0?0:1
  name Expression3
 }
 FilterErode {
  channels alpha
  size {6.297376093 1.574344023}
  filter gaussian
  name FilterErode4
 }
 Premult {
  name Premult3
 }
 Blur {
  channels rgba
  size {12.59475219 3.148688047}
  name Blur5
 }
 Merge2 {
  inputs 2
  name Merge6
 }
push $N13a10f60
 Blur {
  channels rgba
  size {29.85422741 7.463556851}
  name Blur6
 }
 Unpremult {
  name Unpremult5
 }
 Expression {
  expr3 a==0?0:1
  name Expression4
 }
 FilterErode {
  channels alpha
  size {14.9271137 3.731778426}
  filter gaussian
  name FilterErode5
 }
 Premult {
  name Premult4
 }
 Blur {
  channels rgba
  size {29.85422741 7.463556851}
  name Blur7
 }
 Merge2 {
  inputs 2
  name Merge7
 }
push $N13a10f60
 Blur {
  channels rgba
  size {58.3090379 14.57725948}
  name Blur8
 }
 Unpremult {
  name Unpremult6
 }
 Expression {
  expr3 a==0?0:1
  name Expression5
 }
 FilterErode {
  channels alpha
  size {29.15451895 7.288629738}
  filter gaussian
  name FilterErode6
 }
 Premult {
  name Premult5
 }
 Blur {
  channels rgba
  size {58.3090379 14.57725948}
  name Blur9
 }
 Merge2 {
  inputs 2
  name Merge8
 }
push $N13a10f60
 Blur {
  channels rgba
  size {100.7580175 25.18950437}
  name Blur10
 }
 Unpremult {
  name Unpremult7
 }
 Expression {
  expr3 a==0?0:1
  name Expression6
 }
 FilterErode {
  channels alpha
  size {50.37900875 12.59475219}
  filter gaussian
  name FilterErode7
 }
 Premult {
  name Premult6
 }
 Blur {
  channels rgba
  size {100.7580175 25.18950437}
  name Blur11
 }
 Merge2 {
  inputs 2
  name Merge9
 }
push $N13a10f60
 Blur {
  channels rgba
  size {160 40}
  name Blur12
 }
 Unpremult {
  name Unpremult8
 }
 Expression {
  expr3 a==0?0:1
  name Expression7
 }
 FilterErode {
  channels alpha
  size {80 20}
  filter gaussian
  name FilterErode8
 }
 Premult {
  name Premult7
 }
 Blur {
  channels rgba
  size {160 40}
  name Blur13
 }
 Merge2 {
  inputs 2
  name Merge10
 }
 Unpremult {
  name Unpremult1
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 966
 }
 Dot {
  name Dot11
  xpos 258
  ypos 1020
 }
set N3e6ecfa0 [stack 0]
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  mix {{matteOutput==0?1:0 i}}
  name Copy2
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1068
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  mix {{matteOutput==1?1:0}}
  name Copy1
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1173
 }
 Dot {
  name Dot8
  xpos 258
  ypos 1227
 }
set N3e70ed30 [stack 0]
 Dot {
  name Dot9
  xpos 453
  ypos 1227
 }
 Expression {
  expr3 a<=0.000001?0:1
  name Expression12
  note_font "Bitstream Vera Sans"
  xpos 419
  ypos 1261
 }
 Dot {
  name Dot10
  xpos 453
  ypos 1303
 }
push $N3e6ecfa0
 Dot {
  name Dot13
  xpos 521
  ypos 1020
 }
 Dot {
  name Dot12
  xpos 521
  ypos 1205
 }
push $N191eeb80
 Merge2 {
  inputs 2
  operation difference
  bbox B
  name Merge14
  xpos 563
  ypos 1201
 }
 Keyer {
  operation "luminance key"
  range {0 1e-05 1 1}
  name Keyer1
  xpos 563
  ypos 1243
 }
 Merge2 {
  inputs 2
  operation mask
  bbox B
  name Merge15
  xpos 563
  ypos 1299
 }
 Dot {
  name Dot14
  xpos 597
  ypos 1341
 }
push $N3e70ed30
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  mix {{matteOutput==4?1:0 i}}
  name Copy3
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1331
 }
set N3e7667e0 [stack 0]
 Expression {
  expr3 a<=0.000001?0:1
  mix {{matteOutput==3?1:0}}
  name Expression8
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1418
 }
push $N191eeb80
 Merge2 {
  inputs 2
  operation copy
  bbox B
  name Merge4
  xpos 932
  ypos 1418
 }
 Output {
  name Output1
  note_font "Bitstream Vera Sans"
  xpos 932
  ypos 1579
 }
push $N191eeb80
push $N3e7667e0
 Viewer {
  inputs 2
  input_process false
  name Viewer1
  xpos 336
  ypos 1225
 }
end_group
Premult {
 name Premult3
 selected true
 xpos 1723
 ypos 9583
}
Constant {
 inputs 0
 channels rgb
 color {0.113 0.032 -0.002 0.012}
 name Constant3
 selected true
 xpos 628
 ypos 9731
}
Shuffle2 {
 fromInput1 {{0} B}
 fromInput2 {{0} B}
 mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 white -1 -1 rgba.alpha 0 3"
 name Shuffle2
 selected true
 xpos 628
 ypos 9839
}
Dot {
 name Dot113
 selected true
 xpos 662
 ypos 9915
}
set N3e832db0 [stack 0]
Merge2 {
 inputs 2
 name Merge2
 selected true
 xpos 1723
 ypos 9911
}
Reformat {
 inputs 0
 format "4550 2416 0 0 4550 2416 1 "
 name Reformat8
 selected true
 xpos 1272
 ypos 11662
}
Roto {
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x450e3000 x44970000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x447a4000
        {x40923a00 x40bced00}
        {x45298406 x44d722df}
        {xc0923800 xc0bcee00}
        {xc1123900 x412b3780}
        {x45270174 x44d23aa5}
        {x41123a00 xc12b3700}
        {xc1b12800 xc00db200}
        {x452b5131 x44cf33e4}
        {x41b12800 x400db200}
        {xbfb3f000 xc15a7280}
        {x452e2c50 x44d0e8ca}
        {x3fb40000 x415a7300}
        {x41231900 xbf8db400}
        {x452ce07f x44d73a7c}
        {xc1231900 x3f8db000}}}
      {cc
       {f 8192}
       {px x447a4000
        {x40923800 x40bcee00}
        {xc28bf900 x41861b00}
        {xc0923a00 xc0bcee00}
        {xc1123900 x412b3700}
        {xc23aa340 xbeee5000}
        {x41123a00 xc12b3780}
        {xc1b12780 xc00db200}
        {xc119ec00 xc1920bc0}
        {x41b12800 x400db200}
        {xbfb3f800 xc15a7280}
        {x41e59580 xc132b980}
        {x3fb3f800 x415a7300}
        {x41231900 xbf8db400}
        {x421ab6c0 x415d0200}
        {xc1231900 x3f8db000}}}}
     {tx x447a4000 x45296333 x44d2b333}
     {a osw x41200000 osf 0 str 1 spx x450e3000 spy x44970000 sb 1 ltn x447a4000 ltm x447a4000 tt x40800000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {2275 1208}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1001
 lifetime_end 1001
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto5
 selected true
 xpos 1272
 ypos 11734
}
Dot {
 name Dot138
 selected true
 xpos 1306
 ypos 11805
}
Read {
 inputs 0
 file_type exr
 file /data/jobs/TRN/sequences/compTraining/shots/TRN-compTraining-compShotA/.jabuka/imageSequenceLibrary/preComp/ee_mask_example/versions/0001/TRN_compTraining_TRN-compTraining-compShotA_ee_mask_example_v0001.%06d.exr
 first 1001
 last 1010
 colorspace scene_linear
 name TRN_compTraining_compShotA_ee_mask_example_v0001_2
 selected true
 xpos 97
 ypos 11020
 icon /software/apps/jabuka/7.196.0/tools/python/2.7/noarch/cortex/10.3/GafferJabukaUI/Resources/Icons/dynamic.png
 addUserKnob {20 ieAssetInfo l "Asset Information"}
 addUserKnob {20 Advanced t "\n<B>ieEntityType:</B> ImageSequence\n<B>ieEntityId:</B> 2940786\n<B>ieAssetId:</B> 0\n<B>ieNodeTag:</B> \n<B>ieLinkedEntities:</B> \[]\n<B>ieBundleId:</B> 0" n 2}
 addUserKnob {1 ieNodeType l "Node Type" +INVISIBLE}
 ieNodeType assetNode
 addUserKnob {1 ieEntityType l "Entity Type" +DISABLED}
 ieEntityType ImageSequence
 addUserKnob {3 ieEntityId l "Entity Id" +DISABLED}
 ieEntityId 2940786
 addUserKnob {3 ieAssetId l "Asset Id" +DISABLED}
 addUserKnob {1 ieCopyId l "Copy Id" +DISABLED}
 ieCopyId 2
 addUserKnob {1 ieNodeTag l "Node Tag" +DISABLED}
 addUserKnob {1 ieLinkedEntities l "Linked Entities" +DISABLED}
 ieLinkedEntities "\[]"
 addUserKnob {3 ieBundleId l "Bundle Id" +DISABLED}
 addUserKnob {20 AdvancedEG n -1}
 addUserKnob {3 ieBundleVersion l "Bundle Version" +DISABLED}
 addUserKnob {1 ieDisplayName l Name +DISABLED}
 ieDisplayName ee_mask_example
 addUserKnob {4 ieEntityVersion l "Entity Version" M {1}}
 addUserKnob {32 ieUpdateVersions l "Update Versions" -STARTLINE}
 addUserKnob {1 ieVersionCreationDate l "Version Creation Date" +DISABLED}
 ieVersionCreationDate "03-30-2022 21:20:01"
 addUserKnob {1 ieVersionCreator l Artist -STARTLINE +DISABLED}
 ieVersionCreator sebastians
 addUserKnob {4 ieUpdateMode l "Update Mode" M {locked latest latestApproved default}}
 ieUpdateMode default
 addUserKnob {6 ieRelativeToLocation l "Entity is Dynamic - Relative To Environment Location" +STARTLINE}
 ieRelativeToLocation true
 addUserKnob {32 ieSourceScene l "Open Source Scene" +STARTLINE}
 addUserKnob {26 ieSeparator l "  "}
 addUserKnob {1 ieSequencePath l SequencePath}
 ieSequencePath /data/jobs/TRN/sequences/compTraining/shots/TRN-compTraining-compShotA/.jabuka/imageSequenceLibrary/preComp/ee_mask_example/versions/0001/TRN_compTraining_TRN-compTraining-compShotA_ee_mask_example_v0001.%06d.exr
 addUserKnob {32 ieDailyButton l "Create Daily" +STARTLINE}
}
Grade {
 channels alpha
 blackpoint 0.19
 black_clamp false
 name Grade5
 selected true
 xpos 97
 ypos 11152
}
Dot {
 name Dot125
 selected true
 xpos 131
 ypos 11497
}
set N3e935180 [stack 0]
Dot {
 name Dot129
 selected true
 xpos 1054
 ypos 11497
}
set N3e93a120 [stack 0]
Dot {
 name Dot135
 selected true
 xpos 1956
 ypos 11497
}
Dot {
 name Dot134
 selected true
 xpos 1956
 ypos 11566
}
set N3e944090 [stack 0]
Dot {
 name Dot136
 selected true
 xpos 1679
 ypos 11566
}
Erode {
 size {0 8}
 name Erode9
 selected true
 xpos 1645
 ypos 11612
}
Dot {
 name Dot142
 selected true
 xpos 1679
 ypos 11672
}
set N3e95b440 [stack 0]
Dot {
 name Dot143
 selected true
 xpos 1476
 ypos 11672
}
LevelSet {
 matte_limit 9
 extrapolated rgba
 name LevelSet1
 selected true
 xpos 1442
 ypos 11725
}
Multiply {
 inputs 1+1
 value 0
 name Multiply1
 selected true
 xpos 1442
 ypos 11795
}
Dot {
 name Dot144
 selected true
 xpos 1476
 ypos 11882
}
push $N3e95b440
Copy {
 inputs 2
 from0 forward.u
 to0 forward.u
 from1 forward.v
 to1 forward.v
 name Copy4
 selected true
 xpos 1645
 ypos 11866
}
IDistort {
 channels rgba
 uv forward
 uv_scale -4
 name IDistort1
 selected true
 xpos 1645
 ypos 11949
}
Dot {
 name Dot145
 selected true
 xpos 1679
 ypos 12033
}
push $N3e944090
Group {
 inputs 2
 name ColorDilate7
 knobChanged "\ntn = nuke.thisNode()\ntk = nuke.thisKnob()\n\nfullList =  tn\['fullList'].value().strip(\"\[']\").split(\"', '\")\nnodeList = fullList\[0], fullList\[1], fullList\[2], fullList\[3], fullList\[4], fullList\[5], fullList\[6]\npreviousLoopNum = tn\['previousLoopNum'].getValue()\n\ngrowTexture = tn\['growTexture'].getValue()\nqualityVal = int( tn\['quality'].getValue() )\n\n\n##### DEFINE VALUE CHANGES ##################\n\ndef valChange():\n    qualityBias = tn\['qualityBias'].getValue()\n    blurCenter = tn\['blurCenter'].getValue()\n    bcDistribution = tn\['bcDistribution'].getValue()\n    for i in range (0, qualityVal):\n        blurVal = nuke.toNode(fullList\[i*len(nodeList)])\n        erodeVal = nuke.toNode(fullList\[i*len(nodeList)+3])\n        blurCenterVal = nuke.toNode(fullList\[i*len(nodeList)+5])\n        if isinstance(growTexture, float) == True:\n            blurValSize = (growTexture/qualityVal*(i+1)*(1-qualityBias)) + (growTexture/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2)))\n            blurVal\['size'].setValue( blurValSize )\n            erodeVal\['size'].setValue(blurVal\['size'].getValue()/2)\n            blurCenterVal\['size'].setValue( ( blurValSize*(1-bcDistribution) +  (blurValSize*(bcDistribution*(pow(i+1, 2)/pow(qualityVal, 2)))) ) * blurCenter )\n        else:\n            blurVal\['size'].setValue(\[ (growTexture\[0]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[0]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) , (growTexture\[1]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[1]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) ])\n            erodeVal\['size'].setValue(\[blurVal\['size'].getValue()\[0]/2,blurVal\['size'].getValue()\[1]/2])\n            blurCenterVal\['size'].setValue(\[ (growTexture\[0]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[0]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) , (growTexture\[1]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[1]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) ])\n\ndef filterChange():\n    filters = int( tn\['filter'].getValue() )\n    filterQuality = int( tn\['filterQuality'].getValue() )\n    crop = int( tn\['crop'].getValue() )\n    for i in range (0, qualityVal):\n        blurVal = nuke.toNode(fullList\[i*len(nodeList)])\n        blurVal\['filter'].setValue( filters )\n        blurVal\['quality'].setValue( filterQuality )\n        blurVal\['crop'].setValue( crop )\n        blurCenterVal = nuke.toNode(fullList\[i*len(nodeList)])\n        blurCenterVal\['filter'].setValue( filters )\n        blurCenterVal\['quality'].setValue( filterQuality )\n        blurCenterVal\['crop'].setValue( crop )\n\n\n##### CREATE THE NODES ###################\n\nif tk.name()=='quality':\n    if qualityVal < 1:\n        qualityVal = 1\n    elif qualityVal >100:\n        qualityVal = 100\n    tn\['quality'].setValue( qualityVal )\n    \n\n    if qualityVal != previousLoopNum:\n\n\n        inputDep = nuke.dependencies(\[nuke.toNode('Unpremult1')], nuke.INPUTS)\n        resultOver = nuke.toNode( inputDep\[0].name() )\n\n        difference = qualityVal-previousLoopNum\n        if difference > 0:\n            for i in range (1, int(difference+1)):\n                \n                blur = nuke.nodes.Blur ()\n                blur\['channels'].setValue('rgba')\n                blur\['maskChannelInput'].setValue('none')\n                blur.setInput (0, nuke.toNode('Switch2'))\n                \n                unpremult = nuke.nodes.Unpremult ()\n                unpremult\['channels'].setValue('rgb')\n                unpremult\['alpha'].setValue('rgba.alpha')\n                unpremult\['invert'].setValue(0)\n                unpremult.setInput (0, blur)\n                \n                expression = nuke.nodes.Expression(expr3 = 'a==0?0:1')\n                expression.setInput (0, unpremult)\n                \n                erode = nuke.nodes.FilterErode ()\n                erode\['channels'].setValue( 'rgba.alpha' )\n                erode\['filter'].setValue( 'gaussian' )\n                erode.setInput (0, expression)\n                \n                premult = nuke.nodes.Premult ()\n                premult\['channels'].setValue( 'rgb' )\n                premult\['alpha'].setValue( 'rgba.alpha' )\n                premult.setInput (0, erode)\n\n                blurCenter = nuke.nodes.Blur ()\n                blurCenter\['channels'].setValue('rgba')\n                blurCenter\['maskChannelInput'].setValue('none')\n                blurCenter.setInput (0, premult)\n\n                mergeOver = nuke.nodes.Merge2 ()\n                mergeOver\['operation'].setValue( 'over' )\n                mergeOver\['sRGB'].setValue( 0 )\n                mergeOver\['screen_alpha'].setValue( 0 )\n                mergeOver\['bbox'].setValue( 'union' )\n                mergeOver\['Achannels'].setValue( 'rgba' )\n                mergeOver\['Bchannels'].setValue( 'rgba' )\n                mergeOver\['output'].setValue( 'rgba' )\n                mergeOver\['also_merge'].setValue( 'none' )\n                mergeOver.setInput (0, blurCenter)\n                mergeOver.setInput (1, resultOver)\n                \n                \n                resultOver = mergeOver\n                \n                \n                nodeList = blur.name(), unpremult.name(), expression.name(), erode.name(), premult.name(), blurCenter.name(), resultOver.name()\n                fullList.extend(nodeList)\n\n\n##### DELETE THE NODES ##################################\n\n        else:\n            fullList.reverse()\n            for i in range (int(qualityVal), int(previousLoopNum)):\n                for i in range (0, len(nodeList)):\n                    nuke.delete(nuke.toNode(fullList\[0]))\n                    del fullList\[0]\n                resultOver = nuke.toNode(fullList\[0])\n                resultExpression = nuke.toNode(fullList\[3])\n            fullList.reverse()\n\n        nuke.toNode('Unpremult1').setInput(0, resultOver)\n        valChange()\n        filterChange()\n                \n        previousLoopNum = qualityVal\n        \n        tn\['previousLoopNum'].setValue( int(previousLoopNum) )\n        tn\['fullList'].setValue( str(fullList) )\n\n\n\n##### CHANGE EXISTING VALUES #####################\n\nif tk.name()=='growTexture':\n    valChange()\n    \nif tk.name()=='qualityBias':\n    valChange()\n\nif tk.name()=='blurCenter':\n    valChange()\n\nif tk.name()=='bcDistribution':\n    valChange()\n    \nif tk.name()=='filter':\n    filterChange()\n    \nif tk.name()=='filterQuality':\n    filterChange()\n    \nif tk.name()=='crop':\n    filterChange()\n\n\n"
 note_font "Bitstream Vera Sans"
 selected true
 xpos 1922
 ypos 12029
 addUserKnob {20 User l fColourDilate}
 addUserKnob {14 growTexture l "Grow Texture" R 0 100}
 growTexture 20.5
 addUserKnob {14 erodeMatte l "Erode Matte" t "Dilate or erode the matte to adjust the grow start paint" R -100 100}
 addUserKnob {7 expandMatte l "Expand Matte" t "Expand or compress the matte to adjust the grow start point" R -0.99999 0.99999}
 addUserKnob {7 quality l Iterations t "The number of iterations Colour Dilate will go through.  More is slower.  Max steps is 100" R 1 20}
 quality 7
 addUserKnob {7 qualityBias l Distribution t "0 is a linear distribution.  1 is exponential distribution.\nExponential is smoother with low quality.\nLinear is better with high quality."}
 qualityBias 1
 addUserKnob {26 ""}
 addUserKnob {7 blurCenter l "Blur Center" t "Soften central area where opposite dilates meet creating a hard line.  Is a multiple of Grow Texture." R 0 5}
 addUserKnob {7 bcDistribution l "BC Distribution" t "0 blurs a direct multiple of Grow Texture. 1 blurs exponentially more towards the center."}
 addUserKnob {26 ""}
 addUserKnob {4 filter l Filter t "filter\n" M {box triangle quadratic gaussian ""}}
 filter gaussian
 addUserKnob {3 filterQuality l " " -STARTLINE}
 filterQuality 15
 addUserKnob {6 crop l "crop to format" -STARTLINE}
 crop true
 addUserKnob {4 matteOutput l "Matte Output" M {rgb.alpha matte "dilated matte" "dilated area" "grain matte" ""}}
 addUserKnob {26 blank l "" -STARTLINE T "      "}
 addUserKnob {6 invertMatte l "invert Matte" -STARTLINE}
 invertMatte true
 addUserKnob {26 blank2 l "" -STARTLINE T "      "}
 addUserKnob {6 rgbIsPremult l "RGB is Premult?" -STARTLINE}
 rgbIsPremult true
 addUserKnob {1 colorDilate l INVISIBLE t "Keep me hidden" +INVISIBLE}
 addUserKnob {3 previousLoopNum l INVISIBLE +INVISIBLE}
 previousLoopNum 7
 addUserKnob {1 fullList l INVISIBLE +INVISIBLE}
 fullList "\['Blur1', 'Unpremult2', 'Expression1', 'FilterErode2', 'Premult1', 'BlurCenter', 'Merge2', 'Blur2', 'Unpremult3', 'Expression2', 'FilterErode3', 'Premult2', 'Blur3', 'Merge5', 'Blur4', 'Unpremult4', 'Expression3', 'FilterErode4', 'Premult3', 'Blur5', 'Merge6', 'Blur6', 'Unpremult5', 'Expression4', 'FilterErode5', 'Premult4', 'Blur7', 'Merge7', 'Blur8', 'Unpremult6', 'Expression5', 'FilterErode6', 'Premult5', 'Blur9', 'Merge8', 'Blur10', 'Unpremult7', 'Expression6', 'FilterErode7', 'Premult6', 'Blur11', 'Merge9', 'Blur12', 'Unpremult8', 'Expression7', 'FilterErode8', 'Premult7', 'Blur13', 'Merge10']"
}
 Input {
  inputs 0
  name InputMask
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -665
  number 1
 }
set N3e9b1170 [stack 0]
 AddChannels {
  channels alpha
  name AddChannels2
  note_font "Bitstream Vera Sans"
  xpos 365
  ypos 1125
 }
 Dot {
  name Dot3
  note_font "Bitstream Vera Sans"
  xpos 399
  ypos 1183
 }
 Input {
  inputs 0
  name InputRGB
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -531
 }
set N3e9c3fa0 [stack 0]
 AddChannels {
  channels alpha
  name AddChannels1
  note_font "Bitstream Vera Sans"
  xpos 348
  ypos 949
 }
 Dot {
  name Dot2
  note_font "Bitstream Vera Sans"
  xpos 382
  ypos 1078
 }
push $N3e9b1170
 FilterErode {
  channels alpha
  size {{invertMatte==0?erodeMatte.w:-erodeMatte.w i} {invertMatte==0?erodeMatte.h:-erodeMatte.h i}}
  name FilterErode1
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -621
 }
 Invert {
  channels alpha
  mix {{invertMatte i}}
  name Invert2
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -563
 }
 Grade {
  channels alpha
  blackpoint {{"clamp(expandMatte, 0, 1)" i}}
  whitepoint {{"clamp(1+expandMatte, 0, 1)" i}}
  white_clamp true
  name Grade1
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -505
 }
 Grade {
  channels alpha
  whitepoint 0.5
  black_clamp false
  white_clamp true
  name Grade6
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -345
 }
 Dot {
  name Dot1
  note_font "Bitstream Vera Sans"
  xpos 837
  ypos -287
 }
set N3ea118d0 [stack 0]
push $N3e9c3fa0
 AddChannels {
  channels alpha
  name AddChannels3
  note_font "Bitstream Vera Sans"
  xpos 1120
  ypos -444
 }
push $N3e9c3fa0
 Shuffle {
  alpha white
  name Shuffle1
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -458
 }
 Crop {
  box {{InputRGB.bbox.x i x1001 542} {InputRGB.bbox.y i} {InputRGB.bbox.r i} {InputRGB.bbox.t i}}
  name Crop3
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -414
 }
 Switch {
  inputs 2
  which {{rgbIsPremult i}}
  name Switch1
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -370
 }
 Dot {
  name Dot5
  note_font "Bitstream Vera Sans"
  xpos 1047
  ypos -326
 }
set N3ea43f10 [stack 0]
 Merge2 {
  inputs 2
  operation stencil
  bbox intersection
  name Merge1
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -292
 }
push $N3ea118d0
 Dot {
  name Dot4
  note_font "Bitstream Vera Sans"
  xpos 837
  ypos -253
 }
push $N3ea43f10
 Dot {
  name Dot6
  note_font "Bitstream Vera Sans"
  xpos 946
  ypos -326
 }
 Merge2 {
  inputs 2
  operation stencil
  bbox B
  name Merge3
  note_font "Bitstream Vera Sans"
  xpos 912
  ypos -258
 }
 Dot {
  name Dot7
  note_font "Bitstream Vera Sans"
  xpos 946
  ypos -192
 }
 Switch {
  inputs 2
  which {{invertMatte i}}
  name Switch2
  note_font "Bitstream Vera Sans"
  xpos 1002
  ypos -196
 }
set N3ea79490 [stack 0]
push $N3ea79490
 Blur {
  channels rgba
  size 0.05976676385
  name Blur1
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos -26
 }
 Unpremult {
  name Unpremult2
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 18
 }
 Expression {
  expr3 a==0?0:1
  name Expression1
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 62
 }
 FilterErode {
  channels alpha
  size 0.02988338192
  filter gaussian
  name FilterErode2
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 106
 }
 Premult {
  name Premult1
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 164
 }
 Blur {
  channels rgba
  name BlurCenter
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 222
 }
 Merge2 {
  inputs 2
  name Merge2
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 280
 }
push $N3ea79490
 Blur {
  channels rgba
  size 0.4781341108
  name Blur2
  xpos 1552
  ypos -170
 }
 Unpremult {
  name Unpremult3
  xpos 1552
  ypos -144
 }
 Expression {
  expr3 a==0?0:1
  name Expression2
  xpos 1552
  ypos -118
 }
 FilterErode {
  channels alpha
  size 0.2390670554
  filter gaussian
  name FilterErode3
  xpos 1552
  ypos -92
 }
 Premult {
  name Premult2
  xpos 1552
  ypos -66
 }
 Blur {
  channels rgba
  name Blur3
  xpos 1552
  ypos -40
 }
 Merge2 {
  inputs 2
  name Merge5
  xpos 1552
  ypos 280
 }
push $N3ea79490
 Blur {
  channels rgba
  size 1.613702624
  name Blur4
  xpos 1442
  ypos -170
 }
 Unpremult {
  name Unpremult4
  xpos 1442
  ypos -144
 }
 Expression {
  expr3 a==0?0:1
  name Expression3
  xpos 1442
  ypos -118
 }
 FilterErode {
  channels alpha
  size 0.806851312
  filter gaussian
  name FilterErode4
  xpos 1442
  ypos -92
 }
 Premult {
  name Premult3
  xpos 1442
  ypos -66
 }
 Blur {
  channels rgba
  name Blur5
  xpos 1442
  ypos 306
 }
 Merge2 {
  inputs 2
  name Merge6
  xpos 1552
  ypos 306
 }
push $N3ea79490
 Blur {
  channels rgba
  size 3.825072886
  name Blur6
  xpos 1332
  ypos -170
 }
 Unpremult {
  name Unpremult5
  xpos 1332
  ypos -144
 }
 Expression {
  expr3 a==0?0:1
  name Expression4
  xpos 1332
  ypos -118
 }
 FilterErode {
  channels alpha
  size 1.912536443
  filter gaussian
  name FilterErode5
  xpos 1332
  ypos -92
 }
 Premult {
  name Premult4
  xpos 1332
  ypos -66
 }
 Blur {
  channels rgba
  name Blur7
  xpos 1332
  ypos -40
 }
 Merge2 {
  inputs 2
  name Merge7
  xpos 1552
  ypos 332
 }
push $N3ea79490
 Blur {
  channels rgba
  size 7.470845481
  name Blur8
  xpos 1222
  ypos -170
 }
 Unpremult {
  name Unpremult6
  xpos 1222
  ypos -144
 }
 Expression {
  expr3 a==0?0:1
  name Expression5
  xpos 1222
  ypos -118
 }
 FilterErode {
  channels alpha
  size 3.735422741
  filter gaussian
  name FilterErode6
  xpos 1222
  ypos -92
 }
 Premult {
  name Premult5
  xpos 1222
  ypos -66
 }
 Blur {
  channels rgba
  name Blur9
  xpos 1222
  ypos 358
 }
 Merge2 {
  inputs 2
  name Merge8
  xpos 1552
  ypos 358
 }
push $N3ea79490
 Blur {
  channels rgba
  size 12.90962099
  name Blur10
  xpos 1112
  ypos -170
 }
 Unpremult {
  name Unpremult7
  xpos 1112
  ypos -144
 }
 Expression {
  expr3 a==0?0:1
  name Expression6
  xpos 1112
  ypos -118
 }
 FilterErode {
  channels alpha
  size 6.454810496
  filter gaussian
  name FilterErode7
  xpos 1112
  ypos -92
 }
 Premult {
  name Premult6
  xpos 1112
  ypos -66
 }
 Blur {
  channels rgba
  name Blur11
  xpos 1112
  ypos 384
 }
 Merge2 {
  inputs 2
  name Merge9
  xpos 1552
  ypos 384
 }
push $N3ea79490
 Blur {
  channels rgba
  size 20.5
  name Blur12
  xpos 1002
  ypos -170
 }
 Unpremult {
  name Unpremult8
  xpos 1002
  ypos -144
 }
 Expression {
  expr3 a==0?0:1
  name Expression7
  xpos 1002
  ypos -118
 }
 FilterErode {
  channels alpha
  size 10.25
  filter gaussian
  name FilterErode8
  xpos 1002
  ypos -92
 }
 Premult {
  name Premult7
  xpos 1002
  ypos -66
 }
 Blur {
  channels rgba
  name Blur13
  xpos 1002
  ypos 410
 }
 Merge2 {
  inputs 2
  name Merge10
  xpos 1552
  ypos 410
 }
 Unpremult {
  name Unpremult1
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 966
 }
 Dot {
  name Dot11
  xpos 258
  ypos 1020
 }
set N3ecebc60 [stack 0]
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  mix {{matteOutput==0?1:0 i}}
  name Copy2
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1068
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  mix {{matteOutput==1?1:0}}
  name Copy1
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1173
 }
 Dot {
  name Dot8
  xpos 258
  ypos 1227
 }
set N3ed0d9e0 [stack 0]
 Dot {
  name Dot9
  xpos 453
  ypos 1227
 }
 Expression {
  expr3 a<=0.000001?0:1
  name Expression12
  note_font "Bitstream Vera Sans"
  xpos 419
  ypos 1261
 }
 Dot {
  name Dot10
  xpos 453
  ypos 1303
 }
push $N3ecebc60
 Dot {
  name Dot13
  xpos 521
  ypos 1020
 }
 Dot {
  name Dot12
  xpos 521
  ypos 1205
 }
push $N3e9c3fa0
 Merge2 {
  inputs 2
  operation difference
  bbox B
  name Merge14
  xpos 563
  ypos 1201
 }
 Keyer {
  operation "luminance key"
  range {0 1e-05 1 1}
  name Keyer1
  xpos 563
  ypos 1243
 }
 Merge2 {
  inputs 2
  operation mask
  bbox B
  name Merge15
  xpos 563
  ypos 1299
 }
 Dot {
  name Dot14
  xpos 597
  ypos 1341
 }
push $N3ed0d9e0
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  mix {{matteOutput==4?1:0 i}}
  name Copy3
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1331
 }
set N3ed653c0 [stack 0]
 Expression {
  expr3 a<=0.000001?0:1
  mix {{matteOutput==3?1:0}}
  name Expression8
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1418
 }
push $N3e9c3fa0
 Merge2 {
  inputs 2
  operation copy
  bbox B
  name Merge4
  xpos 932
  ypos 1418
 }
 Output {
  name Output1
  note_font "Bitstream Vera Sans"
  xpos 932
  ypos 1579
 }
push $N3e9c3fa0
push $N3ed653c0
 Viewer {
  inputs 2
  input_process false
  name Viewer1
  xpos 336
  ypos 1225
 }
end_group
Premult {
 name Premult8
 selected true
 xpos 1922
 ypos 12101
}
Dot {
 name Dot148
 selected true
 xpos 1956
 ypos 12258
}
Reformat {
 inputs 0
 format "4550 2416 0 0 4550 2416 1 "
 name Reformat7
 selected true
 xpos 601
 ypos 11638
}
Roto {
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x450e3000 x44970000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x447a4000
        {x40923a00 x40bced00}
        {x45298406 x44d722df}
        {xc0923800 xc0bcee00}
        {xc1123900 x412b3780}
        {x4527941f x44d22d4f}
        {x41123a00 xc12b3700}
        {xc1b12800 xc00db200}
        {x452b5131 x44cf33e4}
        {x41b12800 x400db200}
        {xbfb3f000 xc15a7280}
        {x452e2c50 x44d0e8ca}
        {x3fb40000 x415a7300}
        {x41231900 xbf8db400}
        {x452ce07f x44d73a7c}
        {xc1231900 x3f8db000}}}
      {cc
       {f 8192}
       {px x447a4000
        {x40923800 x40bcee00}
        {xc28bf900 x41861b00}
        {xc0923a00 xc0bcee00}
        {xc1123900 x412b3700}
        {xc23c4a80 xbef07000}
        {x41123a00 xc12b3780}
        {xc1b12780 xc00db200}
        {xc119ec00 xc1920bc0}
        {x41b12800 x400db200}
        {xbfb3f800 xc15a7280}
        {x41e59580 xc132b980}
        {x3fb3f800 x415a7300}
        {x41231900 xbf8db400}
        {x421ab6c0 x415d0200}
        {xc1231900 x3f8db000}}}}
     {tx x447a4000 x45296333 x44d2b333}
     {a osw x41200000 osf 0 str 1 spx x450e3000 spy x44970000 sb 1 ltn x447a4000 ltm x447a4000 tt x40800000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {2275 1208}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1001
 lifetime_end 1001
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto7
 selected true
 xpos 601
 ypos 11725
}
Dot {
 name Dot130
 selected true
 xpos 635
 ypos 11781
}
push $N3e93a120
Dot {
 name Dot126
 selected true
 xpos 1054
 ypos 11573
}
set N3ee3f7b0 [stack 0]
Dot {
 name Dot133
 selected true
 xpos 889
 ypos 11573
}
set N3eec82c0 [stack 0]
Erode {
 size {0 8}
 name Erode6
 selected true
 xpos 855
 ypos 11644
}
Dot {
 name Dot131
 selected true
 xpos 889
 ypos 11781
}
push $N3eec82c0
Dot {
 name Dot127
 selected true
 xpos 768
 ypos 11573
}
Erode {
 size 12
 name Erode4
 selected true
 xpos 734
 ypos 11645
}
Keymix {
 inputs 3
 name Keymix2
 selected true
 xpos 734
 ypos 11771
}
Dot {
 name Dot128
 selected true
 xpos 768
 ypos 11877
}
push $N3ee3f7b0
Group {
 inputs 2
 name ColorDilate6
 knobChanged "\ntn = nuke.thisNode()\ntk = nuke.thisKnob()\n\nfullList =  tn\['fullList'].value().strip(\"\[']\").split(\"', '\")\nnodeList = fullList\[0], fullList\[1], fullList\[2], fullList\[3], fullList\[4], fullList\[5], fullList\[6]\npreviousLoopNum = tn\['previousLoopNum'].getValue()\n\ngrowTexture = tn\['growTexture'].getValue()\nqualityVal = int( tn\['quality'].getValue() )\n\n\n##### DEFINE VALUE CHANGES ##################\n\ndef valChange():\n    qualityBias = tn\['qualityBias'].getValue()\n    blurCenter = tn\['blurCenter'].getValue()\n    bcDistribution = tn\['bcDistribution'].getValue()\n    for i in range (0, qualityVal):\n        blurVal = nuke.toNode(fullList\[i*len(nodeList)])\n        erodeVal = nuke.toNode(fullList\[i*len(nodeList)+3])\n        blurCenterVal = nuke.toNode(fullList\[i*len(nodeList)+5])\n        if isinstance(growTexture, float) == True:\n            blurValSize = (growTexture/qualityVal*(i+1)*(1-qualityBias)) + (growTexture/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2)))\n            blurVal\['size'].setValue( blurValSize )\n            erodeVal\['size'].setValue(blurVal\['size'].getValue()/2)\n            blurCenterVal\['size'].setValue( ( blurValSize*(1-bcDistribution) +  (blurValSize*(bcDistribution*(pow(i+1, 2)/pow(qualityVal, 2)))) ) * blurCenter )\n        else:\n            blurVal\['size'].setValue(\[ (growTexture\[0]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[0]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) , (growTexture\[1]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[1]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) ])\n            erodeVal\['size'].setValue(\[blurVal\['size'].getValue()\[0]/2,blurVal\['size'].getValue()\[1]/2])\n            blurCenterVal\['size'].setValue(\[ (growTexture\[0]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[0]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) , (growTexture\[1]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[1]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) ])\n\ndef filterChange():\n    filters = int( tn\['filter'].getValue() )\n    filterQuality = int( tn\['filterQuality'].getValue() )\n    crop = int( tn\['crop'].getValue() )\n    for i in range (0, qualityVal):\n        blurVal = nuke.toNode(fullList\[i*len(nodeList)])\n        blurVal\['filter'].setValue( filters )\n        blurVal\['quality'].setValue( filterQuality )\n        blurVal\['crop'].setValue( crop )\n        blurCenterVal = nuke.toNode(fullList\[i*len(nodeList)])\n        blurCenterVal\['filter'].setValue( filters )\n        blurCenterVal\['quality'].setValue( filterQuality )\n        blurCenterVal\['crop'].setValue( crop )\n\n\n##### CREATE THE NODES ###################\n\nif tk.name()=='quality':\n    if qualityVal < 1:\n        qualityVal = 1\n    elif qualityVal >100:\n        qualityVal = 100\n    tn\['quality'].setValue( qualityVal )\n    \n\n    if qualityVal != previousLoopNum:\n\n\n        inputDep = nuke.dependencies(\[nuke.toNode('Unpremult1')], nuke.INPUTS)\n        resultOver = nuke.toNode( inputDep\[0].name() )\n\n        difference = qualityVal-previousLoopNum\n        if difference > 0:\n            for i in range (1, int(difference+1)):\n                \n                blur = nuke.nodes.Blur ()\n                blur\['channels'].setValue('rgba')\n                blur\['maskChannelInput'].setValue('none')\n                blur.setInput (0, nuke.toNode('Switch2'))\n                \n                unpremult = nuke.nodes.Unpremult ()\n                unpremult\['channels'].setValue('rgb')\n                unpremult\['alpha'].setValue('rgba.alpha')\n                unpremult\['invert'].setValue(0)\n                unpremult.setInput (0, blur)\n                \n                expression = nuke.nodes.Expression(expr3 = 'a==0?0:1')\n                expression.setInput (0, unpremult)\n                \n                erode = nuke.nodes.FilterErode ()\n                erode\['channels'].setValue( 'rgba.alpha' )\n                erode\['filter'].setValue( 'gaussian' )\n                erode.setInput (0, expression)\n                \n                premult = nuke.nodes.Premult ()\n                premult\['channels'].setValue( 'rgb' )\n                premult\['alpha'].setValue( 'rgba.alpha' )\n                premult.setInput (0, erode)\n\n                blurCenter = nuke.nodes.Blur ()\n                blurCenter\['channels'].setValue('rgba')\n                blurCenter\['maskChannelInput'].setValue('none')\n                blurCenter.setInput (0, premult)\n\n                mergeOver = nuke.nodes.Merge2 ()\n                mergeOver\['operation'].setValue( 'over' )\n                mergeOver\['sRGB'].setValue( 0 )\n                mergeOver\['screen_alpha'].setValue( 0 )\n                mergeOver\['bbox'].setValue( 'union' )\n                mergeOver\['Achannels'].setValue( 'rgba' )\n                mergeOver\['Bchannels'].setValue( 'rgba' )\n                mergeOver\['output'].setValue( 'rgba' )\n                mergeOver\['also_merge'].setValue( 'none' )\n                mergeOver.setInput (0, blurCenter)\n                mergeOver.setInput (1, resultOver)\n                \n                \n                resultOver = mergeOver\n                \n                \n                nodeList = blur.name(), unpremult.name(), expression.name(), erode.name(), premult.name(), blurCenter.name(), resultOver.name()\n                fullList.extend(nodeList)\n\n\n##### DELETE THE NODES ##################################\n\n        else:\n            fullList.reverse()\n            for i in range (int(qualityVal), int(previousLoopNum)):\n                for i in range (0, len(nodeList)):\n                    nuke.delete(nuke.toNode(fullList\[0]))\n                    del fullList\[0]\n                resultOver = nuke.toNode(fullList\[0])\n                resultExpression = nuke.toNode(fullList\[3])\n            fullList.reverse()\n\n        nuke.toNode('Unpremult1').setInput(0, resultOver)\n        valChange()\n        filterChange()\n                \n        previousLoopNum = qualityVal\n        \n        tn\['previousLoopNum'].setValue( int(previousLoopNum) )\n        tn\['fullList'].setValue( str(fullList) )\n\n\n\n##### CHANGE EXISTING VALUES #####################\n\nif tk.name()=='growTexture':\n    valChange()\n    \nif tk.name()=='qualityBias':\n    valChange()\n\nif tk.name()=='blurCenter':\n    valChange()\n\nif tk.name()=='bcDistribution':\n    valChange()\n    \nif tk.name()=='filter':\n    filterChange()\n    \nif tk.name()=='filterQuality':\n    filterChange()\n    \nif tk.name()=='crop':\n    filterChange()\n\n\n"
 note_font "Bitstream Vera Sans"
 selected true
 xpos 1020
 ypos 11873
 addUserKnob {20 User l fColourDilate}
 addUserKnob {14 growTexture l "Grow Texture" R 0 100}
 growTexture 20.5
 addUserKnob {14 erodeMatte l "Erode Matte" t "Dilate or erode the matte to adjust the grow start paint" R -100 100}
 addUserKnob {7 expandMatte l "Expand Matte" t "Expand or compress the matte to adjust the grow start point" R -0.99999 0.99999}
 addUserKnob {7 quality l Iterations t "The number of iterations Colour Dilate will go through.  More is slower.  Max steps is 100" R 1 20}
 quality 7
 addUserKnob {7 qualityBias l Distribution t "0 is a linear distribution.  1 is exponential distribution.\nExponential is smoother with low quality.\nLinear is better with high quality."}
 qualityBias 1
 addUserKnob {26 ""}
 addUserKnob {7 blurCenter l "Blur Center" t "Soften central area where opposite dilates meet creating a hard line.  Is a multiple of Grow Texture." R 0 5}
 addUserKnob {7 bcDistribution l "BC Distribution" t "0 blurs a direct multiple of Grow Texture. 1 blurs exponentially more towards the center."}
 addUserKnob {26 ""}
 addUserKnob {4 filter l Filter t "filter\n" M {box triangle quadratic gaussian ""}}
 filter gaussian
 addUserKnob {3 filterQuality l " " -STARTLINE}
 filterQuality 15
 addUserKnob {6 crop l "crop to format" -STARTLINE}
 crop true
 addUserKnob {4 matteOutput l "Matte Output" M {rgb.alpha matte "dilated matte" "dilated area" "grain matte" ""}}
 addUserKnob {26 blank l "" -STARTLINE T "      "}
 addUserKnob {6 invertMatte l "invert Matte" -STARTLINE}
 invertMatte true
 addUserKnob {26 blank2 l "" -STARTLINE T "      "}
 addUserKnob {6 rgbIsPremult l "RGB is Premult?" -STARTLINE}
 rgbIsPremult true
 addUserKnob {1 colorDilate l INVISIBLE t "Keep me hidden" +INVISIBLE}
 addUserKnob {3 previousLoopNum l INVISIBLE +INVISIBLE}
 previousLoopNum 7
 addUserKnob {1 fullList l INVISIBLE +INVISIBLE}
 fullList "\['Blur1', 'Unpremult2', 'Expression1', 'FilterErode2', 'Premult1', 'BlurCenter', 'Merge2', 'Blur2', 'Unpremult3', 'Expression2', 'FilterErode3', 'Premult2', 'Blur3', 'Merge5', 'Blur4', 'Unpremult4', 'Expression3', 'FilterErode4', 'Premult3', 'Blur5', 'Merge6', 'Blur6', 'Unpremult5', 'Expression4', 'FilterErode5', 'Premult4', 'Blur7', 'Merge7', 'Blur8', 'Unpremult6', 'Expression5', 'FilterErode6', 'Premult5', 'Blur9', 'Merge8', 'Blur10', 'Unpremult7', 'Expression6', 'FilterErode7', 'Premult6', 'Blur11', 'Merge9', 'Blur12', 'Unpremult8', 'Expression7', 'FilterErode8', 'Premult7', 'Blur13', 'Merge10']"
}
 Input {
  inputs 0
  name InputMask
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -665
  number 1
 }
set N3ef10850 [stack 0]
 AddChannels {
  channels alpha
  name AddChannels2
  note_font "Bitstream Vera Sans"
  xpos 365
  ypos 1125
 }
 Dot {
  name Dot3
  note_font "Bitstream Vera Sans"
  xpos 399
  ypos 1183
 }
 Input {
  inputs 0
  name InputRGB
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -531
 }
set N3ef23680 [stack 0]
 AddChannels {
  channels alpha
  name AddChannels1
  note_font "Bitstream Vera Sans"
  xpos 348
  ypos 949
 }
 Dot {
  name Dot2
  note_font "Bitstream Vera Sans"
  xpos 382
  ypos 1078
 }
push $N3ef10850
 FilterErode {
  channels alpha
  size {{invertMatte==0?erodeMatte.w:-erodeMatte.w i} {invertMatte==0?erodeMatte.h:-erodeMatte.h i}}
  name FilterErode1
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -621
 }
 Invert {
  channels alpha
  mix {{invertMatte i}}
  name Invert2
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -563
 }
 Grade {
  channels alpha
  blackpoint {{"clamp(expandMatte, 0, 1)" i}}
  whitepoint {{"clamp(1+expandMatte, 0, 1)" i}}
  white_clamp true
  name Grade1
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -505
 }
 Grade {
  channels alpha
  whitepoint 0.5
  black_clamp false
  white_clamp true
  name Grade6
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -345
 }
 Dot {
  name Dot1
  note_font "Bitstream Vera Sans"
  xpos 837
  ypos -287
 }
set N3ef70fa0 [stack 0]
push $N3ef23680
 AddChannels {
  channels alpha
  name AddChannels3
  note_font "Bitstream Vera Sans"
  xpos 1120
  ypos -444
 }
push $N3ef23680
 Shuffle {
  alpha white
  name Shuffle1
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -458
 }
 Crop {
  box {{InputRGB.bbox.x i x1001 542} {InputRGB.bbox.y i} {InputRGB.bbox.r i} {InputRGB.bbox.t i}}
  name Crop3
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -414
 }
 Switch {
  inputs 2
  which {{rgbIsPremult i}}
  name Switch1
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -370
 }
 Dot {
  name Dot5
  note_font "Bitstream Vera Sans"
  xpos 1047
  ypos -326
 }
set N3efa35e0 [stack 0]
 Merge2 {
  inputs 2
  operation stencil
  bbox intersection
  name Merge1
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -292
 }
push $N3ef70fa0
 Dot {
  name Dot4
  note_font "Bitstream Vera Sans"
  xpos 837
  ypos -253
 }
push $N3efa35e0
 Dot {
  name Dot6
  note_font "Bitstream Vera Sans"
  xpos 946
  ypos -326
 }
 Merge2 {
  inputs 2
  operation stencil
  bbox B
  name Merge3
  note_font "Bitstream Vera Sans"
  xpos 912
  ypos -258
 }
 Dot {
  name Dot7
  note_font "Bitstream Vera Sans"
  xpos 946
  ypos -192
 }
 Switch {
  inputs 2
  which {{invertMatte i}}
  name Switch2
  note_font "Bitstream Vera Sans"
  xpos 1002
  ypos -196
 }
set N3efd8b70 [stack 0]
push $N3efd8b70
 Blur {
  channels rgba
  size 0.05976676385
  name Blur1
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos -26
 }
 Unpremult {
  name Unpremult2
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 18
 }
 Expression {
  expr3 a==0?0:1
  name Expression1
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 62
 }
 FilterErode {
  channels alpha
  size 0.02988338192
  filter gaussian
  name FilterErode2
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 106
 }
 Premult {
  name Premult1
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 164
 }
 Blur {
  channels rgba
  name BlurCenter
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 222
 }
 Merge2 {
  inputs 2
  name Merge2
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 280
 }
push $N3efd8b70
 Blur {
  channels rgba
  size 0.4781341108
  name Blur2
  xpos 1552
  ypos -170
 }
 Unpremult {
  name Unpremult3
  xpos 1552
  ypos -144
 }
 Expression {
  expr3 a==0?0:1
  name Expression2
  xpos 1552
  ypos -118
 }
 FilterErode {
  channels alpha
  size 0.2390670554
  filter gaussian
  name FilterErode3
  xpos 1552
  ypos -92
 }
 Premult {
  name Premult2
  xpos 1552
  ypos -66
 }
 Blur {
  channels rgba
  name Blur3
  xpos 1552
  ypos -40
 }
 Merge2 {
  inputs 2
  name Merge5
  xpos 1552
  ypos 280
 }
push $N3efd8b70
 Blur {
  channels rgba
  size 1.613702624
  name Blur4
  xpos 1442
  ypos -170
 }
 Unpremult {
  name Unpremult4
  xpos 1442
  ypos -144
 }
 Expression {
  expr3 a==0?0:1
  name Expression3
  xpos 1442
  ypos -118
 }
 FilterErode {
  channels alpha
  size 0.806851312
  filter gaussian
  name FilterErode4
  xpos 1442
  ypos -92
 }
 Premult {
  name Premult3
  xpos 1442
  ypos -66
 }
 Blur {
  channels rgba
  name Blur5
  xpos 1442
  ypos 306
 }
 Merge2 {
  inputs 2
  name Merge6
  xpos 1552
  ypos 306
 }
push $N3efd8b70
 Blur {
  channels rgba
  size 3.825072886
  name Blur6
  xpos 1332
  ypos -170
 }
 Unpremult {
  name Unpremult5
  xpos 1332
  ypos -144
 }
 Expression {
  expr3 a==0?0:1
  name Expression4
  xpos 1332
  ypos -118
 }
 FilterErode {
  channels alpha
  size 1.912536443
  filter gaussian
  name FilterErode5
  xpos 1332
  ypos -92
 }
 Premult {
  name Premult4
  xpos 1332
  ypos -66
 }
 Blur {
  channels rgba
  name Blur7
  xpos 1332
  ypos -40
 }
 Merge2 {
  inputs 2
  name Merge7
  xpos 1552
  ypos 332
 }
push $N3efd8b70
 Blur {
  channels rgba
  size 7.470845481
  name Blur8
  xpos 1222
  ypos -170
 }
 Unpremult {
  name Unpremult6
  xpos 1222
  ypos -144
 }
 Expression {
  expr3 a==0?0:1
  name Expression5
  xpos 1222
  ypos -118
 }
 FilterErode {
  channels alpha
  size 3.735422741
  filter gaussian
  name FilterErode6
  xpos 1222
  ypos -92
 }
 Premult {
  name Premult5
  xpos 1222
  ypos -66
 }
 Blur {
  channels rgba
  name Blur9
  xpos 1222
  ypos 358
 }
 Merge2 {
  inputs 2
  name Merge8
  xpos 1552
  ypos 358
 }
push $N3efd8b70
 Blur {
  channels rgba
  size 12.90962099
  name Blur10
  xpos 1112
  ypos -170
 }
 Unpremult {
  name Unpremult7
  xpos 1112
  ypos -144
 }
 Expression {
  expr3 a==0?0:1
  name Expression6
  xpos 1112
  ypos -118
 }
 FilterErode {
  channels alpha
  size 6.454810496
  filter gaussian
  name FilterErode7
  xpos 1112
  ypos -92
 }
 Premult {
  name Premult6
  xpos 1112
  ypos -66
 }
 Blur {
  channels rgba
  name Blur11
  xpos 1112
  ypos 384
 }
 Merge2 {
  inputs 2
  name Merge9
  xpos 1552
  ypos 384
 }
push $N3efd8b70
 Blur {
  channels rgba
  size 20.5
  name Blur12
  xpos 1002
  ypos -170
 }
 Unpremult {
  name Unpremult8
  xpos 1002
  ypos -144
 }
 Expression {
  expr3 a==0?0:1
  name Expression7
  xpos 1002
  ypos -118
 }
 FilterErode {
  channels alpha
  size 10.25
  filter gaussian
  name FilterErode8
  xpos 1002
  ypos -92
 }
 Premult {
  name Premult7
  xpos 1002
  ypos -66
 }
 Blur {
  channels rgba
  name Blur13
  xpos 1002
  ypos 410
 }
 Merge2 {
  inputs 2
  name Merge10
  xpos 1552
  ypos 410
 }
 Unpremult {
  name Unpremult1
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 966
 }
 Dot {
  name Dot11
  xpos 258
  ypos 1020
 }
set N3f24b350 [stack 0]
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  mix {{matteOutput==0?1:0 i}}
  name Copy2
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1068
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  mix {{matteOutput==1?1:0}}
  name Copy1
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1173
 }
 Dot {
  name Dot8
  xpos 258
  ypos 1227
 }
set N3f26d0d0 [stack 0]
 Dot {
  name Dot9
  xpos 453
  ypos 1227
 }
 Expression {
  expr3 a<=0.000001?0:1
  name Expression12
  note_font "Bitstream Vera Sans"
  xpos 419
  ypos 1261
 }
 Dot {
  name Dot10
  xpos 453
  ypos 1303
 }
push $N3f24b350
 Dot {
  name Dot13
  xpos 521
  ypos 1020
 }
 Dot {
  name Dot12
  xpos 521
  ypos 1205
 }
push $N3ef23680
 Merge2 {
  inputs 2
  operation difference
  bbox B
  name Merge14
  xpos 563
  ypos 1201
 }
 Keyer {
  operation "luminance key"
  range {0 1e-05 1 1}
  name Keyer1
  xpos 563
  ypos 1243
 }
 Merge2 {
  inputs 2
  operation mask
  bbox B
  name Merge15
  xpos 563
  ypos 1299
 }
 Dot {
  name Dot14
  xpos 597
  ypos 1341
 }
push $N3f26d0d0
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  mix {{matteOutput==4?1:0 i}}
  name Copy3
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1331
 }
set N3f2c4b60 [stack 0]
 Expression {
  expr3 a<=0.000001?0:1
  mix {{matteOutput==3?1:0}}
  name Expression8
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1418
 }
push $N3ef23680
 Merge2 {
  inputs 2
  operation copy
  bbox B
  name Merge4
  xpos 932
  ypos 1418
 }
 Output {
  name Output1
  note_font "Bitstream Vera Sans"
  xpos 932
  ypos 1579
 }
push $N3ef23680
push $N3f2c4b60
 Viewer {
  inputs 2
  input_process false
  name Viewer1
  xpos 336
  ypos 1225
 }
end_group
Premult {
 name Premult6
 selected true
 xpos 1020
 ypos 11945
}
Dot {
 name Dot146
 selected true
 xpos 1054
 ypos 12010
}
Reformat {
 inputs 0
 format "4550 2416 0 0 4550 2416 1 "
 name Reformat6
 selected true
 xpos -98
 ypos 11813
}
Roto {
 output alpha
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x450e3000 x44970000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x447a4000
        {x40923a00 x40bced00}
        {x45298406 x44d722df}
        {xc0923800 xc0bcee00}
        {xc1123900 x412b3780}
        {x4527941f x44d22d4f}
        {x41123a00 xc12b3700}
        {xc1b12800 xc00db200}
        {x452b5131 x44cf33e4}
        {x41b12800 x400db200}
        {xbfb3f000 xc15a7280}
        {x452e2c50 x44d0e8ca}
        {x3fb40000 x415a7300}
        {x41231900 xbf8db400}
        {x452ce07f x44d73a7c}
        {xc1231900 x3f8db000}}}
      {cc
       {f 8192}
       {px x447a4000
        {x40923800 x40bcee00}
        {xc28bf900 x41861b00}
        {xc0923a00 xc0bcee00}
        {xc1123900 x412b3700}
        {xc23c4a80 xbef07000}
        {x41123a00 xc12b3780}
        {xc1b12780 xc00db200}
        {xc119ec00 xc1920bc0}
        {x41b12800 x400db200}
        {xbfb3f800 xc15a7280}
        {x41e59580 xc132b980}
        {x3fb3f800 x415a7300}
        {x41231900 xbf8db400}
        {x421ab6c0 x415d0200}
        {xc1231900 x3f8db000}}}}
     {tx x447a4000 x45296333 x44d2b333}
     {a osw x41200000 osf 0 str 1 spx x450e3000 spy x44970000 sb 1 ltn x447a4000 ltm x447a4000 tt x40800000}}}}}}
 toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_brush_hardness 0.200000003
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {2275 1208}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1001
 lifetime_end 1001
 motionblur_shutter_offset_type centred
 source_black_outside true
 name Roto8
 selected true
 xpos -98
 ypos 11899
}
Dot {
 name Dot122
 selected true
 xpos -64
 ypos 11982
}
push $N3e935180
Dot {
 name Dot117
 selected true
 xpos 131
 ypos 11572
}
set N3f39ee50 [stack 0]
Dot {
 name Dot120
 selected true
 xpos 333
 ypos 11572
}
set N3f427930 [stack 0]
Erode {
 size {0 8}
 name Erode2
 selected true
 xpos 299
 ypos 11652
}
Dot {
 name Dot119
 selected true
 xpos 333
 ypos 11734
}
push $N3f427930
Dot {
 name Dot118
 selected true
 xpos 457
 ypos 11572
}
Group {
 inputs 2
 name ColorDilate4
 knobChanged "\ntn = nuke.thisNode()\ntk = nuke.thisKnob()\n\nfullList =  tn\['fullList'].value().strip(\"\[']\").split(\"', '\")\nnodeList = fullList\[0], fullList\[1], fullList\[2], fullList\[3], fullList\[4], fullList\[5], fullList\[6]\npreviousLoopNum = tn\['previousLoopNum'].getValue()\n\ngrowTexture = tn\['growTexture'].getValue()\nqualityVal = int( tn\['quality'].getValue() )\n\n\n##### DEFINE VALUE CHANGES ##################\n\ndef valChange():\n    qualityBias = tn\['qualityBias'].getValue()\n    blurCenter = tn\['blurCenter'].getValue()\n    bcDistribution = tn\['bcDistribution'].getValue()\n    for i in range (0, qualityVal):\n        blurVal = nuke.toNode(fullList\[i*len(nodeList)])\n        erodeVal = nuke.toNode(fullList\[i*len(nodeList)+3])\n        blurCenterVal = nuke.toNode(fullList\[i*len(nodeList)+5])\n        if isinstance(growTexture, float) == True:\n            blurValSize = (growTexture/qualityVal*(i+1)*(1-qualityBias)) + (growTexture/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2)))\n            blurVal\['size'].setValue( blurValSize )\n            erodeVal\['size'].setValue(blurVal\['size'].getValue()/2)\n            blurCenterVal\['size'].setValue( ( blurValSize*(1-bcDistribution) +  (blurValSize*(bcDistribution*(pow(i+1, 2)/pow(qualityVal, 2)))) ) * blurCenter )\n        else:\n            blurVal\['size'].setValue(\[ (growTexture\[0]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[0]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) , (growTexture\[1]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[1]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) ])\n            erodeVal\['size'].setValue(\[blurVal\['size'].getValue()\[0]/2,blurVal\['size'].getValue()\[1]/2])\n            blurCenterVal\['size'].setValue(\[ (growTexture\[0]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[0]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) , (growTexture\[1]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[1]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) ])\n\ndef filterChange():\n    filters = int( tn\['filter'].getValue() )\n    filterQuality = int( tn\['filterQuality'].getValue() )\n    crop = int( tn\['crop'].getValue() )\n    for i in range (0, qualityVal):\n        blurVal = nuke.toNode(fullList\[i*len(nodeList)])\n        blurVal\['filter'].setValue( filters )\n        blurVal\['quality'].setValue( filterQuality )\n        blurVal\['crop'].setValue( crop )\n        blurCenterVal = nuke.toNode(fullList\[i*len(nodeList)])\n        blurCenterVal\['filter'].setValue( filters )\n        blurCenterVal\['quality'].setValue( filterQuality )\n        blurCenterVal\['crop'].setValue( crop )\n\n\n##### CREATE THE NODES ###################\n\nif tk.name()=='quality':\n    if qualityVal < 1:\n        qualityVal = 1\n    elif qualityVal >100:\n        qualityVal = 100\n    tn\['quality'].setValue( qualityVal )\n    \n\n    if qualityVal != previousLoopNum:\n\n\n        inputDep = nuke.dependencies(\[nuke.toNode('Unpremult1')], nuke.INPUTS)\n        resultOver = nuke.toNode( inputDep\[0].name() )\n\n        difference = qualityVal-previousLoopNum\n        if difference > 0:\n            for i in range (1, int(difference+1)):\n                \n                blur = nuke.nodes.Blur ()\n                blur\['channels'].setValue('rgba')\n                blur\['maskChannelInput'].setValue('none')\n                blur.setInput (0, nuke.toNode('Switch2'))\n                \n                unpremult = nuke.nodes.Unpremult ()\n                unpremult\['channels'].setValue('rgb')\n                unpremult\['alpha'].setValue('rgba.alpha')\n                unpremult\['invert'].setValue(0)\n                unpremult.setInput (0, blur)\n                \n                expression = nuke.nodes.Expression(expr3 = 'a==0?0:1')\n                expression.setInput (0, unpremult)\n                \n                erode = nuke.nodes.FilterErode ()\n                erode\['channels'].setValue( 'rgba.alpha' )\n                erode\['filter'].setValue( 'gaussian' )\n                erode.setInput (0, expression)\n                \n                premult = nuke.nodes.Premult ()\n                premult\['channels'].setValue( 'rgb' )\n                premult\['alpha'].setValue( 'rgba.alpha' )\n                premult.setInput (0, erode)\n\n                blurCenter = nuke.nodes.Blur ()\n                blurCenter\['channels'].setValue('rgba')\n                blurCenter\['maskChannelInput'].setValue('none')\n                blurCenter.setInput (0, premult)\n\n                mergeOver = nuke.nodes.Merge2 ()\n                mergeOver\['operation'].setValue( 'over' )\n                mergeOver\['sRGB'].setValue( 0 )\n                mergeOver\['screen_alpha'].setValue( 0 )\n                mergeOver\['bbox'].setValue( 'union' )\n                mergeOver\['Achannels'].setValue( 'rgba' )\n                mergeOver\['Bchannels'].setValue( 'rgba' )\n                mergeOver\['output'].setValue( 'rgba' )\n                mergeOver\['also_merge'].setValue( 'none' )\n                mergeOver.setInput (0, blurCenter)\n                mergeOver.setInput (1, resultOver)\n                \n                \n                resultOver = mergeOver\n                \n                \n                nodeList = blur.name(), unpremult.name(), expression.name(), erode.name(), premult.name(), blurCenter.name(), resultOver.name()\n                fullList.extend(nodeList)\n\n\n##### DELETE THE NODES ##################################\n\n        else:\n            fullList.reverse()\n            for i in range (int(qualityVal), int(previousLoopNum)):\n                for i in range (0, len(nodeList)):\n                    nuke.delete(nuke.toNode(fullList\[0]))\n                    del fullList\[0]\n                resultOver = nuke.toNode(fullList\[0])\n                resultExpression = nuke.toNode(fullList\[3])\n            fullList.reverse()\n\n        nuke.toNode('Unpremult1').setInput(0, resultOver)\n        valChange()\n        filterChange()\n                \n        previousLoopNum = qualityVal\n        \n        tn\['previousLoopNum'].setValue( int(previousLoopNum) )\n        tn\['fullList'].setValue( str(fullList) )\n\n\n\n##### CHANGE EXISTING VALUES #####################\n\nif tk.name()=='growTexture':\n    valChange()\n    \nif tk.name()=='qualityBias':\n    valChange()\n\nif tk.name()=='blurCenter':\n    valChange()\n\nif tk.name()=='bcDistribution':\n    valChange()\n    \nif tk.name()=='filter':\n    filterChange()\n    \nif tk.name()=='filterQuality':\n    filterChange()\n    \nif tk.name()=='crop':\n    filterChange()\n\n\n"
 note_font "Bitstream Vera Sans"
 selected true
 xpos 423
 ypos 11730
 addUserKnob {20 User l fColourDilate}
 addUserKnob {14 growTexture l "Grow Texture" R 0 100}
 growTexture {0 11}
 addUserKnob {14 erodeMatte l "Erode Matte" t "Dilate or erode the matte to adjust the grow start paint" R -100 100}
 addUserKnob {7 expandMatte l "Expand Matte" t "Expand or compress the matte to adjust the grow start point" R -0.99999 0.99999}
 addUserKnob {7 quality l Iterations t "The number of iterations Colour Dilate will go through.  More is slower.  Max steps is 100" R 1 20}
 quality 7
 addUserKnob {7 qualityBias l Distribution t "0 is a linear distribution.  1 is exponential distribution.\nExponential is smoother with low quality.\nLinear is better with high quality."}
 qualityBias 1
 addUserKnob {26 ""}
 addUserKnob {7 blurCenter l "Blur Center" t "Soften central area where opposite dilates meet creating a hard line.  Is a multiple of Grow Texture." R 0 5}
 addUserKnob {7 bcDistribution l "BC Distribution" t "0 blurs a direct multiple of Grow Texture. 1 blurs exponentially more towards the center."}
 addUserKnob {26 ""}
 addUserKnob {4 filter l Filter t "filter\n" M {box triangle quadratic gaussian ""}}
 filter gaussian
 addUserKnob {3 filterQuality l " " -STARTLINE}
 filterQuality 15
 addUserKnob {6 crop l "crop to format" -STARTLINE}
 crop true
 addUserKnob {4 matteOutput l "Matte Output" M {rgb.alpha matte "dilated matte" "dilated area" "grain matte" ""}}
 addUserKnob {26 blank l "" -STARTLINE T "      "}
 addUserKnob {6 invertMatte l "invert Matte" -STARTLINE}
 invertMatte true
 addUserKnob {26 blank2 l "" -STARTLINE T "      "}
 addUserKnob {6 rgbIsPremult l "RGB is Premult?" -STARTLINE}
 rgbIsPremult true
 addUserKnob {1 colorDilate l INVISIBLE t "Keep me hidden" +INVISIBLE}
 addUserKnob {3 previousLoopNum l INVISIBLE +INVISIBLE}
 previousLoopNum 7
 addUserKnob {1 fullList l INVISIBLE +INVISIBLE}
 fullList "\['Blur1', 'Unpremult2', 'Expression1', 'FilterErode2', 'Premult1', 'BlurCenter', 'Merge2', 'Blur2', 'Unpremult3', 'Expression2', 'FilterErode3', 'Premult2', 'Blur3', 'Merge5', 'Blur4', 'Unpremult4', 'Expression3', 'FilterErode4', 'Premult3', 'Blur5', 'Merge6', 'Blur6', 'Unpremult5', 'Expression4', 'FilterErode5', 'Premult4', 'Blur7', 'Merge7', 'Blur8', 'Unpremult6', 'Expression5', 'FilterErode6', 'Premult5', 'Blur9', 'Merge8', 'Blur10', 'Unpremult7', 'Expression6', 'FilterErode7', 'Premult6', 'Blur11', 'Merge9', 'Blur12', 'Unpremult8', 'Expression7', 'FilterErode8', 'Premult7', 'Blur13', 'Merge10']"
}
 Input {
  inputs 0
  name InputMask
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -665
  number 1
 }
set N3f454510 [stack 0]
 AddChannels {
  channels alpha
  name AddChannels2
  note_font "Bitstream Vera Sans"
  xpos 365
  ypos 1125
 }
 Dot {
  name Dot3
  note_font "Bitstream Vera Sans"
  xpos 399
  ypos 1183
 }
 Input {
  inputs 0
  name InputRGB
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -531
 }
set N3f467340 [stack 0]
 AddChannels {
  channels alpha
  name AddChannels1
  note_font "Bitstream Vera Sans"
  xpos 348
  ypos 949
 }
 Dot {
  name Dot2
  note_font "Bitstream Vera Sans"
  xpos 382
  ypos 1078
 }
push $N3f454510
 FilterErode {
  channels alpha
  size {{invertMatte==0?erodeMatte.w:-erodeMatte.w i} {invertMatte==0?erodeMatte.h:-erodeMatte.h i}}
  name FilterErode1
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -621
 }
 Invert {
  channels alpha
  mix {{invertMatte i}}
  name Invert2
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -563
 }
 Grade {
  channels alpha
  blackpoint {{"clamp(expandMatte, 0, 1)" i}}
  whitepoint {{"clamp(1+expandMatte, 0, 1)" i}}
  white_clamp true
  name Grade1
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -505
 }
 Grade {
  channels alpha
  whitepoint 0.5
  black_clamp false
  white_clamp true
  name Grade6
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -345
 }
 Dot {
  name Dot1
  note_font "Bitstream Vera Sans"
  xpos 837
  ypos -287
 }
set N3f4b4c60 [stack 0]
push $N3f467340
 AddChannels {
  channels alpha
  name AddChannels3
  note_font "Bitstream Vera Sans"
  xpos 1120
  ypos -444
 }
push $N3f467340
 Shuffle {
  alpha white
  name Shuffle1
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -458
 }
 Crop {
  box {{InputRGB.bbox.x i x1001 542} {InputRGB.bbox.y i} {InputRGB.bbox.r i} {InputRGB.bbox.t i}}
  name Crop3
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -414
 }
 Switch {
  inputs 2
  which {{rgbIsPremult i}}
  name Switch1
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -370
 }
 Dot {
  name Dot5
  note_font "Bitstream Vera Sans"
  xpos 1047
  ypos -326
 }
set N3f4e72a0 [stack 0]
 Merge2 {
  inputs 2
  operation stencil
  bbox intersection
  name Merge1
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -292
 }
push $N3f4b4c60
 Dot {
  name Dot4
  note_font "Bitstream Vera Sans"
  xpos 837
  ypos -253
 }
push $N3f4e72a0
 Dot {
  name Dot6
  note_font "Bitstream Vera Sans"
  xpos 946
  ypos -326
 }
 Merge2 {
  inputs 2
  operation stencil
  bbox B
  name Merge3
  note_font "Bitstream Vera Sans"
  xpos 912
  ypos -258
 }
 Dot {
  name Dot7
  note_font "Bitstream Vera Sans"
  xpos 946
  ypos -192
 }
 Switch {
  inputs 2
  which {{invertMatte i}}
  name Switch2
  note_font "Bitstream Vera Sans"
  xpos 1002
  ypos -196
 }
set N3f51c820 [stack 0]
push $N3f51c820
 Blur {
  channels rgba
  size {0 0.03206997085}
  name Blur1
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos -26
 }
 Unpremult {
  name Unpremult2
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 18
 }
 Expression {
  expr3 a==0?0:1
  name Expression1
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 62
 }
 FilterErode {
  channels alpha
  size {0 0.01603498542}
  filter gaussian
  name FilterErode2
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 106
 }
 Premult {
  name Premult1
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 164
 }
 Blur {
  channels rgba
  size {0 0.03206997085}
  name BlurCenter
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 222
 }
 Merge2 {
  inputs 2
  name Merge2
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 280
 }
push $N3f51c820
 Blur {
  channels rgba
  size {0 0.2565597668}
  name Blur2
  xpos 1552
  ypos -170
 }
 Unpremult {
  name Unpremult3
  xpos 1552
  ypos -144
 }
 Expression {
  expr3 a==0?0:1
  name Expression2
  xpos 1552
  ypos -118
 }
 FilterErode {
  channels alpha
  size {0 0.1282798834}
  filter gaussian
  name FilterErode3
  xpos 1552
  ypos -92
 }
 Premult {
  name Premult2
  xpos 1552
  ypos -66
 }
 Blur {
  channels rgba
  size {0 0.2565597668}
  name Blur3
  xpos 1552
  ypos -40
 }
 Merge2 {
  inputs 2
  name Merge5
  xpos 1552
  ypos 280
 }
push $N3f51c820
 Blur {
  channels rgba
  size {0 0.8658892128}
  name Blur4
  xpos 1442
  ypos -170
 }
 Unpremult {
  name Unpremult4
  xpos 1442
  ypos -144
 }
 Expression {
  expr3 a==0?0:1
  name Expression3
  xpos 1442
  ypos -118
 }
 FilterErode {
  channels alpha
  size {0 0.4329446064}
  filter gaussian
  name FilterErode4
  xpos 1442
  ypos -92
 }
 Premult {
  name Premult3
  xpos 1442
  ypos -66
 }
 Blur {
  channels rgba
  size {0 0.8658892128}
  name Blur5
  xpos 1442
  ypos 306
 }
 Merge2 {
  inputs 2
  name Merge6
  xpos 1552
  ypos 306
 }
push $N3f51c820
 Blur {
  channels rgba
  size {0 2.052478134}
  name Blur6
  xpos 1332
  ypos -170
 }
 Unpremult {
  name Unpremult5
  xpos 1332
  ypos -144
 }
 Expression {
  expr3 a==0?0:1
  name Expression4
  xpos 1332
  ypos -118
 }
 FilterErode {
  channels alpha
  size {0 1.026239067}
  filter gaussian
  name FilterErode5
  xpos 1332
  ypos -92
 }
 Premult {
  name Premult4
  xpos 1332
  ypos -66
 }
 Blur {
  channels rgba
  size {0 2.052478134}
  name Blur7
  xpos 1332
  ypos -40
 }
 Merge2 {
  inputs 2
  name Merge7
  xpos 1552
  ypos 332
 }
push $N3f51c820
 Blur {
  channels rgba
  size {0 4.008746356}
  name Blur8
  xpos 1222
  ypos -170
 }
 Unpremult {
  name Unpremult6
  xpos 1222
  ypos -144
 }
 Expression {
  expr3 a==0?0:1
  name Expression5
  xpos 1222
  ypos -118
 }
 FilterErode {
  channels alpha
  size {0 2.004373178}
  filter gaussian
  name FilterErode6
  xpos 1222
  ypos -92
 }
 Premult {
  name Premult5
  xpos 1222
  ypos -66
 }
 Blur {
  channels rgba
  size {0 4.008746356}
  name Blur9
  xpos 1222
  ypos 358
 }
 Merge2 {
  inputs 2
  name Merge8
  xpos 1552
  ypos 358
 }
push $N3f51c820
 Blur {
  channels rgba
  size {0 6.927113703}
  name Blur10
  xpos 1112
  ypos -170
 }
 Unpremult {
  name Unpremult7
  xpos 1112
  ypos -144
 }
 Expression {
  expr3 a==0?0:1
  name Expression6
  xpos 1112
  ypos -118
 }
 FilterErode {
  channels alpha
  size {0 3.463556851}
  filter gaussian
  name FilterErode7
  xpos 1112
  ypos -92
 }
 Premult {
  name Premult6
  xpos 1112
  ypos -66
 }
 Blur {
  channels rgba
  size {0 6.927113703}
  name Blur11
  xpos 1112
  ypos 384
 }
 Merge2 {
  inputs 2
  name Merge9
  xpos 1552
  ypos 384
 }
push $N3f51c820
 Blur {
  channels rgba
  size {0 11}
  name Blur12
  xpos 1002
  ypos -170
 }
 Unpremult {
  name Unpremult8
  xpos 1002
  ypos -144
 }
 Expression {
  expr3 a==0?0:1
  name Expression7
  xpos 1002
  ypos -118
 }
 FilterErode {
  channels alpha
  size {0 5.5}
  filter gaussian
  name FilterErode8
  xpos 1002
  ypos -92
 }
 Premult {
  name Premult7
  xpos 1002
  ypos -66
 }
 Blur {
  channels rgba
  size {0 11}
  name Blur13
  xpos 1002
  ypos 410
 }
 Merge2 {
  inputs 2
  name Merge10
  xpos 1552
  ypos 410
 }
 Unpremult {
  name Unpremult1
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 966
 }
 Dot {
  name Dot11
  xpos 258
  ypos 1020
 }
set N3f78efc0 [stack 0]
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  mix {{matteOutput==0?1:0 i}}
  name Copy2
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1068
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  mix {{matteOutput==1?1:0}}
  name Copy1
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1173
 }
 Dot {
  name Dot8
  xpos 258
  ypos 1227
 }
set N3f7b0d40 [stack 0]
 Dot {
  name Dot9
  xpos 453
  ypos 1227
 }
 Expression {
  expr3 a<=0.000001?0:1
  name Expression12
  note_font "Bitstream Vera Sans"
  xpos 419
  ypos 1261
 }
 Dot {
  name Dot10
  xpos 453
  ypos 1303
 }
push $N3f78efc0
 Dot {
  name Dot13
  xpos 521
  ypos 1020
 }
 Dot {
  name Dot12
  xpos 521
  ypos 1205
 }
push $N3f467340
 Merge2 {
  inputs 2
  operation difference
  bbox B
  name Merge14
  xpos 563
  ypos 1201
 }
 Keyer {
  operation "luminance key"
  range {0 1e-05 1 1}
  name Keyer1
  xpos 563
  ypos 1243
 }
 Merge2 {
  inputs 2
  operation mask
  bbox B
  name Merge15
  xpos 563
  ypos 1299
 }
 Dot {
  name Dot14
  xpos 597
  ypos 1341
 }
push $N3f7b0d40
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  mix {{matteOutput==4?1:0 i}}
  name Copy3
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1331
 }
set N3f8087e0 [stack 0]
 Expression {
  expr3 a<=0.000001?0:1
  mix {{matteOutput==3?1:0}}
  name Expression8
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1418
 }
push $N3f467340
 Merge2 {
  inputs 2
  operation copy
  bbox B
  name Merge4
  xpos 932
  ypos 1418
 }
 Output {
  name Output1
  note_font "Bitstream Vera Sans"
  xpos 932
  ypos 1579
 }
push $N3f467340
push $N3f8087e0
 Viewer {
  inputs 2
  input_process false
  name Viewer1
  xpos 336
  ypos 1225
 }
end_group
Dot {
 name Dot121
 selected true
 xpos 457
 ypos 11982
}
push $N3f39ee50
Dot {
 name Dot123
 selected true
 xpos 2
 ypos 11572
}
Erode {
 size 12
 name Erode1
 selected true
 xpos -32
 ypos 11651
}
Dot {
 name Dot124
 selected true
 xpos 2
 ypos 11735
}
push $N3f39ee50
Group {
 inputs 2
 name ColorDilate1
 knobChanged "\ntn = nuke.thisNode()\ntk = nuke.thisKnob()\n\nfullList =  tn\['fullList'].value().strip(\"\[']\").split(\"', '\")\nnodeList = fullList\[0], fullList\[1], fullList\[2], fullList\[3], fullList\[4], fullList\[5], fullList\[6]\npreviousLoopNum = tn\['previousLoopNum'].getValue()\n\ngrowTexture = tn\['growTexture'].getValue()\nqualityVal = int( tn\['quality'].getValue() )\n\n\n##### DEFINE VALUE CHANGES ##################\n\ndef valChange():\n    qualityBias = tn\['qualityBias'].getValue()\n    blurCenter = tn\['blurCenter'].getValue()\n    bcDistribution = tn\['bcDistribution'].getValue()\n    for i in range (0, qualityVal):\n        blurVal = nuke.toNode(fullList\[i*len(nodeList)])\n        erodeVal = nuke.toNode(fullList\[i*len(nodeList)+3])\n        blurCenterVal = nuke.toNode(fullList\[i*len(nodeList)+5])\n        if isinstance(growTexture, float) == True:\n            blurValSize = (growTexture/qualityVal*(i+1)*(1-qualityBias)) + (growTexture/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2)))\n            blurVal\['size'].setValue( blurValSize )\n            erodeVal\['size'].setValue(blurVal\['size'].getValue()/2)\n            blurCenterVal\['size'].setValue( ( blurValSize*(1-bcDistribution) +  (blurValSize*(bcDistribution*(pow(i+1, 2)/pow(qualityVal, 2)))) ) * blurCenter )\n        else:\n            blurVal\['size'].setValue(\[ (growTexture\[0]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[0]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) , (growTexture\[1]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[1]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) ])\n            erodeVal\['size'].setValue(\[blurVal\['size'].getValue()\[0]/2,blurVal\['size'].getValue()\[1]/2])\n            blurCenterVal\['size'].setValue(\[ (growTexture\[0]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[0]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) , (growTexture\[1]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[1]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) ])\n\ndef filterChange():\n    filters = int( tn\['filter'].getValue() )\n    filterQuality = int( tn\['filterQuality'].getValue() )\n    crop = int( tn\['crop'].getValue() )\n    for i in range (0, qualityVal):\n        blurVal = nuke.toNode(fullList\[i*len(nodeList)])\n        blurVal\['filter'].setValue( filters )\n        blurVal\['quality'].setValue( filterQuality )\n        blurVal\['crop'].setValue( crop )\n        blurCenterVal = nuke.toNode(fullList\[i*len(nodeList)])\n        blurCenterVal\['filter'].setValue( filters )\n        blurCenterVal\['quality'].setValue( filterQuality )\n        blurCenterVal\['crop'].setValue( crop )\n\n\n##### CREATE THE NODES ###################\n\nif tk.name()=='quality':\n    if qualityVal < 1:\n        qualityVal = 1\n    elif qualityVal >100:\n        qualityVal = 100\n    tn\['quality'].setValue( qualityVal )\n    \n\n    if qualityVal != previousLoopNum:\n\n\n        inputDep = nuke.dependencies(\[nuke.toNode('Unpremult1')], nuke.INPUTS)\n        resultOver = nuke.toNode( inputDep\[0].name() )\n\n        difference = qualityVal-previousLoopNum\n        if difference > 0:\n            for i in range (1, int(difference+1)):\n                \n                blur = nuke.nodes.Blur ()\n                blur\['channels'].setValue('rgba')\n                blur\['maskChannelInput'].setValue('none')\n                blur.setInput (0, nuke.toNode('Switch2'))\n                \n                unpremult = nuke.nodes.Unpremult ()\n                unpremult\['channels'].setValue('rgb')\n                unpremult\['alpha'].setValue('rgba.alpha')\n                unpremult\['invert'].setValue(0)\n                unpremult.setInput (0, blur)\n                \n                expression = nuke.nodes.Expression(expr3 = 'a==0?0:1')\n                expression.setInput (0, unpremult)\n                \n                erode = nuke.nodes.FilterErode ()\n                erode\['channels'].setValue( 'rgba.alpha' )\n                erode\['filter'].setValue( 'gaussian' )\n                erode.setInput (0, expression)\n                \n                premult = nuke.nodes.Premult ()\n                premult\['channels'].setValue( 'rgb' )\n                premult\['alpha'].setValue( 'rgba.alpha' )\n                premult.setInput (0, erode)\n\n                blurCenter = nuke.nodes.Blur ()\n                blurCenter\['channels'].setValue('rgba')\n                blurCenter\['maskChannelInput'].setValue('none')\n                blurCenter.setInput (0, premult)\n\n                mergeOver = nuke.nodes.Merge2 ()\n                mergeOver\['operation'].setValue( 'over' )\n                mergeOver\['sRGB'].setValue( 0 )\n                mergeOver\['screen_alpha'].setValue( 0 )\n                mergeOver\['bbox'].setValue( 'union' )\n                mergeOver\['Achannels'].setValue( 'rgba' )\n                mergeOver\['Bchannels'].setValue( 'rgba' )\n                mergeOver\['output'].setValue( 'rgba' )\n                mergeOver\['also_merge'].setValue( 'none' )\n                mergeOver.setInput (0, blurCenter)\n                mergeOver.setInput (1, resultOver)\n                \n                \n                resultOver = mergeOver\n                \n                \n                nodeList = blur.name(), unpremult.name(), expression.name(), erode.name(), premult.name(), blurCenter.name(), resultOver.name()\n                fullList.extend(nodeList)\n\n\n##### DELETE THE NODES ##################################\n\n        else:\n            fullList.reverse()\n            for i in range (int(qualityVal), int(previousLoopNum)):\n                for i in range (0, len(nodeList)):\n                    nuke.delete(nuke.toNode(fullList\[0]))\n                    del fullList\[0]\n                resultOver = nuke.toNode(fullList\[0])\n                resultExpression = nuke.toNode(fullList\[3])\n            fullList.reverse()\n\n        nuke.toNode('Unpremult1').setInput(0, resultOver)\n        valChange()\n        filterChange()\n                \n        previousLoopNum = qualityVal\n        \n        tn\['previousLoopNum'].setValue( int(previousLoopNum) )\n        tn\['fullList'].setValue( str(fullList) )\n\n\n\n##### CHANGE EXISTING VALUES #####################\n\nif tk.name()=='growTexture':\n    valChange()\n    \nif tk.name()=='qualityBias':\n    valChange()\n\nif tk.name()=='blurCenter':\n    valChange()\n\nif tk.name()=='bcDistribution':\n    valChange()\n    \nif tk.name()=='filter':\n    filterChange()\n    \nif tk.name()=='filterQuality':\n    filterChange()\n    \nif tk.name()=='crop':\n    filterChange()\n\n\n"
 note_font "Bitstream Vera Sans"
 selected true
 xpos 97
 ypos 11731
 addUserKnob {20 User l fColourDilate}
 addUserKnob {14 growTexture l "Grow Texture" R 0 100}
 growTexture 20.5
 addUserKnob {14 erodeMatte l "Erode Matte" t "Dilate or erode the matte to adjust the grow start paint" R -100 100}
 addUserKnob {7 expandMatte l "Expand Matte" t "Expand or compress the matte to adjust the grow start point" R -0.99999 0.99999}
 addUserKnob {7 quality l Iterations t "The number of iterations Colour Dilate will go through.  More is slower.  Max steps is 100" R 1 20}
 quality 7
 addUserKnob {7 qualityBias l Distribution t "0 is a linear distribution.  1 is exponential distribution.\nExponential is smoother with low quality.\nLinear is better with high quality."}
 qualityBias 1
 addUserKnob {26 ""}
 addUserKnob {7 blurCenter l "Blur Center" t "Soften central area where opposite dilates meet creating a hard line.  Is a multiple of Grow Texture." R 0 5}
 addUserKnob {7 bcDistribution l "BC Distribution" t "0 blurs a direct multiple of Grow Texture. 1 blurs exponentially more towards the center."}
 addUserKnob {26 ""}
 addUserKnob {4 filter l Filter t "filter\n" M {box triangle quadratic gaussian ""}}
 filter gaussian
 addUserKnob {3 filterQuality l " " -STARTLINE}
 filterQuality 15
 addUserKnob {6 crop l "crop to format" -STARTLINE}
 crop true
 addUserKnob {4 matteOutput l "Matte Output" M {rgb.alpha matte "dilated matte" "dilated area" "grain matte" ""}}
 addUserKnob {26 blank l "" -STARTLINE T "      "}
 addUserKnob {6 invertMatte l "invert Matte" -STARTLINE}
 invertMatte true
 addUserKnob {26 blank2 l "" -STARTLINE T "      "}
 addUserKnob {6 rgbIsPremult l "RGB is Premult?" -STARTLINE}
 rgbIsPremult true
 addUserKnob {1 colorDilate l INVISIBLE t "Keep me hidden" +INVISIBLE}
 addUserKnob {3 previousLoopNum l INVISIBLE +INVISIBLE}
 previousLoopNum 7
 addUserKnob {1 fullList l INVISIBLE +INVISIBLE}
 fullList "\['Blur1', 'Unpremult2', 'Expression1', 'FilterErode2', 'Premult1', 'BlurCenter', 'Merge2', 'Blur2', 'Unpremult3', 'Expression2', 'FilterErode3', 'Premult2', 'Blur3', 'Merge5', 'Blur4', 'Unpremult4', 'Expression3', 'FilterErode4', 'Premult3', 'Blur5', 'Merge6', 'Blur6', 'Unpremult5', 'Expression4', 'FilterErode5', 'Premult4', 'Blur7', 'Merge7', 'Blur8', 'Unpremult6', 'Expression5', 'FilterErode6', 'Premult5', 'Blur9', 'Merge8', 'Blur10', 'Unpremult7', 'Expression6', 'FilterErode7', 'Premult6', 'Blur11', 'Merge9', 'Blur12', 'Unpremult8', 'Expression7', 'FilterErode8', 'Premult7', 'Blur13', 'Merge10']"
}
 Input {
  inputs 0
  name InputMask
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -665
  number 1
 }
set N3f8e6b70 [stack 0]
 AddChannels {
  channels alpha
  name AddChannels2
  note_font "Bitstream Vera Sans"
  xpos 365
  ypos 1125
 }
 Dot {
  name Dot3
  note_font "Bitstream Vera Sans"
  xpos 399
  ypos 1183
 }
 Input {
  inputs 0
  name InputRGB
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -531
 }
set N3f8f99a0 [stack 0]
 AddChannels {
  channels alpha
  name AddChannels1
  note_font "Bitstream Vera Sans"
  xpos 348
  ypos 949
 }
 Dot {
  name Dot2
  note_font "Bitstream Vera Sans"
  xpos 382
  ypos 1078
 }
push $N3f8e6b70
 FilterErode {
  channels alpha
  size {{invertMatte==0?erodeMatte.w:-erodeMatte.w i} {invertMatte==0?erodeMatte.h:-erodeMatte.h i}}
  name FilterErode1
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -621
 }
 Invert {
  channels alpha
  mix {{invertMatte i}}
  name Invert2
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -563
 }
 Grade {
  channels alpha
  blackpoint {{"clamp(expandMatte, 0, 1)" i}}
  whitepoint {{"clamp(1+expandMatte, 0, 1)" i}}
  white_clamp true
  name Grade1
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -505
 }
 Grade {
  channels alpha
  whitepoint 0.5
  black_clamp false
  white_clamp true
  name Grade6
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -345
 }
 Dot {
  name Dot1
  note_font "Bitstream Vera Sans"
  xpos 837
  ypos -287
 }
set N3f9472c0 [stack 0]
push $N3f8f99a0
 AddChannels {
  channels alpha
  name AddChannels3
  note_font "Bitstream Vera Sans"
  xpos 1120
  ypos -444
 }
push $N3f8f99a0
 Shuffle {
  alpha white
  name Shuffle1
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -458
 }
 Crop {
  box {{InputRGB.bbox.x i x1001 542} {InputRGB.bbox.y i} {InputRGB.bbox.r i} {InputRGB.bbox.t i}}
  name Crop3
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -414
 }
 Switch {
  inputs 2
  which {{rgbIsPremult i}}
  name Switch1
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -370
 }
 Dot {
  name Dot5
  note_font "Bitstream Vera Sans"
  xpos 1047
  ypos -326
 }
set N3f979900 [stack 0]
 Merge2 {
  inputs 2
  operation stencil
  bbox intersection
  name Merge1
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -292
 }
push $N3f9472c0
 Dot {
  name Dot4
  note_font "Bitstream Vera Sans"
  xpos 837
  ypos -253
 }
push $N3f979900
 Dot {
  name Dot6
  note_font "Bitstream Vera Sans"
  xpos 946
  ypos -326
 }
 Merge2 {
  inputs 2
  operation stencil
  bbox B
  name Merge3
  note_font "Bitstream Vera Sans"
  xpos 912
  ypos -258
 }
 Dot {
  name Dot7
  note_font "Bitstream Vera Sans"
  xpos 946
  ypos -192
 }
 Switch {
  inputs 2
  which {{invertMatte i}}
  name Switch2
  note_font "Bitstream Vera Sans"
  xpos 1002
  ypos -196
 }
set N3f9aee80 [stack 0]
push $N3f9aee80
 Blur {
  channels rgba
  size 0.05976676385
  name Blur1
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos -26
 }
 Unpremult {
  name Unpremult2
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 18
 }
 Expression {
  expr3 a==0?0:1
  name Expression1
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 62
 }
 FilterErode {
  channels alpha
  size 0.02988338192
  filter gaussian
  name FilterErode2
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 106
 }
 Premult {
  name Premult1
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 164
 }
 Blur {
  channels rgba
  name BlurCenter
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 222
 }
 Merge2 {
  inputs 2
  name Merge2
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 280
 }
push $N3f9aee80
 Blur {
  channels rgba
  size 0.4781341108
  name Blur2
  xpos 1552
  ypos -170
 }
 Unpremult {
  name Unpremult3
  xpos 1552
  ypos -144
 }
 Expression {
  expr3 a==0?0:1
  name Expression2
  xpos 1552
  ypos -118
 }
 FilterErode {
  channels alpha
  size 0.2390670554
  filter gaussian
  name FilterErode3
  xpos 1552
  ypos -92
 }
 Premult {
  name Premult2
  xpos 1552
  ypos -66
 }
 Blur {
  channels rgba
  name Blur3
  xpos 1552
  ypos -40
 }
 Merge2 {
  inputs 2
  name Merge5
  xpos 1552
  ypos 280
 }
push $N3f9aee80
 Blur {
  channels rgba
  size 1.613702624
  name Blur4
  xpos 1442
  ypos -170
 }
 Unpremult {
  name Unpremult4
  xpos 1442
  ypos -144
 }
 Expression {
  expr3 a==0?0:1
  name Expression3
  xpos 1442
  ypos -118
 }
 FilterErode {
  channels alpha
  size 0.806851312
  filter gaussian
  name FilterErode4
  xpos 1442
  ypos -92
 }
 Premult {
  name Premult3
  xpos 1442
  ypos -66
 }
 Blur {
  channels rgba
  name Blur5
  xpos 1442
  ypos 306
 }
 Merge2 {
  inputs 2
  name Merge6
  xpos 1552
  ypos 306
 }
push $N3f9aee80
 Blur {
  channels rgba
  size 3.825072886
  name Blur6
  xpos 1332
  ypos -170
 }
 Unpremult {
  name Unpremult5
  xpos 1332
  ypos -144
 }
 Expression {
  expr3 a==0?0:1
  name Expression4
  xpos 1332
  ypos -118
 }
 FilterErode {
  channels alpha
  size 1.912536443
  filter gaussian
  name FilterErode5
  xpos 1332
  ypos -92
 }
 Premult {
  name Premult4
  xpos 1332
  ypos -66
 }
 Blur {
  channels rgba
  name Blur7
  xpos 1332
  ypos -40
 }
 Merge2 {
  inputs 2
  name Merge7
  xpos 1552
  ypos 332
 }
push $N3f9aee80
 Blur {
  channels rgba
  size 7.470845481
  name Blur8
  xpos 1222
  ypos -170
 }
 Unpremult {
  name Unpremult6
  xpos 1222
  ypos -144
 }
 Expression {
  expr3 a==0?0:1
  name Expression5
  xpos 1222
  ypos -118
 }
 FilterErode {
  channels alpha
  size 3.735422741
  filter gaussian
  name FilterErode6
  xpos 1222
  ypos -92
 }
 Premult {
  name Premult5
  xpos 1222
  ypos -66
 }
 Blur {
  channels rgba
  name Blur9
  xpos 1222
  ypos 358
 }
 Merge2 {
  inputs 2
  name Merge8
  xpos 1552
  ypos 358
 }
push $N3f9aee80
 Blur {
  channels rgba
  size 12.90962099
  name Blur10
  xpos 1112
  ypos -170
 }
 Unpremult {
  name Unpremult7
  xpos 1112
  ypos -144
 }
 Expression {
  expr3 a==0?0:1
  name Expression6
  xpos 1112
  ypos -118
 }
 FilterErode {
  channels alpha
  size 6.454810496
  filter gaussian
  name FilterErode7
  xpos 1112
  ypos -92
 }
 Premult {
  name Premult6
  xpos 1112
  ypos -66
 }
 Blur {
  channels rgba
  name Blur11
  xpos 1112
  ypos 384
 }
 Merge2 {
  inputs 2
  name Merge9
  xpos 1552
  ypos 384
 }
push $N3f9aee80
 Blur {
  channels rgba
  size 20.5
  name Blur12
  xpos 1002
  ypos -170
 }
 Unpremult {
  name Unpremult8
  xpos 1002
  ypos -144
 }
 Expression {
  expr3 a==0?0:1
  name Expression7
  xpos 1002
  ypos -118
 }
 FilterErode {
  channels alpha
  size 10.25
  filter gaussian
  name FilterErode8
  xpos 1002
  ypos -92
 }
 Premult {
  name Premult7
  xpos 1002
  ypos -66
 }
 Blur {
  channels rgba
  name Blur13
  xpos 1002
  ypos 410
 }
 Merge2 {
  inputs 2
  name Merge10
  xpos 1552
  ypos 410
 }
 Unpremult {
  name Unpremult1
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 966
 }
 Dot {
  name Dot11
  xpos 258
  ypos 1020
 }
set N3fc21660 [stack 0]
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  mix {{matteOutput==0?1:0 i}}
  name Copy2
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1068
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  mix {{matteOutput==1?1:0}}
  name Copy1
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1173
 }
 Dot {
  name Dot8
  xpos 258
  ypos 1227
 }
set N3fc433e0 [stack 0]
 Dot {
  name Dot9
  xpos 453
  ypos 1227
 }
 Expression {
  expr3 a<=0.000001?0:1
  name Expression12
  note_font "Bitstream Vera Sans"
  xpos 419
  ypos 1261
 }
 Dot {
  name Dot10
  xpos 453
  ypos 1303
 }
push $N3fc21660
 Dot {
  name Dot13
  xpos 521
  ypos 1020
 }
 Dot {
  name Dot12
  xpos 521
  ypos 1205
 }
push $N3f8f99a0
 Merge2 {
  inputs 2
  operation difference
  bbox B
  name Merge14
  xpos 563
  ypos 1201
 }
 Keyer {
  operation "luminance key"
  range {0 1e-05 1 1}
  name Keyer1
  xpos 563
  ypos 1243
 }
 Merge2 {
  inputs 2
  operation mask
  bbox B
  name Merge15
  xpos 563
  ypos 1299
 }
 Dot {
  name Dot14
  xpos 597
  ypos 1341
 }
push $N3fc433e0
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  mix {{matteOutput==4?1:0 i}}
  name Copy3
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1331
 }
set N3fc9ae70 [stack 0]
 Expression {
  expr3 a<=0.000001?0:1
  mix {{matteOutput==3?1:0}}
  name Expression8
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1418
 }
push $N3f8f99a0
 Merge2 {
  inputs 2
  operation copy
  bbox B
  name Merge4
  xpos 932
  ypos 1418
 }
 Output {
  name Output1
  note_font "Bitstream Vera Sans"
  xpos 932
  ypos 1579
 }
push $N3f8f99a0
push $N3fc9ae70
 Viewer {
  inputs 2
  input_process false
  name Viewer1
  xpos 336
  ypos 1225
 }
end_group
Keymix {
 inputs 3
 name Keymix1
 selected true
 xpos 97
 ypos 11972
}
Premult {
 name Premult7
 selected true
 xpos 97
 ypos 12045
}
Dot {
 name Dot147
 selected true
 xpos 131
 ypos 12114
}
Switch {
 inputs 3
 which 2
 name Switch3
 selected true
 xpos 97
 ypos 12254
}
Dot {
 name Dot132
 selected true
 xpos 131
 ypos 12355
}
CheckerBoard2 {
 inputs 0
 format "4550 2416 0 0 4550 2416 1 "
 color0 {0.1 0.1 0 1}
 color1 {0.1 0.1 0.1 1}
 color2 {0.1 0.1 0 1}
 color3 {0.1 0.1 0.1 1}
 centerlinewidth 0
 name CheckerBoard3
 selected true
 xpos -330
 ypos 12213
}
Merge2 {
 inputs 2
 name Merge8
 selected true
 xpos -330
 ypos 12351
}
StickyNote {
 inputs 0
 name StickyNote8
 label "\n<b>Nuke's EdgeExtend</b>\n\n- blur, unpremult technique\n\n\n<font color=green>- easy to set up\n- option to restore detail\n- GPU support\n\n</font>\n\n<font color=red>- too simple\n- knobs can't be split\n- edge blur can't be adjusted\n- confusing alpha channel bypass / premult when using matte &nbsp;&nbsp;input alpha\n\n</font>\n"
 note_font_size 30
 selected true
 xpos -16740
 ypos 6610
}
push $N35f60e20
Dot {
 name Dot164
 selected true
 xpos 1215
 ypos 9337
}
set N3fd9b390 [stack 0]
Dot {
 name Dot165
 selected true
 xpos 1301
 ypos 9337
}
Dot {
 name Dot166
 selected true
 xpos 1301
 ypos 9410
}
set N4045f0d0 [stack 0]
Dot {
 name Dot167
 selected true
 xpos 1401
 ypos 9410
}
Dot {
 name Dot168
 selected true
 xpos 1401
 ypos 9479
}
push $N4045f0d0
Merge2 {
 inputs 2
 operation xor
 name Merge13
 selected true
 xpos 1267
 ypos 9475
}
Grade {
 channels alpha
 whitepoint 0
 white_clamp true
 name Grade8
 selected true
 xpos 1267
 ypos 9540
}
Dot {
 name Dot169
 selected true
 xpos 1301
 ypos 9652
}
push $N3fd9b390
Merge2 {
 inputs 2
 operation stencil
 name Merge14
 selected true
 xpos 1181
 ypos 9648
}
Group {
 inputs 0
 name EdgeExtend
 help "EdgeExtend repeatedly blurs and unpremuliplies the image to extend edges outward while trying to preserve the original source colour"
 selected true
 xpos -19423
 ypos 6720
 addUserKnob {20 "" l User}
 addUserKnob {4 premult l "input is" M {premultiplied unpremultiplied}}
 addUserKnob {3 slices t "How many times the edges are blurred and unpremuliplied.\nThis is the fine control for slightly better quality. The current maximum is 10."}
 slices 4
 addUserKnob {3 slice_width l "slice width" t "Blur amount that is applied before unpremultiplying the result per slice.\nThis is the brute force control and should be kept at 1 if possible.\nOnly increase this if the maximum amount of slices (10) doesn't cover the area you need."}
 slice_width 1
 addUserKnob {7 blurResult l "blur slices" R 0 10}
 blurResult 5
}
 Input {
  inputs 0
  name img
  xpos -590
  ypos -509
 }
set N404af9d0 [stack 0]
 Dot {
  name Dot1
  xpos -556
  ypos 978
 }
 Input {
  inputs 0
  name matte
  xpos -358
  ypos -653
  number 1
 }
push $N404af9d0
 Unpremult {
  name Unpremult11
  xpos -468
  ypos -509
  disable {{parent.premult}}
 }
 Copy {
  inputs 2
  from0 -rgba.alpha
  to0 -rgba.alpha
  channels alpha
  name Copy2
  xpos -358
  ypos -516
 }
 Premult {
  name Premult1
  xpos -358
  ypos -450
 }
 Shuffle {
  black alpha
  out2 depth
  name Shuffle1
  label alpha>depth
  xpos -223
  ypos -413
 }
 Unpremult {
  channels {rgba.red rgba.green rgba.blue depth.Z}
  name Unpremult1
  xpos -223
  ypos -373
 }
set N404ee360 [stack 0]
 Dot {
  name Dot2
  xpos -189
  ypos -214
 }
set N404f6880 [stack 0]
push $N404ee360
 Blur {
  channels {rgba.red rgba.green rgba.blue depth.Z}
  size {{parent.slice_width}}
  name Blur1
  xpos -25
  ypos -373
 }
 Shuffle {
  in2 depth
  alpha red2
  out2 depth
  name Shuffle3
  label depth>alpha
  xpos -25
  ypos -333
 }
 Unpremult {
  channels rgba
  alpha depth.Z
  name Unpremult3
  xpos -25
  ypos -293
 }
 Blur {
  channels rgba
  size {{parent.blurResult}}
  name Blur10
  xpos -25
  ypos -241
 }
 set C405228f0 [stack 0]
 Merge2 {
  inputs 2
  Achannels {rgba.red rgba.green rgba.blue depth.Z}
  name Merge1
  xpos -25
  ypos -218
 }
set N405306b0 [stack 0]
 Dot {
  name Dot3
  xpos 9
  ypos -73
 }
set N40541080 [stack 0]
push $N405306b0
 Blur {
  channels rgba
  size {{parent.slice_width}}
  name Blur2
  xpos 159
  ypos -218
 }
 Shuffle {
  in2 depth
  black alpha
  out2 depth
  name Shuffle5
  label alpha>depth
  xpos 159
  ypos -180
 }
 Unpremult {
  channels {rgba.red rgba.green rgba.blue depth.Z}
  name Unpremult2
  xpos 159
  ypos -140
 }
 Blur {
  channels {rgba.red rgba.green rgba.blue depth.Z}
  size {{parent.blurResult}}
  name Blur3
  xpos 159
  ypos -101
 }
 set C4056d160 [stack 0]
 Merge2 {
  inputs 2
  name Merge2
  xpos 159
  ypos -73
 }
set N4057af20 [stack 0]
 Dot {
  name Dot4
  xpos 193
  ypos 103
 }
set N4058b8f0 [stack 0]
push $N4057af20
 Shuffle {
  in2 depth
  alpha red2
  out2 depth
  name Shuffle2
  label depth>alpha
  xpos 342
  ypos -24
 }
 Unpremult {
  channels rgba
  alpha depth.Z
  name Unpremult4
  xpos 342
  ypos 16
 }
set N405a1610 [stack 0]
clone $C405228f0 {
  xpos 342
  ypos 68
  selected false
 }
 Merge2 {
  inputs 2
  Achannels {rgba.red rgba.green rgba.blue depth.Z}
  name Merge3
  xpos 342
  ypos 103
 }
 Dot {
  name Dot5
  xpos 373
  ypos 226
 }
set N405c8260 [stack 0]
push $N405a1610
 Blur {
  channels rgba
  size {{parent.slice_width}}
  name Blur4
  xpos 503
  ypos 23
 }
 Shuffle {
  in2 depth
  black alpha
  out2 depth
  name Shuffle4
  label alpha>depth
  xpos 503
  ypos 65
 }
 Unpremult {
  channels {rgba.red rgba.green rgba.blue depth.Z}
  name Unpremult5
  xpos 503
  ypos 105
 }
set N405ebdc0 [stack 0]
clone $C4056d160 {
  xpos 503
  ypos 174
  selected false
 }
 Merge2 {
  inputs 2
  name Merge4
  xpos 503
  ypos 226
 }
 Dot {
  name Dot6
  xpos 537
  ypos 321
 }
set N40612a00 [stack 0]
push $N405ebdc0
 Blur {
  channels {rgba.red rgba.green rgba.blue depth.Z}
  size {{parent.slice_width}}
  name Blur5
  xpos 689
  ypos 105
 }
 Shuffle {
  in2 depth
  alpha red2
  out2 depth
  name Shuffle6
  label depth>alpha
  xpos 689
  ypos 145
 }
 Unpremult {
  channels rgba
  alpha depth.Z
  name Unpremult6
  xpos 689
  ypos 185
 }
set N40636650 [stack 0]
clone $C405228f0 {
  xpos 684
  ypos 272
  selected false
 }
 Merge2 {
  inputs 2
  Achannels {rgba.red rgba.green rgba.blue depth.Z}
  name Merge5
  xpos 689
  ypos 321
 }
 Dot {
  name Dot7
  xpos 723
  ypos 448
 }
set N4065d290 [stack 0]
push $N40636650
 Blur {
  channels rgba
  size {{parent.slice_width}}
  name Blur6
  xpos 856
  ypos 200
 }
 Shuffle {
  in2 depth
  black alpha
  out2 depth
  name Shuffle7
  label alpha>depth
  xpos 856
  ypos 280
 }
 Unpremult {
  channels {rgba.red rgba.green rgba.blue depth.Z}
  name Unpremult7
  xpos 856
  ypos 320
 }
set N40680de0 [stack 0]
clone $C4056d160 {
  xpos 852
  ypos 405
  selected false
 }
 Merge2 {
  inputs 2
  name Merge6
  xpos 856
  ypos 448
 }
 Dot {
  name Dot8
  xpos 890
  ypos 514
 }
set N406a7a20 [stack 0]
push $N40680de0
 Blur {
  channels {rgba.red rgba.green rgba.blue depth.Z}
  size {{parent.slice_width}}
  name Blur7
  xpos 1042
  ypos 320
 }
 Shuffle {
  in2 depth
  alpha red2
  out2 depth
  name Shuffle8
  label depth>alpha
  xpos 1042
  ypos 393
 }
 Unpremult {
  channels rgba
  alpha depth.Z
  name Unpremult8
  xpos 1042
  ypos 433
 }
set N406cb590 [stack 0]
clone $C405228f0 {
  xpos 1046
  ypos 484
  selected false
 }
 Merge2 {
  inputs 2
  Achannels {rgba.red rgba.green rgba.blue depth.Z}
  name Merge7
  xpos 1042
  ypos 514
 }
 Dot {
  name Dot9
  xpos 1076
  ypos 579
 }
set N406f21d0 [stack 0]
push $N406cb590
 Blur {
  channels rgba
  size {{parent.slice_width}}
  name Blur8
  xpos 1205
  ypos 440
 }
 Shuffle {
  in2 depth
  black alpha
  out2 depth
  name Shuffle9
  label alpha>depth
  xpos 1205
  ypos 466
 }
 Unpremult {
  channels {rgba.red rgba.green rgba.blue depth.Z}
  name Unpremult9
  xpos 1205
  ypos 506
 }
set N40715d20 [stack 0]
clone $C4056d160 {
  xpos 1206
  ypos 551
  selected false
 }
 Merge2 {
  inputs 2
  name Merge8
  xpos 1205
  ypos 579
 }
 Dot {
  name Dot10
  xpos 1239
  ypos 664
 }
set N4073cd50 [stack 0]
push $N40715d20
 Blur {
  channels {rgba.red rgba.green rgba.blue depth.Z}
  size {{parent.slice_width}}
  name Blur9
  xpos 1421
  ypos 506
 }
 Shuffle {
  in2 depth
  alpha red2
  out2 depth
  name Shuffle11
  label depth>alpha
  xpos 1421
  ypos 546
 }
 Unpremult {
  channels rgba
  alpha depth.Z
  name Unpremult10
  xpos 1421
  ypos 586
 }
clone $C405228f0 {
  xpos 1421
  ypos 638
  selected true
 }
 Merge2 {
  inputs 2
  Achannels {rgba.red rgba.green rgba.blue depth.Z}
  name Merge9
  xpos 1421
  ypos 664
 }
push $N4073cd50
push $N406f21d0
push $N406a7a20
push $N4065d290
push $N40612a00
push $N405c8260
push $N4058b8f0
push $N40541080
push $N404f6880
push $N404af9d0
 Switch {
  inputs 11
  which {{parent.slices}}
  name Switch1
  xpos 689
  ypos 827
 }
 Shuffle {
  in2 depth
  alpha red2
  out2 depth
  name Shuffle10
  label depth>alpha
  xpos 689
  ypos 865
 }
 Remove {
  channels depth
  name Remove1
  xpos 689
  ypos 905
 }
 Copy {
  inputs 2
  from0 -rgba.alpha
  to0 -rgba.alpha
  channels depth
  name Copy1
  xpos 689
  ypos 960
 }
 Output {
  name Output1
  xpos 689
  ypos 1290
 }
 Blur {
  inputs 0
  channels {rgba.red rgba.green rgba.blue depth.Z}
  size 8.5
  name Blur11
  xpos 299
  ypos -61
 }
end_group
StickyNote {
 inputs 0
 name StickyNote10
 label "\n<b>KillOutline (by Andreas Frickinger)</b>\n\n- blur, unpremult technique\n- re-using the original EdgeExtend by Frank Rueter\n\n\n<font color=green>- easy to set up\n- choice of iterations (dynamically)\n- separate mask input (for masking, not for core)\n\n</font>\n\n<font color=red>- knobs can't be split up\n- alpha has to be shuffled in if you want to treat your matte before &nbsp;&nbsp;going into the tool\n\n</font>\n"
 note_font_size 30
 selected true
 xpos -19107
 ypos 6626
}
Read {
 inputs 0
 file_type exr
 file /data/jobs/TRN/sequences/compTraining/shots/TRN-compTraining-compShotA/.jabuka/imageSequenceLibrary/preComp/ee_mask_example/versions/0001/TRN_compTraining_TRN-compTraining-compShotA_ee_mask_example_v0001.%06d.exr
 first 1001
 last 1010
 colorspace scene_linear
 name TRN_compTraining_compShotA_ee_mask_example_v0001_3
 selected true
 xpos 225
 ypos 12985
 icon /software/apps/jabuka/7.196.0/tools/python/2.7/noarch/cortex/10.3/GafferJabukaUI/Resources/Icons/dynamic.png
 addUserKnob {20 ieAssetInfo l "Asset Information"}
 addUserKnob {20 Advanced t "\n<B>ieEntityType:</B> ImageSequence\n<B>ieEntityId:</B> 2940786\n<B>ieAssetId:</B> 0\n<B>ieNodeTag:</B> \n<B>ieLinkedEntities:</B> \[]\n<B>ieBundleId:</B> 0" n 2}
 addUserKnob {1 ieNodeType l "Node Type" +INVISIBLE}
 ieNodeType assetNode
 addUserKnob {1 ieEntityType l "Entity Type" +DISABLED}
 ieEntityType ImageSequence
 addUserKnob {3 ieEntityId l "Entity Id" +DISABLED}
 ieEntityId 2940786
 addUserKnob {3 ieAssetId l "Asset Id" +DISABLED}
 addUserKnob {1 ieCopyId l "Copy Id" +DISABLED}
 ieCopyId 3
 addUserKnob {1 ieNodeTag l "Node Tag" +DISABLED}
 addUserKnob {1 ieLinkedEntities l "Linked Entities" +DISABLED}
 ieLinkedEntities "\[]"
 addUserKnob {3 ieBundleId l "Bundle Id" +DISABLED}
 addUserKnob {20 AdvancedEG n -1}
 addUserKnob {3 ieBundleVersion l "Bundle Version" +DISABLED}
 addUserKnob {1 ieDisplayName l Name +DISABLED}
 ieDisplayName ee_mask_example
 addUserKnob {4 ieEntityVersion l "Entity Version" M {1}}
 addUserKnob {32 ieUpdateVersions l "Update Versions" -STARTLINE}
 addUserKnob {1 ieVersionCreationDate l "Version Creation Date" +DISABLED}
 ieVersionCreationDate "03-30-2022 21:20:01"
 addUserKnob {1 ieVersionCreator l Artist -STARTLINE +DISABLED}
 ieVersionCreator sebastians
 addUserKnob {4 ieUpdateMode l "Update Mode" M {locked latest latestApproved default}}
 ieUpdateMode default
 addUserKnob {6 ieRelativeToLocation l "Entity is Dynamic - Relative To Environment Location" +STARTLINE}
 ieRelativeToLocation true
 addUserKnob {32 ieSourceScene l "Open Source Scene" +STARTLINE}
 addUserKnob {26 ieSeparator l "  "}
 addUserKnob {1 ieSequencePath l SequencePath}
 ieSequencePath /data/jobs/TRN/sequences/compTraining/shots/TRN-compTraining-compShotA/.jabuka/imageSequenceLibrary/preComp/ee_mask_example/versions/0001/TRN_compTraining_TRN-compTraining-compShotA_ee_mask_example_v0001.%06d.exr
 addUserKnob {32 ieDailyButton l "Create Daily" +STARTLINE}
}
Unpremult {
 name Unpremult6
 selected true
 xpos 225
 ypos 13081
}
Grade {
 channels alpha
 blackpoint 0.03
 black_clamp false
 name Grade7
 selected true
 xpos 225
 ypos 13119
}
Premult {
 name Premult14
 selected true
 xpos 225
 ypos 13157
}
Dot {
 name Dot155
 selected true
 xpos 259
 ypos 13267
}
set N4083bbb0 [stack 0]
Dot {
 name Dot154
 selected true
 xpos 575
 ypos 13267
}
Unpremult {
 name Unpremult5
 selected true
 xpos 541
 ypos 13318
}
Dot {
 name Dot115
 selected true
 xpos 575
 ypos 13370
}
set N4084e150 [stack 0]
Blur {
 size 6.4
 name Blur2
 selected true
 xpos 541
 ypos 13441
}
set N408531c0 [stack 0]
Dot {
 name Dot172
 selected true
 xpos 431
 ypos 13451
}
push $N4084e150
Dot {
 name Dot116
 selected true
 xpos 673
 ypos 13370
}
Dot {
 name Dot114
 selected true
 xpos 673
 ypos 13522
}
push $N408531c0
Merge2 {
 inputs 2
 operation divide
 name Merge3
 selected true
 xpos 541
 ypos 13518
}
Dot {
 name Dot171
 selected true
 xpos 575
 ypos 13636
}
set N40880e30 [stack 0]
Merge2 {
 inputs 2
 operation multiply
 name Merge15
 selected true
 xpos 397
 ypos 13632
}
Group {
 inputs 0
 name EE_Presentation
 tile_color 0xffff00ff
 note_font "Bitstream Vera Sans Bold"
 note_font_size 9
 note_font_color 0xffff
 selected true
 xpos -235
 ypos 6654
 postage_stamp true
 addUserKnob {20 slides l Slides}
 addUserKnob {3 page l Page}
 page 1
}
 BackdropNode {
  inputs 0
  name BackdropNode1
  tile_color 0x234927ff
  label "ADDITIVE KEYER"
  note_font_size 42
  xpos 2726
  ypos -1270
  bdwidth 405
  bdheight 312
 }
 Read {
  inputs 0
  file_type exr
  file /data/jobs/TRN/sequences/compTraining/shots/TRN-compTraining-compShotA/.jabuka/assets/cine/fgRt/plate/versions/0003/vars/native_working_exr/TRN_compTraining_TRN-compTraining-compShotA_fgRt_native_v0003.%06d.exr
  format "4550 2416 0 0 4550 2416 1 "
  first 1001
  last 1052
  origset true
  colorspace AcesCG
  name TRN_compTraining_compShotA_fgRtPlate_v0003_1_4550x2416_native_working_exr
  xpos 3234
  ypos -1898
  icon /software/apps/jabuka/7.195.1/tools/python/2.7/noarch/cortex/10.3/GafferJabukaUI/Resources/Icons/dynamic.png
  addUserKnob {20 ieAssetInfo l "Asset Information"}
  addUserKnob {20 Advanced t "\n<B>ieEntityType:</B> Plate\n<B>ieEntityId:</B> 2081915\n<B>ieAssetId:</B> 2081911\n<B>ieCopyId:</B> 1\n<B>ieNodeTag:</B> native_working_exr\n<B>ieLinkedEntities:</B> \[]\n<B>ieBundleId:</B> 2079433" n 2}
  addUserKnob {1 ieNodeType l "Node Type" +INVISIBLE}
  ieNodeType assetNode
  addUserKnob {1 ieEntityType l "Entity Type" +DISABLED}
  ieEntityType Plate
  addUserKnob {3 ieEntityId l "Entity Id" +DISABLED}
  ieEntityId 2081915
  addUserKnob {3 ieAssetId l "Asset Id" +DISABLED}
  ieAssetId 2081911
  addUserKnob {1 ieCopyId l "Copy Id" +DISABLED}
  ieCopyId 1
  addUserKnob {1 ieNodeTag l "Node Tag" +DISABLED}
  ieNodeTag 4550x2416_native_working_exr
  addUserKnob {1 ieLinkedEntities l "Linked Entities" +DISABLED}
  ieLinkedEntities "\[]"
  addUserKnob {3 ieBundleId l "Bundle Id" +DISABLED}
  ieBundleId 2079433
  addUserKnob {20 AdvancedEG n -1}
  addUserKnob {3 ieBundleVersion l "<span style=\"color:#32CD32\">Bundle Version (Latest)</span>" t "This bundle version is the\nlatest approved and up-to-date." +DISABLED}
  ieBundleVersion 8
  addUserKnob {1 ieDisplayName l Name +DISABLED}
  ieDisplayName plate
  addUserKnob {4 ieEntityVersion l "Entity Version" M {4 3 2 1}}
  ieEntityVersion 3
  addUserKnob {32 ieUpdateVersions l "Update Versions" -STARTLINE}
  addUserKnob {1 ieVersionCreationDate l "Version Creation Date" +DISABLED}
  ieVersionCreationDate "02-19-2021 18:11:10"
  addUserKnob {1 ieVersionCreator l Artist -STARTLINE +DISABLED}
  ieVersionCreator petruc
  addUserKnob {4 ieUpdateMode l "Update Mode" M {locked latest latestApproved default}}
  ieUpdateMode default
  addUserKnob {6 ieRelativeToLocation l "Entity is Dynamic - Relative To Environment Location" +STARTLINE}
  ieRelativeToLocation true
  addUserKnob {6 ieDefaultCineAssetUpdate l "Default Cine Asset update" +STARTLINE}
  ieDefaultCineAssetUpdate true
  addUserKnob {1 iePurposeOverride l "Purpose override" +INVISIBLE}
  iePurposeOverride "Plate "
  addUserKnob {32 ieSourceScene l "Open Source Scene" +STARTLINE}
  addUserKnob {26 ieSeparator l "  "}
  addUserKnob {6 ieUseIdealVariation l "Use Ideal Variation" -STARTLINE}
  addUserKnob {4 ieVar l Var M {nativeNeutral_full_exr flat_working_jpg flat_full_exr flat_full_jpg native_working_exr native_working_jpg flat_half_jpg flat_working_exr flatNeutral_working_exr flatNeutral_working_tx native_full_exr native_full_jpg flat_working_tx flatNeutral_full_exr nativeNeutral_working_exr native_half_jpg _original _originalRenumbered}}
  ieVar native_working_exr
  addUserKnob {4 ieProxy l Proxy M {nativeNeutral_full_exr flat_working_jpg flat_full_exr flat_full_jpg native_working_exr native_working_jpg flat_half_jpg flat_working_exr flatNeutral_working_exr flatNeutral_working_tx native_full_exr native_full_jpg flat_working_tx flatNeutral_full_exr nativeNeutral_working_exr native_half_jpg _original _originalRenumbered}}
  addUserKnob {1 ieSequencePath l SequencePath}
  ieSequencePath /data/jobs/TRN/sequences/compTraining/shots/TRN-compTraining-compShotA/.jabuka/assets/cine/fgRt/plate/versions/0003/vars/native_working_exr/TRN_compTraining_TRN-compTraining-compShotA_fgRt_native_v0003.%06d.exr
  addUserKnob {32 ieUpdatePaths l "Update Paths" -STARTLINE}
  addUserKnob {1 ieProxySequencePath l ProxySequencePath}
 }
set N408a66d0 [stack 0]
 FrameHold {
  firstFrame 1005
  name FrameHold3
  xpos 2968
  ypos -1869
 }
 Radial {
  inputs 0
  area {180 150 1740 920}
  softness 0.03
  name Radial1
  xpos -1964
  ypos -236
 }
 Dot {
  name Dot41
  xpos -1930
  ypos -166
 }
set N408f3ea0 [stack 0]
 Dot {
  name Dot42
  xpos -1930
  ypos -94
 }
push $N408f3ea0
 Invert {
  name Invert2
  xpos -2110
  ypos -175
 }
 Constant {
  inputs 0
  channels rgb
  color 0.6
  format "1920 1080 0 0 1920 1080 1 HD_1080"
  name Constant3
  xpos -2433
  ypos -334
 }
 Shuffle2 {
  fromInput1 {{0} B}
  fromInput2 {{0} B}
  mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 white -1 -1 rgba.alpha 0 3"
  name Shuffle3
  xpos -2433
  ypos -224
 }
 Dot {
  name Dot43
  xpos -2399
  ypos -166
 }
 CheckerBoard2 {
  inputs 0
  format "1920 1080 0 0 1920 1080 1 HD_1080"
  boxsize 32
  centerlinewidth 0
  name CheckerBoard2
  xpos -2122
  ypos -436
 }
 ColorBars {
  inputs 0
  format "1920 1080 0 0 1920 1080 1 HD_1080"
  PAL true
  name ColorBars1
  xpos -2268
  ypos -542
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge9
  xpos -2268
  ypos -412
 }
 Shuffle2 {
  fromInput1 {{0} B}
  fromInput2 {{0} B}
  mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 white -1 -1 rgba.alpha 0 3"
  name Shuffle5
  xpos -2268
  ypos -351
 }
 Merge2 {
  inputs 2+1
  name Merge10
  xpos -2268
  ypos -169
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy2
  xpos -2268
  ypos -103
 }
 Premult {
  name Premult6
  xpos -2268
  ypos -32
 }
 Dot {
  name Dot58
  xpos -2234
  ypos 46
 }
set N680c0490 [stack 0]
 Dot {
  name Dot63
  xpos -2532
  ypos 46
 }
set N680c5440 [stack 0]
 Dot {
  name Dot62
  xpos -2889
  ypos 46
 }
set N680ca390 [stack 0]
 Dot {
  name Dot44
  xpos -3295
  ypos 46
 }
set N680cf2e0 [stack 0]
 Dot {
  name Dot87
  xpos -3865
  ypos 46
 }
set N680d4230 [stack 0]
 Dot {
  name Dot93
  xpos -4462
  ypos 44
 }
set N680d9180 [stack 0]
 Dot {
  name Dot73
  xpos -5056
  ypos 46
 }
 Dot {
  name Dot72
  xpos -5056
  ypos 238
 }
set N680e3020 [stack 0]
 Erode {
  channels alpha
  size {17.5 9.5}
  name Erode6
  xpos -5186
  ypos 293
 }
push $N680e3020
 Group {
  inputs 2
  name VectorExtendEdge2
  help "Push rgb pixels outwards using vectors  generated perpedicular to a control matte edge."
  xpos -5090
  ypos 384
  addUserKnob {20 User}
  addUserKnob {4 premult l "input is" M {premultiplied unpremultiplied}}
  premult unpremultiplied
  addUserKnob {41 from0 l "control matte channel" T Copy4.from0}
  addUserKnob {7 preblur l "pre-blur control matte" t "Blurring the control matte by a moderate amount will increase the width of the extended edge border and help with blending together the slices." R 0 10}
  preblur 10
  addUserKnob {26 ""}
  addUserKnob {3 slices l "vector blur slices" t "The number of iterations of the vector blur operation, up to 10."}
  slices 12
  addUserKnob {7 preblur_vector l "preblur vector" t "Blur the vector a bit before it's used to extend the rgb pixels.  Can help with blending and will also extend the edge further." R 0 10}
  preblur_vector 2
  addUserKnob {7 vector_length l "vector length" t "The length of the vector blur operation per slice. Best to avoid making this too high because it can slow things down when multiplied by the number of slices." R 1 10}
  vector_length 7
  addUserKnob {26 ""}
  addUserKnob {4 output t "The default output is the rgb.  The vector output options are just for checking what's going on under the hood.  The \"-1 to 1\" range is the \"native\" format while the \"0 to 1\" range compresses the vectors so that negative values can be visualised." M {"extended rgb" "vectors (-1 to 1 range)" "vectors (0 to 1 range)" ""}}
 }
  Input {
   inputs 0
   name ctrl_matte
   xpos 1122
   ypos 457
   number 1
  }
  Input {
   inputs 0
   name img
   xpos 840
   ypos 457
  }
  Dot {
   name Dot2
   xpos 874
   ypos 570
  }
set N6810a630 [stack 0]
  Unpremult {
   name Unpremult11
   xpos 965
   ypos 566
   disable {{parent.premult i}}
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy4
   xpos 1122
   ypos 559
   disable {{"!\[exists parent.input1]" i}}
  }
  Blur {
   channels alpha
   size {{parent.preblur i}}
   name Blur12
   label "pre-blur alpha"
   xpos 1122
   ypos 648
  }
set N681262c0 [stack 0]
push $N681262c0
push $N681262c0
push $N681262c0
  Group {
   inputs 2
   name ExtendEdge
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 1325
   ypos 662
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.preblur_vector i}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N6813db90 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N681701c0 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N681701c0
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N681701c0
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N681701c0
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N8c0d7360 [stack 0]
push $N8c0d7360
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N6813db90
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{vector_length i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix11
   xpos 1325
   ypos 751
  }
set N8c147e70 [stack 0]
push $N8c147e70
push $N8c147e70
push $N8c147e70
  Group {
   inputs 2
   name ExtendEdge1
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 1509
   ypos 743
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector i}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N8c15aa60 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N8c18d100 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N8c18d100
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N8c18d100
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N8c18d100
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N741002a0 [stack 0]
push $N741002a0
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N8c15aa60
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix12
   xpos 1509
   ypos 823
  }
set N74170de0 [stack 0]
push $N74170de0
push $N74170de0
push $N74170de0
  Group {
   inputs 2
   name ExtendEdge2
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 1695
   ypos 823
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N74183a00 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N741b6030 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N741b6030
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N741b6030
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N741b6030
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N640f01c0 [stack 0]
push $N640f01c0
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N74183a00
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix13
   xpos 1695
   ypos 895
  }
set N64160d00 [stack 0]
push $N64160d00
push $N64160d00
push $N64160d00
  Group {
   inputs 2
   name ExtendEdge3
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 1891
   ypos 895
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N64173920 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N641a5f50 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N641a5f50
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N641a5f50
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N641a5f50
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N5813a0e0 [stack 0]
push $N5813a0e0
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N64173920
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix14
   xpos 1891
   ypos 967
  }
set N581aac10 [stack 0]
push $N581aac10
push $N581aac10
push $N581aac10
  Group {
   inputs 2
   name ExtendEdge4
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 2077
   ypos 967
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N581bd830 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N581efe60 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N581efe60
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N581efe60
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N581efe60
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N50947ff0 [stack 0]
push $N50947ff0
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N581bd830
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix15
   xpos 2077
   ypos 1039
  }
set N509b8b20 [stack 0]
push $N509b8b20
push $N509b8b20
push $N509b8b20
  Group {
   inputs 2
   name ExtendEdge5
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 2263
   ypos 1039
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector i}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N509cb7c0 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N509fddf0 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N509fddf0
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N509fddf0
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N509fddf0
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N5084cf80 [stack 0]
push $N5084cf80
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N509cb7c0
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix16
   xpos 2263
   ypos 1111
  }
set N508bdab0 [stack 0]
push $N508bdab0
push $N508bdab0
push $N508bdab0
  Group {
   inputs 2
   name ExtendEdge6
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 2449
   ypos 1111
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N508d06d0 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N50702cd0 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N50702cd0
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N50702cd0
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N50702cd0
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N50751ea0 [stack 0]
push $N50751ea0
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N508d06d0
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix17
   xpos 2449
   ypos 1183
  }
set N507c29d0 [stack 0]
push $N507c29d0
push $N507c29d0
push $N507c29d0
  Group {
   inputs 2
   name ExtendEdge7
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 2635
   ypos 1183
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N507d55f0 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N50607c40 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N50607c40
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N50607c40
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N50607c40
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N50656db0 [stack 0]
push $N50656db0
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N507d55f0
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix18
   xpos 2635
   ypos 1255
  }
set N506c78f0 [stack 0]
push $N506c78f0
push $N506c78f0
push $N506c78f0
  Group {
   inputs 2
   name ExtendEdge8
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 2829
   ypos 1255
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N506da510 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N5050cb70 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N5050cb70
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N5050cb70
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N5050cb70
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N5055bce0 [stack 0]
push $N5055bce0
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N506da510
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix19
   xpos 2829
   ypos 1327
  }
set N505cc850 [stack 0]
push $N505cc850
push $N505cc850
push $N505cc850
  Group {
   inputs 2
   name ExtendEdge9
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 3023
   ypos 1327
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector i}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N505df450 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N50411aa0 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N50411aa0
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N50411aa0
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N50411aa0
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N50460c10 [stack 0]
push $N50460c10
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N505df450
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix20
   xpos 3023
   ypos 1399
  }
push $N505cc850
push $N506c78f0
push $N507c29d0
push $N508bdab0
push $N509b8b20
push $N581aac10
push $N64160d00
push $N74170de0
push $N8c147e70
push $N6810a630
  Switch {
   inputs 11
   which {{parent.slices}}
   name Switch3
   xpos 2018
   ypos 2365
  }
set N504da890 [stack 0]
  Shuffle {
   in forward
   blue black
   alpha black
   name Shuffle1
   xpos 2116
   ypos 2425
  }
set N504e2f80 [stack 0]
  Expression {
   expr0 (r+1)/2
   expr1 (g+1)/2
   name Expression1
   xpos 2116
   ypos 2476
  }
push $N504e2f80
push $N504da890
  Switch {
   inputs 3
   which {{parent.output}}
   name Switch1
   xpos 2018
   ypos 2500
  }
push $N6810a630
  Dot {
   name Dot22
   xpos 898
   ypos 2459
  }
  Copy {
   inputs 2
   from0 -rgba.alpha
   to0 -rgba.alpha
   channels rgb
   name Copy1
   xpos 2018
   ypos 2544
  }
  Output {
   name Output1
   xpos 2018
   ypos 2644
  }
 end_group
 Premult {
  name Premult4
  xpos -5090
  ypos 452
 }
 Transform {
  translate {0 -150}
  scale 0.8
  center {960 540}
  shutteroffset centred
  name Transform12
  xpos -5090
  ypos 546
 }
push $N680d9180
 Dot {
  name Dot103
  xpos -4462
  ypos 101
 }
 Unpremult {
  name Unpremult1
  xpos -4496
  ypos 163
 }
 Dot {
  name Dot97
  xpos -4462
  ypos 214
 }
set N50346640 [stack 0]
 Dot {
  name Dot95
  xpos -4320
  ypos 214
 }
set N5034b590 [stack 0]
 Grade {
  channels alpha
  whitepoint 0.0005
  black_clamp false
  name Grade3
  xpos -4354
  ypos 314
 }
 Erode {
  size -26
  name Erode9
  xpos -4354
  ypos 352
 }
 Dot {
  name Dot96
  xpos -4320
  ypos 539
 }
push $N50346640
 Dot {
  name Dot98
  xpos -4592
  ypos 214
 }
set N503732f0 [stack 0]
 Dot {
  name Dot102
  xpos -4731
  ypos 214
 }
 Erode {
  channels alpha
  size 10
  name Erode8
  xpos -4765
  ypos 262
 }
 Blur {
  size 2
  name Blur2
  xpos -4765
  ypos 300
 }
 Dot {
  name Dot106
  xpos -4731
  ypos 478
 }
push $N5034b590
 Dot {
  name Dot105
  xpos -4195
  ypos 214
 }
 Dot {
  name Dot104
  xpos -4195
  ypos 478
 }
 Roto {
  inputs 0
  output alpha
  curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44700000 x44070000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x447a4000
        {xc0000000 x40800000}
        {x44698c31 x4473030c}
        {x40000000 xc0800000}
        {x40400000 x40e00000}
        {x44721e7b x42f35555}
        {xc0400000 xc0e00000}
        {x41980000 xc1400000}
        {x42c20000 x42b20000}
        {xc1980000 x41400000}
        {xc28c0000 xc2080000}
        {x42e80000 x446a4000}
        {x428c0000 x42080000}}}
      {cc
       {f 8192}
       {px x447a4000
        {xc0000000 x40800000}
        {x40b59f80 x4081bb00}
        {x40000000 xc0800000}
        {x40400000 x40e00000}
        {x40a79e80 xc0892490}
        {xc0400000 xc0e00000}
        {x41980000 xc1400000}
        {0 0}
        {xc1980000 x41400000}
        {xc28c0000 xc2080000}
        {0 0}
        {x428c0000 x42080000}}}}
     {tx x447a4000 x44053000 x4404c000}
     {a osw x41200000 osf 0 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 tt x40800000}}}}}}
  toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
  toolbar_brush_hardness 0.200000003
  toolbar_source_transform_scale {1 1}
  toolbar_source_transform_center {960 540}
  colorOverlay {0 0 0 0}
  lifetime_type "all frames"
  lifetime_start 1001
  lifetime_end 1001
  motionblur_shutter_offset_type centred
  source_black_outside true
  name Roto6
  xpos -4640
  ypos 403
 }
push $N503732f0
 Mirror2 {
  flop true
  name Mirror2_1
  xpos -4626
  ypos 252
 }
 RotoPaint {
  curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44700000 x44070000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {cubiccurve Smear812 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44764000 x430e999a 1}
       {x44766666 x430b6666 1}
       {x4476a666 x43080000 1}
       {x4476d99a x43050000 1}
       {x44770000 x43010000 1}}}
     {tx x447a4000 x4476a148 x43080000}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear811 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44752666 x43180000 1}
       {x44752666 x43150000 1}
       {x4475c000 x43096666 1}
       {x4476199a x43040000 1}
       {x44766666 x4302999a 1}
       {x44766666 x43076666 1}
       {x44764000 x4309999a 1}}}
     {tx x447a4000 x4475e2bf x430b2492}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear810 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4473e666 x431f999a 1}
       {x4473e666 x431e999a 1}
       {x4473e666 x43166666 1}
       {x44740000 x430d0000 1}
       {x4473c000 x43050000 1}
       {x4473e666 x43036666 1}
       {x4474199a x43066666 1}}}
     {tx x447a4000 x4473ebe2 x43100ea1}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear809 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4471d99a x431a6666 1}
       {x44718000 x43160000 1}
       {x44716666 x4314999a 1}
       {x44716666 x430c999a 1}
       {x44716666 x4308999a 1}
       {x44718000 x43056666 1}
       {x4471c000 x4301999a 1}}}
     {tx x447a4000 x44718af9 x430de2be}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear808 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4471599a x431f6666 1}
       {x4470d99a x431b6666 1}
       {x4470c000 x43190000 1}
       {x4470599a x430c999a 1}
       {x44706666 x43066666 1}
       {x4470a666 x4305999a 1}
       {x4470d99a x43080000 1}}}
     {tx x447a4000 x4470be2d x4310a0ea}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear807 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44736666 x431f6666 1}
       {x44730000 x43186666 1}
       {x4472c000 x4313999a 1}
       {x44722666 x43086666 1}
       {x4472199a x4301999a 1}
       {x4472199a x42fc0000 1}}}
     {tx x447a4000 x44729555 x430de667}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear806 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446ae666 x431c0000 1}
       {x446ad99a x431b0000 1}
       {x446aa666 x430f0000 1}
       {x446aa666 x43060000 1}
       {x446ba666 x42f40000 1}
       {x446c6666 x42f13333 1}}}
     {tx x447a4000 x446b2ef0 x430a6eef}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear805 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4468c000 x4316999a 1}
       {x4468a666 x4315999a 1}
       {x44688000 x430d999a 1}
       {x4468999a x43096666 1}
       {x4468e666 x43016666 1}
       {x44696666 x42f73333 1}}}
     {tx x447a4000 x4468cccd x430ab333}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear804 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44696666 x431a999a 1}
       {x44694000 x4318999a 1}
       {x44692666 x430f0000 1}
       {x44694000 x430a6666 1}
       {x44692666 x43016666 1}
       {x44692666 x42fc0000 1}
       {x4469199a x42fecccd 1}}}
     {tx x447a4000 x44693507 x430ac57d}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear803 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4469d99a x431e999a 1}
       {x4469c000 x431d6666 1}
       {x44696666 x430e0000 1}
       {x44696666 x430b0000 1}
       {x4469599a x43040000 1}
       {x44692666 x4304999a 1}
       {x4468e666 x43076666 1}}}
     {tx x447a4000 x44696667 x430e6db7}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear802 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4469999a x43220000 1}
       {x44696666 x431c999a 1}
       {x44698000 x43120000 1}
       {x4469999a x430d6666 1}
       {x4469999a x4308999a 1}
       {x4469a666 x4305999a 1}
       {x4469999a x43070000 1}
       {x44696666 x430a6666 1}}}
     {tx x447a4000 x44698b33 x430fb333}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear801 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446a2666 x4323999a 1}
       {x4469d99a x4314999a 1}
       {x4469d99a x430d0000 1}
       {x4469d99a x43056666 1}
       {x4469e666 x43046666 1}
       {x4469c000 x43060000 1}
       {x44694000 x430c0000 1}}}
     {tx x447a4000 x4469cccd x430ddb6e}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear800 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446c199a x4321999a 1}
       {x446bc000 x43200000 1}
       {x446b999a x4317999a 1}
       {x446b999a x43130000 1}
       {x446b8000 x43066666 1}
       {x446b8000 x4303999a 1}
       {x446b999a x43020000 1}
       {x446b599a x43056666 1}
       {x446b2666 x43076666 1}
       {x446ad99a x4309999a 1}}}
     {tx x447a4000 x446b8000 x430e428f}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear799 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446b4000 x4320999a 1}
       {x446ae666 x431d999a 1}
       {x446ac000 x43146666 1}
       {x446a999a x4306999a 1}
       {x446ac000 x43010000 1}
       {x446ae666 x4302999a 1}
       {x446ae666 x43066666 1}}}
     {tx x447a4000 x446add42 x430e2be3}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear798 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446c6666 x43206666 1}
       {x446c199a x43106666 1}
       {x446bd99a x430a999a 1}
       {x446b4000 x43010000 1}
       {x446b4000 x42fccccd 1}
       {x446b599a x42facccd 1}
       {x446b599a x42ff3333 1}
       {x446b599a x43040000 1}
       {x446ae666 x430c6666 1}}}
     {tx x447a4000 x446b8887 x430805b1}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear797 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446d2666 x43216666 1}
       {x446cd99a x431e6666 1}
       {x446cc000 x4310999a 1}
       {x446ca666 x430a0000 1}
       {x446c999a x43010000 1}
       {x446c999a x43000000 1}
       {x446ca666 x43016666 1}
       {x446c8000 x43056666 1}}}
     {tx x447a4000 x446cb800 x430c4667}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear796 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446ed99a x431e6666 1}
       {x446e8000 x431d0000 1}
       {x446e4000 x4313999a 1}
       {x446e4000 x43106666 1}
       {x446e6666 x43040000 1}
       {x446e8000 x4300999a 1}
       {x446e599a x43050000 1}}}
     {tx x447a4000 x446e715f x430f0000}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear795 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446f0000 x431c6666 1}
       {x446ed99a x43186666 1}
       {x446e8000 x430e999a 1}
       {x446e4000 x430a6666 1}
       {x446e2666 x43066666 1}
       {x446e4000 x43020000 1}
       {x446e2666 x43060000 1}}}
     {tx x447a4000 x446e7333 x430d2be2}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear794 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446e199a x43236666 1}
       {x446e199a x4324999a 1}
       {x446e4000 x43230000 1}
       {x446e599a x431c999a 1}
       {x446e599a x4318999a 1}
       {x446e599a x43146666 1}
       {x446e599a x43096666 1}
       {x446e8000 x43046666 1}
       {x446ea666 x43026666 1}
       {x446ec000 x4303999a 1}
       {x446ec000 x4304999a 1}}}
     {tx x447a4000 x446e68ba x4312a2e9}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear793 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44707333 x43226666 1}
       {x44707333 x43216666 1}
       {x4470599a x43143333 1}
       {x44706666 x430c999a 1}
       {x44706666 x4303cccd 1}
       {x4470599a x43006666 1}
       {x4470199a x43003333 1}}}
     {tx x447a4000 x44705b6e x430effff}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear792 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44716666 x4322cccd 1}
       {x44717333 x431a6666 1}
       {x4471a666 x4311cccd 1}
       {x44717333 x430b0000 1}
       {x4470cccd x43026666 1}
       {x44706666 x4304cccd 1}}}
     {tx x447a4000 x44713111 x43103333}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear791 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4473999a x4325cccd 1}
       {x4472999a x431a6666 1}
       {x44728ccd x43150000 1}
       {x44726666 x430b999a 1}
       {x4472199a x4305cccd 1}
       {x4471e666 x43080000 1}}}
     {tx x447a4000 x44728667 x43126eef}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear790 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44740ccd x4324999a 1}
       {x4473e666 x4323cccd 1}
       {x4473cccd x431c3333 1}
       {x4473cccd x43176666 1}
       {x44738ccd x430a6666 1}
       {x4473599a x4305cccd 1}
       {x44734ccd x4309999a 1}}}
     {tx x447a4000 x4473adb7 x43156667}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear789 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4474c000 x4323cccd 1}
       {x44744000 x431b3333 1}
       {x44744000 x4314cccd 1}
       {x44744000 x430c0000 1}
       {x44746666 x43066666 1}
       {x44748ccd x4307cccd 1}}}
     {tx x447a4000 x44746889 x43125555}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear788 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4475a666 x4322999a 1}
       {x44754ccd x43233333 1}
       {x4475199a x431d999a 1}
       {x4475199a x43166666 1}
       {x44750ccd x430d0000 1}
       {x44750000 x43066666 1}
       {x44750000 x43056666 1}
       {x4474f333 x4308cccd 1}}}
     {tx x447a4000 x447524cd x43136ccd}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear787 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44773333 x43246666 1}
       {x44770000 x43226666 1}
       {x44770000 x431ecccd 1}
       {x44770000 x43150000 1}
       {x4476c000 x430acccd 1}
       {x4476c000 x4304999a 1}
       {x4476a666 x43060000 1}
       {x44768000 x43076666 1}}}
     {tx x447a4000 x4476db33 x4312eccd}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear786 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4477d99a x43243333 1}
       {x4477d99a x4322cccd 1}
       {x4477f333 x43200000 1}
       {x44783333 x43196666 1}
       {x44784000 x4311cccd 1}
       {x44783333 x430a0000 1}
       {x44783333 x4307999a 1}
       {x4478199a x43093333 1}}}
     {tx x447a4000 x44781333 x4315a000}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear785 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44762666 x43243333 1}
       {x44763333 x4322cccd 1}
       {x4476599a x4320999a 1}
       {x4476c000 x431a3333 1}
       {x4476cccd x4310cccd 1}
       {x4476cccd x430a0000 1}
       {x4476d99a x43063333 1}
       {x44770ccd x43083333 1}}}
     {tx x447a4000 x44769e67 x43155fff}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear784 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447f999a x4322cccd 1}
       {x447f7333 x4321cccd 1}
       {x447f7333 x431ecccd 1}
       {x447f8000 x4318999a 1}
       {x447f8000 x430f6666 1}
       {x447f8000 x4309999a 1}
       {x447f8000 x43066666 1}
       {x447fa666 x43046666 1}}}
     {tx x447a4000 x447f84cd x4313f99a}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear783 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4478a666 x431a3333 1}
       {x44787333 x43176666 1}
       {x44784000 x430fcccd 1}
       {x4478b333 x430a6666 1}
       {x4479599a x4306cccd 1}}}
     {tx x447a4000 x4478ae15 x4310851e}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear782 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447a0ccd x431e6666 1}
       {x447a2666 x4321cccd 1}
       {x4479d99a x431d999a 1}
       {x44798000 x4312cccd 1}
       {x44790000 x430b0000 1}
       {x4478f333 x4309999a 1}
       {x4478f333 x430b999a 1}
       {x4478f333 x43106666 1}
       {x4478d99a x43193333 1}
       {x4478f333 x431f999a 1}
       {x4478599a x43163333 1}
       {x4477f333 x430c0000 1}
       {x4477f333 x430a3333 1}
       {x44782666 x43096666 1}
       {x44783333 x430a6666 1}
       {x44784000 x430d6666 1}}}
     {tx x447a4000 x4478e0cc x43127998}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear781 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447af333 x43203333 1}
       {x447aa666 x431f0000 1}
       {x447a4ccd x4311cccd 1}
       {x447a4ccd x430d3333 1}
       {x447a4ccd x43076666 1}
       {x447a6666 x4308999a 1}
       {x447a0ccd x43113333 1}
       {x447a0000 x4312999a 1}}}
     {tx x447a4000 x447a5e67 x43124000}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear780 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447ac000 x43220000 1}
       {x447ac000 x43233333 1}
       {x447a7333 x43213333 1}
       {x447a4ccd x4315999a 1}
       {x447a2666 x430c3333 1}
       {x447a199a x43093333 1}
       {x447a199a x4306cccd 1}
       {x447a2666 x4308cccd 1}
       {x447a2666 x430c6666 1}}}
     {tx x447a4000 x447a527c x43134445}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear779 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447be666 x43226666 1}
       {x447b8000 x431d6666 1}
       {x447b3333 x43130000 1}
       {x447b0000 x430a3333 1}
       {x447b0000 x43056666 1}
       {x447b2666 x430a0000 1}}}
     {tx x447a4000 x447b4aab x43121111}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear778 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447c4000 x4325cccd 1}
       {x447bc000 x431f6666 1}
       {x447bb333 x43193333 1}
       {x447ba666 x430dcccd 1}
       {x447b8ccd x4306999a 1}
       {x447bb333 x4304cccd 1}
       {x447be666 x43066666 1}
       {x447c0ccd x430a6666 1}}}
     {tx x447a4000 x447bd19a x43110ccd}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear777 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447f999a x43160000 1}
       {x447f6666 x430e999a 1}
       {x447f7333 x43093333 1}
       {x447fc000 x43050000 1}
       {x447f8000 x4305cccd 1}}}
     {tx x447a4000 x447f8a3d x430b51eb}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear776 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447f199a x4317cccd 1}
       {x447f0ccd x4316999a 1}
       {x447f199a x4310999a 1}
       {x447f4000 x430d999a 1}
       {x447f4ccd x4308999a 1}
       {x447f4ccd x43076666 1}
       {x447f4000 x4308999a 1}}}
     {tx x447a4000 x447f3160 x430e7508}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear775 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447ef333 x431c999a 1}
       {x447f0ccd x4317cccd 1}
       {x447f2666 x4314999a 1}
       {x447f4ccd x4310999a 1}
       {x447f599a x430dcccd 1}
       {x447f6666 x430a0000 1}
       {x447f7333 x43090000 1}
       {x447f7333 x430a6666 1}}}
     {tx x447a4000 x447f4333 x4310999a}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear774 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447e4000 x4318cccd 1}
       {x447e4ccd x431a6666 1}
       {x447e599a x43193333 1}
       {x447e599a x43170000 1}
       {x447e599a x43116666 1}
       {x447e599a x430c3333 1}
       {x447e599a x430b0000 1}
       {x447e6666 x430c3333 1}}}
     {tx x447a4000 x447e5666 x43130666}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear773 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447e599a x43200000 1}
       {x447e3333 x431d0000 1}
       {x447e0ccd x4316999a 1}
       {x447df333 x4310cccd 1}
       {x447df333 x430b0000 1}
       {x447e0ccd x430c999a 1}}}
     {tx x447a4000 x447e1778 x4314aaab}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear772 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447d0000 x43253333 1}
       {x447d3333 x4323cccd 1}
       {x447d8ccd x431ccccd 1}
       {x447d8ccd x4319cccd 1}
       {x447d8ccd x43133333 1}
       {x447d8ccd x43116666 1}
       {x447d8ccd x430c3333 1}
       {x447d999a x430b0000 1}
       {x447db333 x430dcccd 1}}}
     {tx x447a4000 x447d78e4 x43165b05}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear771 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4480599a x431fcccd 1}
       {x44804000 x431d999a 1}
       {x44804000 x431a3333 1}
       {x44805333 x4312cccd 1}
       {x4480599a x43096666 1}
       {x4480599a x43053333 1}
       {x44804000 x4301999a 1}
       {x4480399a x42fe0000 1}}}
     {tx x447a4000 x44804b33 x430f3334}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear770 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44810ccd x43213333 1}
       {x4480e666 x431c3333 1}
       {x4480e666 x4318cccd 1}
       {x4480f99a x430f6666 1}
       {x4480e666 x43066666 1}
       {x4480e666 x4304cccd 1}
       {x4480cccd x43060000 1}
       {x4480c000 x43073333 1}}}
     {tx x447a4000 x4480e59a x430fc000}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear769 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4480f99a x43286666 1}
       {x4480c666 x43240000 1}
       {x4480c666 x431e999a 1}
       {x4480e000 x4315cccd 1}
       {x4480cccd x430c999a 1}
       {x4480cccd x43090000 1}
       {x4480eccd x43090000 1}
       {x4480e666 x430acccd 1}}}
     {tx x447a4000 x4480da66 x43154667}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear768 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4481f99a x432b6666 1}
       {x4481eccd x4329cccd 1}
       {x4481c666 x43263333 1}
       {x44818000 x431ecccd 1}
       {x44812ccd x43140000 1}
       {x4481199a x430d999a 1}
       {x4481199a x430c0000 1}
       {x44812000 x430dcccd 1}}}
     {tx x447a4000 x4481759a x431ab334}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear767 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44836666 x43290000 1}
       {x4483f333 x43136666 1}
       {x4483e666 x43116666 1}
       {x4483c000 x430e0000 1}
       {x4483a666 x430c0000 1}}}
     {tx x447a4000 x4483bae2 x4314c28f}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear766 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44834000 x432a3333 1}
       {x44834666 x432b6666 1}
       {x44836000 x43283333 1}
       {x44837333 x4322999a 1}
       {x44838ccd x431e3333 1}
       {x4483a000 x431acccd 1}
       {x4483a666 x43146666 1}
       {x4483999a x430fcccd 1}
       {x44838000 x430c6666 1}}}
     {tx x447a4000 x44837999 x431d8e3a}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear765 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4481a000 x4322999a 1}
       {x4481a666 x4323cccd 1}
       {x4481999a x4322cccd 1}
       {x44818666 x43176666 1}
       {x4481b333 x430d999a 1}
       {x44820000 x4308999a 1}
       {x44821333 x430acccd 1}}}
     {tx x447a4000 x4481bd42 x431715f1}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear764 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44826ccd x43226666 1}
       {x44820ccd x431b999a 1}
       {x4481f333 x4312cccd 1}
       {x4481eccd x43100000 1}
       {x4481d99a x430b6666 1}
       {x4481c000 x4307cccd 1}
       {x4481a000 x4308cccd 1}
       {x44816ccd x430d999a 1}}}
     {tx x447a4000 x4481e000 x43114ccc}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear763 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44826000 x4325cccd 1}
       {x4482399a x4325999a 1}
       {x44822666 x43196666 1}
       {x4482399a x43130000 1}
       {x4482599a x430b999a 1}
       {x44826666 x43090000 1}
       {x4482599a x430b6666 1}
       {x44824ccd x430d3333 1}}}
     {tx x447a4000 x44824c00 x4314a000}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear762 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4482b99a x4326999a 1}
       {x4482accd x4320999a 1}
       {x4482d333 x431a0000 1}
       {x44832000 x430f0000 1}
       {x4483399a x4307cccd 1}
       {x4482e000 x430c3333 1}}}
     {tx x447a4000 x4482e889 x43160889}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear761 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4484199a x431c999a 1}
       {x4483f333 x43176666 1}
       {x4483f99a x430d3333 1}
       {x44841333 x43080000 1}
       {x44841333 x4306cccd 1}
       {x4483c666 x4308cccd 1}}}
     {tx x447a4000 x4483fddd x430ecccd}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear760 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44839333 x4324cccd 1}
       {x44836ccd x4322999a 1}
       {x44836000 x4317999a 1}
       {x4483799a x4310999a 1}
       {x44839333 x430b0000 1}
       {x44835333 x430d3333 1}}}
     {tx x447a4000 x44837555 x4316a223}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear759 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44831333 x4325cccd 1}
       {x44830ccd x431c999a 1}
       {x44831333 x43196666 1}
       {x44832ccd x43100000 1}
       {x44833333 x430b6666 1}
       {x44830666 x430f6666 1}}}
     {tx x447a4000 x44831999 x43166ef0}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear758 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4484a000 x43283333 1}
       {x4484599a x43273333 1}
       {x44842000 x431e999a 1}
       {x44842666 x431a0000 1}
       {x44848666 x430fcccd 1}
       {x4484a666 x430b999a 1}
       {x44848666 x430c0000 1}}}
     {tx x447a4000 x44846be3 x43190ea1}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear757 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4486599a x43256666 1}
       {x4486399a x431d3333 1}
       {x4486399a x43190000 1}
       {x44866666 x43103333 1}
       {x44867333 x43093333 1}
       {x44866ccd x43080000 1}
       {x4486399a x430a3333 1}}}
     {tx x447a4000 x4486541e x43135075}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear756 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4484e666 x4324999a 1}
       {x4484cccd x4322cccd 1}
       {x4484a000 x4315999a 1}
       {x4484799a x430d999a 1}
       {x44847333 x43080000 1}
       {x44847333 x430a0000 1}
       {x44847333 x430bcccd 1}}}
     {tx x447a4000 x448497c6 x43137c58}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear755 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44850000 x43236666 1}
       {x4484accd x43166666 1}
       {x4484a666 x43120000 1}
       {x4484a000 x430c0000 1}
       {x4484accd x430acccd 1}
       {x4484accd x430c3333 1}
       {x4484accd x430ecccd 1}
       {x4484a666 x43156666 1}}}
     {tx x447a4000 x4484b3ff x43126000}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear754 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44852ccd x4326999a 1}
       {x4484e000 x43180000 1}
       {x4484d99a x43136666 1}
       {x4484d333 x430b0000 1}
       {x4484d333 x430c3333 1}
       {x4484accd x4310cccd 1}}}
     {tx x447a4000 x4484deef x43145555}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear753 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44858666 x43276666 1}
       {x44858666 x4328999a 1}
       {x44854666 x431f6666 1}
       {x44854666 x4314999a 1}
       {x44855333 x430c0000 1}
       {x44855333 x43096666 1}
       {x44854666 x430d6666 1}
       {x44853333 x43106666 1}}}
     {tx x447a4000 x44855733 x4316e667}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear752 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4485a000 x4324999a 1}
       {x4485accd x43263333 1}
       {x4485accd x43186666 1}
       {x4485b99a x430c999a 1}
       {x4485cccd x43093333 1}
       {x4485d333 x43080000 1}
       {x4485b333 x430d999a 1}
       {x4485a000 x430ecccd 1}}}
     {tx x447a4000 x4485b4cc x4313accd}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear751 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44866ccd x43286666 1}
       {x44862000 x43213333 1}
       {x44862000 x431f999a 1}
       {x4486199a x431c0000 1}
       {x44860ccd x4311999a 1}
       {x44860ccd x430a3333 1}
       {x4485e666 x430c0000 1}
       {x4485c000 x430f0000 1}}}
     {tx x447a4000 x448610cd x43178000}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear750 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44876ccd x43246666 1}
       {x44873333 x431b999a 1}
       {x44872666 x43150000 1}
       {x44870ccd x430dcccd 1}
       {x44870666 x4308999a 1}
       {x44870000 x4309999a 1}
       {x4486d99a x430d999a 1}}}
     {tx x447a4000 x44871999 x4312a83a}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear749 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4487599a x43286666 1}
       {x44874ccd x43263333 1}
       {x44874ccd x431e3333 1}
       {x44875333 x43190000 1}
       {x44876000 x430dcccd 1}
       {x4487799a x4308cccd 1}
       {x44878000 x4307cccd 1}
       {x44876000 x430a6666 1}}}
     {tx x447a4000 x44876000 x4315d333}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear748 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4487f333 x43233333 1}
       {x4487e000 x4320999a 1}
       {x4487d333 x43190000 1}
       {x4487b333 x43100000 1}
       {x4487a666 x430b6666 1}
       {x4487a666 x4308cccd 1}
       {x44879333 x430acccd 1}}}
     {tx x447a4000 x4487bf16 x4313f8af}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear747 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44886666 x43260000 1}
       {x44885333 x43210000 1}
       {x44884ccd x431bcccd 1}
       {x44884000 x43140000 1}
       {x44882000 x430b6666 1}
       {x44882000 x43080000 1}
       {x4488199a x43093333 1}}}
     {tx x447a4000 x44883b6e x43150ea0}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear746 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4488999a x43286666 1}
       {x4488999a x431f999a 1}
       {x4488a666 x431b3333 1}
       {x4488cccd x4312999a 1}
       {x4488eccd x430bcccd 1}
       {x4488eccd x430a6666 1}
       {x4488cccd x430bcccd 1}}}
     {tx x447a4000 x4488c1d4 x4315af8b}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear745 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44894000 x432bcccd 1}
       {x44890000 x43210000 1}
       {x4488f333 x4318999a 1}
       {x4488eccd x43103333 1}
       {x4488f99a x430b999a 1}
       {x4488e666 x430d6666 1}}}
     {tx x447a4000 x44890000 x4317c444}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear744 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4489accd x4325999a 1}
       {x44899333 x43206666 1}
       {x44899333 x431a3333 1}
       {x44899333 x43130000 1}
       {x44899333 x430c999a 1}
       {x44898000 x43103333 1}}}
     {tx x447a4000 x44899445 x43180001}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear743 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4489eccd x43296666 1}
       {x4489accd x43213333 1}
       {x4489accd x431e6666 1}
       {x4489a666 x4314999a 1}
       {x4489a666 x430d999a 1}
       {x4489a666 x430fcccd 1}}}
     {tx x447a4000 x4489b445 x4319d555}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear742 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448a8666 x432e0000 1}
       {x448a599a x432b3333 1}
       {x448a599a x43210000 1}
       {x448a6666 x431c999a 1}
       {x448a6666 x4313999a 1}
       {x448a6666 x430e999a 1}
       {x448a6666 x430d6666 1}
       {x448a599a x43106666 1}
       {x448a4000 x4312999a 1}}}
     {tx x447a4000 x448a616c x4319eeef}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear741 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448b9333 x4323cccd 1}
       {x448bb333 x431d999a 1}
       {x448be000 x43146666 1}
       {x448be000 x43106666 1}
       {x448be000 x430b6666 1}
       {x448bb333 x430c3333 1}}}
     {tx x447a4000 x448bc445 x4314f777}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear740 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448bc000 x43220000 1}
       {x448bb333 x43200000 1}
       {x448baccd x43193333 1}
       {x448bc000 x4315cccd 1}
       {x448bd333 x43106666 1}
       {x448be000 x430c6666 1}
       {x448bd333 x430e0000 1}}}
     {tx x447a4000 x448bc57d x431641d5}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear739 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448b399a x432a3333 1}
       {x448b2000 x43290000 1}
       {x448b1333 x4326999a 1}
       {x448b1333 x431c999a 1}
       {x448af99a x43146666 1}
       {x448af333 x43116666 1}
       {x448af333 x43130000 1}}}
     {tx x447a4000 x448b0db7 x431d999a}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear738 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448b8000 x432bcccd 1}
       {x448b6ccd x432d0000 1}
       {x448b4ccd x4329999a 1}
       {x448b1333 x43236666 1}
       {x448af99a x43213333 1}
       {x448ae666 x431c999a 1}
       {x448ae000 x4314cccd 1}
       {x448ae666 x43106666 1}
       {x448ae000 x43123333 1}}}
     {tx x447a4000 x448b1778 x431f71c8}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear737 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448daccd x43270000 1}
       {x448da000 x431db333 1}
       {x448db333 x431a199a 1}
       {x448dc333 x4315cccd 1}
       {x448dd333 x4314b333 1}}}
     {tx x447a4000 x448db7ae x431b75c3}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear736 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448deccd x432ae666 1}
       {x448db333 x4329199a 1}
       {x448daccd x4326199a 1}
       {x448dd000 x431e3333 1}
       {x448dd333 x4318b333 1}
       {x448dd99a x4317199a 1}
       {x448deccd x4318b333 1}}}
     {tx x447a4000 x448dd0ea x43201d41}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear735 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448cc666 x4326cccd 1}
       {x448c999a x43233333 1}
       {x448cd333 x431b6666 1}
       {x448cfccd x43193333 1}}}
     {tx x447a4000 x448ccc00 x431fa666}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear734 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448cc333 x4329999a 1}
       {x448c5ccd x43258000 1}
       {x448c5666 x4319999a 1}
       {x448c6ccd x4317999a 1}
       {x448c7ccd x43190000 1}
       {x448ca666 x431d199a 1}}}
     {tx x447a4000 x448c8111 x431e6667}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear733 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448d5666 x432db333 1}
       {x448cfccd x432a6666 1}
       {x448ce000 x43213333 1}
       {x448cf000 x431a999a 1}
       {x448cfccd x43193333 1}
       {x448cfccd x431b6666 1}
       {x448ce99a x4321cccd 1}
       {x448cd333 x4329999a 1}
       {x448cbccd x432cb333 1}
       {x448c9000 x432b6666 1}
       {x448c6000 x4323e666 1}
       {x448c5ccd x431b0000 1}
       {x448c7333 x4318b333 1}
       {x448c9333 x431eb333 1}}}
     {tx x447a4000 x448cc78b x43227333}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear732 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448df000 x432ae666 1}
       {x448db99a x432c8000 1}
       {x448d9666 x4321999a 1}
       {x448d899a x431d8000 1}
       {x448d8333 x4319999a 1}
       {x448d8333 x431a999a 1}
       {x448d7333 x431f199a 1}
       {x448d6333 x43224ccd 1}}}
     {tx x447a4000 x448d94cd x43218333}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear731 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448e2333 x432b3333 1}
       {x448e0333 x432a0000 1}
       {x448df666 x4326199a 1}
       {x448df666 x43206666 1}
       {x448df666 x4319b333 1}
       {x448e0666 x4316b333 1}
       {x448e0ccd x4318e666 1}
       {x448e1333 x431d199a 1}}}
     {tx x447a4000 x448e0600 x43204333}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear730 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448e5333 x432b199a 1}
       {x448e4666 x432c199a 1}
       {x448e299a x432a6666 1}
       {x448e2333 x4326cccd 1}
       {x448e2333 x43220000 1}
       {x448e299a x431e3333 1}
       {x448e3000 x431b0000 1}
       {x448e4666 x4317cccd 1}
       {x448e5333 x4319999a 1}
       {x448e4666 x431e6666 1}}}
     {tx x447a4000 x448e39eb x4321f0a4}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear729 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448ec333 x432a0000 1}
       {x448ec333 x432bcccd 1}
       {x448ec333 x432a8000 1}
       {x448ed666 x43236666 1}
       {x448ec99a x431c199a 1}
       {x448ec000 x4318b333 1}
       {x448eaccd x431a8000 1}
       {x448e8666 x431f999a 1}}}
     {tx x447a4000 x448ebb99 x43225333}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear728 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448fa99a x4327b333 1}
       {x448fa333 x431f199a 1}
       {x448f999a x43190000 1}
       {x448f9333 x43180000 1}
       {x448f7ccd x4319999a 1}
       {x448f5333 x431c6666 1}}}
     {tx x447a4000 x448f8c44 x431cf778}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear727 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448fa99a x4326cccd 1}
       {x448fb000 x4329199a 1}
       {x448fc000 x43248000 1}
       {x448fc000 x4320e666 1}
       {x448fb000 x431b6666 1}
       {x448fb000 x43190000 1}
       {x448fb333 x431bb333 1}}}
     {tx x447a4000 x448fb41d x4320c57d}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear726 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448ee666 x43303333 1}
       {x448f099a x432c199a 1}
       {x448f3666 x4328999a 1}
       {x448f4ccd x4321999a 1}
       {x448f4ccd x431a999a 1}
       {x448f699a x4317cccd 1}
       {x448f7ccd x4318e666 1}
       {x448f8ccd x431bb333 1}}}
     {tx x447a4000 x448f4666 x4321afff}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear725 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44902666 x4326999a 1}
       {x44902000 x4324cccd 1}
       {x44903333 x431db333 1}
       {x44904333 x431b8000 1}}}
     {tx x447a4000 x44902f33 x43212667}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear724 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44907ccd x43298000 1}
       {x44906ccd x4324999a 1}
       {x44906666 x431ccccd 1}
       {x44906000 x431b6666 1}
       {x4490599a x4319b333 1}
       {x44905000 x431c6666 1}
       {x4490499a x431de666 1}}}
     {tx x447a4000 x44906075 x431f2f8b}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear723 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44908666 x432c4ccd 1}
       {x44906ccd x4324999a 1}
       {x44906000 x4321999a 1}
       {x44904333 x431c6666 1}
       {x44905000 x431f8000 1}}}
     {tx x447a4000 x44906148 x4322e148}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear722 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4490e99a x432d3333 1}
       {x4490d99a x4324199a 1}
       {x4490d99a x4320e666 1}
       {x4490d99a x431c999a 1}
       {x4490c000 x431e0000 1}
       {x4490b666 x43208000 1}}}
     {tx x447a4000 x4490d223 x43223777}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear721 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44912333 x432e199a 1}
       {x44910666 x4326cccd 1}
       {x44910666 x4321999a 1}
       {x44910000 x431d8000 1}
       {x44910000 x431c3333 1}
       {x4490f000 x431e6666 1}
       {x4490e333 x4321199a 1}}}
     {tx x447a4000 x44910075 x43223e2b}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear720 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4491a000 x432ce666 1}
       {x44919000 x43266666 1}
       {x4491899a x4322199a 1}
       {x44916ccd x431d0000 1}
       {x44916000 x431b6666 1}
       {x44916000 x431d199a 1}
       {x4491499a x43213333 1}}}
     {tx x447a4000 x44917492 x4321ba83}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear719 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4491c666 x432db333 1}
       {x4491b000 x432b3333 1}
       {x4491b666 x43286666 1}
       {x4491cccd x4321199a 1}
       {x4491cccd x431ccccd 1}
       {x4491c666 x431b8000 1}
       {x4491accd x431d4ccd 1}
       {x4491a000 x431f999a 1}}}
     {tx x447a4000 x4491bb32 x4322f333}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear718 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44926666 x432cb333 1}
       {x44929000 x4326cccd 1}
       {x4492accd x4322b333 1}
       {x4492c333 x431d199a 1}
       {x4492d333 x431a4ccd 1}
       {x4492c333 x431b3333 1}
       {x4492a666 x431c199a 1}}}
     {tx x447a4000 x4492a99a x4320b333}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear717 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44924ccd x432f3333 1}
       {x44924666 x43303333 1}
       {x4492399a x432a0000 1}
       {x4492399a x4325e666 1}
       {x4492399a x431ee666 1}
       {x4492399a x431be666 1}
       {x4492399a x431db333 1}}}
     {tx x447a4000 x44923e2b x4325af8b}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear716 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4492accd x432e999a 1}
       {x44926333 x43294ccd 1}
       {x44926333 x4323e666 1}
       {x44926666 x431de666 1}
       {x44927333 x431be666 1}
       {x44925666 x431de666 1}}}
     {tx x447a4000 x44927088 x43234000}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear715 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44930333 x432f3333 1}
       {x4492c333 x43263333 1}
       {x4492c333 x43224ccd 1}
       {x4492c333 x431d0000 1}
       {x4492c333 x431b8000 1}
       {x4492c333 x431de666 1}}}
     {tx x447a4000 x4492cdde x43225999}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear714 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44938ccd x43318000 1}
       {x44938000 x432cb333 1}
       {x44938666 x432a3333 1}
       {x44938666 x4323b333 1}
       {x44938000 x43224ccd 1}
       {x44937333 x43203333 1}
       {x44937000 x431ee666 1}
       {x44936333 x43206666 1}
       {x44935333 x4321999a 1}}}
     {tx x447a4000 x44937777 x4325471c}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear713 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44938666 x4332999a 1}
       {x44939666 x432e999a 1}
       {x44939666 x432bcccd 1}
       {x4493a333 x43266666 1}
       {x4493b333 x43220000 1}
       {x4493c99a x431eb333 1}
       {x4493d666 x4320b333 1}}}
     {tx x447a4000 x4493aa83 x43278af9}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear712 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44944ccd x432e8000 1}
       {x44942ccd x4326999a 1}
       {x44942ccd x4322e666 1}
       {x44942ccd x431f199a 1}}}
     {tx x447a4000 x449434cd x4325c666}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear711 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44948666 x432d6666 1}
       {x44946000 x43266666 1}
       {x44946000 x43236666 1}
       {x4494599a x43203333 1}
       {x44945333 x4321999a 1}}}
     {tx x447a4000 x449463d7 x43250000}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear710 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4494c000 x4331199a 1}
       {x4494a99a x432a3333 1}
       {x4494b333 x4327199a 1}
       {x4494b333 x43236666 1}
       {x4494b000 x43253333 1}}}
     {tx x447a4000 x4494b333 x4328999a}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear709 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4494e666 x4331b333 1}
       {x4494cccd x432b6666 1}
       {x4494cccd x4328999a 1}
       {x4494cccd x43258000 1}
       {x4494d000 x4323e666 1}
       {x4494e333 x4326199a 1}}}
     {tx x447a4000 x4494d555 x4328dddd}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear708 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44956000 x4331199a 1}
       {x4495399a x432f6666 1}
       {x44952ccd x432d6666 1}
       {x44952ccd x4328999a 1}
       {x44952ccd x43266666 1}
       {x44952ccd x43233333 1}
       {x44954333 x43248000 1}}}
     {tx x447a4000 x44953925 x4329cccd}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear707 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4495e99a x4333199a 1}
       {x4495b000 x432db333 1}
       {x4495b000 x432a8000 1}
       {x4495b666 x4325b333 1}
       {x4495b666 x4322b333 1}
       {x4495b666 x43248000 1}}}
     {tx x447a4000 x4495bccd x43295dde}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear706 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44961000 x4331b333 1}
       {x4495dccd x432d0000 1}
       {x4495dccd x4329999a 1}
       {x4495e99a x43253333 1}
       {x44960000 x43230000 1}
       {x44961666 x4325e666 1}}}
     {tx x447a4000 x4495f6ef x43291111}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear705 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44968333 x4332e666 1}
       {x44962666 x432a6666 1}
       {x44962ccd x4326999a 1}
       {x4496499a x43230000 1}
       {x44967333 x43244ccd 1}}}
     {tx x447a4000 x449650a4 x4328a3d7}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear704 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44971ccd x4332999a 1}
       {x4496d333 x432d3333 1}
       {x4496d333 x4328e666 1}
       {x4496e99a x4323e666 1}
       {x44970000 x4321999a 1}
       {x44970666 x43236666 1}
       {x4496fccd x4324999a 1}}}
     {tx x447a4000 x4496f493 x4327be2b}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear703 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44975ccd x4332b333 1}
       {x4497299a x4331199a 1}
       {x44970000 x43280000 1}
       {x44970666 x43258000 1}
       {x4497199a x4322199a 1}
       {x44974000 x43244ccd 1}}}
     {tx x447a4000 x44972667 x43294889}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear702 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4497bccd x4331b333 1}
       {x44976666 x4329cccd 1}
       {x44976ccd x43270000 1}
       {x4497a666 x43220000 1}
       {x4497b99a x43244ccd 1}}}
     {tx x447a4000 x44979666 x432828f6}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear701 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4497b99a x4330999a 1}
       {x4497b99a x432f6666 1}
       {x4497b99a x432ce666 1}
       {x4497c99a x43250000 1}
       {x4497e000 x4322e666 1}
       {x4497eccd x43253333 1}}}
     {tx x447a4000 x4497cb33 x4329aaab}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear700 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4497c99a x4330199a 1}
       {x4497d000 x432d3333 1}
       {x4497d99a x4325e666 1}
       {x4497f000 x43216666 1}
       {x4498199a x431d0000 1}}}
     {tx x447a4000 x4497e5c3 x4326b852}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear699 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44982333 x43360000 1}
       {x4498199a x4331b333 1}
       {x44980666 x43230000 1}
       {x44980333 x431fcccd 1}
       {x44980333 x431d8000 1}
       {x44980333 x431eb333 1}}}
     {tx x447a4000 x44980ccd x43267333}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear698 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44985ccd x43384ccd 1}
       {x44981333 x432c199a 1}
       {x44980ccd x4327b333 1}
       {x44980ccd x431f999a 1}
       {x44982000 x4321199a 1}
       {x44982000 x43236666 1}}}
     {tx x447a4000 x44982199 x43280889}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear697 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44988000 x433c0000 1}
       {x44982333 x43303333 1}
       {x44980666 x4329999a 1}
       {x4497fccd x43228000 1}
       {x4497fccd x431fcccd 1}
       {x44980ccd x4323b333 1}}}
     {tx x447a4000 x44981d55 x4329f778}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear696 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4498eccd x433a6666 1}
       {x44988ccd x432cb333 1}
       {x4498799a x43263333 1}
       {x44987333 x431ee666 1}
       {x44987333 x4321199a 1}
       {x44985333 x43258000 1}}}
     {tx x447a4000 x44988778 x43287777}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear695 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4498f333 x43398000 1}
       {x4498e666 x43384ccd 1}
       {x44987000 x43294ccd 1}
       {x4498699a x43263333 1}
       {x44986333 x43236666 1}
       {x44986333 x4322199a 1}
       {x44987333 x431d8000 1}
       {x44988666 x431be666 1}
       {x44989ccd x431d199a 1}
       {x44989666 x43220000 1}}}
     {tx x447a4000 x449890a4 x4326547a}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear694 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4498f99a x433a999a 1}
       {x4498f333 x43376666 1}
       {x4498d666 x432ab333 1}
       {x4498accd x431f199a 1}
       {x4498b333 x431a999a 1}
       {x4498d666 x4319e666 1}
       {x4498dccd x431f199a 1}
       {x4498b333 x4323999a 1}}}
     {tx x447a4000 x4498d133 x43266000}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear693 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44993666 x433e8000 1}
       {x44993000 x433cb333 1}
       {x4498fccd x432c0000 1}
       {x4498eccd x43256666 1}
       {x4498dccd x431ee666 1}
       {x4498dccd x431d4ccd 1}
       {x4498eccd x43228000 1}}}
     {tx x447a4000 x4498fea1 x432ac1d5}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear692 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449a0000 x4342999a 1}
       {x4499dccd x4342199a 1}
       {x44997666 x4336e666 1}
       {x44996000 x432c8000 1}
       {x44996000 x4323999a 1}
       {x4499699a x43203333 1}
       {x4499599a x4322b333 1}
       {x44991000 x43283333 1}}}
     {tx x447a4000 x44997ccc x432ed998}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear691 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449a5000 x43400000 1}
       {x4499dccd x43318000 1}
       {x4499cccd x4327b333 1}
       {x4499dccd x43208000 1}
       {x4499eccd x431ee666 1}
       {x4499e666 x4321999a 1}
       {x4499cccd x43244ccd 1}}}
     {tx x447a4000 x4499ec58 x4328edb7}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear690 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449a6ccd x433e0000 1}
       {x449a7ccd x433ee666 1}
       {x449a7ccd x433be666 1}
       {x449a7ccd x4331b333 1}
       {x449a7ccd x4327b333 1}
       {x449a7ccd x43230000 1}
       {x449a7ccd x43216666 1}
       {x449a6ccd x43248000 1}
       {x449a599a x43266666 1}}}
     {tx x447a4000 x449a7555 x432e638e}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear689 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449a2000 x4341999a 1}
       {x449a1666 x4342999a 1}
       {x4499d000 x43393333 1}
       {x4499cccd x43348000 1}
       {x4499cccd x432ae666 1}
       {x4499d000 x4327199a 1}
       {x4499d000 x432d0000 1}}}
     {tx x447a4000 x4499e492 x4334b333}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear688 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449a6000 x43436666 1}
       {x449a0333 x4340199a 1}
       {x4499d666 x433b8000 1}
       {x4499cccd x43340000 1}
       {x4499e333 x432bcccd 1}
       {x449a0000 x43280000 1}
       {x449a0333 x432c4ccd 1}
       {x449a0000 x432d6666 1}}}
     {tx x447a4000 x4499fd9a x43341001}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear687 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449b0666 x4342199a 1}
       {x449b0000 x433a199a 1}
       {x449af99a x4336b333 1}
       {x449af000 x432c8000 1}
       {x449af000 x43266666 1}
       {x449af000 x43248000 1}
       {x449ab000 x4326999a 1}
       {x449a9333 x43286666 1}}}
     {tx x447a4000 x449ae266 x432f299a}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear686 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449bc666 x433d8000 1}
       {x449bc666 x433c0000 1}
       {x449bbccd x433acccd 1}
       {x449bb000 x43376666 1}
       {x449bb000 x43334ccd 1}
       {x449bb666 x432e999a 1}
       {x449bbccd x432b3333 1}
       {x449bc666 x4328b333 1}
       {x449bc666 x4327b333 1}}}
     {tx x447a4000 x449bbd84 x4332cccc}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear685 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449b8000 x4341cccd 1}
       {x449b5333 x43403333 1}
       {x449b0ccd x43380000 1}
       {x449b0ccd x4334cccd 1}
       {x449b0ccd x43326666 1}
       {x449b0666 x432f3333 1}
       {x449b0000 x432e0000 1}
       {x449b0000 x432c0000 1}
       {x449b0000 x432acccd 1}
       {x449b0000 x4329999a 1}
       {x449b0000 x43286666 1}}}
     {tx x447a4000 x449b1746 x43321bed}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear684 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449b4ccd x4339cccd 1}
       {x449b4000 x43386666 1}
       {x449b3333 x43366666 1}
       {x449b2666 x4333cccd 1}
       {x449b2666 x43313333 1}
       {x449b2666 x432e0000 1}
       {x449b2666 x432c6666 1}
       {x449b3333 x432b3333 1}
       {x449b399a x432c3333 1}
       {x449b4000 x432e3333 1}
       {x449b4000 x43300000 1}
       {x449b4666 x43326666 1}
       {x449b4ccd x43346666 1}
       {x449b5333 x43363333 1}
       {x449b5333 x4337cccd 1}
       {x449b5333 x4336999a 1}
       {x449b5333 x4332cccd 1}
       {x449b4ccd x432f999a 1}
       {x449b4666 x432c6666 1}
       {x449b4666 x43293333 1}
       {x449b4000 x4327999a 1}
       {x449b4000 x43266666 1}}}
     {tx x447a4000 x449b3fff x4330ae8b}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear683 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449b2000 x43423333 1}
       {x449b0666 x433e0000 1}
       {x449b199a x4330999a 1}
       {x449b2000 x432dcccd 1}
       {x449b2666 x432acccd 1}
       {x449b2666 x4328cccd 1}
       {x449b2666 x43266666 1}
       {x449b2666 x4324cccd 1}
       {x449b2ccd x4323999a 1}
       {x449b2ccd x4325cccd 1}}}
     {tx x447a4000 x449b21ed x432d7ae2}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear682 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449f9ccd x433d0000 1}
       {x449fa99a x4338999a 1}
       {x449fc333 x43353333 1}
       {x449fd99a x432bb333 1}
       {x449fd99a x4324999a 1}
       {x449fc99a x431ecccd 1}
       {x449fa333 x431de666 1}}}
     {tx x447a4000 x449fbccd x432c8af9}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear681 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449feccd x4346b333 1}
       {x449ff333 x43458000 1}
       {x449fe666 x43433333 1}
       {x449fe000 x4340199a 1}
       {x449fd666 x4336e666 1}
       {x449fd666 x432dcccd 1}
       {x449fc333 x43284ccd 1}
       {x449fb666 x4326b333 1}
       {x449f7333 x43274ccd 1}}}
     {tx x447a4000 x449fce39 x43368001}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear680 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449ccccd x43386666 1}
       {x449c999a x43313333 1}
       {x449c8666 x432b6666 1}
       {x449c7333 x4321cccd 1}
       {x449c6ccd x431a0000 1}
       {x449c599a x4316cccd 1}}}
     {tx x447a4000 x449c8667 x43269999}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear679 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449c8ccd x433d999a 1}
       {x449c8ccd x433c999a 1}
       {x449c599a x43326666 1}
       {x449c599a x432d999a 1}
       {x449c599a x43283333 1}
       {x449c599a x43266666 1}
       {x449c3333 x43280000 1}}}
     {tx x447a4000 x449c62be x43301d41}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear678 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449c7333 x433acccd 1}
       {x449c599a x4338cccd 1}
       {x449c3333 x43323333 1}
       {x449c2ccd x432f999a 1}
       {x449c2ccd x43273333 1}
       {x449c399a x4324cccd 1}
       {x449c399a x43260000 1}
       {x449c2666 x4328999a 1}}}
     {tx x447a4000 x449c3e66 x432e0000}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear677 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449ce000 x433b6666 1}
       {x449ccccd x43383333 1}
       {x449ca000 x432e999a 1}
       {x449c999a x432a3333 1}
       {x449c999a x43233333 1}
       {x449ca000 x43216666 1}
       {x449c9333 x43240000 1}
       {x449c6ccd x43276666 1}}}
     {tx x447a4000 x449ca400 x432b8ccd}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear676 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449d399a x433fcccd 1}
       {x449d0000 x4338999a 1}
       {x449cf99a x43346666 1}
       {x449cf99a x432a999a 1}
       {x449cf99a x43256666 1}
       {x449cd333 x43280000 1}}}
     {tx x447a4000 x449cfeef x4330cccd}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear675 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449d7333 x433e6666 1}
       {x449d3333 x43340000 1}
       {x449d3333 x432f999a 1}
       {x449d4666 x4327999a 1}
       {x449d6ccd x43243333 1}
       {x449d5333 x4325999a 1}
       {x449d2000 x4329cccd 1}}}
     {tx x447a4000 x449d4925 x432d5076}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear674 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449dc666 x43420000 1}
       {x449d8666 x43343333 1}
       {x449d8666 x43326666 1}
       {x449d8666 x432d999a 1}
       {x449d8666 x43260000 1}
       {x449d8666 x4324cccd 1}
       {x449d4ccd x43290000 1}
       {x449d4666 x432a0000 1}}}
     {tx x447a4000 x449d7f34 x432e8000}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear673 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449e599a x433f6666 1}
       {x449e2666 x433b6666 1}
       {x449e2000 x43360000 1}
       {x449e2666 x432b999a 1}
       {x449e599a x43243333 1}
       {x449e6666 x43230000 1}
       {x449e599a x43246666 1}
       {x449e3333 x4326cccd 1}
       {x449e0666 x432a0000 1}}}
     {tx x447a4000 x449e3bbc x432d6c18}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear672 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449ea666 x4343cccd 1}
       {x449e6ccd x4340999a 1}
       {x449e6ccd x433f999a 1}
       {x449e6000 x433a0000 1}
       {x449e6000 x43360000 1}
       {x449e6000 x4330999a 1}
       {x449e6000 x432e0000 1}
       {x449e8000 x43260000 1}
       {x449e8000 x4324cccd 1}
       {x449e6000 x43276666 1}}}
     {tx x447a4000 x449e7000 x4333ae15}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear671 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449fa666 x433b999a 1}
       {x449fa000 x4337999a 1}
       {x449fb99a x432f999a 1}
       {x449feccd x43293333 1}
       {x44a00000 x4325999a 1}
       {x449ff333 x43276666 1}
       {x449fc000 x432a0000 1}
       {x449faccd x432b0000 1}}}
     {tx x447a4000 x449fc99a x432dc001}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear670 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449fb99a x43370000 1}
       {x449fc666 x432f999a 1}
       {x449fcccd x432c999a 1}
       {x449fe666 x43270000 1}
       {x449feccd x4325cccd 1}
       {x449fe666 x4327cccd 1}
       {x449fb333 x432c0000 1}}}
     {tx x447a4000 x449fd15e x432bf8b0}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear669 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449f9333 x43346666 1}
       {x449fc000 x432ecccd 1}
       {x449fc666 x432c0000 1}
       {x449fd333 x43290000 1}
       {x449fe000 x43273333 1}
       {x449fe666 x43260000 1}
       {x449fd333 x43276666 1}
       {x449fc000 x4328999a 1}}}
     {tx x447a4000 x449fc8cc x432aaccd}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear668 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449f8ccd x4339cccd 1}
       {x449f999a x4337999a 1}
       {x449fb333 x43316666 1}
       {x449fb99a x432b6666 1}
       {x449fb99a x4327cccd 1}
       {x449fb99a x4326999a 1}
       {x449fa666 x4329cccd 1}
       {x449f8ccd x432f0000 1}
       {x449f8000 x43300000 1}}}
     {tx x447a4000 x449fa2d9 x432ed27e}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear667 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449f9333 x433d0000 1}
       {x449f8000 x4338cccd 1}
       {x449f8000 x43356666 1}
       {x449f8000 x43300000 1}
       {x449f8000 x432a999a 1}
       {x449f8ccd x4329999a 1}
       {x449f8000 x432b0000 1}
       {x449f6666 x432f3333 1}}}
     {tx x447a4000 x449f80cd x43313332}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear666 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449f8000 x4343cccd 1}
       {x449f8000 x43450000 1}
       {x449f8000 x43433333 1}
       {x449f6ccd x43396666 1}
       {x449f6666 x43326666 1}
       {x449f6666 x432a6666 1}
       {x449f7333 x4327cccd 1}
       {x449f799a x4326999a 1}
       {x449f6666 x43296666 1}
       {x449f599a x432a999a 1}}}
     {tx x447a4000 x449f70a3 x4333a8f6}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear665 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449f8000 x434ccccd 1}
       {x449f6ccd x434b6666 1}
       {x449f2ccd x43476666 1}
       {x449f0ccd x43433333 1}
       {x449ef333 x433e0000 1}
       {x449ee000 x43360000 1}
       {x449eeccd x43320000 1}
       {x449f0666 x432a0000 1}
       {x449f0ccd x43273333 1}
       {x449f0ccd x4323999a 1}
       {x449ef333 x4326999a 1}
       {x449ee000 x43286666 1}}}
     {tx x447a4000 x449f1223 x43366221}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear664 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a0799a x433de666 1}
       {x44a08ccd x43400000 1}
       {x44a09333 x433d4ccd 1}
       {x44a09333 x433b6666 1}
       {x44a09333 x43368000 1}
       {x44a09333 x4334b333 1}
       {x44a09666 x4331b333 1}
       {x44a09ccd x4330b333 1}
       {x44a0a99a x43326666 1}
       {x44a0a99a x43374ccd 1}
       {x44a0a99a x433a8000 1}
       {x44a0a99a x433d6666 1}
       {x44a0b333 x433f0000 1}
       {x44a0accd x433c8000 1}
       {x44a0a333 x4338b333 1}
       {x44a09666 x4335b333 1}
       {x44a08ccd x43336666 1}
       {x44a0999a x4331e666 1}
       {x44a0a666 x4334199a 1}
       {x44a0accd x4335e666 1}
       {x44a0c99a x433bb333 1}
       {x44a0d666 x433e8000 1}
       {x44a0e000 x43410000 1}
       {x44a0c99a x433de666 1}
       {x44a0b333 x433b4ccd 1}
       {x44a09666 x4338999a 1}
       {x44a07666 x43356666 1}
       {x44a08666 x43378000 1}
       {x44a09333 x43396666 1}
       {x44a0a99a x433c999a 1}
       {x44a0c000 x43420000 1}
       {x44a0accd x4340999a 1}
       {x44a09666 x433e3333 1}
       {x44a0799a x433bb333 1}
       {x44a06000 x4338199a 1}
       {x44a0699a x4339999a 1}
       {x44a07666 x433b3333 1}
       {x44a08666 x433de666 1}
       {x44a0a666 x43424ccd 1}
       {x44a0b333 x4343999a 1}
       {x44a0a99a x4341cccd 1}
       {x44a09333 x433ee666 1}
       {x44a08000 x433c6666 1}
       {x44a0699a x433a0000 1}
       {x44a06000 x4337b333 1}
       {x44a07333 x433d4ccd 1}
       {x44a08666 x4341199a 1}
       {x44a08000 x43400000 1}
       {x44a07333 x433e0000 1}
       {x44a0499a x43396666 1}
       {x44a03666 x43373333 1}
       {x44a05000 x4339999a 1}
       {x44a05666 x433b4ccd 1}
       {x44a06000 x433e0000 1}
       {x44a07333 x4341199a 1}
       {x44a07666 x433f199a 1}
       {x44a07666 x433a4ccd 1}
       {x44a07000 x4338999a 1}
       {x44a06333 x43350000 1}
       {x44a04666 x4330cccd 1}
       {x44a0499a x432fb333 1}}}
     {tx x447a4000 x44a08c2e x433a8c29}
     {a ro 0 go 0 bo 0 ao 0 bs x41433333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear663 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a0dccd x433f0000 1}
       {x44a0cccd x433ae666 1}
       {x44a0c99a x43393333 1}
       {x44a0c666 x43364ccd 1}
       {x44a0b99a x4331b333 1}
       {x44a0b99a x432eb333 1}
       {x44a0bccd x432d0000 1}
       {x44a0b99a x432e3333 1}
       {x44a09666 x4332e666 1}
       {x44a08000 x4335b333 1}}}
     {tx x447a4000 x44a0b8f6 x43348f5b}
     {a ro 0 go 0 bo 0 ao 0 bs x41433333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear662 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a07333 x43426666 1}
       {x44a06666 x433c6666 1}
       {x44a06333 x43394ccd 1}
       {x44a05000 x4332cccd 1}
       {x44a0499a x43310000 1}
       {x44a05333 x432f999a 1}
       {x44a05333 x43313333 1}}}
     {tx x447a4000 x44a05af9 x433662be}
     {a ro 0 go 0 bo 0 ao 0 bs x41433333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear661 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a21000 x4340999a 1}
       {x44a2099a x433f199a 1}
       {x44a1f333 x433c0000 1}
       {x44a1d333 x43384ccd 1}
       {x44a1c000 x4335999a 1}
       {x44a1a99a x43338000 1}
       {x44a16ccd x4333e666 1}}}
     {tx x447a4000 x44a1d0ea x43394925}
     {a ro 0 go 0 bo 0 ao 0 bs x41433333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear660 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a1c99a x4340999a 1}
       {x44a1fccd x4338999a 1}
       {x44a1fccd x4334199a 1}
       {x44a1f99a x43310000 1}
       {x44a1f666 x43330000 1}
       {x44a1eccd x4335199a 1}
       {x44a1e666 x43380000 1}}}
     {tx x447a4000 x44a1eea1 x4336a0ea}
     {a ro 0 go 0 bo 0 ao 0 bs x41433333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear659 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a19333 x4341cccd 1}
       {x44a19000 x433e199a 1}
       {x44a19000 x433b8000 1}
       {x44a19666 x43353333 1}
       {x44a1c333 x43324ccd 1}
       {x44a1c666 x43338000 1}
       {x44a1c000 x4335e666 1}}}
     {tx x447a4000 x44a1a750 x43389d42}
     {a ro 0 go 0 bo 0 ao 0 bs x41433333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear658 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a10ccd x433f999a 1}
       {x44a0f99a x433a8000 1}
       {x44a0f99a x4336cccd 1}
       {x44a10333 x43313333 1}
       {x44a10ccd x43300000 1}
       {x44a12000 x432ee666 1}
       {x44a12ccd x43304ccd 1}
       {x44a1399a x43320000 1}}}
     {tx x447a4000 x44a112cd x4334699a}
     {a ro 0 go 0 bo 0 ao 0 bs x41433333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear657 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a0b333 x433e0000 1}
       {x44a0b333 x433be666 1}
       {x44a0b99a x4339b333 1}
       {x44a0cccd x4334b333 1}
       {x44a0dccd x432f999a 1}
       {x44a0e99a x432e999a 1}
       {x44a0d666 x4330e666 1}}}
     {tx x447a4000 x44a0ca83 x4335a0ea}
     {a ro 0 go 0 bo 0 ao 0 bs x41433333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear656 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a08ccd x433e3333 1}
       {x44a08ccd x433be666 1}
       {x44a0899a x43378000 1}
       {x44a08666 x4335199a 1}
       {x44a08333 x43303333 1}
       {x44a08333 x432eb333 1}
       {x44a08ccd x432db333 1}
       {x44a08ccd x432f3333 1}}}
     {tx x447a4000 x44a08934 x43344fff}
     {a ro 0 go 0 bo 0 ao 0 bs x41433333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear655 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a07000 x4341199a 1}
       {x44a05666 x433e199a 1}
       {x44a04333 x433ae666 1}
       {x44a03333 x4333999a 1}
       {x44a03333 x4330b333 1}
       {x44a03ccd x432db333 1}
       {x44a04333 x432c8000 1}}}
     {tx x447a4000 x44a046db x4335cccd}
     {a ro 0 go 0 bo 0 ao 0 bs x41433333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear654 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a0599a x43440000 1}
       {x44a05333 x43423333 1}
       {x44a04666 x4340cccd 1}
       {x44a04333 x433ccccd 1}
       {x44a05000 x4336199a 1}
       {x44a07000 x432f3333 1}
       {x44a07000 x432d8000 1}
       {x44a07000 x432c199a 1}
       {x44a05666 x432cb333 1}}}
     {tx x447a4000 x44a05a4f x43370b60}
     {a ro 0 go 0 bo 0 ao 0 bs x41433333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear653 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a13333 x43486666 1}
       {x44a11000 x43470000 1}
       {x44a0f666 x4343e666 1}
       {x44a0f000 x433f999a 1}
       {x44a0f000 x43388000 1}
       {x44a0d99a x43306666 1}
       {x44a0d666 x432eb333 1}
       {x44a0d666 x432d999a 1}
       {x44a0d666 x432eb333 1}}}
     {tx x447a4000 x44a0f0b6 x4339a4fa}
     {a ro 0 go 0 bo 0 ao 0 bs x41b33333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear652 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a17333 x43493333 1}
       {x44a16ccd x43468000 1}
       {x44a16ccd x4343e666 1}
       {x44a17333 x433bb333 1}
       {x44a1499a x4333b333 1}
       {x44a14000 x432e199a 1}
       {x44a15666 x432cb333 1}
       {x44a13666 x432f999a 1}}}
     {tx x447a4000 x44a15acd x4339accc}
     {a ro 0 go 0 bo 0 ao 0 bs x41b33333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear651 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a1c666 x4346999a 1}
       {x44a1c666 x4347b333 1}
       {x44a1c666 x4348b333 1}
       {x44a1a000 x43433333 1}
       {x44a1899a x4339e666 1}
       {x44a17ccd x43373333 1}
       {x44a16666 x4332199a 1}
       {x44a16ccd x432c8000 1}
       {x44a17000 x432e3333 1}}}
     {tx x447a4000 x44a194fa x433b9110}
     {a ro 0 go 0 bo 0 ao 0 bs x41b33333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear650 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a23ccd x4345b333 1}
       {x44a25000 x4343199a 1}
       {x44a2599a x433bb333 1}
       {x44a24ccd x4337999a 1}
       {x44a22000 x43326666 1}
       {x44a2099a x432c4ccd 1}
       {x44a20ccd x432d999a 1}
       {x44a1fccd x4330b333 1}}}
     {tx x447a4000 x44a22cce x43372333}
     {a ro 0 go 0 bo 0 ao 0 bs x41b33333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear649 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a23ccd x4347b333 1}
       {x44a23ccd x4346999a 1}
       {x44a2399a x43446666 1}
       {x44a23666 x433c8000 1}
       {x44a20666 x4333b333 1}
       {x44a1e666 x432dcccd 1}
       {x44a1e666 x432ab333 1}
       {x44a1f333 x432e6666 1}}}
     {tx x447a4000 x44a21600 x43393999}
     {a ro 0 go 0 bo 0 ao 0 bs x41b33333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear648 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a2b000 x434a4ccd 1}
       {x44a2accd x43474ccd 1}
       {x44a2b000 x43420000 1}
       {x44a2b000 x433ccccd 1}
       {x44a2999a x4335e666 1}
       {x44a28ccd x43304ccd 1}
       {x44a28333 x432d3333 1}
       {x44a27666 x43316666 1}}}
     {tx x447a4000 x44a29b9a x433aa666}
     {a ro 0 go 0 bo 0 ao 0 bs x41b33333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear647 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a2b99a x43514ccd 1}
       {x44a2b000 x434fb333 1}
       {x44a2b000 x434cb333 1}
       {x44a2c99a x4346e666 1}
       {x44a2dccd x433f3333 1}
       {x44a2dccd x43370000 1}
       {x44a2e99a x4331cccd 1}
       {x44a30ccd x432f4ccd 1}
       {x44a30666 x43316666 1}}}
     {tx x447a4000 x44a2d82e x433fb334}
     {a ro 0 go 0 bo 0 ao 0 bs x41b33333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear646 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a33ccd x4348199a 1}
       {x44a34000 x4346999a 1}
       {x44a35666 x43443333 1}
       {x44a37000 x433f0000 1}
       {x44a37000 x433b6666 1}
       {x44a3799a x433a4ccd 1}
       {x44a37ccd x433b6666 1}
       {x44a38ccd x433fe666 1}
       {x44a38ccd x4343199a 1}
       {x44a36ccd x433eb333 1}
       {x44a36ccd x4339cccd 1}
       {x44a36ccd x4338b333 1}
       {x44a37666 x4337b333 1}
       {x44a39ccd x433b6666 1}
       {x44a3999a x433e8000 1}
       {x44a39333 x433d0000 1}
       {x44a38ccd x43386666 1}
       {x44a39000 x43330000 1}
       {x44a3a666 x4330999a 1}}}
     {tx x447a4000 x44a379f1 x433cb9ef}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear645 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a3299a x4349999a 1}
       {x44a3299a x4346999a 1}
       {x44a3299a x43440000 1}
       {x44a33ccd x433e6666 1}
       {x44a34ccd x433b0000 1}
       {x44a35333 x4339999a 1}}}
     {tx x447a4000 x44a3399a x43413333}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear644 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a2f99a x4355b333 1}
       {x44a30000 x4354199a 1}
       {x44a31000 x43508000 1}
       {x44a32333 x434a8000 1}
       {x44a32333 x43428000 1}
       {x44a31666 x433d3333 1}
       {x44a31000 x43383333 1}
       {x44a31000 x43373333 1}}}
     {tx x447a4000 x44a310cd x43467ccc}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear643 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a41666 x435a999a 1}
       {x44a41666 x435b999a 1}
       {x44a4099a x435a6666 1}
       {x44a40666 x4358cccd 1}
       {x44a40333 x43566666 1}
       {x44a3f99a x4350cccd 1}
       {x44a3d99a x43486666 1}
       {x44a3bccd x433f999a 1}
       {x44a3cccd x43364ccd 1}
       {x44a3fccd x43304ccd 1}
       {x44a41000 x432d999a 1}
       {x44a42ccd x432ab333 1}
       {x44a4099a x432c199a 1}}}
     {tx x447a4000 x44a3fd8b x43453334}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear642 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a3b333 x43590000 1}
       {x44a3bccd x4357cccd 1}
       {x44a3c333 x43563333 1}
       {x44a3d000 x4353999a 1}
       {x44a3d000 x43510000 1}
       {x44a3b333 x434b4ccd 1}
       {x44a39ccd x43480000 1}
       {x44a3b666 x43490000 1}
       {x44a3c333 x434b999a 1}}}
     {tx x447a4000 x44a3bc17 x4350638e}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear641 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a44666 x4359cccd 1}
       {x44a4299a x4357cccd 1}
       {x44a41666 x4355b333 1}
       {x44a40333 x4351999a 1}
       {x44a3eccd x434bb333 1}
       {x44a3c99a x43416666 1}
       {x44a3c000 x4338e666 1}
       {x44a3f99a x4330b333 1}
       {x44a42666 x432e3333 1}
       {x44a45ccd x432bcccd 1}}}
     {tx x447a4000 x44a40c7b x434428f6}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear640 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a40666 x4356b333 1}
       {x44a3e666 x4354b333 1}
       {x44a3d666 x434d3333 1}
       {x44a3d000 x434ab333 1}
       {x44a3b000 x43410000 1}
       {x44a3a666 x433bcccd 1}
       {x44a3bccd x4335999a 1}
       {x44a3e666 x4331b333 1}
       {x44a41666 x432e6666 1}
       {x44a4399a x432b8000 1}}}
     {tx x447a4000 x44a3e2e2 x43402148}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear639 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a4099a x43556666 1}
       {x44a3eccd x43560000 1}
       {x44a3e666 x43550000 1}
       {x44a3e666 x43530000 1}
       {x44a3e666 x434ce666 1}
       {x44a3cccd x4344b333 1}
       {x44a3b666 x433bcccd 1}
       {x44a3b666 x4335cccd 1}
       {x44a3c333 x4332e666 1}
       {x44a3d000 x43316666 1}
       {x44a3eccd x432fe666 1}}}
     {tx x447a4000 x44a3da79 x4343e413}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear638 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a4299a x4358999a 1}
       {x44a4299a x4357999a 1}
       {x44a41ccd x43543333 1}
       {x44a41ccd x4351b333 1}
       {x44a41000 x434a199a 1}
       {x44a3e666 x43410000 1}
       {x44a3c99a x433a0000 1}
       {x44a3c99a x43363333 1}
       {x44a3eccd x43328000 1}}}
     {tx x447a4000 x44a4005b x43478b61}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear637 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a47000 x43580000 1}
       {x44a4399a x4353199a 1}
       {x44a42ccd x434fcccd 1}
       {x44a42000 x434c6666 1}
       {x44a4099a x43478000 1}
       {x44a3eccd x433ce666 1}
       {x44a3e666 x43368000 1}
       {x44a40666 x43334ccd 1}
       {x44a41ccd x4334b333 1}}}
     {tx x447a4000 x44a41b61 x4344b05c}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear636 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a4799a x4355999a 1}
       {x44a47ccd x4354999a 1}
       {x44a4799a x4351b333 1}
       {x44a47333 x434a999a 1}
       {x44a46333 x4343199a 1}
       {x44a45666 x433b4ccd 1}
       {x44a45666 x43383333 1}
       {x44a48000 x4332cccd 1}
       {x44a49333 x43314ccd 1}}}
     {tx x447a4000 x44a4727d x4343b05c}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear635 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a4d333 x43556666 1}
       {x44a4d99a x43566666 1}
       {x44a4bccd x4353999a 1}
       {x44a48000 x434b6666 1}
       {x44a4699a x4348cccd 1}
       {x44a45000 x43423333 1}
       {x44a45000 x433de666 1}
       {x44a45ccd x43393333 1}
       {x44a47000 x4334cccd 1}
       {x44a45666 x43364ccd 1}}}
     {tx x447a4000 x44a4823e x4345999a}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear634 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a4f666 x435a8000 1}
       {x44a4e000 x43580000 1}
       {x44a4d99a x4354199a 1}
       {x44a4d99a x434dcccd 1}
       {x44a4accd x43463333 1}
       {x44a49333 x433e0000 1}
       {x44a49666 x433c3333 1}
       {x44a4b666 x4337cccd 1}
       {x44a4c333 x4336999a 1}
       {x44a4b666 x433a0000 1}
       {x44a4a99a x433b4ccd 1}
       {x44a4999a x433c999a 1}}}
     {tx x447a4000 x44a4bc44 x43446ccd}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear633 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a58666 x434de666 1}
       {x44a58ccd x434cb333 1}
       {x44a5999a x43474ccd 1}
       {x44a5a333 x43423333 1}
       {x44a58000 x4339e666 1}
       {x44a55666 x43344ccd 1}
       {x44a55333 x4332999a 1}
       {x44a54666 x4333999a 1}}}
     {tx x447a4000 x44a57800 x433f1000}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear632 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a50000 x434c199a 1}
       {x44a51000 x434b3333 1}
       {x44a52000 x43426666 1}
       {x44a51666 x433e4ccd 1}
       {x44a4f666 x4338e666 1}
       {x44a4dccd x4332e666 1}
       {x44a4d99a x43314ccd 1}}}
     {tx x447a4000 x44a4fe2d x433e715f}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear631 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a4e000 x43508000 1}
       {x44a4e666 x434f199a 1}
       {x44a4e666 x434d8000 1}
       {x44a4e000 x4341cccd 1}
       {x44a4b99a x43398000 1}
       {x44a4a333 x43346666 1}
       {x44a4a333 x4332199a 1}
       {x44a4a333 x4330b333 1}
       {x44a4999a x4331e666 1}}}
     {tx x447a4000 x44a4c111 x433e638d}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear630 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a4a000 x434f8000 1}
       {x44a4a000 x434d8000 1}
       {x44a49666 x43466666 1}
       {x44a48ccd x43428000 1}
       {x44a47ccd x433eb333 1}
       {x44a47000 x4337999a 1}
       {x44a47000 x43364ccd 1}
       {x44a4799a x43348000 1}
       {x44a46666 x4335e666 1}}}
     {tx x447a4000 x44a4838e x433fa7d4}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear629 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a4bccd x4354199a 1}
       {x44a4b000 x4355999a 1}
       {x44a4a99a x43544ccd 1}
       {x44a4899a x434e999a 1}
       {x44a47ccd x4344cccd 1}
       {x44a46666 x433b6666 1}
       {x44a47333 x43348000 1}
       {x44a48000 x4332cccd 1}
       {x44a49333 x43316666 1}
       {x44a4899a x4332999a 1}
       {x44a48000 x43340000 1}}}
     {tx x447a4000 x44a48d61 x4341199a}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear628 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a4dccd x43594ccd 1}
       {x44a4d000 x4355999a 1}
       {x44a4d99a x4350199a 1}
       {x44a4f000 x43488000 1}
       {x44a4e99a x433f199a 1}
       {x44a4d99a x4337cccd 1}
       {x44a4d99a x43350000 1}
       {x44a4e666 x4331199a 1}
       {x44a4dccd x43326666 1}
       {x44a4bccd x4334b333 1}}}
     {tx x447a4000 x44a4db86 x434128f6}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear627 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a4799a x4360199a 1}
       {x44a44ccd x435cb333 1}
       {x44a4399a x4359e666 1}
       {x44a42000 x4351999a 1}
       {x44a4099a x43490000 1}
       {x44a3f99a x43403333 1}
       {x44a3f333 x433a0000 1}
       {x44a40666 x43348000 1}
       {x44a41666 x43328000 1}
       {x44a41ccd x43318000 1}}}
     {tx x447a4000 x44a4219a x4346cccc}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear626 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a4c666 x43623333 1}
       {x44a4accd x43614ccd 1}
       {x44a49666 x435b0000 1}
       {x44a49333 x43580000 1}
       {x44a48000 x43510000 1}
       {x44a47ccd x434d199a 1}
       {x44a46666 x4342e666 1}
       {x44a46333 x433d0000 1}
       {x44a4699a x4335cccd 1}
       {x44a47ccd x43334ccd 1}
       {x44a49333 x43316666 1}
       {x44a4b000 x432f199a 1}}}
     {tx x447a4000 x44a48bbb x4347d778}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear625 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a50ccd x43594ccd 1}
       {x44a4f333 x4357199a 1}
       {x44a4e000 x43536666 1}
       {x44a4e666 x434cb333 1}
       {x44a4f000 x4342cccd 1}
       {x44a4c666 x43386666 1}
       {x44a4d99a x43303333 1}
       {x44a4f333 x432d999a 1}
       {x44a51666 x43298000 1}}}
     {tx x447a4000 x44a4ee39 x43421c72}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear624 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a5399a x435d199a 1}
       {x44a52666 x435c0000 1}
       {x44a50ccd x4357999a 1}
       {x44a50333 x43548000 1}
       {x44a4f666 x434e6666 1}
       {x44a4d99a x43468000 1}
       {x44a4d333 x433e4ccd 1}
       {x44a4dccd x43370000 1}
       {x44a4e000 x4332999a 1}
       {x44a4f333 x432fe666 1}
       {x44a4e99a x43314ccd 1}}}
     {tx x447a4000 x44a4f86f x43461bed}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear623 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a56ccd x4355999a 1}
       {x44a5699a x43506666 1}
       {x44a5699a x4349cccd 1}
       {x44a57333 x433fe666 1}
       {x44a55333 x43373333 1}
       {x44a53ccd x4333999a 1}}}
     {tx x447a4000 x44a56089 x43446aab}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear622 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a6c333 x435a6666 1}
       {x44a6c333 x43594ccd 1}
       {x44a6c666 x4357999a 1}
       {x44a6dccd x43514ccd 1}
       {x44a6e333 x434e999a 1}
       {x44a6b99a x4343e666 1}
       {x44a69333 x4339cccd 1}
       {x44a6c666 x43344ccd 1}
       {x44a6e333 x43350000 1}
       {x44a6b666 x43388000 1}}}
     {tx x447a4000 x44a6c5c2 x43477853}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear621 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a66000 x4358cccd 1}
       {x44a65666 x4350999a 1}
       {x44a65000 x434b6666 1}
       {x44a65666 x433ecccd 1}
       {x44a65666 x433a0000 1}
       {x44a66666 x43334ccd 1}
       {x44a67ccd x43323333 1}}}
     {tx x447a4000 x44a65ea1 x4342ba83}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear620 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a5eccd x4354e666 1}
       {x44a5eccd x4353cccd 1}
       {x44a60666 x434ecccd 1}
       {x44a63000 x434ae666 1}
       {x44a6799a x433f999a 1}
       {x44a69333 x4335e666 1}
       {x44a6d666 x43316666 1}
       {x44a6fccd x43326666 1}
       {x44a6e99a x4335199a 1}
       {x44a6d666 x4336199a 1}}}
     {tx x447a4000 x44a67800 x4340b0a4}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear619 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a60666 x43524ccd 1}
       {x44a5f000 x434d999a 1}
       {x44a5e333 x43466666 1}
       {x44a5d99a x433f999a 1}
       {x44a5d99a x433b199a 1}
       {x44a60ccd x43340000 1}
       {x44a62666 x4332999a 1}
       {x44a64333 x4331e666 1}
       {x44a66666 x4332e666 1}}}
     {tx x447a4000 x44a60bbb x433dd27d}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear618 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a59ccd x43583333 1}
       {x44a58333 x4351e666 1}
       {x44a58000 x434e0000 1}
       {x44a57333 x4341999a 1}
       {x44a5699a x4338cccd 1}
       {x44a57666 x4335cccd 1}
       {x44a58ccd x4333b333 1}}}
     {tx x447a4000 x44a58001 x4343ffff}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear617 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a5a99a x435ee666 1}
       {x44a58666 x435c8000 1}
       {x44a58333 x435b8000 1}
       {x44a5799a x43578000 1}
       {x44a57333 x434f0000 1}
       {x44a5399a x43404ccd 1}
       {x44a53000 x433b0000 1}
       {x44a54333 x43388000 1}
       {x44a57666 x43358000 1}
       {x44a56666 x43383333 1}}}
     {tx x447a4000 x44a56a90 x43497d71}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear616 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a57333 x4361199a 1}
       {x44a5799a x435e8000 1}
       {x44a58666 x435be666 1}
       {x44a58666 x43536666 1}
       {x44a57333 x43498000 1}
       {x44a55333 x433e4ccd 1}
       {x44a56000 x43394ccd 1}
       {x44a57333 x43380000 1}
       {x44a58333 x43394ccd 1}}}
     {tx x447a4000 x44a57444 x434acfa6}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear615 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a63333 x435e199a 1}
       {x44a6299a x4359e666 1}
       {x44a61ccd x43543333 1}
       {x44a60ccd x4349199a 1}
       {x44a5f666 x433e0000 1}
       {x44a5f000 x4339199a 1}
       {x44a60ccd x43340000 1}
       {x44a61333 x4332cccd 1}}}
     {tx x447a4000 x44a61199 x43466667}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear614 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a65000 x435cb333 1}
       {x44a64333 x4354b333 1}
       {x44a64000 x43508000 1}
       {x44a63ccd x434a999a 1}
       {x44a63666 x4346199a 1}
       {x44a63333 x433e0000 1}
       {x44a6499a x4339e666 1}
       {x44a66000 x4335cccd 1}
       {x44a63666 x4338b333 1}}}
     {tx x447a4000 x44a642d9 x43465555}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear613 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a71333 x43586666 1}
       {x44a70000 x4356b333 1}
       {x44a6f333 x4353199a 1}
       {x44a6cccd x43463333 1}
       {x44a6b666 x43414ccd 1}
       {x44a6a000 x433d4ccd 1}
       {x44a69333 x43386666 1}
       {x44a69333 x4339999a 1}}}
     {tx x447a4000 x44a6c9ff x43472000}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear612 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a74666 x4353999a 1}
       {x44a74666 x43528000 1}
       {x44a74ccd x43514ccd 1}
       {x44a77666 x43498000 1}
       {x44a7899a x43426666 1}
       {x44a7899a x433d4ccd 1}
       {x44a77666 x4339cccd 1}}}
     {tx x447a4000 x44a7683a x434857c7}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear611 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a78333 x4353199a 1}
       {x44a7899a x4354199a 1}
       {x44a7a000 x4350999a 1}
       {x44a7b000 x43493333 1}
       {x44a7b333 x43468000 1}
       {x44a7bccd x43423333 1}
       {x44a7d000 x433e6666 1}
       {x44a7d333 x433ce666 1}
       {x44a7accd x433d999a 1}}}
     {tx x447a4000 x44a7adde x43476666}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear610 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a7099a x43554ccd 1}
       {x44a72333 x43518000 1}
       {x44a73666 x434f6666 1}
       {x44a74666 x434d3333 1}
       {x44a76000 x43484ccd 1}
       {x44a7899a x43433333 1}
       {x44a79666 x433e6666 1}
       {x44a7999a x433c3333 1}
       {x44a7899a x433eb333 1}}}
     {tx x447a4000 x44a75ddd x434805af}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear609 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a73ccd x435ee666 1}
       {x44a74333 x435c8000 1}
       {x44a73ccd x435b8000 1}
       {x44a73666 x43586666 1}
       {x44a72000 x4352b333 1}
       {x44a7099a x434d999a 1}
       {x44a6f99a x4347e666 1}
       {x44a6e99a x43434ccd 1}
       {x44a6e333 x433e199a 1}
       {x44a6e333 x433c8000 1}
       {x44a6e333 x433b0000 1}
       {x44a6e333 x43393333 1}
       {x44a6d666 x433ce666 1}}}
     {tx x447a4000 x44a707a0 x434a589c}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear608 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a6accd x435f0000 1}
       {x44a6c666 x435d0000 1}
       {x44a6f333 x43578000 1}
       {x44a7099a x4353e666 1}
       {x44a72000 x434a3333 1}
       {x44a7399a x43416666 1}
       {x44a77000 x433b0000 1}
       {x44a77333 x4338cccd 1}
       {x44a7599a x4336999a 1}
       {x44a7199a x4337b333 1}
       {x44a6f000 x4339cccd 1}}}
     {tx x447a4000 x44a718b9 x43472c37}
     {a ro 0 go 0 bo 0 ao 0 bs x42093333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear607 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a77000 x43624ccd 1}
       {x44a73666 x4360cccd 1}
       {x44a72333 x435f4ccd 1}
       {x44a7099a x4359b333 1}
       {x44a6f99a x4352199a 1}
       {x44a6e666 x43480000 1}
       {x44a6e666 x433f3333 1}
       {x44a6fccd x43383333 1}
       {x44a72000 x4334b333 1}
       {x44a6f333 x4335cccd 1}}}
     {tx x447a4000 x44a710f6 x434c028f}
     {a ro 0 go 0 bo 0 ao 0 bs x42093333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear606 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aae000 x434ce666 1}
       {x44aafccd x4345199a 1}
       {x44ab0333 x43428000 1}
       {x44ab0666 x433f0000 1}}}
     {tx x447a4000 x44aaf99a x4344e000}
     {a ro 0 go 0 bo 0 ao 0 bs x42093333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear605 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aa999a x43528000 1}
       {x44aa999a x43510000 1}
       {x44aabccd x43488000 1}
       {x44aad666 x43438000 1}
       {x44aaf99a x433d4ccd 1}
       {x44ab0333 x433bb333 1}
       {x44aaeccd x433d4ccd 1}
       {x44aab333 x4340e666 1}}}
     {tx x447a4000 x44aacc66 x4344d667}
     {a ro 0 go 0 bo 0 ao 0 bs x42093333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear604 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aa6000 x43580000 1}
       {x44aa5ccd x43568000 1}
       {x44aa699a x434f6666 1}
       {x44aa8000 x434a3333 1}
       {x44aa8666 x43413333 1}
       {x44aa8000 x433ccccd 1}
       {x44aa8ccd x433e199a 1}}}
     {tx x447a4000 x44aa75f2 x4349be2d}
     {a ro 0 go 0 bo 0 ao 0 bs x42093333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear603 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aa499a x4354999a 1}
       {x44aa399a x434fe666 1}
       {x44aa3ccd x434b6666 1}
       {x44aa4666 x4342e666 1}
       {x44aa3ccd x433c199a 1}
       {x44aa3ccd x433de666 1}}}
     {tx x447a4000 x44aa4000 x43477778}
     {a ro 0 go 0 bo 0 ao 0 bs x42093333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear602 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aa2000 x43586666 1}
       {x44a9f666 x4351b333 1}
       {x44a9f666 x434c0000 1}
       {x44aa0333 x4343cccd 1}
       {x44aa0ccd x433a0000 1}
       {x44aa399a x4336999a 1}
       {x44aa3000 x4337999a 1}}}
     {tx x447a4000 x44aa1333 x4344df16}
     {a ro 0 go 0 bo 0 ao 0 bs x42093333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear601 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a9bccd x435d6666 1}
       {x44a9a000 x43583333 1}
       {x44a9a000 x4353e666 1}
       {x44a9a333 x4347e666 1}
       {x44a98ccd x433e4ccd 1}
       {x44a98ccd x4337cccd 1}
       {x44a98666 x433a4ccd 1}}}
     {tx x447a4000 x44a99b6e x43496668}
     {a ro 0 go 0 bo 0 ao 0 bs x42093333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear600 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a94000 x435eb333 1}
       {x44a92000 x435a3333 1}
       {x44a92000 x43550000 1}
       {x44a92ccd x43498000 1}
       {x44a93333 x43403333 1}
       {x44a92666 x433a6666 1}
       {x44a92666 x4338cccd 1}
       {x44a91333 x433a0000 1}}}
     {tx x447a4000 x44a92800 x4348999a}
     {a ro 0 go 0 bo 0 ao 0 bs x42093333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear599 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a83000 x435e199a 1}
       {x44a8299a x435c0000 1}
       {x44a82666 x4355b333 1}
       {x44a81ccd x4350cccd 1}
       {x44a7f99a x4347b333 1}
       {x44a7e99a x433f6666 1}
       {x44a7f333 x433b4ccd 1}
       {x44a80666 x4339cccd 1}}}
     {tx x447a4000 x44a80f33 x434b999a}
     {a ro 0 go 0 bo 0 ao 0 bs x42093333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear598 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a9699a x435f0000 1}
       {x44a92ccd x435d0000 1}
       {x44a8e333 x43578000 1}
       {x44a8d666 x43548000 1}
       {x44a8b666 x434ce666 1}
       {x44a88333 x43438000 1}
       {x44a87ccd x433d3333 1}
       {x44a88ccd x433acccd 1}
       {x44a8699a x433eb333 1}}}
     {tx x447a4000 x44a8c6c2 x434c582d}
     {a ro 0 go 0 bo 0 ao 0 bs x42093333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear597 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a86ccd x435b4ccd 1}
       {x44a84ccd x43584ccd 1}
       {x44a84666 x4355999a 1}
       {x44a82333 x434d4ccd 1}
       {x44a7e666 x4344999a 1}
       {x44a7dccd x433de666 1}
       {x44a7f666 x43388000 1}
       {x44a80ccd x4336e666 1}
       {x44a81ccd x4335e666 1}}}
     {tx x447a4000 x44a81d28 x4346ec17}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear596 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a87000 x435bb333 1}
       {x44a8499a x4355999a 1}
       {x44a84ccd x4351b333 1}
       {x44a86000 x4347e666 1}
       {x44a8599a x43414ccd 1}
       {x44a87666 x433c999a 1}
       {x44a87ccd x433b8000 1}}}
     {tx x447a4000 x44a862bf x4349c1d5}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear595 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a8eccd x435b999a 1}
       {x44a8cccd x43574ccd 1}
       {x44a8c99a x4354e666 1}
       {x44a8c99a x434bcccd 1}
       {x44a8d000 x43410000 1}
       {x44a8e666 x433f0000 1}
       {x44a8f333 x433e0000 1}
       {x44a90666 x433d0000 1}
       {x44a8e666 x433eb333 1}}}
     {tx x447a4000 x44a8e05c x434896c2}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear594 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a9099a x435d199a 1}
       {x44a8d99a x435b4ccd 1}
       {x44a8cccd x43586666 1}
       {x44a8b666 x434cb333 1}
       {x44a8b666 x4343999a 1}
       {x44a8d666 x433de666 1}
       {x44a8e666 x433c8000 1}
       {x44a8e000 x433e8000 1}}}
     {tx x447a4000 x44a8d734 x434b4001}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear593 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a9b000 x435f0000 1}
       {x44a96666 x43598000 1}
       {x44a9599a x43554ccd 1}
       {x44a93666 x434ae666 1}
       {x44a90666 x43403333 1}
       {x44a8f99a x433bb333 1}}}
     {tx x447a4000 x44a94667 x434e1998}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear592 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a9a000 x4359e666 1}
       {x44a9c333 x43508000 1}
       {x44a9c666 x434a999a 1}
       {x44a9a99a x43426666 1}
       {x44a9999a x433d999a 1}
       {x44a9a000 x433bcccd 1}}}
     {tx x447a4000 x44a9accd x43482223}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear591 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aa0333 x435ccccd 1}
       {x44a9e000 x435c6666 1}
       {x44a9b666 x4357199a 1}
       {x44a9accd x4352b333 1}
       {x44a9a333 x4349199a 1}
       {x44a9899a x433e6666 1}
       {x44a98ccd x433b4ccd 1}
       {x44a98ccd x433c6666 1}}}
     {tx x447a4000 x44a9b19b x434c4668}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear590 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aa699a x435ae666 1}
       {x44aa3333 x43574ccd 1}
       {x44aa2000 x4354199a 1}
       {x44aa199a x434a4ccd 1}
       {x44aa3000 x4340e666 1}
       {x44aa3000 x433d3333 1}
       {x44aa1666 x433e6666 1}}}
     {tx x447a4000 x44aa2f8b x434b03a8}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear589 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aabccd x435d199a 1}
       {x44aa9000 x435a999a 1}
       {x44aa8000 x4355999a 1}
       {x44aa8000 x434bcccd 1}
       {x44aa799a x4341b333 1}
       {x44aa8666 x433db333 1}}}
     {tx x447a4000 x44aa8ccd x434ec000}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear588 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aaf666 x4364999a 1}
       {x44aad666 x4362b333 1}
       {x44aac000 x4358999a 1}
       {x44aabccd x4353199a 1}
       {x44aaa99a x43466666 1}
       {x44aaa666 x4341b333 1}
       {x44aab000 x433b4ccd 1}
       {x44aac000 x43393333 1}}}
     {tx x447a4000 x44aac133 x434df333}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear587 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44abe333 x435d0000 1}
       {x44abcccd x4357999a 1}
       {x44abf000 x43526666 1}
       {x44ac2333 x43486666 1}
       {x44ac299a x4341999a 1}
       {x44ac1666 x433de666 1}}}
     {tx x447a4000 x44ac0089 x434d2667}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear586 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ab9ccd x4357cccd 1}
       {x44ab8666 x43548000 1}
       {x44ab8333 x434fb333 1}
       {x44ab799a x43473333 1}
       {x44ab7000 x433f199a 1}
       {x44ab799a x433c999a 1}}}
     {tx x447a4000 x44ab8199 x434a7bbc}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear585 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44abc000 x43594ccd 1}
       {x44abb99a x4356b333 1}
       {x44abc333 x43508000 1}
       {x44abd000 x434bcccd 1}
       {x44abe333 x43456666 1}
       {x44abe666 x43403333 1}
       {x44abdccd x433f199a 1}
       {x44abc000 x433fe666 1}}}
     {tx x447a4000 x44abce67 x434a1ccc}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear584 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ab8333 x4360b333 1}
       {x44ab7ccd x435f6666 1}
       {x44ab7333 x435d199a 1}
       {x44ab899a x4354199a 1}
       {x44ab9666 x434c0000 1}
       {x44ab9666 x4343999a 1}
       {x44aba666 x433e8000 1}
       {x44aba99a x433d3333 1}
       {x44ab9000 x433de666 1}}}
     {tx x447a4000 x44ab8f4b x434d9c71}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear583 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aaf666 x43660000 1}
       {x44ab1000 x4361cccd 1}
       {x44ab1ccd x435eb333 1}
       {x44ab2000 x4359e666 1}
       {x44ab0333 x4350999a 1}
       {x44aae333 x43498000 1}
       {x44aae000 x4348199a 1}
       {x44aad99a x4340b333 1}
       {x44aad666 x433db333 1}
       {x44aad666 x433b4ccd 1}
       {x44aac99a x4337999a 1}}}
     {tx x447a4000 x44aaf0df x434d7209}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear582 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ac4333 x435ab333 1}
       {x44ac3000 x4358b333 1}
       {x44ac3000 x4354e666 1}
       {x44ac5000 x434bcccd 1}
       {x44ac3ccd x4343cccd 1}
       {x44ac0666 x433e6666 1}
       {x44abd99a x433cb333 1}}}
     {tx x447a4000 x44ac26db x434bdb6e}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear581 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aca666 x43603333 1}
       {x44ac799a x435c3333 1}
       {x44ac6ccd x43583333 1}
       {x44ac6ccd x43504ccd 1}
       {x44ac6ccd x4347cccd 1}
       {x44ac499a x43426666 1}}}
     {tx x447a4000 x44ac72ab x43528444}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear580 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aca666 x4362b333 1}
       {x44aca666 x435d3333 1}
       {x44aca666 x4359b333 1}
       {x44ac8000 x434ee666 1}
       {x44ac6000 x4346b333 1}
       {x44ac5666 x43420000 1}
       {x44ac8666 x43426666 1}}}
     {tx x447a4000 x44ac86db x435083a8}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear579 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44acd666 x43644ccd 1}
       {x44acbccd x435de666 1}
       {x44acbccd x435a199a 1}
       {x44acc99a x434d3333 1}
       {x44acc99a x434a4ccd 1}
       {x44acc99a x4345199a 1}
       {x44acd666 x43408000 1}
       {x44ace333 x433e999a 1}
       {x44ace99a x43404ccd 1}}}
     {tx x447a4000 x44accfff x434d5dde}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear578 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ad2ccd x43660000 1}
       {x44ad1333 x4363199a 1}
       {x44ad1333 x435f199a 1}
       {x44ad3333 x4352999a 1}
       {x44ad199a x43473333 1}
       {x44acf666 x433f4ccd 1}
       {x44acf666 x433d999a 1}
       {x44acf99a x433c8000 1}
       {x44ad0000 x433dcccd 1}
       {x44ad0000 x433f0000 1}}}
     {tx x447a4000 x44ad0d71 x434c051f}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear577 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ad4666 x43660000 1}
       {x44ad399a x43638000 1}
       {x44ad499a x435e8000 1}
       {x44ad9666 x43520000 1}
       {x44ad999a x43468000 1}
       {x44ad9000 x433e6666 1}
       {x44ad9000 x433d0000 1}
       {x44ad7666 x433e999a 1}}}
     {tx x447a4000 x44ad7200 x434f5000}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear576 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44adcccd x4363199a 1}
       {x44ada000 x4359b333 1}
       {x44ada000 x4354b333 1}
       {x44adaccd x434a8000 1}
       {x44ada000 x43420000 1}
       {x44ada000 x433f8000 1}
       {x44ad9000 x43418000 1}}}
     {tx x447a4000 x44ada5f1 x434d9249}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear575 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ae399a x4369199a 1}
       {x44ae1666 x4367b333 1}
       {x44adf666 x435fcccd 1}
       {x44adf666 x435a199a 1}
       {x44adf666 x434b4ccd 1}
       {x44add99a x4343999a 1}
       {x44add99a x43420000 1}
       {x44adc666 x4342cccd 1}}}
     {tx x447a4000 x44adf59a x4353cccd}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear574 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ae599a x43684ccd 1}
       {x44ae4ccd x43620000 1}
       {x44ae5333 x435b3333 1}
       {x44ae6000 x434e3333 1}
       {x44ae399a x4345199a 1}
       {x44ae4000 x43430000 1}
       {x44ae6ccd x43454ccd 1}}}
     {tx x447a4000 x44ae524a x43527160}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear573 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ae7333 x436b6666 1}
       {x44ae6ccd x436a3333 1}
       {x44ae6ccd x43653333 1}
       {x44aea333 x4358b333 1}
       {x44aeb666 x434d6666 1}
       {x44aeb666 x4343999a 1}
       {x44aec333 x43414ccd 1}
       {x44aed666 x433f8000 1}
       {x44aec99a x43423333 1}}}
     {tx x447a4000 x44aea38e x43529c72}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear572 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44af4333 x4371e666 1}
       {x44af3ccd x436acccd 1}
       {x44af499a x4365cccd 1}
       {x44af5ccd x4357cccd 1}
       {x44af5ccd x43516666 1}
       {x44af5000 x43473333 1}
       {x44af499a x43430000 1}
       {x44af4333 x43418000 1}
       {x44af3000 x43436666 1}}}
     {tx x447a4000 x44af48e3 x4354c16c}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear571 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b0199a x4368199a 1}
       {x44b01666 x43624ccd 1}
       {x44b02000 x435d4ccd 1}
       {x44b01666 x434c0000 1}
       {x44aff666 x4343cccd 1}
       {x44b00333 x4340b333 1}}}
     {tx x447a4000 x44b01000 x43540888}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear570 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44af0666 x43700000 1}
       {x44af2000 x436d199a 1}
       {x44af3ccd x43698000 1}
       {x44afa000 x435d4ccd 1}
       {x44afc99a x43516666 1}
       {x44afdccd x43468000 1}
       {x44afe99a x43430000 1}
       {x44aff666 x4341cccd 1}
       {x44afe333 x43440000 1}}}
     {tx x447a4000 x44af9a50 x4355d82d}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear569 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44af8666 x43610000 1}
       {x44af7666 x435f8000 1}
       {x44af799a x435b999a 1}
       {x44af9333 x4354199a 1}
       {x44afa000 x434fb333 1}
       {x44afa666 x434eb333 1}
       {x44afb333 x434fb333 1}
       {x44afd000 x43533333 1}
       {x44afe99a x43588000 1}
       {x44afe99a x435c999a 1}
       {x44afe99a x4357999a 1}
       {x44afe99a x43533333 1}
       {x44afe99a x4354e666 1}
       {x44afdccd x43566666 1}
       {x44afd666 x43588000 1}
       {x44afc99a x435eb333 1}
       {x44afd000 x435d8000 1}
       {x44affccd x4356cccd 1}
       {x44b02000 x434d6666 1}
       {x44b02000 x434b8000 1}
       {x44b02000 x4348cccd 1}}}
     {tx x447a4000 x44afcfd9 x4355ce03}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear568 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aee000 x4366999a 1}
       {x44aee666 x43653333 1}
       {x44aeeccd x4361cccd 1}
       {x44af2000 x4359e666 1}
       {x44af3666 x43560000 1}
       {x44af3666 x4354199a 1}
       {x44af499a x434f8000 1}
       {x44af5000 x434d6666 1}
       {x44af5ccd x434bcccd 1}
       {x44af6333 x434a199a 1}
       {x44af5000 x434c6666 1}}}
     {tx x447a4000 x44af2c82 x4355e413}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear567 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aeb666 x436b6666 1}
       {x44aec99a x436c4ccd 1}
       {x44aef99a x436b3333 1}
       {x44af0ccd x4366cccd 1}
       {x44af0ccd x4362e666 1}
       {x44af0000 x435b999a 1}
       {x44aeeccd x43548000 1}
       {x44aee666 x434d0000 1}
       {x44aeeccd x43486666 1}}}
     {tx x447a4000 x44aeeccd x435e749f}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear566 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b0b666 x43648000 1}
       {x44b0c666 x435f199a 1}
       {x44b0f333 x43563333 1}
       {x44b11666 x434e4ccd 1}
       {x44b13666 x434bb333 1}
       {x44b1499a x434ccccd 1}}}
     {tx x447a4000 x44b10111 x43556eef}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear565 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b0d333 x43674ccd 1}
       {x44b0c666 x4362b333 1}
       {x44b0c666 x43588000 1}
       {x44b0c666 x4354e666 1}
       {x44b0d333 x43513333 1}
       {x44b0e666 x43538000 1}
       {x44b0e666 x43594ccd 1}
       {x44b0b99a x435e4ccd 1}}}
     {tx x447a4000 x44b0d000 x435a7667}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear564 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b2399a x436c0000 1}
       {x44b1e333 x43678000 1}
       {x44b1a000 x435c6666 1}
       {x44b18000 x4356999a 1}
       {x44b17333 x43534ccd 1}
       {x44b16000 x4355b333 1}
       {x44b1499a x43573333 1}}}
     {tx x447a4000 x44b19f16 x435c62be}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear563 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b2899a x4366cccd 1}
       {x44b2a000 x43628000 1}
       {x44b2999a x43583333 1}
       {x44b2699a x4350cccd 1}
       {x44b25ccd x43520000 1}}}
     {tx x447a4000 x44b281ec x435a75c3}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear562 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b1dccd x436b999a 1}
       {x44b20ccd x4360999a 1}
       {x44b20ccd x435a199a 1}
       {x44b1e99a x43526666 1}
       {x44b1dccd x4350b333 1}
       {x44b1e99a x4354e666 1}
       {x44b1f000 x4356cccd 1}}}
     {tx x447a4000 x44b1f0ea x4359df17}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear561 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b18666 x436b0000 1}
       {x44b18000 x4366cccd 1}
       {x44b18000 x43628000 1}
       {x44b19333 x43588000 1}
       {x44b1799a x434e0000 1}
       {x44b1799a x434bb333 1}
       {x44b1799a x43516666 1}}}
     {tx x447a4000 x44b180ea x435a457d}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear560 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b17333 x436f3333 1}
       {x44b18000 x436ce666 1}
       {x44b18666 x435fcccd 1}
       {x44b1799a x43598000 1}
       {x44b16666 x43558000 1}
       {x44b1499a x434b199a 1}
       {x44b1499a x4349e666 1}
       {x44b14333 x434c999a 1}}}
     {tx x447a4000 x44b165ff x43598fff}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear559 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b09666 x437a0000 1}
       {x44b09666 x4375cccd 1}
       {x44b09666 x43724ccd 1}
       {x44b0899a x4367e666 1}
       {x44b04666 x435ab333 1}
       {x44b03333 x43508000 1}
       {x44b07ccd x43490000 1}
       {x44b09ccd x43468000 1}}}
     {tx x447a4000 x44b07c00 x43609666}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear558 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b03333 x437ecccd 1}
       {x44b03333 x437b4ccd 1}
       {x44b03333 x43796666 1}
       {x44b03333 x4370cccd 1}
       {x44aff666 x43666666 1}
       {x44afc99a x43583333 1}
       {x44afdccd x4353b333 1}
       {x44b02000 x434d3333 1}
       {x44b04666 x434ab333 1}}}
     {tx x447a4000 x44b0171c x43652aa9}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear557 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b0b000 x437ecccd 1}
       {x44b0a99a x437c4ccd 1}
       {x44b09ccd x43706666 1}
       {x44b0899a x436b0000 1}
       {x44b0399a x435de666 1}
       {x44b02666 x4359e666 1}
       {x44b01666 x43520000 1}
       {x44b0199a x434d999a 1}
       {x44b02666 x4350b333 1}}}
     {tx x447a4000 x44b05b61 x43636666}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear556 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b0d99a x437d4ccd 1}
       {x44b0b99a x437b0000 1}
       {x44b0a99a x43750000 1}
       {x44b09666 x43703333 1}
       {x44b07ccd x4366cccd 1}
       {x44b07000 x435b0000 1}
       {x44b08333 x4350199a 1}
       {x44b09666 x434e0000 1}
       {x44b09ccd x434c999a 1}
       {x44b0899a x434e4ccd 1}}}
     {tx x447a4000 x44b0999a x43626e15}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear555 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b0b000 x437bb333 1}
       {x44b0b000 x437d199a 1}
       {x44b0b000 x43793333 1}
       {x44b0b000 x436fcccd 1}
       {x44b0899a x4361cccd 1}
       {x44b05333 x43570000 1}
       {x44b05333 x43530000 1}
       {x44b06666 x434dcccd 1}
       {x44b04666 x434fb333 1}}}
     {tx x447a4000 x44b08333 x4364c9f5}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear554 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b0c666 x43784ccd 1}
       {x44b0b666 x4371b333 1}
       {x44b0b666 x436d199a 1}
       {x44b0a333 x435e4ccd 1}
       {x44b07000 x4354199a 1}
       {x44b07000 x434d0000 1}
       {x44b07ccd x434bcccd 1}
       {x44b07000 x434d0000 1}}}
     {tx x447a4000 x44b09466 x435de99a}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear553 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b10000 x437be666 1}
       {x44b0eccd x4377b333 1}
       {x44b0e000 x43713333 1}
       {x44b0b99a x4362b333 1}
       {x44b09ccd x43570000 1}
       {x44b09ccd x4351cccd 1}
       {x44b0a99a x434e0000 1}}}
     {tx x447a4000 x44b0c5f1 x4364541e}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear552 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b10000 x437f6666 1}
       {x44b0d99a x437be666 1}
       {x44b0cccd x43778000 1}
       {x44b0b99a x436c4ccd 1}
       {x44b0899a x435c6666 1}
       {x44b08333 x4350199a 1}
       {x44b09666 x434d0000 1}
       {x44b0b000 x434a8000 1}
       {x44b07666 x434d6666 1}}}
     {tx x447a4000 x44b0af4a x4361d555}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear551 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b14333 x437ecccd 1}
       {x44b14333 x437b0000 1}
       {x44b14333 x4374cccd 1}
       {x44b13ccd x4368b333 1}
       {x44b10000 x43594ccd 1}
       {x44b0d99a x434e8000 1}
       {x44b0d99a x434c0000 1}
       {x44b0d99a x434a8000 1}
       {x44b0cccd x434c0000 1}
       {x44b0b99a x434e8000 1}
       {x44b0b000 x4350b333 1}}}
     {tx x447a4000 x44b0fb0e x435d29e4}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear550 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b1a666 x4380c000 1}
       {x44b18666 x437dcccd 1}
       {x44b18000 x43793333 1}
       {x44b1799a x436de666 1}
       {x44b13ccd x435f8000 1}
       {x44b1099a x4354e666 1}
       {x44b1099a x43523333 1}
       {x44b12333 x43513333 1}
       {x44b13666 x4352cccd 1}
       {x44b13ccd x43560000 1}}}
     {tx x447a4000 x44b14e15 x4363e666}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear549 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b27666 x43710000 1}
       {x44b25ccd x436c0000 1}
       {x44b25666 x4365cccd 1}
       {x44b24000 x43594ccd 1}
       {x44b21333 x4350cccd 1}
       {x44b1f99a x434ccccd 1}
       {x44b1e333 x434dcccd 1}
       {x44b1c99a x434f199a 1}}}
     {tx x447a4000 x44b22466 x435ad334}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear548 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b20000 x437b4ccd 1}
       {x44b1f000 x43796666 1}
       {x44b1e333 x43750000 1}
       {x44b1dccd x436d199a 1}
       {x44b1e99a x435ee666 1}
       {x44b1bccd x4355199a 1}
       {x44b1b000 x4350cccd 1}
       {x44b1b000 x43533333 1}
       {x44b1b000 x43554ccd 1}}}
     {tx x447a4000 x44b1d27d x436402d9}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear547 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b1c000 x437c4000 1}
       {x44b18666 x4376cccd 1}
       {x44b18000 x43737333 1}
       {x44b18000 x436acccd 1}
       {x44b1799a x4364a666 1}
       {x44b18800 x4360199a 1}
       {x44b1ab33 x435d599a 1}}}
     {tx x447a4000 x44b19075 x436bea0e}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear546 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b1ae66 x437f3333 1}
       {x44b18000 x437a0000 1}
       {x44b17ccd x43767333 1}
       {x44b18000 x436d3333 1}
       {x44b1799a x4364599a 1}
       {x44b18800 x435fc000 1}
       {x44b1999a x435dc000 1}
       {x44b18800 x435f7333 1}}}
     {tx x447a4000 x44b189cd x436bc4cd}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear545 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b22b33 x437c4000 1}
       {x44b1f4cd x4377e666 1}
       {x44b1e800 x43743333 1}
       {x44b1eb33 x436a0000 1}
       {x44b1ee66 x4360a666 1}
       {x44b20666 x435b599a 1}
       {x44b2199a x435a7333 1}
       {x44b20b33 x435ca666 1}}}
     {tx x447a4000 x44b20199 x4368ae66}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear544 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b24800 x437d8ccd 1}
       {x44b23ccd x4378e666 1}
       {x44b2399a x4373199a 1}
       {x44b22b33 x436d0000 1}
       {x44b22000 x4362cccd 1}
       {x44b24000 x435e3333 1}
       {x44b2599a x435c199a 1}}}
     {tx x447a4000 x44b23be3 x436bf333}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear543 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b3ab33 x4374199a 1}
       {x44b3ab33 x43714000 1}
       {x44b3c800 x436b4000 1}
       {x44b3ce66 x4366e666 1}
       {x44b3b800 x4360e666 1}
       {x44b3ae66 x435d4000 1}}}
     {tx x447a4000 x44b3b889 x4368f111}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear542 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b3a000 x43763333 1}
       {x44b394cd x4373e666 1}
       {x44b394cd x4371599a 1}
       {x44b3a333 x436a3333 1}
       {x44b3a666 x43634000 1}
       {x44b3a666 x4360599a 1}}}
     {tx x447a4000 x44b39eef x436c3554}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear541 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b38333 x4376c000 1}
       {x44b37800 x4374599a 1}
       {x44b3799a x436c199a 1}
       {x44b3799a x4368a666 1}
       {x44b38666 x4362e666 1}
       {x44b3a666 x4360a666 1}}}
     {tx x447a4000 x44b38489 x436b3bbc}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear540 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b3519a x437aa666 1}
       {x44b3599a x4379599a 1}
       {x44b36000 x43770000 1}
       {x44b36333 x436fe666 1}
       {x44b3519a x43684000 1}
       {x44b34800 x4363c000 1}
       {x44b354cd x4361cccd 1}
       {x44b34e66 x43630000 1}}}
     {tx x447a4000 x44b35567 x436d7667}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear539 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b36666 x437d8ccd 1}
       {x44b36800 x437a4000 1}
       {x44b36000 x4377199a 1}
       {x44b3519a x43740000 1}
       {x44b32333 x436c4000 1}
       {x44b3119a x43668ccd 1}
       {x44b3199a x4361cccd 1}
       {x44b32e66 x4360199a 1}
       {x44b3119a x4362e666 1}}}
     {tx x447a4000 x44b33a7d x436d9c72}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear538 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b32666 x437c599a 1}
       {x44b3199a x437b199a 1}
       {x44b31800 x4375599a 1}
       {x44b3199a x43737333 1}
       {x44b3119a x436ac000 1}
       {x44b30b33 x43660000 1}
       {x44b30e66 x43637333 1}}}
     {tx x447a4000 x44b31666 x4370a2be}
     {a ro 0 go 0 bo 0 ao 0 bs x41ef3333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear537 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b2b19a x437d599a 1}
       {x44b2c800 x4377e666 1}
       {x44b2d19a x4373a666 1}
       {x44b2d4cd x436fe666 1}
       {x44b2bccd x43680000 1}
       {x44b2b4cd x43637333 1}
       {x44b2b800 x43617333 1}
       {x44b2a666 x4362a666 1}
       {x44b28e66 x43640000 1}}}
     {tx x447a4000 x44b2b8b6 x436c09f5}
     {a ro 0 go 0 bo 0 ao 0 bs x41ef3333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear536 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b2ae66 x43854666 1}
       {x44b2a800 x43848000 1}
       {x44b2a800 x4383399a 1}
       {x44b2a800 x43810ccd 1}
       {x44b2ab33 x4376e666 1}
       {x44b2ab33 x43717333 1}
       {x44b28666 x4369c000 1}
       {x44b274cd x4363c000 1}
       {x44b274cd x43600000 1}
       {x44b274cd x435dcccd 1}
       {x44b26b33 x435f4000 1}}}
     {tx x447a4000 x44b2929f x4372d174}
     {a ro 0 go 0 bo 0 ao 0 bs x41ef3333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear535 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b42ccd x437a6666 1}
       {x44b4199a x43743333 1}
       {x44b40ccd x43706666 1}
       {x44b3cccd x43650000 1}
       {x44b3accd x435ccccd 1}
       {x44b3accd x43570000 1}
       {x44b3c000 x43543333 1}}}
     {tx x447a4000 x44b3e3a8 x43664925}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear534 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b44666 x437ecccd 1}
       {x44b44ccd x437b6666 1}
       {x44b45333 x43796666 1}
       {x44b44ccd x43700000 1}
       {x44b40000 x4363999a 1}
       {x44b3eccd x435bcccd 1}
       {x44b3f333 x435acccd 1}
       {x44b40000 x435d0000 1}}}
     {tx x447a4000 x44b42266 x436b599a}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear533 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b4999a x437ccccd 1}
       {x44b4999a x43793333 1}
       {x44b4999a x43730000 1}
       {x44b4999a x43696666 1}
       {x44b4799a x43603333 1}
       {x44b46ccd x435a999a 1}
       {x44b46ccd x435ccccd 1}}}
     {tx x447a4000 x44b4883b x436a9249}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear532 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b4f333 x4380cccd 1}
       {x44b4d99a x437e0000 1}
       {x44b4d99a x437a0000 1}
       {x44b4d99a x4373cccd 1}
       {x44b49333 x4366999a 1}
       {x44b44ccd x435d999a 1}
       {x44b44666 x435a6666 1}
       {x44b46666 x435d0000 1}}}
     {tx x447a4000 x44b4a19a x436d2000}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear531 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b4e000 x437f6666 1}
       {x44b4c000 x437c6666 1}
       {x44b4c000 x43776666 1}
       {x44b4c000 x4372cccd 1}
       {x44b4c000 x43713333 1}
       {x44b4b333 x436dcccd 1}
       {x44b48666 x43636666 1}
       {x44b48000 x435e999a 1}
       {x44b48666 x435b0000 1}
       {x44b48ccd x435d0000 1}
       {x44b48666 x435f999a 1}}}
     {tx x447a4000 x44b4a791 x436b8254}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear530 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b5b333 x437f0000 1}
       {x44b56000 x43786666 1}
       {x44b55333 x4373cccd 1}
       {x44b54ccd x4368999a 1}
       {x44b5399a x435c0000 1}
       {x44b5399a x43590000 1}
       {x44b4e666 x435c6666 1}}}
     {tx x447a4000 x44b54af9 x4369e2bf}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear529 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b5d99a x43808000 1}
       {x44b5b333 x437f3333 1}
       {x44b5999a x4376999a 1}
       {x44b5999a x436f6666 1}
       {x44b58666 x4363999a 1}
       {x44b58666 x435b3333 1}
       {x44b59333 x43593333 1}
       {x44b58666 x435bcccd 1}}}
     {tx x447a4000 x44b59ccd x436b4000}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear528 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b5b333 x43803333 1}
       {x44b58ccd x43796666 1}
       {x44b58ccd x4374cccd 1}
       {x44b5accd x43653333 1}
       {x44b5accd x43613333 1}
       {x44b5b99a x435c999a 1}
       {x44b5d333 x43580000 1}
       {x44b5d333 x435a6666 1}
       {x44b5d333 x435d3333 1}}}
     {tx x447a4000 x44b5b49e x43673e94}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear527 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b68666 x437f999a 1}
       {x44b64000 x437c0000 1}
       {x44b62666 x43756666 1}
       {x44b61333 x436a0000 1}
       {x44b60666 x435d999a 1}
       {x44b62ccd x43590000 1}
       {x44b63333 x435b999a 1}
       {x44b6199a x435f999a 1}}}
     {tx x447a4000 x44b63000 x43699999}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear526 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b6b333 x4377cccd 1}
       {x44b6b333 x43760000 1}
       {x44b6b99a x436f0000 1}
       {x44b6d99a x43676666 1}
       {x44b6e666 x43616666 1}
       {x44b6f99a x4359999a 1}
       {x44b6d333 x435dcccd 1}
       {x44b6a666 x43616666 1}}}
     {tx x447a4000 x44b6ca66 x4367cccd}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear525 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b6cccd x43803333 1}
       {x44b6c000 x437b999a 1}
       {x44b6b99a x43773333 1}
       {x44b6a666 x436b6666 1}
       {x44b6999a x4363cccd 1}
       {x44b6999a x43623333 1}
       {x44b6999a x4360999a 1}
       {x44b6accd x435a999a 1}
       {x44b6a666 x435e0000 1}}}
     {tx x447a4000 x44b6ac17 x436a6c15}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear524 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b62000 x43848000 1}
       {x44b5f333 x437f999a 1}
       {x44b60666 x43773333 1}
       {x44b62666 x436a0000 1}
       {x44b60666 x435e0000 1}
       {x44b60666 x4359999a 1}
       {x44b6199a x435b6666 1}}}
     {tx x447a4000 x44b60ea1 x436d41d5}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear523 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b82000 x437e6666 1}
       {x44b80ccd x437bcccd 1}
       {x44b80666 x43780000 1}
       {x44b7eccd x436fcccd 1}
       {x44b7e666 x4367999a 1}
       {x44b7f333 x435f999a 1}
       {x44b7f99a x435c999a 1}}}
     {tx x447a4000 x44b7fe2a x436e8af8}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear522 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b7599a x437f999a 1}
       {x44b77333 x437bcccd 1}
       {x44b7a666 x4375999a 1}
       {x44b7c000 x436d0000 1}
       {x44b7c000 x43633333 1}
       {x44b7b99a x435ecccd 1}
       {x44b7accd x4360cccd 1}}}
     {tx x447a4000 x44b79f16 x436dd41e}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear521 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b7d333 x437a6666 1}
       {x44b7e666 x43783333 1}
       {x44b7f333 x4375999a 1}
       {x44b81333 x436d6666 1}
       {x44b81333 x43660000 1}
       {x44b82000 x4361cccd 1}
       {x44b7f99a x43633333 1}}}
     {tx x447a4000 x44b7fd41 x436dcccd}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear520 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b78ccd x437c6666 1}
       {x44b78666 x43796666 1}
       {x44b78666 x43710000 1}
       {x44b78666 x436fcccd 1}
       {x44b78666 x436d0000 1}
       {x44b78000 x43656666 1}
       {x44b78000 x4362cccd 1}
       {x44b78000 x43606666 1}}}
     {tx x447a4000 x44b784cd x436d8667}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear519 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b78666 x43846666 1}
       {x44b76ccd x4382cccd 1}
       {x44b76ccd x4381199a 1}
       {x44b7799a x43786666 1}
       {x44b78ccd x436e6666 1}
       {x44b7a000 x43680000 1}
       {x44b7accd x4365cccd 1}
       {x44b7b333 x4364cccd 1}
       {x44b78ccd x43666666 1}}}
     {tx x447a4000 x44b78ccc x4373999b}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear518 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b74000 x43880000 1}
       {x44b72ccd x4386e666 1}
       {x44b72666 x43858000 1}
       {x44b72000 x43818000 1}
       {x44b72000 x4380cccd 1}
       {x44b71333 x437d3333 1}
       {x44b6f333 x43763333 1}
       {x44b6d333 x436f0000 1}
       {x44b6b333 x43686666 1}
       {x44b6a666 x4361cccd 1}
       {x44b68666 x43623333 1}}}
     {tx x447a4000 x44b6f586 x4379d61a}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear517 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b8a000 x43836666 1}
       {x44b8a000 x43818000 1}
       {x44b8a000 x437d3333 1}
       {x44b86ccd x4373999a 1}
       {x44b82000 x436ccccd 1}
       {x44b7cccd x43636666 1}
       {x44b7e000 x435f3333 1}}}
     {tx x447a4000 x44b84ccd x4373b6db}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear516 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b8eccd x43876666 1}
       {x44b8d333 x4385b333 1}
       {x44b8a666 x4381199a 1}
       {x44b88ccd x437d999a 1}
       {x44b87333 x4378999a 1}
       {x44b84ccd x436f0000 1}
       {x44b84ccd x4369cccd 1}
       {x44b84ccd x43670000 1}
       {x44b86ccd x4363999a 1}}}
     {tx x447a4000 x44b88668 x4377c71c}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear515 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b98ccd x4385b333 1}
       {x44b9799a x43844ccd 1}
       {x44b9799a x43823333 1}
       {x44b9799a x437bcccd 1}
       {x44b92ccd x436f3333 1}
       {x44b90000 x43650000 1}
       {x44b90ccd x43623333 1}}}
     {tx x447a4000 x44b95075 x43785f16}
     {a ro 0 go 0 bo 0 ao 0 bs x421c0000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear514 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ba2000 x43850000 1}
       {x44ba3333 x4382b333 1}
       {x44ba4666 x43804ccd 1}
       {x44ba5333 x43776666 1}
       {x44ba599a x436b999a 1}
       {x44ba6000 x4367999a 1}}}
     {tx x447a4000 x44ba4667 x4379c444}
     {a ro 0 go 0 bo 0 ao 0 bs x421c0000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear513 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bab333 x43860000 1}
       {x44ba8ccd x4384cccd 1}
       {x44ba999a x437d3333 1}
       {x44ba999a x437a3333 1}
       {x44ba999a x43706666 1}
       {x44baa000 x436d999a 1}
       {x44baa000 x436c999a 1}}}
     {tx x447a4000 x44ba9d41 x437a3a83}
     {a ro 0 go 0 bo 0 ao 0 bs x421c0000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear512 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44baa666 x4387e666 1}
       {x44baaccd x43868000 1}
       {x44baaccd x4382b333 1}
       {x44baaccd x43804ccd 1}
       {x44baaccd x437a3333 1}
       {x44baa666 x43723333 1}
       {x44baaccd x43706666 1}
       {x44baaccd x4371999a 1}}}
     {tx x447a4000 x44baab34 x437e2665}
     {a ro 0 go 0 bo 0 ao 0 bs x421c0000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear511 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bbe666 x43890000 1}
       {x44bbc000 x4388199a 1}
       {x44bb9333 x43820000 1}
       {x44bb9333 x437c999a 1}
       {x44bbaccd x4376999a 1}
       {x44bbc000 x43750000 1}}}
     {tx x447a4000 x44bbb444 x43813333}
     {a ro 0 go 0 bo 0 ao 0 bs x41b33333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear510 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bbc666 x4388199a 1}
       {x44bbb99a x4384199a 1}
       {x44bbb99a x43824ccd 1}
       {x44bbe666 x437d3333 1}
       {x44bc1333 x437b3333 1}
       {x44bc2ccd x437e0000 1}}}
     {tx x447a4000 x44bbe555 x43819ddd}
     {a ro 0 go 0 bo 0 ao 0 bs x41b33333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear509 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bbf99a x43896666 1}
       {x44bbd333 x43886666 1}
       {x44bbcccd x4387999a 1}
       {x44bbc000 x4383cccd 1}
       {x44bbcccd x43804ccd 1}
       {x44bbf333 x437d0000 1}}}
     {tx x447a4000 x44bbd999 x4384aaab}
     {a ro 0 go 0 bo 0 ao 0 bs x41b33333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear508 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bc4ccd x438a999a 1}
       {x44bc0ccd x43830000 1}
       {x44bc0666 x43823333 1}
       {x44bc0666 x4381199a 1}}}
     {tx x447a4000 x44bc199a x4384399a}
     {a ro 0 go 0 bo 0 ao 0 bs x41b33333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear507 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bc2ccd x438a199a 1}
       {x44bc2000 x43896666 1}
       {x44bc0666 x4385999a 1}
       {x44bc1333 x43834ccd 1}
       {x44bc399a x4380cccd 1}
       {x44bc4666 x437f0000 1}
       {x44bc5333 x43800000 1}}}
     {tx x447a4000 x44bc2ccd x4384199a}
     {a ro 0 go 0 bo 0 ao 0 bs x41e00000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear506 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bc9000 x43886666 1}
       {x44bc9000 x43848ccd 1}
       {x44bc9666 x43824ccd 1}
       {x44bc7ccd x43788000 1}
       {x44bc7000 x4373199a 1}
       {x44bc799a x43718000 1}}}
     {tx x447a4000 x44bc84cd x437f4444}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear505 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bd0666 x438cf333 1}
       {x44bcc000 x438a0ccd 1}
       {x44bc999a x43870000 1}
       {x44bc7000 x43816666 1}
       {x44bc6666 x437cb333 1}
       {x44bc8333 x43790000 1}}}
     {tx x447a4000 x44bc9eef x43846000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear504 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bcc99a x438ec000 1}
       {x44bcaccd x438c7333 1}
       {x44bcaccd x43892666 1}
       {x44bca333 x4384d99a 1}
       {x44bc7000 x43802666 1}
       {x44bc7333 x437b3333 1}
       {x44bc9000 x437a999a 1}}}
     {tx x447a4000 x44bc9a83 x43852db6}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear503 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bdb333 x438f4ccd 1}
       {x44bd7000 x438c999a 1}
       {x44bd599a x438a4ccd 1}
       {x44bd3666 x4382f333 1}
       {x44bd2ccd x4381599a 1}
       {x44bd2000 x437e999a 1}
       {x44bd2333 x4379199a 1}}}
     {tx x447a4000 x44bd4e2b x43857a83}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear502 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bd9ccd x438fa666 1}
       {x44bd8ccd x438f3333 1}
       {x44bd7000 x438b8000 1}
       {x44bd7000 x4389199a 1}
       {x44bd799a x43840000 1}
       {x44bd599a x437d999a 1}
       {x44bd499a x43788000 1}}}
     {tx x447a4000 x44bd7332 x438736db}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear501 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44be0ccd x438e8ccd 1}
       {x44bdfccd x438d4000 1}
       {x44bdfccd x438a599a 1}
       {x44be1666 x4384d99a 1}
       {x44be1333 x43800000 1}
       {x44be1333 x437c8000 1}}}
     {tx x447a4000 x44be0b34 x4386e000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear500 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bf3333 x438fa666 1}
       {x44bf1666 x438d0ccd 1}
       {x44bf2000 x43897333 1}
       {x44bf2ccd x4387e666 1}
       {x44bf3333 x43838000 1}
       {x44bf2333 x43813333 1}
       {x44bf2333 x437fcccd 1}
       {x44bf3333 x437ccccd 1}}}
     {tx x447a4000 x44bf2865 x4386219a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear499 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bef333 x4393199a 1}
       {x44bed666 x4391c000 1}
       {x44bed666 x4390199a 1}
       {x44bedccd x438a599a 1}
       {x44bea666 x4384c000 1}
       {x44be7666 x437f6666 1}
       {x44be7666 x437cb333 1}
       {x44be899a x4379e666 1}}}
     {tx x447a4000 x44beb333 x4387e19a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear498 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44be2666 x438fcccd 1}
       {x44be2666 x438f2666 1}
       {x44be2000 x438cc000 1}
       {x44be299a x438b3333 1}
       {x44be4666 x43863333 1}
       {x44be4666 x4381f333 1}
       {x44be3ccd x437d6666 1}}}
     {tx x447a4000 x44be324a x4388d24a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear497 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bdd666 x43894000 1}
       {x44bde000 x43866666 1}
       {x44bde000 x43858000 1}
       {x44bdd000 x4382f333 1}
       {x44bdb000 x437fcccd 1}
       {x44bdb99a x437d999a 1}
       {x44bdcccd x437e8000 1}}}
     {tx x447a4000 x44bdcd42 x43832666}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear496 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bdc666 x438a4ccd 1}
       {x44bdb000 x43894ccd 1}
       {x44bda000 x4388599a 1}
       {x44bd9ccd x43853333 1}
       {x44bd9666 x4381cccd 1}
       {x44bd9333 x437e0000 1}
       {x44bd9333 x4378cccd 1}
       {x44bda000 x43773333 1}}}
     {tx x447a4000 x44bda1ff x43833e67}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear495 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bda000 x43888ccd 1}
       {x44bd9ccd x4387c000 1}
       {x44bd9ccd x4386199a 1}
       {x44bda000 x43818000 1}
       {x44bda666 x437cb333 1}
       {x44bdbccd x437a0000 1}}}
     {tx x447a4000 x44bda4cd x43833555}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear494 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bdd666 x43878000 1}
       {x44bdd666 x4385e666 1}
       {x44bdd99a x43844ccd 1}
       {x44bde333 x43804ccd 1}
       {x44bdd99a x437c199a 1}
       {x44bdd99a x437b0000 1}}}
     {tx x447a4000 x44bdda23 x43824222}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear493 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bd9ccd x43884000 1}
       {x44bd9333 x43863333 1}
       {x44bd9333 x4384199a 1}
       {x44bd9666 x43803333 1}
       {x44bd9666 x437c6666 1}}}
     {tx x447a4000 x44bd9666 x438363d7}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear492 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bd6333 x4387599a 1}
       {x44bd599a x4385f333 1}
       {x44bd5000 x4383d99a 1}
       {x44bd5000 x43807333 1}
       {x44bd4000 x437b999a 1}}}
     {tx x447a4000 x44bd528f x4383147a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear491 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bd2000 x4388b333 1}
       {x44bd0ccd x43878000 1}
       {x44bd0333 x43852666 1}
       {x44bcf99a x4380cccd 1}
       {x44bcdccd x437b8000 1}
       {x44bcd666 x4379b333 1}}}
     {tx x447a4000 x44bcfa21 x4382caab}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear490 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bc9666 x43870ccd 1}
       {x44bc8666 x43864000 1}
       {x44bc7ccd x4383b333 1}
       {x44bc7333 x43814000 1}
       {x44bc699a x437de666 1}
       {x44bc6666 x4378cccd 1}}}
     {tx x447a4000 x44bc7a23 x43824445}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear489 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bcd666 x438a0000 1}
       {x44bccccd x43892666 1}
       {x44bcb666 x4386d99a 1}
       {x44bcb666 x4385e666 1}
       {x44bcb333 x43844ccd 1}
       {x44bc9666 x43818ccd 1}
       {x44bc7000 x437d999a 1}
       {x44bc6000 x437c199a 1}
       {x44bc4ccd x437d4ccd 1}}}
     {tx x447a4000 x44bc9b61 x4383b1c7}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear488 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bfe333 x438c3333 1}
       {x44bfc000 x4389a666 1}
       {x44bfbccd x4386199a 1}
       {x44bfbccd x4384199a 1}
       {x44bfd666 x43834ccd 1}}}
     {tx x447a4000 x44bfca3d x438711eb}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear487 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c08ccd x438eb333 1}
       {x44c03000 x438b199a 1}
       {x44c02000 x438a0000 1}
       {x44bfd333 x43858000 1}
       {x44bfbccd x43844ccd 1}
       {x44bfc666 x43858000 1}
       {x44bfcccd x43864ccd 1}
       {x44bfcccd x4387b333 1}}}
     {tx x447a4000 x44bff99a x43882333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear486 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c0c333 x4391b333 1}
       {x44c09666 x438ff333 1}
       {x44c08ccd x438d0ccd 1}
       {x44c0699a x43880ccd 1}
       {x44c04ccd x4385599a 1}
       {x44c03ccd x43847333 1}
       {x44c03666 x43850000 1}}}
     {tx x447a4000 x44c07000 x4389ef8b}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear485 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c1399a x43934ccd 1}
       {x44c12ccd x4391cccd 1}
       {x44c12ccd x438f999a 1}
       {x44c12ccd x438d8000 1}
       {x44c11333 x43884ccd 1}
       {x44c0f000 x43852666 1}
       {x44c0fccd x43864ccd 1}}}
     {tx x447a4000 x44c11b6e x438c4751}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear484 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c10666 x43940000 1}
       {x44c0e666 x43914000 1}
       {x44c0e000 x438da666 1}
       {x44c0b99a x4388f333 1}
       {x44c09666 x43858000 1}
       {x44c09666 x4384e666 1}
       {x44c0bccd x4386199a 1}}}
     {tx x447a4000 x44c0c6dd x438ae83a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear483 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c2b000 x4393a666 1}
       {x44c2a666 x4391999a 1}
       {x44c2a666 x438f0000 1}
       {x44c26ccd x4388f333 1}
       {x44c22666 x43858000 1}
       {x44c21333 x4385f333 1}}}
     {tx x447a4000 x44c27088 x438c1bbc}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear482 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c34333 x43956666 1}
       {x44c32333 x43924000 1}
       {x44c32333 x438f8000 1}
       {x44c31666 x438a999a 1}
       {x44c2f000 x4387b333 1}
       {x44c2d99a x43882666 1}}}
     {tx x447a4000 x44c31199 x438d9999}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear481 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c30ccd x43950ccd 1}
       {x44c30ccd x4394599a 1}
       {x44c31ccd x43913333 1}
       {x44c32666 x438f6666 1}
       {x44c31ccd x438b7333 1}
       {x44c31000 x438a2666 1}
       {x44c2f99a x438ad99a 1}}}
     {tx x447a4000 x44c312bf x438f3507}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear480 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c1d666 x43940000 1}
       {x44c1cccd x43908ccd 1}
       {x44c1d000 x438e0000 1}
       {x44c1cccd x438a599a 1}
       {x44c1b000 x43880ccd 1}
       {x44c1a99a x4388a666 1}}}
     {tx x447a4000 x44c1c444 x438ceeef}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear479 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c28000 x4397f333 1}
       {x44c25ccd x43958ccd 1}
       {x44c25333 x4393cccd 1}
       {x44c2299a x438ecccd 1}
       {x44c20333 x438b7333 1}
       {x44c1eccd x4389b333 1}
       {x44c20333 x438ab333 1}}}
     {tx x447a4000 x44c22f8a x438ffe2c}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear478 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c39ccd x43984ccd 1}
       {x44c34333 x43953333 1}
       {x44c31666 x4392c000 1}
       {x44c2bccd x438e199a 1}
       {x44c2a666 x438b7333 1}
       {x44c2a666 x438a999a 1}
       {x44c2a666 x438b199a 1}}}
     {tx x447a4000 x44c2f333 x438fedb7}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear477 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c4899a x439dcccd 1}
       {x44c48333 x439c6666 1}
       {x44c48333 x439a8ccd 1}
       {x44c46ccd x43960000 1}
       {x44c42333 x4390c000 1}
       {x44c3f666 x438d999a 1}
       {x44c3f666 x438ce666 1}}}
     {tx x447a4000 x44c44af9 x43956db7}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear476 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c4dccd x439e999a 1}
       {x44c4a666 x439ac000 1}
       {x44c4999a x4396b333 1}
       {x44c49000 x43913333 1}
       {x44c49000 x438e7333 1}
       {x44c47333 x438ee666 1}}}
     {tx x447a4000 x44c49d55 x43951999}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear475 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c53000 x439ed99a 1}
       {x44c52666 x439e4000 1}
       {x44c51000 x439a4ccd 1}
       {x44c5099a x4398b333 1}
       {x44c4eccd x4393cccd 1}
       {x44c4c000 x438f999a 1}
       {x44c4bccd x438f0ccd 1}
       {x44c4b666 x438fd99a 1}}}
     {tx x447a4000 x44c4f201 x43964ccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear474 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c58000 x439f4ccd 1}
       {x44c55ccd x439c6666 1}
       {x44c56333 x43998000 1}
       {x44c55ccd x4393b333 1}
       {x44c54333 x438f8000 1}
       {x44c53ccd x438e7333 1}
       {x44c53ccd x43903333 1}}}
     {tx x447a4000 x44c555f2 x4395941e}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear473 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c6e333 x439e0000 1}
       {x44c6dccd x439d7333 1}
       {x44c6b99a x4399b333 1}
       {x44c6b000 x4397a666 1}
       {x44c68ccd x4393599a 1}
       {x44c68333 x4391599a 1}
       {x44c66666 x4391f333 1}}}
     {tx x447a4000 x44c6a925 x43975999}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear472 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c79666 x43a1f333 1}
       {x44c78333 x439fc000 1}
       {x44c78333 x439e0000 1}
       {x44c77333 x4399599a 1}
       {x44c74000 x43958ccd 1}
       {x44c72666 x43938ccd 1}
       {x44c6f333 x43940000 1}}}
     {tx x447a4000 x44c7583a x439a057d}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear471 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c6eccd x43a2199a 1}
       {x44c6e666 x43a03333 1}
       {x44c6dccd x439c8000 1}
       {x44c6c666 x4399999a 1}
       {x44c6999a x4396199a 1}
       {x44c69333 x4394f333 1}
       {x44c69333 x43957333 1}}}
     {tx x447a4000 x44c6bea0 x439a6a0f}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear470 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c66000 x43a30000 1}
       {x44c6599a x43a38000 1}
       {x44c6499a x43a08ccd 1}
       {x44c6499a x439bf333 1}
       {x44c6399a x4399999a 1}
       {x44c61666 x43976666 1}
       {x44c5d333 x43937333 1}}}
     {tx x447a4000 x44c63492 x439c7e2b}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear469 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c90333 x43a9cccd 1}
       {x44c8fccd x43a90ccd 1}
       {x44c8fccd x43a54000 1}
       {x44c8fccd x43a2199a 1}
       {x44c8d000 x439d599a 1}
       {x44c89666 x43996666 1}
       {x44c87666 x43970ccd 1}
       {x44c87666 x4396599a 1}}}
     {tx x447a4000 x44c8c99a x439fcb34}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear468 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c89666 x43b28000 1}
       {x44c87666 x43b0c000 1}
       {x44c86000 x43abd99a 1}
       {x44c8499a x43a8c000 1}
       {x44c7f99a x43a20000 1}
       {x44c7e99a x439d8ccd 1}
       {x44c7f000 x439b999a 1}}}
     {tx x447a4000 x44c8383a x43a74925}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear467 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c96333 x43b52666 1}
       {x44c9199a x43b1a666 1}
       {x44c8fccd x43ae199a 1}
       {x44c8b333 x43a6a666 1}
       {x44c88000 x43a16666 1}
       {x44c87000 x439cf333 1}
       {x44c87666 x439b7333 1}}}
     {tx x447a4000 x44c8cbe3 x43a79f17}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear466 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c9c666 x43b56666 1}
       {x44c99333 x43b44000 1}
       {x44c94ccd x43af999a 1}
       {x44c94000 x43ad8000 1}
       {x44c90666 x43a57333 1}
       {x44c8e000 x439e999a 1}
       {x44c8c333 x439c0ccd 1}}}
     {tx x447a4000 x44c93923 x43aa1f17}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear465 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ca699a x43af8ccd 1}
       {x44ca599a x43aec000 1}
       {x44ca3ccd x43aa199a 1}
       {x44ca3ccd x43a70000 1}
       {x44ca2000 x43a0e666 1}
       {x44c9f333 x439c8000 1}
       {x44c9cccd x439c8000 1}}}
     {tx x447a4000 x44ca28b0 x43a5e667}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear464 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cb0000 x43b1199a 1}
       {x44cb0000 x43accccd 1}
       {x44cb0000 x43aa7333 1}
       {x44cad000 x43a3599a 1}
       {x44cab99a x43a1c000 1}
       {x44caa333 x439f3333 1}
       {x44caa333 x439d0000 1}}}
     {tx x447a4000 x44cad491 x43a5f335}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear463 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cb399a x43b5f333 1}
       {x44cb2333 x43b3cccd 1}
       {x44cb0666 x43b17333 1}
       {x44cad000 x43ab8000 1}
       {x44ca7000 x43a32666 1}
       {x44ca6333 x439f8ccd 1}
       {x44ca8666 x439e2666 1}}}
     {tx x447a4000 x44cacaf8 x43aa38b0}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear462 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cb2ccd x43bb3333 1}
       {x44cb1ccd x43b8c000 1}
       {x44cb0ccd x43b54ccd 1}
       {x44cae000 x43ae8ccd 1}
       {x44ca7000 x43a73333 1}
       {x44ca5333 x43a18000 1}
       {x44ca5ccd x43a03333 1}}}
     {tx x447a4000 x44cac333 x43add075}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear461 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cc7333 x43b88ccd 1}
       {x44cc7333 x43b7c000 1}
       {x44cc3ccd x43b2999a 1}
       {x44cc3000 x43b0a666 1}
       {x44cc0333 x43a97333 1}
       {x44cbf99a x43a44ccd 1}
       {x44cc2000 x43a23333 1}}}
     {tx x447a4000 x44cc3492 x43ae36db}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear460 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cc9000 x43b87333 1}
       {x44cc899a x43b78000 1}
       {x44cc8000 x43b5d99a 1}
       {x44cc799a x43b02666 1}
       {x44cc5333 x43a9e666 1}
       {x44cc299a x43a6999a 1}
       {x44cc3666 x43a5199a 1}}}
     {tx x447a4000 x44cc657d x43af5d42}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear459 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ccd333 x43bc599a 1}
       {x44ccd333 x43bb3333 1}
       {x44cce333 x43b93333 1}
       {x44cce99a x43b48ccd 1}
       {x44ccbccd x43add99a 1}
       {x44cc999a x43a8d99a 1}
       {x44cc8333 x43a74ccd 1}}}
     {tx x447a4000 x44ccc1d3 x43b2c1d5}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear458 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cec99a x43bc8ccd 1}
       {x44ce8ccd x43b98000 1}
       {x44ce7ccd x43b74ccd 1}
       {x44ce6666 x43b2e666 1}
       {x44ce7666 x43af4ccd 1}
       {x44cea666 x43ad8000 1}}}
     {tx x447a4000 x44ce8e67 x43b4d778}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear457 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cf4000 x43bae666 1}
       {x44cf3ccd x43ba3333 1}
       {x44cf3666 x43b6b333 1}
       {x44cf3666 x43b4cccd 1}
       {x44cf1ccd x43b0cccd 1}
       {x44cefccd x43adf333 1}}}
     {tx x447a4000 x44cf2b34 x43b53999}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear456 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ceaccd x43bd4ccd 1}
       {x44ceb333 x43bc6666 1}
       {x44ceaccd x43ba599a 1}
       {x44cea000 x43b60ccd 1}
       {x44ce799a x43b04ccd 1}
       {x44ce799a x43add99a 1}
       {x44ce9ccd x43ad0000 1}}}
     {tx x447a4000 x44ce9af9 x43b55249}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear455 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cec99a x43c24ccd 1}
       {x44cec000 x43c17333 1}
       {x44cea666 x43bea666 1}
       {x44ce8ccd x43bba666 1}
       {x44ce499a x43b72666 1}
       {x44cdfccd x43b30000 1}
       {x44ce2333 x43b10000 1}
       {x44ce4666 x43b08ccd 1}}}
     {tx x447a4000 x44ce6d9a x43b93801}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear454 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ceaccd x43c40000 1}
       {x44ce9333 x43c2599a 1}
       {x44ce899a x43bf8ccd 1}
       {x44ce8333 x43b98ccd 1}
       {x44ce4666 x43b50ccd 1}
       {x44ce1666 x43b1f333 1}
       {x44ce2333 x43b14ccd 1}}}
     {tx x447a4000 x44ce6666 x43ba4000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear453 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d08333 x43c10000 1}
       {x44d04000 x43be999a 1}
       {x44d02ccd x43bc8000 1}
       {x44d00ccd x43b6599a 1}
       {x44d00333 x43b5199a 1}
       {x44cffccd x43b4999a 1}
       {x44cfe99a x43b37333 1}
       {x44cfc000 x43b26666 1}
       {x44cf9333 x43b2d99a 1}}}
     {tx x447a4000 x44d00666 x43b7a665}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear452 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d10333 x43c47333 1}
       {x44d0e000 x43c3cccd 1}
       {x44d0b666 x43c1d99a 1}
       {x44d08ccd x43bd2666 1}
       {x44d06333 x43b80000 1}
       {x44d05666 x43b4b333 1}
       {x44d06ccd x43b3a666 1}}}
     {tx x447a4000 x44d09d42 x43bc83a8}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear451 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d06000 x43c3e666 1}
       {x44d05333 x43c30000 1}
       {x44d04333 x43bf8000 1}
       {x44d03333 x43bd6666 1}
       {x44cfe333 x43b84ccd 1}
       {x44cfa666 x43b4e666 1}
       {x44cf9ccd x43b3199a 1}
       {x44cf9ccd x43b3f333 1}}}
     {tx x447a4000 x44cffd9b x43bb0199}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear450 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d16333 x43cd199a 1}
       {x44d1a000 x43cd199a 1}
       {x44d2199a x43cd4000 1}
       {x44d37666 x43cd6666 1}
       {x44d4f000 x43cd8000 1}
       {x44d62666 x43cd8000 1}
       {x44d72000 x43cdb333 1}
       {x44d74333 x43cdcccd 1}}}
     {tx x447a4000 x44d4419a x43cd6b33}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear449 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2699a x43ccb333 1}
       {x44d2e333 x43cd0000 1}
       {x44d3699a x43cd4000 1}
       {x44d49333 x43cd8000 1}
       {x44d59666 x43cd8000 1}
       {x44d63000 x43cd4ccd 1}
       {x44d61000 x43cd4000 1}}}
     {tx x447a4000 x44d47249 x43cd36db}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear448 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d28ccd x43cbcccd 1}
       {x44d2bccd x43cbe666 1}
       {x44d2e333 x43cbf333 1}
       {x44d34666 x43cc0ccd 1}
       {x44d3f666 x43cc3333 1}
       {x44d4d000 x43cc4ccd 1}
       {x44d58ccd x43cc599a 1}
       {x44d5b000 x43cc599a 1}}}
     {tx x447a4000 x44d3eecd x43cc1ccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear447 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2bccd x43ca8ccd 1}
       {x44d2f333 x43cad99a 1}
       {x44d3499a x43cad99a 1}
       {x44d4e666 x43caf333 1}
       {x44d5eccd x43caf333 1}
       {x44d6499a x43cad99a 1}
       {x44d5f666 x43cad99a 1}}}
     {tx x447a4000 x44d4941e x43cad5f1}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear446 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d1b000 x43c88000 1}
       {x44d22000 x43c8d99a 1}
       {x44d2c666 x43c90ccd 1}
       {x44d45666 x43c8f333 1}
       {x44d59ccd x43c8a666 1}
       {x44d64000 x43c84ccd 1}
       {x44d5f666 x43c86666 1}}}
     {tx x447a4000 x44d41b6f x43c8abe3}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear445 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cfa000 x43c30000 1}
       {x44cfc333 x43c34000 1}
       {x44d04000 x43c38ccd 1}
       {x44d0e000 x43c3b333 1}
       {x44d2c99a x43c43333 1}
       {x44d46000 x43c4c000 1}
       {x44d4d666 x43c5999a 1}
       {x44d4899a x43c6199a 1}}}
     {tx x447a4000 x44d2219a x43c444cc}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear444 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cfd666 x43c02666 1}
       {x44d0499a x43bfe666 1}
       {x44d10666 x43bfc000 1}
       {x44d2799a x43bf999a 1}
       {x44d3c333 x43bf599a 1}
       {x44d46000 x43bf4000 1}
       {x44d41666 x43bf4000 1}}}
     {tx x447a4000 x44d243a8 x43bf9b6e}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear443 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cee333 x43c04ccd 1}
       {x44cf3ccd x43c04ccd 1}
       {x44cfa99a x43c03333 1}
       {x44d0e99a x43c00ccd 1}
       {x44d28ccd x43bfd99a 1}
       {x44d3b99a x43bf999a 1}
       {x44d40666 x43bf8000 1}
       {x44d3e666 x43bf8000 1}}}
     {tx x447a4000 x44d19ccd x43bfe999}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear442 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ce2000 x43c12666 1}
       {x44ce6ccd x43c1199a 1}
       {x44ced333 x43c1199a 1}
       {x44d09666 x43c10000 1}
       {x44d12000 x43c0f333 1}
       {x44d1f000 x43c0d99a 1}
       {x44d39000 x43c07333 1}
       {x44d41666 x43c03333 1}
       {x44d3d99a x43c02666 1}}}
     {tx x447a4000 x44d12b61 x43c0c5b0}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear441 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cedccd x43c28000 1}
       {x44cf5666 x43c28000 1}
       {x44cfe666 x43c28000 1}
       {x44d17333 x43c28000 1}
       {x44d3c000 x43c20ccd 1}
       {x44d4199a x43c1c000 1}
       {x44d3a666 x43c1c000 1}}}
     {tx x447a4000 x44d1941e x43c238b0}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear440 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cec000 x43c34ccd 1}
       {x44cee666 x43c34ccd 1}
       {x44d0499a x43c38ccd 1}
       {x44d17ccd x43c38ccd 1}
       {x44d3b000 x43c34ccd 1}
       {x44d4b333 x43c30000 1}}}
     {tx x447a4000 x44d14d55 x43c35555}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear439 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cf7666 x43c56666 1}
       {x44d0199a x43c56666 1}
       {x44d0b666 x43c56666 1}
       {x44d26000 x43c54ccd 1}
       {x44d4dccd x43c48000 1}
       {x44d52666 x43c4599a 1}
       {x44d56000 x43c43333 1}
       {x44d50ccd x43c40ccd 1}}}
     {tx x447a4000 x44d2e2ce x43c4d333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear438 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cf999a x43c7d99a 1}
       {x44d04000 x43c7999a 1}
       {x44d14000 x43c77333 1}
       {x44d33666 x43c6f333 1}
       {x44d5199a x43c6199a 1}
       {x44d5699a x43c5b333 1}
       {x44d52333 x43c5999a 1}}}
     {tx x447a4000 x44d2da0e x43c6c000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear437 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cdd666 x43ca2666 1}
       {x44cea666 x43ca4ccd 1}
       {x44cf499a x43ca4ccd 1}
       {x44d1299a x43ca4ccd 1}
       {x44d2f000 x43ca2666 1}
       {x44d4accd x43c9e666 1}
       {x44d5a000 x43c9c000 1}}}
     {tx x447a4000 x44d1741e x43ca1f16}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear436 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ceb666 x43cb599a 1}
       {x44cfe666 x43cb4000 1}
       {x44d08ccd x43cb4000 1}
       {x44d19666 x43cb0000 1}
       {x44d3b666 x43ca8ccd 1}
       {x44d55666 x43ca2666 1}
       {x44d64ccd x43ca0000 1}}}
     {tx x447a4000 x44d24cce x43cacaf8}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear435 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d1999a x43ce0ccd 1}
       {x44d21000 x43ce4000 1}
       {x44d2a333 x43ce599a 1}
       {x44d3e333 x43ce199a 1}
       {x44d4e666 x43cd8ccd 1}
       {x44d58333 x43cd2666 1}}}
     {tx x447a4000 x44d36eef x43cde889}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear434 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2d666 x43cf999a 1}
       {x44d2f99a x43cf999a 1}
       {x44d3f333 x43cf999a 1}
       {x44d4c666 x43cf999a 1}
       {x44d67ccd x43cf3333 1}
       {x44d73ccd x43cee666 1}
       {x44d7c666 x43cf0000 1}}}
     {tx x447a4000 x44d525f2 x43cf5b6e}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear433 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d1f000 x43d08ccd 1}
       {x44d21000 x43d08000 1}
       {x44d28ccd x43d06666 1}
       {x44d3e333 x43d0599a 1}
       {x44d5499a x43d0199a 1}
       {x44d68666 x43cf999a 1}
       {x44d6f666 x43cf6666 1}}}
     {tx x447a4000 x44d42c58 x43d020e9}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear432 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d1e000 x43d10ccd 1}
       {x44d2a666 x43d0a666 1}
       {x44d32000 x43d08ccd 1}
       {x44d3b99a x43d08000 1}
       {x44d5699a x43d04000 1}
       {x44d6cccd x43cfcccd 1}
       {x44d73ccd x43cf7333 1}
       {x44d6f000 x43cf6666 1}
       {x44d6b333 x43cf6666 1}}}
     {tx x447a4000 x44d4f0b6 x43d01dde}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear431 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d20000 x43d2cccd 1}
       {x44d1e000 x43d2b333 1}
       {x44d27000 x43d28ccd 1}
       {x44d4299a x43d28000 1}
       {x44d4f666 x43d24ccd 1}
       {x44d6a333 x43d1c000 1}
       {x44d74ccd x43d1599a 1}
       {x44d72ccd x43d12666 1}
       {x44d6f666 x43d12666 1}}}
     {tx x447a4000 x44d4d5b1 x43d2071c}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear430 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2199a x43d4d99a 1}
       {x44d24666 x43d4f333 1}
       {x44d2b333 x43d4f333 1}
       {x44d3c99a x43d4d99a 1}
       {x44d57333 x43d46666 1}
       {x44d67ccd x43d3e666 1}
       {x44d78333 x43d3599a 1}
       {x44d7f333 x43d3199a 1}}}
     {tx x447a4000 x44d4c866 x43d44b33}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear429 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d28000 x43d5c000 1}
       {x44d24666 x43d5a666 1}
       {x44d2fccd x43d5a666 1}
       {x44d45666 x43d58ccd 1}
       {x44d55000 x43d56666 1}
       {x44d6b99a x43d52666 1}
       {x44d79333 x43d4cccd 1}
       {x44d7b666 x43d48ccd 1}}}
     {tx x447a4000 x44d4ed99 x43d55001}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear428 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d23ccd x43d62666 1}
       {x44d21333 x43d62666 1}
       {x44d1f000 x43d63333 1}
       {x44d27666 x43d67333 1}
       {x44d42000 x43d67333 1}
       {x44d4e666 x43d67333 1}
       {x44d6899a x43d63333 1}
       {x44d73666 x43d5e666 1}
       {x44d71000 x43d5c000 1}
       {x44d6d666 x43d5a666 1}}}
     {tx x447a4000 x44d489eb x43d6228e}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear427 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d3c000 x43d5cccd 1}
       {x44d3f333 x43d5f333 1}
       {x44d43333 x43d60ccd 1}
       {x44d61ccd x43d67333 1}
       {x44d68666 x43d67333 1}
       {x44d73666 x43d67333 1}
       {x44d7a666 x43d67333 1}
       {x44d7699a x43d6599a 1}}}
     {tx x447a4000 x44d5da00 x43d63e65}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear426 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d39ccd x43d6599a 1}
       {x44d4999a x43d6d99a 1}
       {x44d57ccd x43d7199a 1}
       {x44d6f000 x43d74000 1}
       {x44d7e333 x43d72666 1}}}
     {tx x447a4000 x44d5b47b x43d6f0a5}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear425 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d40000 x43d8e666 1}
       {x44d50000 x43d8e666 1}
       {x44d5b666 x43d90000 1}
       {x44d73666 x43d8d99a 1}
       {x44d7a666 x43d8199a 1}
       {x44d7799a x43d7f333 1}}}
     {tx x447a4000 x44d62ccd x43d89ddd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear424 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d35333 x43d90ccd 1}
       {x44d39000 x43d94ccd 1}
       {x44d5099a x43da199a 1}
       {x44d5d99a x43da599a 1}
       {x44d7a333 x43da8000 1}
       {x44d8499a x43da6666 1}
       {x44d88ccd x43da599a 1}}}
     {tx x447a4000 x44d60925 x43da01d5}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear423 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d4999a x43db3333 1}
       {x44d4e99a x43db7333 1}
       {x44d59333 x43db999a 1}
       {x44d6f99a x43dbd99a 1}
       {x44d9099a x43dbd99a 1}
       {x44da099a x43dbd99a 1}}}
     {tx x447a4000 x44d6db33 x43dba221}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear422 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d34000 x43dacccd 1}
       {x44d3c333 x43daf333 1}
       {x44d4b333 x43db3333 1}
       {x44d63666 x43db7333 1}
       {x44d7c666 x43db7333 1}
       {x44d86333 x43db599a 1}}}
     {tx x447a4000 x44d5ae67 x43db3333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear421 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d1dccd x43db0ccd 1}
       {x44d20666 x43db0ccd 1}
       {x44d2f333 x43db599a 1}
       {x44d3c333 x43db8000 1}
       {x44d55000 x43dbb333 1}
       {x44d70666 x43dbb333 1}
       {x44d86000 x43dbc000 1}}}
     {tx x447a4000 x44d47926 x43db715f}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear420 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d4f666 x43de8ccd 1}
       {x44d60333 x43de0ccd 1}
       {x44d69666 x43de0ccd 1}
       {x44d7699a x43de0000 1}
       {x44d7c99a x43de0000 1}}}
     {tx x447a4000 x44d68d70 x43de2148}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear419 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d5199a x43df199a 1}
       {x44d64000 x43ded99a 1}
       {x44d6b99a x43de999a 1}
       {x44d71000 x43de3333 1}}}
     {tx x447a4000 x44d648cd x43deb001}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear418 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d4f666 x43dfa666 1}
       {x44d59666 x43df599a 1}
       {x44d65ccd x43df0000 1}
       {x44d7899a x43de8ccd 1}}}
     {tx x447a4000 x44d61ccc x43df2333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear417 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d50000 x43e0599a 1}
       {x44d5a666 x43dfe666 1}
       {x44d63000 x43df8000 1}
       {x44d78ccd x43deb333 1}
       {x44d7fccd x43de7333 1}
       {x44d7bccd x43de999a 1}}}
     {tx x447a4000 x44d6af78 x43df4000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear416 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d51ccd x43e07333 1}
       {x44d5499a x43e04ccd 1}
       {x44d5c666 x43dff333 1}
       {x44d6e666 x43df6666 1}
       {x44d7e000 x43def333 1}
       {x44d80333 x43ded99a 1}}}
     {tx x447a4000 x44d67e67 x43dfa665}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear415 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d49333 x43e0d99a 1}
       {x44d4f99a x43e03333 1}
       {x44d65ccd x43df6666 1}
       {x44d6f666 x43df0000 1}
       {x44d7c666 x43de7333 1}
       {x44d83666 x43de0ccd 1}
       {x44d7fccd x43de3333 1}}}
     {tx x447a4000 x44d6b160 x43df2a0e}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear414 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d5699a x43e1cccd 1}
       {x44d54000 x43e1b333 1}
       {x44d56000 x43e16666 1}
       {x44d66666 x43e0e666 1}
       {x44d72333 x43e08000 1}
       {x44d81666 x43dfcccd 1}
       {x44d86ccd x43df6666 1}
       {x44d81666 x43df4000 1}}}
     {tx x447a4000 x44d6c59a x43e09801}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear413 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d53333 x43e1cccd 1}
       {x44d5599a x43e1cccd 1}
       {x44d59666 x43e1cccd 1}
       {x44d6c333 x43e1f333 1}
       {x44d79ccd x43e1f333 1}
       {x44d80ccd x43e1cccd 1}
       {x44d79333 x43e1b333 1}}}
     {tx x447a4000 x44d69750 x43e1d41e}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear412 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d53333 x43e2a666 1}
       {x44d5799a x43e2a666 1}
       {x44d66333 x43e2c000 1}
       {x44d6c99a x43e2c000 1}
       {x44d7accd x43e2999a 1}
       {x44d7fccd x43e28000 1}}}
     {tx x447a4000 x44d695df x43e2a667}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear411 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d51ccd x43e30000 1}
       {x44d55000 x43e32666 1}
       {x44d6499a x43e34ccd 1}
       {x44d70666 x43e34ccd 1}
       {x44d82ccd x43e32666 1}
       {x44d8b000 x43e30000 1}
       {x44d88333 x43e2c000 1}}}
     {tx x447a4000 x44d7041e x43e317c6}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear410 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d54000 x43e2c000 1}
       {x44d5c666 x43e2e666 1}
       {x44d64333 x43e30000 1}
       {x44d72333 x43e30ccd 1}
       {x44d7d99a x43e30ccd 1}
       {x44d85000 x43e2e666 1}
       {x44d82ccd x43e2d99a 1}}}
     {tx x447a4000 x44d6f751 x43e2edb7}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear409 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d4f666 x43e44000 1}
       {x44d53ccd x43e44000 1}
       {x44d5899a x43e44000 1}
       {x44d68000 x43e4599a 1}
       {x44d79ccd x43e4199a 1}
       {x44d84000 x43e3cccd 1}
       {x44d80ccd x43e37333 1}}}
     {tx x447a4000 x44d697c7 x43e41075}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear408 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d52666 x43e54ccd 1}
       {x44d59ccd x43e5599a 1}
       {x44d60666 x43e5599a 1}
       {x44d73ccd x43e5599a 1}
       {x44d8099a x43e52666 1}
       {x44d79333 x43e4c000 1}}}
     {tx x447a4000 x44d69b33 x43e53555}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear407 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d4c666 x43e5d99a 1}
       {x44d5699a x43e60000 1}
       {x44d61ccd x43e62666 1}
       {x44d7799a x43e64000 1}
       {x44d8699a x43e62666 1}}}
     {tx x447a4000 x44d67000 x43e6147b}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear406 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d54000 x43e6199a 1}
       {x44d61666 x43e6199a 1}
       {x44d6c333 x43e62666 1}
       {x44d76666 x43e62666 1}
       {x44d8499a x43e5e666 1}}}
     {tx x447a4000 x44d6c1eb x43e6147b}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear405 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d5c000 x43e68ccd 1}
       {x44d60666 x43e6b333 1}
       {x44d62666 x43e6b333 1}
       {x44d77666 x43e6f333 1}
       {x44d8b000 x43e6cccd 1}
       {x44d91666 x43e6a666 1}
       {x44d8a666 x43e68000 1}}}
     {tx x447a4000 x44d766db x43e6b160}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear404 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d55666 x43e6d99a 1}
       {x44d5b666 x43e6d99a 1}
       {x44d61ccd x43e6f333 1}
       {x44d72ccd x43e73333 1}
       {x44d83666 x43e74000 1}
       {x44d8c000 x43e74000 1}
       {x44d89000 x43e7199a 1}}}
     {tx x447a4000 x44d71f8a x43e71076}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear403 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d5b99a x43e74000 1}
       {x44d69666 x43e77333 1}
       {x44d7199a x43e78000 1}
       {x44d84666 x43e78000 1}
       {x44d8eccd x43e74000 1}}}
     {tx x447a4000 x44d75290 x43e763d6}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear402 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d65ccd x43e7c000 1}
       {x44d72ccd x43e7e666 1}
       {x44d8c99a x43e7e666 1}
       {x44d9099a x43e7c000 1}
       {x44d95666 x43e78000 1}
       {x44d91000 x43e78000 1}}}
     {tx x447a4000 x44d84b34 x43e7b778}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear401 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d61ccd x43e84ccd 1}
       {x44d6bccd x43e86666 1}
       {x44d75000 x43e87333 1}
       {x44d8b000 x43e87333 1}
       {x44d9accd x43e84ccd 1}
       {x44d96ccd x43e82666 1}}}
     {tx x447a4000 x44d7fddf x43e85778}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear400 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d60333 x43ea3333 1}
       {x44d65ccd x43ea4ccd 1}
       {x44d6d333 x43ea599a 1}
       {x44d88666 x43ea4ccd 1}
       {x44d9dccd x43e98ccd 1}
       {x44d9e666 x43e90000 1}}}
     {tx x447a4000 x44d7ea23 x43e9f333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear399 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d62000 x43ec599a 1}
       {x44d6cccd x43ec599a 1}
       {x44d75ccd x43ec599a 1}
       {x44d80333 x43ec4000 1}
       {x44d95ccd x43ec3333 1}
       {x44da7333 x43ebd99a 1}}}
     {tx x447a4000 x44d804cc x43ec3999}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear398 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d4b333 x43eb8ccd 1}
       {x44d4799a x43ebcccd 1}
       {x44d57000 x43ec199a 1}
       {x44d6999a x43ec199a 1}
       {x44d76000 x43ec199a 1}
       {x44d94333 x43ebd99a 1}
       {x44da0333 x43eba666 1}
       {x44d96666 x43eba666 1}}}
     {tx x447a4000 x44d72866 x43ebd99a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear397 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d70000 x43f63333 1}
       {x44d7a666 x43f6999a 1}
       {x44d86000 x43f6cccd 1}
       {x44d9e000 x43f7199a 1}
       {x44dbb99a x43f76666 1}
       {x44dd399a x43f83333 1}}}
     {tx x447a4000 x44d9a444 x43f70ccc}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear396 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d70ccd x43f1999a 1}
       {x44d72ccd x43f1999a 1}
       {x44d84ccd x43f20000 1}
       {x44d94ccd x43f20000 1}
       {x44da6ccd x43f20000 1}
       {x44dbe000 x43f1cccd 1}
       {x44dc2ccd x43f1cccd 1}
       {x44dc0ccd x43f1cccd 1}}}
     {tx x447a4000 x44d9cb34 x43f1d334}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear395 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d67333 x43f0e666 1}
       {x44d72ccd x43f0e666 1}
       {x44d7b333 x43f10000 1}
       {x44d92666 x43f10000 1}
       {x44da2666 x43f0e666 1}
       {x44da6666 x43f0cccd 1}
       {x44d9c666 x43f0cccd 1}}}
     {tx x447a4000 x44d8af8b x43f0e667}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear394 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d58000 x43f0e666 1}
       {x44d6a666 x43f10000 1}
       {x44d74666 x43f1199a 1}
       {x44d8f99a x43f1199a 1}
       {x44da199a x43f0b333 1}
       {x44da8000 x43f06666 1}
       {x44da0ccd x43f06666 1}}}
     {tx x447a4000 x44d86f8b x43f0cccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear393 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d5e000 x43f16666 1}
       {x44d81333 x43f18000 1}
       {x44d8c666 x43f18000 1}
       {x44d98000 x43f16666 1}
       {x44d94ccd x43f14ccd 1}
       {x44d8a666 x43f14ccd 1}}}
     {tx x447a4000 x44d85ccd x43f16668}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear392 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d60000 x43f1b333 1}
       {x44d72ccd x43f20000 1}
       {x44d7d99a x43f2199a 1}
       {x44d94ccd x43f23333 1}
       {x44da0000 x43f23333 1}
       {x44d9d99a x43f2199a 1}}}
     {tx x447a4000 x44d85ccc x43f20ccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear391 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d6799a x43f28000 1}
       {x44d6c000 x43f28000 1}
       {x44d7f333 x43f2b333 1}
       {x44d8999a x43f2b333 1}
       {x44d9cccd x43f2cccd 1}
       {x44da199a x43f2cccd 1}
       {x44d98000 x43f2cccd 1}}}
     {tx x447a4000 x44d8741e x43f2af8d}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear390 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d5f99a x43f38000 1}
       {x44d68ccd x43f38000 1}
       {x44d81333 x43f3b333 1}
       {x44d8d333 x43f3b333 1}
       {x44da0666 x43f3999a 1}
       {x44da3333 x43f36666 1}
       {x44d9d333 x43f34ccd 1}}}
     {tx x447a4000 x44d87f16 x43f38751}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear389 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d6e000 x43f4199a 1}
       {x44d88ccd x43f48000 1}
       {x44da399a x43f4999a 1}
       {x44da9333 x43f4999a 1}
       {x44db0000 x43f44ccd 1}
       {x44da8000 x43f43333 1}}}
     {tx x447a4000 x44d99ef0 x43f46223}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear388 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d62ccd x43f4b333 1}
       {x44d6f333 x43f4cccd 1}
       {x44d8d99a x43f50000 1}
       {x44d9d99a x43f4e666 1}
       {x44db0ccd x43f48000 1}
       {x44dad333 x43f43333 1}
       {x44daa666 x43f43333 1}}}
     {tx x447a4000 x44d9315f x43f49d41}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear387 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d60666 x43f56666 1}
       {x44d7accd x43f5b333 1}
       {x44d8399a x43f5cccd 1}
       {x44da0ccd x43f5cccd 1}
       {x44da8ccd x43f58000 1}}}
     {tx x447a4000 x44d88148 x43f5a3d6}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear386 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d4cccd x43f80000 1}
       {x44d5f99a x43f83333 1}
       {x44d6c666 x43f86666 1}
       {x44d8eccd x43f84ccd 1}
       {x44da399a x43f7999a 1}
       {x44da5333 x43f73333 1}}}
     {tx x447a4000 x44d7d667 x43f7f333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear385 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d6599a x43facccd 1}
       {x44d6a000 x43facccd 1}
       {x44d84666 x43fb0000 1}
       {x44d98666 x43fb0000 1}
       {x44db0000 x43fa6666 1}
       {x44dac000 x43fa0000 1}}}
     {tx x447a4000 x44d8c111 x43faaaab}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear384 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d68000 x43fbcccd 1}
       {x44d8d99a x43fc8000 1}
       {x44d94ccd x43fc8000 1}
       {x44da399a x43fc3333 1}
       {x44dacccd x43fc0000 1}
       {x44db2666 x43fbb333 1}
       {x44db599a x43fb999a 1}}}
     {tx x447a4000 x44d9bd42 x43fc0af8}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear383 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d5d333 x43f9199a 1}
       {x44d5f333 x43f9199a 1}
       {x44d68000 x43f94ccd 1}
       {x44d79333 x43f9b333 1}
       {x44d96ccd x43f9cccd 1}
       {x44da799a x43f9cccd 1}
       {x44daaccd x43f9e666 1}}}
     {tx x447a4000 x44d80f8b x43f98751}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear382 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d57333 x43f93333 1}
       {x44d6799a x43f9b333 1}
       {x44d74ccd x43f9e666 1}
       {x44d94000 x43fa0000 1}
       {x44db3333 x43fa0000 1}
       {x44db6000 x43fa0000 1}
       {x44db199a x43f9e666 1}}}
     {tx x447a4000 x44d8e0e9 x43f9d076}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear381 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d52ccd x43fb4ccd 1}
       {x44d5799a x43fb3333 1}
       {x44d5f99a x43fb199a 1}
       {x44d6e666 x43fb0000 1}
       {x44d9399a x43fa8000 1}
       {x44db1333 x43fa199a 1}
       {x44dbeccd x43f9b333 1}}}
     {tx x447a4000 x44d7f6db x43fab332}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear380 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d79333 x43ff8000 1}
       {x44d82666 x43ffb333 1}
       {x44d8f333 x43ffb333 1}
       {x44daa000 x43ff6666 1}
       {x44dbd333 x43ff199a 1}
       {x44dc0ccd x43ff199a 1}}}
     {tx x447a4000 x44d9dccd x43ff6aab}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear379 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d80666 x44003333 1}
       {x44d8accd x44002666 1}
       {x44d96000 x44002666 1}
       {x44da8000 x4400199a 1}
       {x44db999a x44000000 1}}}
     {tx x447a4000 x44d9a290 x44001eb8}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear378 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d69333 x44004ccd 1}
       {x44d6f99a x44004ccd 1}
       {x44d7accd x4400599a 1}
       {x44d90000 x4400599a 1}
       {x44da0666 x44004ccd 1}
       {x44da7333 x44004ccd 1}}}
     {tx x447a4000 x44d87333 x44005111}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear377 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d71333 x44004ccd 1}
       {x44d73333 x44004ccd 1}
       {x44d8599a x44006666 1}
       {x44d9e666 x44006666 1}
       {x44db3333 x44004ccd 1}
       {x44db9333 x44004000 1}
       {x44db2000 x44004000 1}}}
     {tx x447a4000 x44d97d41 x44005075}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear376 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d6c666 x4400999a 1}
       {x44d70000 x4400999a 1}
       {x44d88000 x4400a666 1}
       {x44da9333 x44008ccd 1}
       {x44dac000 x44008000 1}
       {x44db0666 x44008000 1}
       {x44db2666 x4400599a 1}
       {x44dae000 x4400599a 1}}}
     {tx x447a4000 x44d994ce x44008333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear375 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d73333 x4400c000 1}
       {x44d7b99a x4400d99a 1}
       {x44d84ccd x4400d99a 1}
       {x44d9c666 x4400d99a 1}
       {x44db6ccd x4400c000 1}
       {x44dbeccd x4400b333 1}
       {x44db6000 x4400a666 1}}}
     {tx x447a4000 x44d9acce x4400c57d}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear374 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d62000 x4401199a 1}
       {x44d6b99a x4401199a 1}
       {x44d75333 x44012666 1}
       {x44d92ccd x44012666 1}
       {x44dacccd x44010000 1}
       {x44db6ccd x4400d99a 1}
       {x44daf99a x4400cccd 1}}}
     {tx x447a4000 x44d8ef8b x4401057c}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear373 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d6a666 x4401c000 1}
       {x44d74000 x4401c000 1}
       {x44d76ccd x4401c000 1}
       {x44d7e666 x4401c000 1}
       {x44d98ccd x4401a666 1}
       {x44db4000 x44018000 1}
       {x44dba000 x44016666 1}}}
     {tx x447a4000 x44d8cea1 x4401a667}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear372 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d68ccd x44027333 1}
       {x44d7c000 x44028ccd 1}
       {x44d88ccd x44028ccd 1}
       {x44da4000 x44028ccd 1}
       {x44dbb99a x44026666 1}}}
     {tx x447a4000 x44d8f70a x44028000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear371 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d6a666 x4402a666 1}
       {x44d6eccd x4402a666 1}
       {x44d84000 x4402cccd 1}
       {x44d94666 x4402cccd 1}
       {x44db2666 x4402cccd 1}
       {x44dbf99a x4402b333 1}}}
     {tx x447a4000 x44d90999 x4402bbbb}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear370 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d66ccd x44030000 1}
       {x44d6f333 x4403199a 1}
       {x44d79333 x44032666 1}
       {x44d95333 x44034000 1}
       {x44dad333 x44034000 1}
       {x44db8ccd x44032666 1}
       {x44db4000 x44032666 1}}}
     {tx x447a4000 x44d920ea x44032667}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear369 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d60666 x44047333 1}
       {x44d68ccd x44047333 1}
       {x44d77333 x44047333 1}
       {x44d9b333 x44046666 1}
       {x44db1333 x4404199a 1}
       {x44db4666 x4403d99a 1}}}
     {tx x447a4000 x44d8addf x44044888}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear368 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d82000 x44062666 1}
       {x44d86ccd x4406599a 1}
       {x44d8d99a x44066666 1}
       {x44da6ccd x44067333 1}
       {x44dc0666 x4406599a 1}
       {x44dcd99a x44063333 1}}}
     {tx x447a4000 x44da1ddd x44065111}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear367 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d75333 x44058000 1}
       {x44d78666 x4405999a 1}
       {x44d93333 x4405999a 1}
       {x44da0000 x4405999a 1}
       {x44db999a x44058ccd 1}
       {x44dc599a x44056666 1}
       {x44dc3333 x44056666 1}}}
     {tx x447a4000 x44da0750 x4405857d}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear366 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d6cccd x4404a666 1}
       {x44d7e666 x4404b333 1}
       {x44d8eccd x4404c000 1}
       {x44d96ccd x4404c000 1}
       {x44db2666 x4404d99a 1}
       {x44dc5333 x4404b333 1}}}
     {tx x447a4000 x44d96bbb x4404bbbb}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear365 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d52000 x44050000 1}
       {x44d56000 x4405199a 1}
       {x44d64ccd x4405199a 1}
       {x44d70ccd x44050ccd 1}
       {x44d96666 x4404d99a 1}
       {x44db0000 x4404a666 1}
       {x44dc599a x4404a666 1}
       {x44dca666 x4404999a 1}
       {x44dc5333 x4404999a 1}}}
     {tx x447a4000 x44d9105b x4404d82d}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear364 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d7a99a x44080000 1}
       {x44d7cccd x44080000 1}
       {x44d8e333 x44080000 1}
       {x44d98000 x4407f333 1}
       {x44dac666 x4407e000 1}
       {x44db5000 x4407e000 1}
       {x44db7000 x4407e666 1}}}
     {tx x447a4000 x44d9a000 x4407f15f}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear363 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d6f000 x4408199a 1}
       {x44d8a99a x4408199a 1}
       {x44d8dccd x4408199a 1}
       {x44d91000 x4408199a 1}
       {x44d97000 x4408199a 1}
       {x44da3000 x44080ccd 1}
       {x44da799a x44080ccd 1}
       {x44da9ccd x44080ccd 1}
       {x44da7000 x4408199a 1}}}
     {tx x447a4000 x44d96889 x44081555}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear362 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d74666 x44085333 1}
       {x44d7a99a x4408399a 1}
       {x44d88000 x44082ccd 1}
       {x44d9b99a x44082ccd 1}
       {x44daa333 x44082ccd 1}
       {x44da7000 x44082ccd 1}}}
     {tx x447a4000 x44d90a21 x44083555}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear361 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d6e333 x4408b99a 1}
       {x44d73333 x4408b99a 1}
       {x44d8799a x4408b99a 1}
       {x44d92333 x4408accd 1}
       {x44da9000 x4408accd 1}
       {x44dae99a x4408b99a 1}}}
     {tx x447a4000 x44d8dccc x4408b555}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear360 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d71666 x44090ccd 1}
       {x44d74000 x44090ccd 1}
       {x44d83000 x4409199a 1}
       {x44d91ccd x4409199a 1}
       {x44da799a x4409199a 1}
       {x44dae333 x44090ccd 1}
       {x44dab000 x44090ccd 1}}}
     {tx x447a4000 x44d91925 x44091249}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear359 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d6b333 x4409999a 1}
       {x44d7c000 x4409999a 1}
       {x44d88ccd x4409a000 1}
       {x44da5000 x44098ccd 1}
       {x44db5ccd x44097333 1}}}
     {tx x447a4000 x44d8ef5d x440990a4}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear358 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d6dccd x4409accd 1}
       {x44d7c666 x4409b99a 1}
       {x44d87333 x4409b99a 1}
       {x44da5666 x4409a000 1}
       {x44db2333 x4409999a 1}}}
     {tx x447a4000 x44d8e99a x4409ab85}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear357 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d6699a x440a4666 1}
       {x44d68ccd x440a4666 1}
       {x44d7b99a x440a6000 1}
       {x44d8799a x440a7333 1}
       {x44da6333 x440a8000 1}
       {x44dadccd x440a8000 1}
       {x44da9000 x440a7333 1}}}
     {tx x447a4000 x44d8b5f1 x440a6751}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear356 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d60000 x440c2ccd 1}
       {x44d65ccd x440c199a 1}
       {x44d73333 x440c0ccd 1}
       {x44d85000 x440bf333 1}
       {x44d9b333 x440bc666 1}
       {x44da7000 x440b8000 1}}}
     {tx x447a4000 x44d80088 x440beccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear355 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d7299a x440e0ccd 1}
       {x44d79666 x440e0ccd 1}
       {x44d80666 x440e0ccd 1}
       {x44d95ccd x440e0000 1}
       {x44da699a x440de666 1}
       {x44dae333 x440daccd 1}}}
     {tx x447a4000 x44d8e800 x440df445}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear354 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d75666 x440de666 1}
       {x44d79ccd x440e0ccd 1}
       {x44d87333 x440e199a 1}
       {x44d9399a x440e0ccd 1}
       {x44da5666 x440df333 1}
       {x44daf000 x440de666 1}
       {x44dad000 x440de666 1}}}
     {tx x447a4000 x44d93ea1 x440dfa85}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear353 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d61000 x440d199a 1}
       {x44d64666 x440d2ccd 1}
       {x44d68ccd x440d399a 1}
       {x44d81000 x440d399a 1}
       {x44d9a99a x440d199a 1}
       {x44da9666 x440d0000 1}}}
     {tx x447a4000 x44d7dddf x440d2334}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear352 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d55000 x440c8000 1}
       {x44d5b99a x440c999a 1}
       {x44d71666 x440ca000 1}
       {x44d7cccd x440ca000 1}
       {x44d95000 x440c7333 1}
       {x44dad666 x440c4666 1}
       {x44db4666 x440c399a 1}}}
     {tx x447a4000 x44d83160 x440c78af}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear351 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d8399a x440ff333 1}
       {x44d86333 x440ff333 1}
       {x44d8a333 x440ff333 1}
       {x44d99ccd x440ff333 1}
       {x44daf333 x440fe666 1}
       {x44dbcccd x440ff333 1}}}
     {tx x447a4000 x44d99a23 x440ff111}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear350 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d74666 x44102ccd 1}
       {x44d7b333 x44102000 1}
       {x44d8e99a x4410199a 1}
       {x44d9399a x4410199a 1}
       {x44da7000 x440fe000 1}
       {x44db4ccd x440f999a 1}
       {x44dbd666 x440f7333 1}}}
     {tx x447a4000 x44d986db x440feaf9}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear349 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d6b000 x44106666 1}
       {x44d6e333 x44106666 1}
       {x44d7f000 x44106666 1}
       {x44d85000 x44106666 1}
       {x44d95ccd x44106000 1}
       {x44d9d000 x44105333 1}
       {x44d9699a x44105333 1}}}
     {tx x447a4000 x44d8583a x44106000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear348 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d69666 x44108000 1}
       {x44d80000 x44108000 1}
       {x44d8d000 x44107333 1}
       {x44d9d000 x44107333 1}
       {x44d9f99a x44107333 1}
       {x44d9c666 x44107333 1}}}
     {tx x447a4000 x44d8d3bc x44107778}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear347 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d69666 x4410accd 1}
       {x44d6d000 x4410accd 1}
       {x44d74ccd x4410accd 1}
       {x44d8c666 x4410a000 1}
       {x44d9e333 x4410999a 1}
       {x44da1ccd x44108ccd 1}
       {x44d98ccd x44108ccd 1}}}
     {tx x447a4000 x44d86ea1 x44109f16}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear346 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d65666 x44116000 1}
       {x44d75666 x44115333 1}
       {x44d7f99a x44115333 1}
       {x44d98ccd x44114666 1}
       {x44da1ccd x44112ccd 1}
       {x44d9e333 x44112000 1}}}
     {tx x447a4000 x44d88888 x44114445}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear345 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d5c666 x44118ccd 1}
       {x44d6dccd x4411999a 1}
       {x44d7799a x4411a000 1}
       {x44d8cccd x4411accd 1}
       {x44d96333 x4411accd 1}
       {x44d9299a x4411accd 1}}}
     {tx x447a4000 x44d7e911 x4411a222}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear344 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d6799a x44126666 1}
       {x44d73333 x44126000 1}
       {x44d7c666 x44126000 1}
       {x44d94000 x44124666 1}
       {x44da1666 x4412199a 1}
       {x44d98666 x44120000 1}}}
     {tx x447a4000 x44d862ab x44124111}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear343 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d65ccd x4412c666 1}
       {x44d6b000 x4412c666 1}
       {x44d72333 x4412d333 1}
       {x44d88000 x4412e000 1}
       {x44d99000 x4412e000 1}
       {x44d9e99a x4412b99a 1}
       {x44d9a99a x4412accd 1}}}
     {tx x447a4000 x44d842be x4412ca0f}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear342 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d5f000 x4412e000 1}
       {x44d6d000 x4412d333 1}
       {x44d76333 x4412d333 1}
       {x44d8799a x4412f333 1}
       {x44d93000 x4412f333 1}
       {x44d8d666 x4412f333 1}}}
     {tx x447a4000 x44d7c5df x4412e556}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear341 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d58000 x4413accd 1}
       {x44d69000 x4413c666 1}
       {x44d7299a x4413d333 1}
       {x44d85ccd x4413e000 1}
       {x44d98000 x4413c666 1}
       {x44da0ccd x4413accd 1}}}
     {tx x447a4000 x44d7db33 x4413c445}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear340 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d51ccd x4414e000 1}
       {x44d54ccd x4414e000 1}
       {x44d65ccd x4415199a 1}
       {x44d69000 x44152000 1}
       {x44d80ccd x44152ccd 1}
       {x44d89000 x44152ccd 1}}}
     {tx x447a4000 x44d6a889 x44150ddd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear339 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d46333 x44165333 1}
       {x44d48666 x44165333 1}
       {x44d57333 x44167333 1}
       {x44d60ccd x44168000 1}
       {x44d79666 x44168ccd 1}
       {x44d88666 x44168000 1}
       {x44d8c000 x44166666 1}}}
     {tx x447a4000 x44d677c6 x44166f8a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear338 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d44666 x4417999a 1}
       {x44d51666 x4417a000 1}
       {x44d60000 x4417accd 1}
       {x44d77333 x4417accd 1}
       {x44d87000 x4417999a 1}
       {x44d85000 x44177333 1}}}
     {tx x447a4000 x44d69800 x44179aab}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear337 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d44666 x4417b99a 1}
       {x44d49ccd x4417c666 1}
       {x44d5a99a x4417d333 1}
       {x44d67333 x4417e000 1}
       {x44d75ccd x4417d333 1}
       {x44d7b333 x4417d333 1}
       {x44d78000 x4417d333 1}}}
     {tx x447a4000 x44d63925 x4417cf8b}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear336 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d46333 x4418399a 1}
       {x44d50ccd x44182ccd 1}
       {x44d58ccd x44182000 1}
       {x44d6dccd x4418199a 1}
       {x44d7b000 x44180000 1}
       {x44d7f333 x4417f333 1}
       {x44d77333 x4417f333 1}}}
     {tx x447a4000 x44d66b6d x44181333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear335 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2f000 x4418d333 1}
       {x44d34666 x4418accd 1}
       {x44d4e333 x4418a000 1}
       {x44d5c666 x44188ccd 1}
       {x44d6dccd x44186000 1}
       {x44d75ccd x44184666 1}
       {x44d6e333 x44184666 1}}}
     {tx x447a4000 x44d56d42 x441883a8}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear334 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d3299a x44197333 1}
       {x44d44666 x44195333 1}
       {x44d4cccd x44195333 1}
       {x44d65000 x44194666 1}
       {x44d75666 x44192ccd 1}
       {x44d73333 x44192ccd 1}
       {x44d68666 x44192ccd 1}}}
     {tx x447a4000 x44d5a8af x4419457d}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear333 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d1a333 x441ad333 1}
       {x44d1f99a x441ad333 1}
       {x44d28000 x441ad333 1}
       {x44d39ccd x441ac666 1}
       {x44d54666 x441aa000 1}
       {x44d7299a x441a6666 1}
       {x44d7cccd x441a4666 1}
       {x44d7699a x441a2ccd 1}
       {x44d71000 x441a2000 1}}}
     {tx x447a4000 x44d4f000 x441a89f5}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear332 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d4799a x441d6666 1}
       {x44d4b000 x441d6666 1}
       {x44d57000 x441d8000 1}
       {x44d5f333 x441d7333 1}
       {x44d64666 x441d2ccd 1}}}
     {tx x447a4000 x44d55d70 x441d628f}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear331 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d4699a x441d6666 1}
       {x44d49666 x441d7333 1}
       {x44d55000 x441d7333 1}
       {x44d60666 x441d7333 1}
       {x44d70ccd x441d6666 1}
       {x44d7b000 x441d6666 1}
       {x44d76333 x441d6666 1}}}
     {tx x447a4000 x44d610ea x441d6be3}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear330 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2b000 x441d7333 1}
       {x44d2f99a x441d999a 1}
       {x44d42333 x441db99a 1}
       {x44d51000 x441daccd 1}
       {x44d68666 x441d8ccd 1}
       {x44d75666 x441d6666 1}
       {x44d71ccd x441d6666 1}}}
     {tx x447a4000 x44d51ea1 x441d8af9}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear329 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d22333 x441a7333 1}
       {x44d2f000 x441a8000 1}
       {x44d3c666 x441a8000 1}
       {x44d55666 x441a8000 1}
       {x44d69000 x441a8000 1}
       {x44d67333 x441ab99a 1}}}
     {tx x447a4000 x44d48888 x441a8778}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear328 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d3399a x441b0000 1}
       {x44d40000 x441af333 1}
       {x44d4cccd x441ae666 1}
       {x44d66333 x441ab99a 1}
       {x44d74000 x441a999a 1}
       {x44d6f333 x441a8ccd 1}}}
     {tx x447a4000 x44d56f78 x441ac99a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear327 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d21666 x441b8ccd 1}
       {x44d24ccd x441b999a 1}
       {x44d2b99a x441b999a 1}
       {x44d45666 x441baccd 1}
       {x44d61000 x441b8ccd 1}
       {x44d6e99a x441b7333 1}
       {x44d6b99a x441b5333 1}
       {x44d69000 x441b5333 1}}}
     {tx x447a4000 x44d4b6cd x441b8266}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear326 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2c000 x441c6666 1}
       {x44d2f99a x441c6666 1}
       {x44d4c000 x441c7333 1}
       {x44d5799a x441c6666 1}
       {x44d6cccd x441c2ccd 1}
       {x44d7399a x441c0ccd 1}
       {x44d7699a x441be666 1}}}
     {tx x447a4000 x44d55750 x441c40ea}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear325 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d21000 x441ce000 1}
       {x44d26333 x441ce000 1}
       {x44d2c666 x441ce666 1}
       {x44d40ccd x441cd333 1}
       {x44d4cccd x441cb99a 1}
       {x44d5299a x441caccd 1}}}
     {tx x447a4000 x44d38a21 x441ccfff}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear324 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d1e99a x441d8000 1}
       {x44d2299a x441d8000 1}
       {x44d2b333 x441d8000 1}
       {x44d4b333 x441d6666 1}
       {x44d5d000 x441d4666 1}
       {x44d64ccd x441d2ccd 1}
       {x44d71ccd x441d0ccd 1}}}
     {tx x447a4000 x44d462c0 x441d57c6}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear323 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d34000 x44204666 1}
       {x44d44666 x44204666 1}
       {x44d51666 x44204666 1}
       {x44d7799a x44202ccd 1}
       {x44d91000 x441ff333 1}
       {x44d96333 x441fe666 1}}}
     {tx x447a4000 x44d66c44 x44202444}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear322 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2d666 x44206000 1}
       {x44d31666 x44204666 1}
       {x44d39000 x4420399a 1}
       {x44d4399a x44202ccd 1}
       {x44d68000 x4420199a 1}
       {x44d7f000 x44200000 1}
       {x44d8a99a x44200000 1}}}
     {tx x447a4000 x44d54249 x44202a0f}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear321 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d28666 x4420c666 1}
       {x44d2d666 x4420c666 1}
       {x44d3699a x4420accd 1}
       {x44d4e333 x44208000 1}
       {x44d67000 x44208000 1}
       {x44d8299a x44208000 1}
       {x44d8699a x44208000 1}}}
     {tx x447a4000 x44d53d42 x44209a83}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear320 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cfe333 x44286ccd 1}
       {x44d00333 x44286ccd 1}
       {x44d08000 x44285333 1}
       {x44d1199a x44284000 1}
       {x44d20ccd x4428199a 1}
       {x44d38ccd x4427eccd 1}
       {x44d50333 x4427accd 1}
       {x44d66ccd x44275333 1}
       {x44d73ccd x4426d99a 1}
       {x44d7e000 x4426accd 1}}}
     {tx x447a4000 x44d35d72 x4427cc29}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear319 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cea99a x44292ccd 1}
       {x44cef666 x44291333 1}
       {x44cfe99a x4428d99a 1}
       {x44d04333 x4428cccd 1}
       {x44d19ccd x4428999a 1}
       {x44d31ccd x44286ccd 1}
       {x44d4a333 x44286ccd 1}
       {x44d58333 x44286ccd 1}
       {x44d5d333 x4428799a 1}}}
     {tx x447a4000 x44d20e38 x4428b1c7}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear318 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d13666 x4425799a 1}
       {x44d16000 x4425e000 1}
       {x44d1e99a x4426f333 1}
       {x44d2299a x44278000 1}
       {x44d2c333 x4428a666 1}
       {x44d3b000 x44294ccd 1}
       {x44d4399a x4429399a 1}}}
     {tx x447a4000 x44d27a0e x4427915f}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear317 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d09ccd x44292000 1}
       {x44d19ccd x4428f99a 1}
       {x44d25333 x4428e666 1}
       {x44d3d99a x44289333 1}
       {x44d4a99a x44283333 1}
       {x44d4e000 x4427eccd 1}}}
     {tx x447a4000 x44d2fd55 x44289dde}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear316 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d0a99a x44289333 1}
       {x44d1c333 x4427d333 1}
       {x44d2b333 x44277333 1}
       {x44d4399a x44270000 1}
       {x44d4a333 x4426f333 1}
       {x44d47333 x44272000 1}}}
     {tx x447a4000 x44d312a9 x44277ccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear315 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d05ccd x4428d99a 1}
       {x44d4699a x44275333 1}
       {x44d4099a x4427999a 1}
       {x44d38666 x4427d333 1}}}
     {tx x447a4000 x44d3159a x4427e666}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear314 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d02000 x4428f99a 1}
       {x44d0899a x4428e666 1}
       {x44d1eccd x4428b333 1}
       {x44d32333 x44288666 1}
       {x44d41000 x44284666 1}
       {x44d3cccd x44284666 1}}}
     {tx x447a4000 x44d243bd x44289bbc}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear313 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cfd99a x44292ccd 1}
       {x44d16ccd x44292ccd 1}
       {x44d27ccd x44292ccd 1}
       {x44d3e000 x4428eccd 1}
       {x44d42666 x4428e666 1}
       {x44d3999a x4428d99a 1}
       {x44d27666 x4428d99a 1}}}
     {tx x447a4000 x44d28ccd x442901d3}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear312 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cfd333 x44292000 1}
       {x44d1e99a x4429599a 1}
       {x44d27666 x44296666 1}
       {x44d35333 x44297333 1}}}
     {tx x447a4000 x44d1e199 x442954cd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear311 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d00ccd x442a0000 1}
       {x44d0499a x442a0000 1}
       {x44d0c000 x442a0000 1}
       {x44d24666 x442a199a 1}
       {x44d30333 x442a199a 1}
       {x44d2b666 x442a0000 1}}}
     {tx x447a4000 x44d183bc x442a0888}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear310 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d07333 x442ad333 1}
       {x44d0fccd x442aeccd 1}
       {x44d19666 x442b2666 1}
       {x44d2accd x442b8666 1}
       {x44d35333 x442b9333 1}
       {x44d33333 x442b599a 1}}}
     {tx x447a4000 x44d20999 x442b399b}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear309 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d05666 x442d799a 1}
       {x44d08000 x442d999a 1}
       {x44d19ccd x442df99a 1}
       {x44d23ccd x442e2ccd 1}
       {x44d3699a x442e4000 1}
       {x44d4099a x442e2ccd 1}}}
     {tx x447a4000 x44d205dd x442df111}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear308 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d10000 x442d0000 1}
       {x44d0d333 x442d9333 1}
       {x44d0f000 x442dc000 1}
       {x44d1dccd x442e1333 1}
       {x44d2c333 x442e2000 1}
       {x44d33333 x442deccd 1}}}
     {tx x447a4000 x44d1c3bb x442dbddf}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear307 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cf099a x442c2000 1}
       {x44cf6333 x442c2000 1}
       {x44cfb000 x442c2000 1}
       {x44d18333 x442c6666 1}
       {x44d2f99a x442caccd 1}
       {x44d3a000 x442cc666 1}
       {x44d35ccd x442cb99a 1}}}
     {tx x447a4000 x44d15ea1 x442c6be2}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear306 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d31666 x44294ccd 1}
       {x44d38ccd x44294ccd 1}
       {x44d3eccd x4429599a 1}
       {x44d4399a x44297333 1}}}
     {tx x447a4000 x44d3b266 x4429599a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear305 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2dccd x44283333 1}
       {x44d35666 x44289333 1}
       {x44d3d333 x4428d99a 1}
       {x44d41ccd x44290666 1}
       {x44d44333 x44292000 1}}}
     {tx x447a4000 x44d3ae15 x4428c148}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear304 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2a000 x44297333 1}
       {x44d2c99a x44298666 1}
       {x44d39333 x4429b99a 1}
       {x44d3e666 x4429b99a 1}
       {x44d44000 x44298666 1}}}
     {tx x447a4000 x44d36d70 x4429970a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear303 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d21ccd x44292ccd 1}
       {x44d2b666 x4429a000 1}
       {x44d3e000 x4429f333 1}
       {x44d41000 x442a0000 1}
       {x44d44000 x4429f333 1}}}
     {tx x447a4000 x44d3670a x4429bd71}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear302 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2c333 x44288666 1}
       {x44d3f666 x44294000 1}
       {x44d48ccd x44297333 1}
       {x44d4099a x44294ccd 1}}}
     {tx x447a4000 x44d3d400 x44292199}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear301 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2dccd x44277333 1}
       {x44d4399a x44284666 1}
       {x44d4a333 x4428799a 1}
       {x44d4fccd x4428999a 1}
       {x44d4bccd x44289333 1}}}
     {tx x447a4000 x44d44a3e x44284666}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear300 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d31666 x44258ccd 1}
       {x44d38000 x4426199a 1}
       {x44d4799a x4426a000 1}
       {x44d54333 x4426d99a 1}
       {x44d52000 x4426e666 1}}}
     {tx x447a4000 x44d44a3d x442667ae}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear299 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2accd x44232666 1}
       {x44d4099a x4423b333 1}
       {x44d46ccd x4423cccd 1}
       {x44d4f000 x4423eccd 1}
       {x44d55ccd x44241333 1}
       {x44d4e99a x44242000 1}
       {x44d4a333 x44242ccd 1}}}
     {tx x447a4000 x44d46d41 x4423d999}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear298 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2dccd x4421799a 1}
       {x44d32333 x4421799a 1}
       {x44d40333 x4421799a 1}
       {x44d4e99a x4421799a 1}
       {x44d5499a x44219333 1}
       {x44d4e99a x4421cccd 1}
       {x44d4c000 x4421d99a 1}}}
     {tx x447a4000 x44d44492 x442196db}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear297 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2e666 x44220666 1}
       {x44d47333 x44220000 1}
       {x44d4d99a x44220000 1}
       {x44d5499a x44220000 1}
       {x44d5099a x4421f333 1}}}
     {tx x447a4000 x44d48146 x4421feb9}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear296 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d30000 x44227333 1}
       {x44d37ccd x44227333 1}
       {x44d4699a x44227333 1}
       {x44d4e000 x44227333 1}
       {x44d5799a x44227333 1}
       {x44d55666 x44227333 1}
       {x44d53666 x44227333 1}}}
     {tx x447a4000 x44d48af9 x44227333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear295 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2e666 x4422e000 1}
       {x44d3eccd x4422e000 1}
       {x44d4bccd x4422d333 1}
       {x44d5199a x4422d333 1}
       {x44d54333 x4422c666 1}
       {x44d5799a x4422c666 1}
       {x44d52000 x4422c666 1}}}
     {tx x447a4000 x44d4a57b x4422d160}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear294 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d3399a x4422eccd 1}
       {x44d4a333 x4422f99a 1}
       {x44d5499a x4422f99a 1}
       {x44d5cccd x4422e000 1}
       {x44d59ccd x4422e000 1}}}
     {tx x447a4000 x44d4e99a x4422eccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear293 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d28333 x4424599a 1}
       {x44d2d000 x44244ccd 1}
       {x44d34ccd x44244ccd 1}
       {x44d5099a x44244ccd 1}
       {x44d6299a x44244ccd 1}}}
     {tx x447a4000 x44d3f70a x44244f5c}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear292 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d23666 x4426199a 1}
       {x44d2b333 x4426accd 1}
       {x44d3d333 x44276666 1}
       {x44d4699a x4427a666 1}
       {x44d5499a x4427d333 1}
       {x44d55666 x44277333 1}}}
     {tx x447a4000 x44d3f667 x44272eef}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear291 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d29333 x4426b99a 1}
       {x44d2c99a x44277333 1}
       {x44d31ccd x4428199a 1}
       {x44d43333 x4429599a 1}
       {x44d4f000 x442a199a 1}
       {x44d4d99a x4429b99a 1}}}
     {tx x447a4000 x44d3be67 x44289333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear290 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d26000 x4424b99a 1}
       {x44d26333 x4425199a 1}
       {x44d2bccd x4426599a 1}
       {x44d3099a x44271333 1}
       {x44d3d99a x4428799a 1}
       {x44d46333 x44294ccd 1}}}
     {tx x447a4000 x44d32110 x4426d666}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear289 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d21ccd x4423799a 1}
       {x44d21ccd x4423cccd 1}
       {x44d23ccd x44249333 1}
       {x44d26333 x44254666 1}
       {x44d2c99a x44270000 1}
       {x44d35666 x44297333 1}
       {x44d39333 x442ae000 1}
       {x44d36333 x442ac000 1}}}
     {tx x447a4000 x44d2be00 x4426e666}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear288 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d22ccd x4425a666 1}
       {x44d24ccd x44268000 1}
       {x44d2b333 x4429a666 1}
       {x44d2e000 x442bcccd 1}
       {x44d36000 x442f4ccd 1}
       {x44d4199a x44317333 1}}}
     {tx x447a4000 x44d2ebbc x442b0eef}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear287 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d22666 x4426199a 1}
       {x44d22666 x4426a666 1}
       {x44d22000 x44294000 1}
       {x44d22000 x442ae666 1}
       {x44d26ccd x442e999a 1}
       {x44d2f333 x44308000 1}
       {x44d2d99a x442f599a 1}
       {x44d2b333 x442e999a 1}}}
     {tx x447a4000 x44d26f32 x442bbe66}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear286 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d1e666 x44244ccd 1}
       {x44d1f333 x44257333 1}
       {x44d20000 x4426c000 1}
       {x44d2199a x442b3333 1}
       {x44d24ccd x442da666 1}
       {x44d27333 x442ed99a 1}
       {x44d28ccd x442f7333 1}
       {x44d26666 x442e7333 1}
       {x44d25333 x442e199a 1}}}
     {tx x447a4000 x44d2382d x442b2221}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear285 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d16ccd x44248ccd 1}
       {x44d16ccd x4425199a 1}
       {x44d16ccd x44270000 1}
       {x44d16ccd x44292666 1}
       {x44d1a000 x442cd99a 1}
       {x44d20000 x442e999a 1}
       {x44d20666 x442da666 1}
       {x44d1eccd x442ca666 1}}}
     {tx x447a4000 x44d1a8cd x4429f19a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear284 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d0a000 x4423f333 1}
       {x44d0999a x44256666 1}
       {x44d0a000 x44267333 1}
       {x44d0c666 x442aa666 1}
       {x44d0eccd x442eb333 1}
       {x44d10666 x44303333 1}}}
     {tx x447a4000 x44d0c334 x44298eef}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear283 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d0c000 x4425f333 1}
       {x44d0b333 x44268000 1}
       {x44d0b333 x4426f333 1}
       {x44d0b333 x44276666 1}
       {x44d0b333 x442a8ccd 1}
       {x44d0d99a x442f999a 1}
       {x44d14666 x44320000 1}
       {x44d15333 x4431b333 1}}}
     {tx x447a4000 x44d0e000 x442b14cd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear282 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cfcccd x442a4000 1}
       {x44cfb333 x442c0ccd 1}
       {x44cfb99a x442d3333 1}
       {x44d00666 x4431999a 1}
       {x44d0799a x4433b333 1}}}
     {tx x447a4000 x44cff1eb x442e8f5c}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear281 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cfa000 x442a199a 1}
       {x44cfaccd x442b2666 1}
       {x44cfb99a x442c2666 1}
       {x44cfc666 x442ea666 1}
       {x44cfd99a x4431b333 1}
       {x44d0199a x44330000 1}
       {x44d01333 x4431b333 1}}}
     {tx x447a4000 x44cfd507 x442ea2be}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear280 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cf6666 x4429cccd 1}
       {x44cf6666 x442a4ccd 1}
       {x44cf6666 x442b8000 1}
       {x44cf6666 x442d4ccd 1}
       {x44cf6ccd x44308000 1}
       {x44cfb99a x4433199a 1}
       {x44cfd333 x4433c000 1}
       {x44cfb333 x44328000 1}}}
     {tx x447a4000 x44cf88cc x442ed800}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear279 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cf1333 x4429f333 1}
       {x44cf199a x442a6666 1}
       {x44cf199a x442ad99a 1}
       {x44cf2000 x442d0ccd 1}
       {x44cf0000 x44310000 1}
       {x44cf2000 x44336666 1}
       {x44cf4666 x4433c000 1}
       {x44cf4666 x44323333 1}
       {x44cf3333 x44304ccd 1}}}
     {tx x447a4000 x44cf2444 x442efd28}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear278 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ce5333 x442c199a 1}
       {x44ce5333 x442ce666 1}
       {x44ce5333 x442d8ccd 1}
       {x44ce5333 x442fcccd 1}
       {x44ce799a x44343333 1}
       {x44ced333 x44364000 1}
       {x44cef333 x4437599a 1}
       {x44ceb99a x44364ccd 1}
       {x44ceb333 x4435f333 1}}}
     {tx x447a4000 x44ce8d82 x44324444}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear277 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ce6ccd x442ab333 1}
       {x44ce6ccd x442b0ccd 1}
       {x44ce799a x442c0ccd 1}
       {x44ce799a x442dcccd 1}
       {x44ce4ccd x44320000 1}
       {x44cea000 x4435a666 1}
       {x44cf0000 x44367333 1}
       {x44cf0ccd x44352666 1}
       {x44cf0ccd x44348000 1}}}
     {tx x447a4000 x44cea5b2 x4430d111}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear276 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cc7333 x44308000 1}
       {x44cc799a x4430cccd 1}
       {x44cc8ccd x44320ccd 1}
       {x44cca000 x4432f333 1}
       {x44ccc000 x44352666 1}
       {x44ccf99a x44374ccd 1}
       {x44cd0666 x4437999a 1}}}
     {tx x447a4000 x44ccb15f x4433c3a8}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear275 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ccd333 x4431999a 1}
       {x44ccc000 x44326666 1}
       {x44ccb333 x44336666 1}
       {x44cc8ccd x44348ccd 1}
       {x44cc3333 x4437599a 1}
       {x44cc3333 x44384ccd 1}
       {x44cc3333 x4437cccd 1}
       {x44cc3333 x44378ccd 1}}}
     {tx x447a4000 x44cc73ff x44355e68}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear274 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cce666 x44308ccd 1}
       {x44ccf333 x44314ccd 1}
       {x44ccf333 x4431c000 1}
       {x44ccf99a x4433e666 1}
       {x44cd0000 x4436b333 1}
       {x44cd0666 x4438999a 1}
       {x44ccf333 x44394ccd 1}
       {x44ccd333 x44393333 1}}}
     {tx x447a4000 x44ccf266 x4435299a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear273 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cd2666 x442e999a 1}
       {x44cd2666 x442f4ccd 1}
       {x44cd2666 x442fe666 1}
       {x44cd0000 x4432b333 1}
       {x44cceccd x44357333 1}
       {x44ccf333 x4437999a 1}
       {x44cceccd x44380000 1}}}
     {tx x447a4000 x44cd0925 x4433141e}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear272 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ccf99a x442da666 1}
       {x44ccf99a x442e6666 1}
       {x44ccf99a x442ef333 1}
       {x44cd0000 x44314000 1}
       {x44ccf333 x44344ccd 1}
       {x44cceccd x44377333 1}
       {x44cd0ccd x4438599a 1}}}
     {tx x447a4000 x44ccfa85 x443255f1}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear271 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ccaccd x4431e666 1}
       {x44ccaccd x44324ccd 1}
       {x44ccaccd x4433e666 1}
       {x44ccaccd x44347333 1}
       {x44ccd333 x44368000 1}
       {x44cceccd x44373333 1}}}
     {tx x447a4000 x44ccbddf x44346000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear270 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cd0666 x4431f333 1}
       {x44ccf333 x44332666 1}
       {x44cceccd x4433d99a 1}
       {x44ccc000 x4435e666 1}
       {x44ccb99a x4437e666 1}
       {x44ccb99a x44383333 1}}}
     {tx x447a4000 x44ccd999 x44352888}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear269 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cd0666 x442f4ccd 1}
       {x44cd2666 x442fd99a 1}
       {x44cd399a x4430599a 1}
       {x44cd6666 x44323333 1}
       {x44cd6666 x4434e666 1}
       {x44cd799a x44368000 1}}}
     {tx x447a4000 x44cd4778 x44322eef}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear268 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cd0000 x44306666 1}
       {x44cd199a x4431d99a 1}
       {x44cd3333 x4432cccd 1}
       {x44cd6ccd x44357333 1}
       {x44cd9333 x44374ccd 1}
       {x44cd7333 x44374000 1}}}
     {tx x447a4000 x44cd4aa9 x44342ccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear267 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cca000 x4431199a 1}
       {x44ccaccd x44318ccd 1}
       {x44ccb99a x44320ccd 1}
       {x44ccf333 x44338ccd 1}
       {x44cd1333 x4435cccd 1}
       {x44cd2000 x44374ccd 1}}}
     {tx x447a4000 x44ccdccd x44338eef}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear266 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cccccd x44310ccd 1}
       {x44ccb333 x44314000 1}
       {x44ccb333 x4431999a 1}
       {x44ccaccd x4432f333 1}
       {x44ccb99a x4435199a 1}
       {x44ccc000 x4437b333 1}
       {x44cce000 x4438a666 1}
       {x44ccf333 x44384000 1}
       {x44ccf333 x4437d99a 1}}}
     {tx x447a4000 x44cccaaa x4434eeef}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear265 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cbe333 x4433a000 1}
       {x44cbe333 x44352000 1}
       {x44cbdccd x44361333 1}
       {x44cbdccd x44386ccd 1}
       {x44cc099a x443b0666 1}
       {x44cbfccd x443c2666 1}}}
     {tx x447a4000 x44cbebbc x4437bccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear264 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cb9666 x4432b99a 1}
       {x44cba666 x4433a000 1}
       {x44cbaccd x4434c000 1}
       {x44cba666 x44374ccd 1}
       {x44cbe99a x443a0000 1}
       {x44cc0333 x443b2ccd 1}
       {x44cc0333 x443aeccd 1}
       {x44cbdccd x4438d99a 1}}}
     {tx x447a4000 x44cbcb99 x44376b33}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear263 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cb3000 x4432f333 1}
       {x44cb3666 x44333333 1}
       {x44cb4666 x44343333 1}
       {x44cb4666 x4435399a 1}
       {x44cb5333 x4437f333 1}
       {x44cb9000 x4439e666 1}
       {x44cba333 x443a4666 1}
       {x44cb9666 x44386000 1}
       {x44cb9000 x44380ccd 1}}}
     {tx x447a4000 x44cb671c x4436ae39}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear262 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cb3000 x4434199a 1}
       {x44cb1ccd x44346000 1}
       {x44cb1666 x44356ccd 1}
       {x44cb1666 x4436399a 1}
       {x44cb3666 x4438d99a 1}
       {x44cb7000 x443a8000 1}
       {x44cb5333 x4439a000 1}}}
     {tx x447a4000 x44cb3507 x443703a8}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear261 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cae666 x4432accd 1}
       {x44caf99a x44330000 1}
       {x44cb2333 x4434a666 1}
       {x44cb2333 x4434f333 1}
       {x44cb2333 x4435a666 1}
       {x44cb2333 x44389333 1}
       {x44cb3666 x443a2ccd 1}
       {x44cb399a x44396ccd 1}}}
     {tx x447a4000 x44cb1b9a x44362333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear260 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ca8666 x44329333 1}
       {x44ca8000 x4433599a 1}
       {x44ca7333 x4433cccd 1}
       {x44ca2ccd x44366666 1}
       {x44ca199a x4439b333 1}
       {x44ca799a x443b8000 1}
       {x44caa333 x443bb333 1}
       {x44cab000 x4439cccd 1}}}
     {tx x447a4000 x44ca7199 x44375a66}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear259 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ca3000 x4433d99a 1}
       {x44ca3000 x4434f333 1}
       {x44ca2666 x4435c000 1}
       {x44c9f666 x4438accd 1}
       {x44ca0ccd x443be000 1}
       {x44ca3666 x443caccd 1}
       {x44ca3000 x443beccd 1}
       {x44ca199a x4439cccd 1}}}
     {tx x447a4000 x44ca2133 x4438b001}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear258 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c97ccd x44340ccd 1}
       {x44c9899a x4434799a 1}
       {x44c9899a x44351333 1}
       {x44c9699a x4437eccd 1}
       {x44c94666 x443b2000 1}
       {x44c97000 x443d9333 1}
       {x44c9a000 x443e6ccd 1}
       {x44c9a666 x443d3333 1}
       {x44c9999a x443c2666 1}}}
     {tx x447a4000 x44c981c7 x44398e39}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear257 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c86ccd x44382666 1}
       {x44c85333 x4439c000 1}
       {x44c85000 x443b0666 1}
       {x44c85000 x443d799a 1}
       {x44c85000 x443ea000 1}
       {x44c84333 x443e5333 1}}}
     {tx x447a4000 x44c85333 x443be444}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear256 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c7f99a x44384ccd 1}
       {x44c7f99a x4438cccd 1}
       {x44c80000 x4439399a 1}
       {x44c80666 x4439a666 1}
       {x44c8199a x443ba666 1}
       {x44c8299a x443e2666 1}
       {x44c85333 x443f0ccd 1}
       {x44c85000 x443e6ccd 1}}}
     {tx x447a4000 x44c81bff x443b6801}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear255 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c8899a x4438a000 1}
       {x44c88000 x44398666 1}
       {x44c8799a x443a6000 1}
       {x44c86666 x443be000 1}
       {x44c87333 x443e0000 1}
       {x44c8899a x443eb333 1}
       {x44c87333 x443e2666 1}}}
     {tx x447a4000 x44c87a83 x443be492}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear254 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c90333 x44376666 1}
       {x44c90333 x4437accd 1}
       {x44c8fccd x44393333 1}
       {x44c8fccd x443a2000 1}
       {x44c8f000 x443cb99a 1}
       {x44c8d99a x443e6ccd 1}
       {x44c8cccd x443f0ccd 1}
       {x44c8b666 x443e2666 1}}}
     {tx x447a4000 x44c8e99a x443b5801}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear253 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c88666 x4438b99a 1}
       {x44c89000 x4439d99a 1}
       {x44c89000 x443a8ccd 1}
       {x44c89000 x443c9333 1}
       {x44c89000 x443cf333 1}
       {x44c89666 x443f2ccd 1}
       {x44c89666 x443f999a 1}
       {x44c8899a x443f4666 1}}}
     {tx x447a4000 x44c88f9a x443c9667}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear252 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c8d99a x44373333 1}
       {x44c8d99a x4437a000 1}
       {x44c8d99a x4438199a 1}
       {x44c8c000 x443a1333 1}
       {x44c8a99a x443caccd 1}
       {x44c8b000 x443f2000 1}
       {x44c8a333 x44408000 1}
       {x44c88000 x4440b333 1}
       {x44c86000 x443f7333 1}
       {x44c86000 x443f2ccd 1}}}
     {tx x447a4000 x44c8a75c x443c7666}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear251 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c8e666 x44352ccd 1}
       {x44c8e666 x4435a666 1}
       {x44c8f666 x44367333 1}
       {x44c9099a x4438799a 1}
       {x44c8e000 x443bc666 1}
       {x44c8d333 x443db99a 1}
       {x44c8cccd x443cc666 1}}}
     {tx x447a4000 x44c8e666 x4439257d}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear250 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c92666 x44351333 1}
       {x44c92333 x44358000 1}
       {x44c91ccd x4435d99a 1}
       {x44c91000 x44371333 1}
       {x44c90333 x44398666 1}
       {x44c90333 x443c2000 1}
       {x44c91000 x443d8666 1}
       {x44c91666 x443ceccd 1}}}
     {tx x447a4000 x44c91466 x4438f334}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear249 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c8e000 x44386000 1}
       {x44c8d333 x4438b99a 1}
       {x44c8cccd x4439799a 1}
       {x44c8c666 x443a2000 1}
       {x44c8c666 x443a6000 1}
       {x44c8a99a x443c4ccd 1}
       {x44c8d99a x443d799a 1}}}
     {tx x447a4000 x44c8cb6e x443a683a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear248 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c58666 x443fcccd 1}
       {x44c5a333 x4441c666 1}
       {x44c5b666 x4442accd 1}
       {x44c5bccd x44439333 1}}}
     {tx x447a4000 x44c5a733 x4441f4cd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear247 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c5f99a x443d4000 1}
       {x44c5e000 x443e2666 1}
       {x44c5d000 x443f2ccd 1}
       {x44c5b000 x44413333 1}
       {x44c5bccd x44430000 1}
       {x44c5a333 x4442799a 1}}}
     {tx x447a4000 x44c5c999 x44403555}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear246 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c6c000 x443b399a 1}
       {x44c6b99a x443c2666 1}
       {x44c6b333 x443d199a 1}
       {x44c6b333 x443f4666 1}
       {x44c6a333 x44418000 1}
       {x44c69666 x4442accd 1}
       {x44c67666 x44426ccd 1}}}
     {tx x447a4000 x44c6a6db x443f3160}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear245 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c7799a x44396000 1}
       {x44c75ccd x4439a000 1}
       {x44c74000 x443ad99a 1}
       {x44c6f000 x443d2666 1}
       {x44c6cccd x443ee666 1}
       {x44c6e333 x4440f99a 1}
       {x44c72000 x4442199a 1}}}
     {tx x447a4000 x44c71ea1 x443d483a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear244 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c74000 x44386ccd 1}
       {x44c75666 x4438a000 1}
       {x44c76333 x4439199a 1}
       {x44c77666 x4439d99a 1}
       {x44c78000 x443b8000 1}
       {x44c78000 x443daccd 1}
       {x44c7999a x443e799a 1}
       {x44c7a666 x443dcccd 1}
       {x44c7accd x443d0000 1}}}
     {tx x447a4000 x44c77c17 x443b6223}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear243 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c7eccd x4439f333 1}
       {x44c7dccd x443a399a 1}
       {x44c7d000 x443aa666 1}
       {x44c7c99a x443b1333 1}
       {x44c7c333 x443c6666 1}
       {x44c7b666 x443ecccd 1}
       {x44c7a666 x443fa666 1}
       {x44c78666 x443f5333 1}
       {x44c7799a x443e9333 1}}}
     {tx x447a4000 x44c7b93e x443cbd27}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear242 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c78000 x443a3333 1}
       {x44c78000 x443b4000 1}
       {x44c7999a x443be666 1}
       {x44c7c666 x443dd99a 1}
       {x44c7eccd x443ff333 1}
       {x44c80666 x44408000 1}}}
     {tx x447a4000 x44c7b888 x443d4665}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear241 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c74ccd x443a8000 1}
       {x44c74ccd x443b0ccd 1}
       {x44c75333 x443b8ccd 1}
       {x44c75333 x443d0000 1}
       {x44c75333 x443dc000 1}
       {x44c74ccd x443fc000 1}
       {x44c75333 x44400ccd 1}
       {x44c75333 x443ecccd 1}
       {x44c74ccd x443da666 1}}}
     {tx x447a4000 x44c7505b x443d582e}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear240 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c74ccd x443a8000 1}
       {x44c74ccd x443bf333 1}
       {x44c75333 x443ce666 1}
       {x44c75333 x443fcccd 1}
       {x44c75333 x44413333 1}
       {x44c7399a x4440a666 1}
       {x44c7199a x443f599a 1}}}
     {tx x447a4000 x44c7457d x443e55f1}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear239 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c6e000 x443b599a 1}
       {x44c6e000 x443ba666 1}
       {x44c6e000 x443d4ccd 1}
       {x44c6f99a x443ecccd 1}
       {x44c73333 x4440e666 1}
       {x44c74ccd x44416666 1}
       {x44c72000 x44404ccd 1}
       {x44c7199a x443fc000 1}}}
     {tx x447a4000 x44c70a66 x443eae67}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear238 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c6a666 x443a999a 1}
       {x44c6a666 x443b8ccd 1}
       {x44c6a666 x443cb333 1}
       {x44c6799a x443f599a 1}
       {x44c68666 x4441e666 1}
       {x44c69333 x4440c000 1}}}
     {tx x447a4000 x44c69665 x443e2445}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear237 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c5999a x443bd99a 1}
       {x44c5999a x443c4000 1}
       {x44c5c666 x443dcccd 1}
       {x44c5d99a x443e8ccd 1}
       {x44c5f333 x44416666 1}
       {x44c62ccd x4443599a 1}
       {x44c62ccd x44420ccd 1}}}
     {tx x447a4000 x44c5e000 x443f5249}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear236 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c53333 x443b8000 1}
       {x44c54666 x443c7333 1}
       {x44c54ccd x443d4000 1}
       {x44c55333 x4440a666 1}
       {x44c54ccd x44432666 1}
       {x44c54ccd x4443b333 1}
       {x44c54666 x4442cccd 1}
       {x44c52666 x44417333 1}}}
     {tx x447a4000 x44c54400 x44401e66}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear235 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c46000 x443dcccd 1}
       {x44c46ccd x443e4000 1}
       {x44c48666 x443fc000 1}
       {x44c48ccd x4440599a 1}
       {x44c48ccd x44410ccd 1}
       {x44c48ccd x44436666 1}
       {x44c48666 x4444599a 1}
       {x44c4799a x44436666 1}
       {x44c4799a x44432666 1}}}
     {tx x447a4000 x44c47e94 x4441471c}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear234 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c4399a x443df333 1}
       {x44c4399a x443e4000 1}
       {x44c4599a x4440199a 1}
       {x44c46ccd x44428ccd 1}
       {x44c4599a x4443c000 1}
       {x44c42666 x44457333 1}
       {x44c3f333 x44454ccd 1}
       {x44c3accd x44442666 1}}}
     {tx x447a4000 x44c42b34 x44423001}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear233 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c34ccd x443ec000 1}
       {x44c36666 x443ff333 1}
       {x44c38000 x44413333 1}
       {x44c38ccd x44444ccd 1}
       {x44c3799a x44466666 1}
       {x44c34ccd x4445a666 1}}}
     {tx x447a4000 x44c36bbc x4442b555}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear232 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c36000 x443f599a 1}
       {x44c36000 x4440599a 1}
       {x44c36000 x44417333 1}
       {x44c3199a x4444999a 1}
       {x44c2e000 x4446d99a 1}
       {x44c2e000 x44474ccd 1}
       {x44c2e000 x44468000 1}
       {x44c2e000 x4445a666 1}}}
     {tx x447a4000 x44c31733 x4444019a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear231 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c3599a x443f999a 1}
       {x44c3799a x443ff333 1}
       {x44c3999a x44424ccd 1}
       {x44c36000 x44450ccd 1}
       {x44c34ccd x44460ccd 1}
       {x44c34ccd x44470ccd 1}
       {x44c32000 x4445e666 1}}}
     {tx x447a4000 x44c35c58 x4443b333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear230 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c2e000 x4440199a 1}
       {x44c2eccd x4440599a 1}
       {x44c31333 x44414ccd 1}
       {x44c3199a x44420000 1}
       {x44c32000 x4443f333 1}
       {x44c30666 x44466666 1}
       {x44c30666 x44470ccd 1}
       {x44c30000 x4446a666 1}
       {x44c2e000 x4444f333 1}}}
     {tx x447a4000 x44c300b6 x4443a38e}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear229 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c24ccd x4441199a 1}
       {x44c2999a x44423333 1}
       {x44c2b333 x4442d99a 1}
       {x44c2cccd x4445199a 1}
       {x44c2999a x44478ccd 1}
       {x44c28ccd x44482666 1}
       {x44c28ccd x44477333 1}
       {x44c27333 x4445e666 1}}}
     {tx x447a4000 x44c2919a x44450999}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear228 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c1f99a x44417333 1}
       {x44c22666 x4441d99a 1}
       {x44c26666 x44434000 1}
       {x44c27333 x44442666 1}
       {x44c28000 x4445a666 1}
       {x44c24000 x44482666 1}
       {x44c24000 x44496666 1}
       {x44c24000 x4448f333 1}
       {x44c23333 x44478ccd 1}
       {x44c22666 x4446d99a 1}}}
     {tx x447a4000 x44c241ec x4445b99a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear227 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c1b99a x4441999a 1}
       {x44c1d99a x4442999a 1}
       {x44c1f333 x4443999a 1}
       {x44c20666 x4445c000 1}
       {x44c1eccd x4448999a 1}
       {x44c1eccd x4449b333 1}
       {x44c1e000 x44494ccd 1}
       {x44c1b99a x44483333 1}
       {x44c1a000 x44473333 1}}}
     {tx x447a4000 x44c1d8e4 x44464888}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear226 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c12ccd x44424ccd 1}
       {x44c14666 x4442a666 1}
       {x44c17333 x44442666 1}
       {x44c18666 x4445199a 1}
       {x44c18666 x44478ccd 1}
       {x44c19333 x4449c000 1}
       {x44c1a000 x444a2666 1}
       {x44c1799a x4449599a 1}}}
     {tx x447a4000 x44c17400 x44466000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear225 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c0f99a x4442cccd 1}
       {x44c10ccd x44430ccd 1}
       {x44c12ccd x44446666 1}
       {x44c13333 x44454ccd 1}
       {x44c14000 x44486666 1}
       {x44c13333 x444af333 1}
       {x44c13333 x444ba666 1}
       {x44c11333 x444ad99a 1}
       {x44c0f333 x4449e666 1}
       {x44c0d99a x44492666 1}}}
     {tx x447a4000 x44c117ad x4447a51e}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear224 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c0799a x44424ccd 1}
       {x44c08666 x4442999a 1}
       {x44c0accd x4443b333 1}
       {x44c0c666 x44448ccd 1}
       {x44c0cccd x4445a666 1}
       {x44c0cccd x44490000 1}
       {x44c0c666 x4449f333 1}
       {x44c0b99a x4449b333 1}
       {x44c09333 x4448f333 1}}}
     {tx x447a4000 x44c0ae38 x44464444}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear223 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bfd333 x44443333 1}
       {x44c00000 x44457333 1}
       {x44c00ccd x44464000 1}
       {x44c0399a x44488ccd 1}
       {x44c02666 x444a8000 1}
       {x44c00000 x444b4ccd 1}
       {x44bfb333 x444a599a 1}}}
     {tx x447a4000 x44bffe2b x444815f1}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear222 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bee000 x4443cccd 1}
       {x44bf0666 x4444c000 1}
       {x44bf0ccd x4445d99a 1}
       {x44bf2000 x44480ccd 1}
       {x44bf2666 x444ac000 1}
       {x44bf399a x444b7333 1}}}
     {tx x447a4000 x44bf1333 x44477111}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear221 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44be799a x44450ccd 1}
       {x44be799a x44468000 1}
       {x44be8000 x44477333 1}
       {x44be8ccd x444a4ccd 1}
       {x44be999a x444c3333 1}
       {x44beaccd x444ccccd 1}
       {x44be999a x444c0000 1}}}
     {tx x447a4000 x44be8db7 x444978b0}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear220 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44be6666 x44457333 1}
       {x44be799a x4445f333 1}
       {x44be8000 x44463333 1}
       {x44be9333 x44477333 1}
       {x44bea666 x4448cccd 1}
       {x44beaccd x444b4ccd 1}
       {x44bec000 x444c4000 1}}}
     {tx x447a4000 x44be9333 x44483333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear219 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bf2000 x44452666 1}
       {x44bf2000 x4447199a 1}
       {x44bf2000 x4447cccd 1}
       {x44bf2000 x444a8000 1}
       {x44bf1333 x444c8ccd 1}
       {x44bf1333 x444d0000 1}
       {x44beb333 x444b199a 1}}}
     {tx x447a4000 x44bf0ccd x44499999}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear218 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bf799a x4443c000 1}
       {x44bfa000 x44452666 1}
       {x44bfb333 x44464ccd 1}
       {x44bfd333 x4448999a 1}
       {x44bfe666 x444b199a 1}
       {x44bfb99a x444c4ccd 1}
       {x44bf799a x444bcccd 1}
       {x44bf6000 x444b4000 1}}}
     {tx x447a4000 x44bfa333 x4448c801}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear217 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bf999a x4444c000 1}
       {x44bf999a x44452666 1}
       {x44bfa000 x4445f333 1}
       {x44bfa000 x44474000 1}
       {x44bfa000 x444a599a 1}
       {x44bfa000 x444c7333 1}
       {x44bf799a x444ca666 1}
       {x44bf4666 x444bd99a 1}}}
     {tx x447a4000 x44bf8e66 x4448cccc}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear216 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bf5333 x44442666 1}
       {x44bf599a x44448000 1}
       {x44bf599a x4445e666 1}
       {x44bf599a x4446e666 1}
       {x44bf6ccd x444a2666 1}
       {x44bf5333 x444cc000 1}
       {x44bf2ccd x444cd99a 1}
       {x44bf1333 x444c4ccd 1}
       {x44bef99a x444bcccd 1}}}
     {tx x447a4000 x44bf42d8 x44490889}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear215 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bec000 x44450ccd 1}
       {x44bec000 x44463333 1}
       {x44bec000 x44474000 1}
       {x44beb333 x4449b333 1}
       {x44be8ccd x444c7333 1}
       {x44be8ccd x444d6666 1}
       {x44be6666 x444cf333 1}
       {x44be6000 x444ca666 1}}}
     {tx x447a4000 x44be9a67 x4449f4cd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear214 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44be199a x4445d99a 1}
       {x44be2000 x44464000 1}
       {x44be2000 x44474ccd 1}
       {x44be2ccd x44484000 1}
       {x44be3333 x4449599a 1}
       {x44be2ccd x444bb333 1}
       {x44be0666 x444d4000 1}
       {x44bdf99a x444cf333 1}
       {x44bdf99a x444be666 1}}}
     {tx x447a4000 x44be18e4 x4449a4fa}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear213 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bc9333 x4448599a 1}
       {x44bca000 x4449c000 1}
       {x44bc9333 x444ad99a 1}
       {x44bc8ccd x444d0000 1}
       {x44bc3333 x444e8000 1}
       {x44bc2666 x444e2666 1}}}
     {tx x447a4000 x44bc7223 x444bc444}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear212 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bcb99a x4447cccd 1}
       {x44bcc666 x4448b333 1}
       {x44bcc666 x4449599a 1}
       {x44bcaccd x444b7333 1}
       {x44bc799a x444d0ccd 1}
       {x44bc6666 x444db333 1}
       {x44bc4ccd x444d0000 1}}}
     {tx x447a4000 x44bc96dd x444b01d3}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear211 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bcf333 x44474ccd 1}
       {x44bce000 x4448599a 1}
       {x44bce000 x44490000 1}
       {x44bce000 x444ac000 1}
       {x44bcd99a x444d2666 1}
       {x44bcaccd x444e2666 1}
       {x44bc799a x444dc000 1}
       {x44bc6000 x444d599a 1}}}
     {tx x447a4000 x44bcbe67 x444b399a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear210 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bde000 x44458ccd 1}
       {x44bdb333 x44468000 1}
       {x44bda666 x44473333 1}
       {x44bd8000 x4449cccd 1}
       {x44bd399a x444c0ccd 1}
       {x44bd0ccd x444d3333 1}
       {x44bcf99a x444ca666 1}}}
     {tx x447a4000 x44bd6ccd x44499075}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear209 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bd0666 x4444199a 1}
       {x44bd0666 x44448000 1}
       {x44bd2666 x4445199a 1}
       {x44bd399a x44454ccd 1}
       {x44bd599a x44466666 1}
       {x44bd599a x4447999a 1}
       {x44bd399a x444a7333 1}
       {x44bd399a x444c0ccd 1}
       {x44bd6666 x444e0000 1}
       {x44bd6666 x444e6666 1}
       {x44bd399a x444d8ccd 1}
       {x44bd0666 x444c4000 1}}}
     {tx x447a4000 x44bd37ff x44492444}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear208 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bccccd x4448999a 1}
       {x44bccccd x4449a666 1}
       {x44bccccd x444a4ccd 1}
       {x44bd0000 x444c8ccd 1}
       {x44bd0ccd x444e2666 1}
       {x44bd0ccd x444de666 1}
       {x44bce000 x444d0000 1}
       {x44bcb99a x444c599a 1}}}
     {tx x447a4000 x44bce333 x444bd000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear207 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bc799a x4447a666 1}
       {x44bc799a x4448599a 1}
       {x44bc6ccd x44490000 1}
       {x44bc2666 x444b2666 1}
       {x44bc199a x444d8000 1}
       {x44bc4000 x444e999a 1}
       {x44bc4000 x444d199a 1}}}
     {tx x447a4000 x44bc4db7 x444b0ccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear206 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bc199a x44483333 1}
       {x44bc199a x44488ccd 1}
       {x44bc2ccd x4449d99a 1}
       {x44bc5333 x444c0000 1}
       {x44bc6000 x444d599a 1}
       {x44bc199a x444bd99a 1}
       {x44bc1333 x444b999a 1}}}
     {tx x447a4000 x44bc2db7 x444ac57b}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear205 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bc0666 x4448cccd 1}
       {x44bc2666 x4449e666 1}
       {x44bc599a x444b4000 1}
       {x44bc7333 x444cb333 1}
       {x44bc3333 x444a999a 1}}}
     {tx x447a4000 x44bc3c2a x444aa666}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear204 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bbd333 x44494ccd 1}
       {x44bc0666 x444ab333 1}
       {x44bc1333 x444ce666 1}
       {x44bc1333 x444d8ccd 1}
       {x44bc0666 x444c3333 1}
       {x44bbeccd x444a6666 1}
       {x44bbeccd x4449d99a 1}}}
     {tx x447a4000 x44bbfb6f x444b457d}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear203 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bbc000 x4448a666 1}
       {x44bbc000 x4449599a 1}
       {x44bbc000 x444a2666 1}
       {x44bbc000 x444bd99a 1}
       {x44bbb99a x444d8000 1}
       {x44bbb99a x444ccccd 1}
       {x44bbb99a x444b999a 1}}}
     {tx x447a4000 x44bbbd41 x444b20ea}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear202 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bc0666 x44490ccd 1}
       {x44bc0ccd x444ab333 1}
       {x44bc0ccd x444b599a 1}
       {x44bc0666 x444cf333 1}
       {x44bc0666 x444d599a 1}
       {x44bc0000 x444ccccd 1}
       {x44bbe666 x444c4000 1}}}
     {tx x447a4000 x44bc02bf x444bc751}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear201 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bbc666 x44497333 1}
       {x44bbcccd x444a8000 1}
       {x44bbe000 x444b4ccd 1}
       {x44bbe000 x444d0ccd 1}
       {x44bbe000 x444e0000 1}
       {x44bbeccd x444dc000 1}
       {x44bbeccd x444c8ccd 1}
       {x44bbeccd x444b8000 1}}}
     {tx x447a4000 x44bbdf34 x444c0334}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear200 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bb8ccd x4449d99a 1}
       {x44bba666 x444a0ccd 1}
       {x44bba666 x444a8000 1}
       {x44bba666 x444b599a 1}
       {x44bb999a x444d4ccd 1}
       {x44bb8ccd x444ed99a 1}
       {x44bb7333 x444e0000 1}
       {x44bb599a x444d199a 1}}}
     {tx x447a4000 x44bb8e66 x444c2000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear199 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44baf333 x44488000 1}
       {x44bb0000 x44492666 1}
       {x44bb0ccd x444a0ccd 1}
       {x44bb0ccd x444c199a 1}
       {x44bb0ccd x444e2666 1}
       {x44bb1333 x444ed99a 1}
       {x44bb2000 x444e599a 1}
       {x44bb2ccd x444d4000 1}}}
     {tx x447a4000 x44bb0f33 x444c0ccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear198 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bb199a x4449599a 1}
       {x44bb2000 x4449d99a 1}
       {x44bb2000 x444a6666 1}
       {x44bb2ccd x444c6666 1}
       {x44bb3333 x444eb333 1}
       {x44bb4666 x44504000 1}
       {x44bb2000 x444ec000 1}
       {x44bb1333 x444e6666 1}}}
     {tx x447a4000 x44bb2666 x444cc333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear197 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ba799a x44487333 1}
       {x44ba9333 x4448e666 1}
       {x44baa666 x44497333 1}
       {x44bac666 x444bd99a 1}
       {x44bac666 x444eb333 1}
       {x44bad99a x44500000 1}
       {x44baeccd x444ec000 1}}}
     {tx x447a4000 x44bab7c6 x444c03a9}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear196 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ba599a x444a2666 1}
       {x44ba599a x444a8ccd 1}
       {x44ba6666 x444b4000 1}
       {x44ba8666 x444cf333 1}
       {x44ba8666 x444f4000 1}
       {x44ba8000 x4450999a 1}
       {x44ba799a x444f0000 1}
       {x44ba6ccd x444eb333 1}}}
     {tx x447a4000 x44ba719a x444d4e66}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear195 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b9d99a x4449999a 1}
       {x44b9f333 x444a8ccd 1}
       {x44ba0000 x444b4ccd 1}
       {x44ba199a x444dd99a 1}
       {x44ba199a x444ed99a 1}
       {x44ba199a x444f6666 1}
       {x44ba1333 x44502666 1}
       {x44ba1333 x444f8ccd 1}
       {x44ba1333 x444ed99a 1}}}
     {tx x447a4000 x44ba093d x444d9112}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear194 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b89333 x444d0ccd 1}
       {x44b89333 x444d599a 1}
       {x44b8b333 x444ed99a 1}
       {x44b8b99a x444fb333 1}
       {x44b88000 x4451e666 1}
       {x44b87333 x4452a666 1}
       {x44b83333 x4451c000 1}}}
     {tx x447a4000 x44b88839 x444fe492}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear193 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b94666 x4449b333 1}
       {x44b9399a x444b0000 1}
       {x44b92ccd x444c3333 1}
       {x44b8f333 x444f4ccd 1}
       {x44b8accd x4451599a 1}
       {x44b8a000 x44523333 1}
       {x44b84666 x44517333 1}}}
     {tx x447a4000 x44b8e2bf x444e7507}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear192 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b92666 x444ab333 1}
       {x44b92ccd x444b8ccd 1}
       {x44b9399a x444c199a 1}
       {x44b95333 x444dcccd 1}
       {x44b97333 x444fcccd 1}
       {x44b97333 x44508000 1}
       {x44b98666 x44504000 1}
       {x44b98666 x444ff333 1}
       {x44b97333 x444ea666 1}}}
     {tx x447a4000 x44b95d28 x444e24fa}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear191 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b8b99a x4449c000 1}
       {x44b8b99a x444a2666 1}
       {x44b8d333 x444bcccd 1}
       {x44b8e000 x444ccccd 1}
       {x44b8f333 x444ff333 1}
       {x44b8f333 x4451b333 1}
       {x44b8c666 x44504000 1}
       {x44b8b99a x444f8000 1}}}
     {tx x447a4000 x44b8d19a x444dbccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear190 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b7c000 x444c4000 1}
       {x44b7e000 x444d599a 1}
       {x44b80000 x444e6666 1}
       {x44b82000 x4450a666 1}
       {x44b82666 x4452d99a 1}
       {x44b7eccd x4451f333 1}}}
     {tx x447a4000 x44b7f889 x444f9333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear189 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b7599a x444b8ccd 1}
       {x44b7599a x444bd99a 1}
       {x44b7799a x444d3333 1}
       {x44b78666 x444dc000 1}
       {x44b7a666 x444ff333 1}
       {x44b7c000 x44524000 1}
       {x44b7cccd x44536666 1}
       {x44b79333 x44523333 1}
       {x44b78666 x4451e666 1}}}
     {tx x447a4000 x44b78e3a x444f8fa5}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear188 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b68ccd x444bcccd 1}
       {x44b6d333 x444c8000 1}
       {x44b6e666 x444d3333 1}
       {x44b6eccd x444f8000 1}
       {x44b6d333 x44524000 1}
       {x44b6e666 x44534ccd 1}
       {x44b6e666 x4452e666 1}
       {x44b6d333 x44518000 1}}}
     {tx x447a4000 x44b6d4cd x444fde67}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear187 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b5c666 x444c599a 1}
       {x44b5f333 x444c6666 1}
       {x44b61333 x444d0000 1}
       {x44b62000 x444e999a 1}
       {x44b61333 x44518000 1}
       {x44b60000 x44534ccd 1}
       {x44b60ccd x4453c000 1}
       {x44b60000 x4452a666 1}
       {x44b5e666 x4451a666 1}}}
     {tx x447a4000 x44b5fe94 x44502223}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear186 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b54ccd x444d0ccd 1}
       {x44b5599a x444e0ccd 1}
       {x44b56000 x444ee666 1}
       {x44b56ccd x4450d99a 1}
       {x44b56666 x4453199a 1}
       {x44b54666 x44544000 1}
       {x44b52666 x4453a666 1}
       {x44b51333 x44523333 1}}}
     {tx x447a4000 x44b54b33 x44510199}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear185 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b4a666 x444f0000 1}
       {x44b4a666 x444eb333 1}
       {x44b4a666 x444e6666 1}
       {x44b4a666 x444ea666 1}
       {x44b4a666 x444f2666 1}
       {x44b4b99a x44500000 1}
       {x44b4d333 x44517333 1}
       {x44b4b99a x44530ccd 1}
       {x44b4a666 x4454d99a 1}
       {x44b4999a x44544ccd 1}
       {x44b48ccd x4453e666 1}}}
     {tx x447a4000 x44b4aa79 x44510a79}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear184 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b4b333 x444d4000 1}
       {x44b49333 x444d999a 1}
       {x44b49333 x444de666 1}
       {x44b4999a x444e7333 1}
       {x44b4c000 x444fc000 1}
       {x44b4d333 x44510000 1}
       {x44b4d333 x44527333 1}
       {x44b4999a x4453f333 1}
       {x44b48000 x4454999a 1}
       {x44b47333 x4453999a 1}
       {x44b47333 x44532666 1}}}
     {tx x447a4000 x44b49f69 x4450e1bd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear183 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b3999a x4450d99a 1}
       {x44b3b333 x44517333 1}
       {x44b3b99a x4451b333 1}
       {x44b3e000 x4452a666 1}
       {x44b3b99a x4453599a 1}
       {x44b38ccd x44537333 1}}}
     {tx x447a4000 x44b3b223 x44523ddd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear182 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b3399a x44507333 1}
       {x44b34000 x4450f333 1}
       {x44b34666 x44514ccd 1}
       {x44b3599a x44526666 1}
       {x44b3599a x4453a666 1}
       {x44b34666 x44533333 1}}}
     {tx x447a4000 x44b34999 x4451fddd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear181 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b29333 x44508ccd 1}
       {x44b2a000 x4450e666 1}
       {x44b2accd x44514000 1}
       {x44b2c000 x44522666 1}
       {x44b2cccd x44538000 1}
       {x44b2c666 x44544000 1}
       {x44b2999a x4453c000 1}}}
     {tx x447a4000 x44b2af8a x445255f1}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear180 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b11333 x44516666 1}
       {x44b12000 x4452199a 1}
       {x44b12ccd x44528000 1}
       {x44b16ccd x4453c000 1}
       {x44b18666 x4454a666 1}}}
     {tx x447a4000 x44b143d6 x4452e148}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear179 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b0f99a x4451999a 1}
       {x44b0eccd x44520000 1}
       {x44b0e666 x4452cccd 1}
       {x44b0e666 x44538ccd 1}
       {x44b0cccd x4454e666 1}
       {x44b0a000 x4455cccd 1}
       {x44b08ccd x44558000 1}}}
     {tx x447a4000 x44b0cf8b x4453bc58}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear178 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b1a666 x44514ccd 1}
       {x44b1a000 x4451a666 1}
       {x44b1a000 x44528ccd 1}
       {x44b1a666 x44533333 1}
       {x44b1a666 x4454599a 1}
       {x44b1999a x44550ccd 1}
       {x44b18000 x4454e666 1}
       {x44b15333 x44542666 1}}}
     {tx x447a4000 x44b19400 x445364ce}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear177 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b20ccd x44508ccd 1}
       {x44b2199a x4451599a 1}
       {x44b22ccd x4451d99a 1}
       {x44b24000 x44526666 1}
       {x44b24666 x4453e666 1}
       {x44b24000 x4454c000 1}
       {x44b20000 x4453e666 1}
       {x44b1f333 x4453999a 1}}}
     {tx x447a4000 x44b22199 x4452c99a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear176 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b32000 x44527333 1}
       {x44b36666 x4453e666 1}
       {x44b39333 x44546666 1}
       {x44b3f333 x44564ccd 1}
       {x44b3d99a x4457199a 1}}}
     {tx x447a4000 x44b3947b x4454d47b}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear175 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b1c666 x4452b333 1}
       {x44b1c666 x44530ccd 1}
       {x44b20000 x44546666 1}
       {x44b2199a x4454e666 1}
       {x44b24ccd x44568ccd 1}}}
     {tx x447a4000 x44b1fd71 x445451ed}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear174 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b22ccd x4451e666 1}
       {x44b22ccd x4452b333 1}
       {x44b2399a x4454cccd 1}
       {x44b2399a x44554000 1}
       {x44b21333 x4456199a 1}
       {x44b1e000 x4455d99a 1}}}
     {tx x447a4000 x44b22000 x44546eef}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear173 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b38ccd x44514ccd 1}
       {x44b3599a x44538000 1}
       {x44b35333 x4454599a 1}
       {x44b30666 x44558ccd 1}
       {x44b2accd x44558ccd 1}}}
     {tx x447a4000 x44b32f5c x44540ccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear172 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b3e000 x44508ccd 1}
       {x44b3e000 x44514ccd 1}
       {x44b40000 x4452d99a 1}
       {x44b41333 x44546666 1}
       {x44b40ccd x44550ccd 1}
       {x44b3b99a x4454999a 1}
       {x44b3799a x4453a666 1}}}
     {tx x447a4000 x44b3de2b x44533333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear171 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b3a666 x444fcccd 1}
       {x44b3c666 x444ff333 1}
       {x44b3e000 x4451199a 1}
       {x44b3f333 x44528ccd 1}
       {x44b3d99a x4453f333 1}
       {x44b3b99a x44540ccd 1}
       {x44b39333 x4452d99a 1}}}
     {tx x447a4000 x44b3c57b x44520925}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear170 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b34666 x44508ccd 1}
       {x44b34666 x44520000 1}
       {x44b35333 x4452e666 1}
       {x44b38000 x4454999a 1}
       {x44b3a000 x4454cccd 1}
       {x44b3a000 x4454199a 1}
       {x44b38000 x4452d99a 1}}}
     {tx x447a4000 x44b37249 x44531d41}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear169 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b2799a x44517333 1}
       {x44b26000 x4451e666 1}
       {x44b26666 x4453cccd 1}
       {x44b2799a x4454599a 1}
       {x44b2a000 x4455b333 1}
       {x44b2accd x4454f333 1}
       {x44b2a000 x4453f333 1}}}
     {tx x447a4000 x44b2857d x4453ba82}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear168 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b2c000 x44508000 1}
       {x44b28ccd x4452199a 1}
       {x44b28ccd x44530000 1}
       {x44b2accd x44548000 1}
       {x44b2b333 x4454cccd 1}
       {x44b2b333 x44546666 1}
       {x44b2a000 x4453e666 1}}}
     {tx x447a4000 x44b2a666 x44535076}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear167 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b2a000 x44514000 1}
       {x44b2b333 x44522666 1}
       {x44b2cccd x4452c000 1}
       {x44b2f99a x4453f333 1}
       {x44b30ccd x44553333 1}
       {x44b2f333 x44543333 1}}}
     {tx x447a4000 x44b2d999 x44534000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear166 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b1f333 x4451999a 1}
       {x44b21333 x44524000 1}
       {x44b25333 x44532666 1}
       {x44b2799a x4453cccd 1}
       {x44b2a000 x44546666 1}
       {x44b2c000 x44554000 1}
       {x44b2b333 x4454a666 1}}}
     {tx x447a4000 x44b26a0e x445395f1}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear165 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b0b333 x44534ccd 1}
       {x44b0accd x4453f333 1}
       {x44b0accd x44546666 1}
       {x44b0d333 x44558000 1}
       {x44b0e666 x44567333 1}
       {x44b0eccd x4456b333 1}
       {x44b0f99a x44566666 1}}}
     {tx x447a4000 x44b0cf8b x44553e2b}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear164 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b0e666 x44528ccd 1}
       {x44b0d333 x44533333 1}
       {x44b0d333 x4453cccd 1}
       {x44b0eccd x4454f333 1}
       {x44b10ccd x44564ccd 1}
       {x44b11333 x4456e666 1}
       {x44b0f99a x44564ccd 1}}}
     {tx x447a4000 x44b0f075 x4454db6f}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear163 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b18ccd x4451e666 1}
       {x44b18000 x44528ccd 1}
       {x44b18000 x44530ccd 1}
       {x44b18000 x44540ccd 1}
       {x44b18000 x4454999a 1}
       {x44b18000 x44554000 1}
       {x44b18000 x44560000 1}
       {x44b1599a x44558ccd 1}}}
     {tx x447a4000 x44b17ccd x44541e67}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear162 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b0e666 x44510000 1}
       {x44b0eccd x44518ccd 1}
       {x44b0f99a x4451e666 1}
       {x44b12000 x44533333 1}
       {x44b1599a x4454999a 1}
       {x44b17333 x44558ccd 1}
       {x44b18000 x44567333 1}
       {x44b16ccd x44570000 1}
       {x44b16000 x4456c000 1}
       {x44b1599a x44567333 1}}}
     {tx x447a4000 x44b13ccd x445471eb}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear161 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4488d333 x4461e666 1}
       {x4488c000 x4462199a 1}
       {x4488accd x4462a666 1}
       {x44888666 x4463999a 1}
       {x4488799a x44644ccd 1}
       {x4488799a x4465f333 1}
       {x44888000 x4466cccd 1}}}
     {tx x447a4000 x44889a83 x4463e667}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear160 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4494c666 x445ee666 1}
       {x4494c000 x445f3333 1}
       {x4494accd x445fd99a 1}
       {x44946000 x44618ccd 1}
       {x44942ccd x4462599a 1}
       {x4493f333 x44638ccd 1}
       {x44940ccd x4463c000 1}}}
     {tx x447a4000 x44946492 x44614ea1}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear159 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448a199a x44618000 1}
       {x448a0666 x4461b333 1}
       {x4489e666 x44630000 1}
       {x4489eccd x44644000 1}
       {x448a0000 x44658ccd 1}
       {x4489e666 x4465f333 1}}}
     {tx x447a4000 x4489f999 x4463a888}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear158 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4488c666 x44632666 1}
       {x4488c000 x4463999a 1}
       {x4488c000 x4463f333 1}
       {x4488c000 x4464b333 1}}}
     {tx x447a4000 x4488c19a x4463d99a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear157 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4488c000 x4462c000 1}
       {x4488a000 x4462e666 1}
       {x4488999a x44636666 1}
       {x4488999a x44642666 1}
       {x4488999a x44654ccd 1}
       {x44888666 x4466199a 1}}}
     {tx x447a4000 x44889ddf x44641999}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear156 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448cf333 x44626666 1}
       {x448ce000 x44634000 1}
       {x448cd99a x4463a666 1}
       {x448ce000 x4464b333 1}}}
     {tx x447a4000 x448ce334 x44638000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear155 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448c999a x4461599a 1}
       {x448c9333 x4461cccd 1}
       {x448c9333 x4462cccd 1}
       {x448c9333 x44632666 1}
       {x448ca666 x4464e666 1}
       {x448caccd x4465cccd 1}
       {x448c8000 x4465a666 1}}}
     {tx x447a4000 x448c97c5 x4463a2bf}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear154 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44909333 x4461199a 1}
       {x44908ccd x4461b333 1}
       {x44908ccd x44620ccd 1}
       {x44909333 x4463599a 1}
       {x4490999a x4464a666 1}
       {x44908000 x4464cccd 1}}}
     {tx x447a4000 x44908eef x4462f111}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear153 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4490cccd x44607333 1}
       {x4490b333 x4460d99a 1}
       {x4490accd x4461199a 1}
       {x4490accd x4461a666 1}
       {x4490accd x4463199a 1}
       {x4490c666 x4464d99a 1}
       {x4490c666 x44658ccd 1}
       {x4490accd x4465599a 1}}}
     {tx x447a4000 x4490b800 x4462dccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear152 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a4d333 x4458c000 1}
       {x44a4c666 x44590ccd 1}
       {x44a4b333 x44596666 1}
       {x44a4a666 x4459a666 1}
       {x44a48ccd x445b599a 1}
       {x44a48000 x445c4000 1}
       {x44a47333 x445ce666 1}
       {x44a4599a x445c8ccd 1}}}
     {tx x447a4000 x44a49999 x445abccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear151 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a0c000 x445b4000 1}
       {x44a0c000 x445bd99a 1}
       {x44a0c000 x445c2666 1}
       {x44a0b99a x445d0ccd 1}
       {x44a0accd x445d6666 1}}}
     {tx x447a4000 x44a0bae1 x445c570a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear150 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a08ccd x445b599a 1}
       {x44a08ccd x445bc000 1}
       {x44a08ccd x445c8ccd 1}
       {x44a08666 x445d4000 1}
       {x44a08000 x445e2666 1}
       {x44a08000 x445ed99a 1}}}
     {tx x447a4000 x44a08778 x445cfbbc}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear149 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a0d333 x4459c000 1}
       {x44a0c000 x445a0000 1}
       {x44a0b99a x445a8ccd 1}
       {x44a0b333 x445b0000 1}
       {x44a0a666 x445c0000 1}
       {x44a0a000 x445d199a 1}
       {x44a0a666 x445e0ccd 1}
       {x44a0a666 x445ea666 1}
       {x44a08ccd x445e4000 1}}}
     {tx x447a4000 x44a0ae3a x445c2667}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear148 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a7d99a x4454c000 1}
       {x44a7e000 x44557333 1}
       {x44a80000 x4455e666 1}
       {x44a8199a x4456199a 1}}}
     {tx x447a4000 x44a7f4cd x44558ccc}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear147 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a7c666 x4453b333 1}
       {x44a7c666 x4453f333 1}
       {x44a7cccd x44544ccd 1}
       {x44a7e666 x4455a666 1}}}
     {tx x447a4000 x44a7d000 x44546666}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear146 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a6c000 x4458b333 1}
       {x44a74ccd x44583333 1}
       {x44a7999a x4458199a 1}
       {x44a80ccd x4457e666 1}
       {x44a82666 x4457b333 1}}}
     {tx x447a4000 x44a791eb x44581eb8}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear145 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a97333 x4458199a 1}
       {x44a9199a x44580000 1}
       {x44a8799a x4458199a 1}
       {x44a7f99a x44582666 1}
       {x44a76666 x44583333 1}
       {x44a78666 x44582666 1}
       {x44a7cccd x4458199a 1}}}
     {tx x447a4000 x44a83f17 x44581d41}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear144 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a66ccd x4458c000 1}
       {x44a6999a x4458999a 1}
       {x44a6c000 x44588ccd 1}
       {x44a72000 x44588ccd 1}
       {x44a80000 x44588000 1}
       {x44a87333 x44588000 1}
       {x44a89333 x44586666 1}
       {x44a83333 x4458599a 1}
       {x44a7e000 x44584ccd 1}
       {x44a78666 x44584ccd 1}
       {x44a72000 x44583333 1}
       {x44a7b99a x44583333 1}
       {x44a84000 x44583333 1}
       {x44a80ccd x44583333 1}
       {x44a78000 x44583333 1}
       {x44a7cccd x4458199a 1}
       {x44a79333 x44582666 1}
       {x44a75333 x44582666 1}
       {x44a72666 x44582666 1}
       {x44a74666 x44582666 1}
       {x44a78000 x44582666 1}
       {x44a7a000 x44582666 1}
       {x44a79333 x4457cccd 1}}}
     {tx x447a4000 x44a790b1 x44584973}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear143 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a94ccd x4455199a 1}
       {x44a93333 x44557333 1}
       {x44a90ccd x4456c000 1}
       {x44a8d99a x44594000 1}
       {x44a8d333 x445a4000 1}
       {x44a8c666 x445bf333 1}
       {x44a8b99a x445c8ccd 1}
       {x44a8a666 x445c599a 1}}}
     {tx x447a4000 x44a8ec00 x445934cd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear142 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a7b99a x4455a666 1}
       {x44a7b99a x4455e666 1}
       {x44a7b99a x44563333 1}
       {x44a7f333 x44577333 1}
       {x44a81333 x4458999a 1}
       {x44a82666 x445ae666 1}
       {x44a83333 x445ce666 1}
       {x44a82ccd x445dc000 1}
       {x44a80ccd x445d999a 1}}}
     {tx x447a4000 x44a7f99a x4459705c}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear141 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44acd99a x44564ccd 1}
       {x44acb99a x4457e666 1}
       {x44acc666 x4458599a 1}
       {x44acaccd x4458f333 1}}}
     {tx x447a4000 x44acc199 x4457e001}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear140 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44accccd x44554ccd 1}
       {x44acb99a x44560ccd 1}
       {x44acb333 x4456cccd 1}
       {x44ac9333 x44586666 1}
       {x44ac9333 x4459a666 1}
       {x44ac8666 x4459e666 1}
       {x44ac8666 x4459199a 1}}}
     {tx x447a4000 x44aca1d5 x4457e2bf}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear139 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ad6666 x44542666 1}
       {x44ad7333 x4454b333 1}
       {x44ad7333 x44553333 1}
       {x44ad9333 x4456cccd 1}
       {x44ade000 x44588ccd 1}
       {x44adeccd x4459599a 1}}}
     {tx x447a4000 x44ad9ccd x44567555}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear138 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44adb99a x4453b333 1}
       {x44adaccd x44542666 1}
       {x44ada000 x4454c000 1}
       {x44ada000 x44567333 1}
       {x44add333 x44588ccd 1}
       {x44add333 x44597333 1}
       {x44add333 x44592666 1}
       {x44add333 x4458999a 1}}}
     {tx x447a4000 x44adbe66 x4456d999}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear137 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44afc666 x4452cccd 1}
       {x44afc000 x44534ccd 1}
       {x44af999a x44547333 1}
       {x44af9333 x4454e666 1}
       {x44af8ccd x44553333 1}
       {x44af799a x44573333 1}
       {x44af6666 x4458cccd 1}
       {x44af599a x44592666 1}
       {x44af199a x4458999a 1}}}
     {tx x447a4000 x44af8222 x44560b60}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear136 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44afc666 x44520ccd 1}
       {x44afc666 x4452599a 1}
       {x44afc666 x4452b333 1}
       {x44afc666 x44534ccd 1}
       {x44afcccd x44550ccd 1}
       {x44aff333 x4456cccd 1}
       {x44b00666 x44580000 1}
       {x44b00666 x44584ccd 1}
       {x44afd99a x4457999a 1}}}
     {tx x447a4000 x44afdc72 x445520b7}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear135 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44af7333 x44533333 1}
       {x44af6000 x4453b333 1}
       {x44af6000 x4454e666 1}
       {x44af6000 x44558000 1}
       {x44af999a x44572666 1}
       {x44afb333 x4457cccd 1}
       {x44afb333 x44578ccd 1}
       {x44afb333 x4456cccd 1}}}
     {tx x447a4000 x44af88cc x4455d334}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear134 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aff333 x4453cccd 1}
       {x44aff333 x44544000 1}
       {x44aff333 x44548ccd 1}
       {x44b00ccd x4455999a 1}
       {x44b04666 x44573333 1}
       {x44b06ccd x44588ccd 1}
       {x44b07333 x44590ccd 1}
       {x44b06000 x44588ccd 1}}}
     {tx x447a4000 x44b02d99 x4456719a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear133 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44afaccd x4452c000 1}
       {x44afb333 x44530000 1}
       {x44afb333 x4453599a 1}
       {x44afc666 x4454a666 1}
       {x44aff99a x4456199a 1}
       {x44b04000 x4457f333 1}
       {x44b06000 x4458999a 1}
       {x44b0599a x44582666 1}}}
     {tx x447a4000 x44aff999 x44559199}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear132 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44af9333 x44532666 1}
       {x44af8ccd x44536666 1}
       {x44af8ccd x4453c000 1}
       {x44af8ccd x4454c000 1}
       {x44afc666 x4456d99a 1}
       {x44afe000 x44582666 1}
       {x44afd99a x44574000 1}}}
     {tx x447a4000 x44afaccd x4455541e}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear131 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aed333 x44530000 1}
       {x44aee666 x4453999a 1}
       {x44af0000 x4454c000 1}
       {x44af199a x44560ccd 1}
       {x44af6666 x4458199a 1}
       {x44af799a x4458c000 1}
       {x44af799a x44584ccd 1}
       {x44af6666 x4457c000 1}}}
     {tx x447a4000 x44af3266 x4456499a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear130 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ae6666 x4452f333 1}
       {x44ae599a x44538ccd 1}
       {x44ae599a x44544ccd 1}
       {x44ae6666 x4455b333 1}
       {x44ae999a x4457b333 1}
       {x44aea000 x44588ccd 1}
       {x44ae999a x4457599a 1}}}
     {tx x447a4000 x44ae7999 x4455ba83}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear129 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ade000 x44534ccd 1}
       {x44ade000 x4453e666 1}
       {x44adeccd x44548ccd 1}
       {x44ae2000 x4456199a 1}
       {x44ae5333 x4458199a 1}
       {x44ae5333 x4458e666 1}
       {x44ae5333 x44588000 1}
       {x44ae4ccd x4457999a 1}}}
     {tx x447a4000 x44ae2266 x44565e66}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear128 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aca000 x44547333 1}
       {x44acb333 x4454b333 1}
       {x44acb333 x44558000 1}
       {x44acb333 x44560ccd 1}
       {x44acb333 x4457599a 1}
       {x44acb333 x44588000 1}
       {x44acaccd x4457c000 1}}}
     {tx x447a4000 x44acaf8b x4456541e}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear127 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ad199a x44540ccd 1}
       {x44ad199a x44544ccd 1}
       {x44ad0ccd x44548ccd 1}
       {x44acb99a x44553333 1}
       {x44ac8000 x44563333 1}
       {x44ac8000 x44570000 1}
       {x44ac8000 x4458599a 1}
       {x44ac8000 x4459199a 1}
       {x44ac6ccd x44586666 1}
       {x44ac6ccd x44574000 1}}}
     {tx x447a4000 x44acaeb9 x445670a3}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear126 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ad799a x4454d99a 1}}}
     {tx x447a4000 x44ad799a x4454d99a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear125 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44add333 x44558000 1}
       {x44ae2000 x4456a666 1}
       {x44ae6666 x4457599a 1}
       {x44aeeccd x4458f333 1}
       {x44af0000 x4459b333 1}
       {x44aed333 x4459a666 1}
       {x44aea666 x44597333 1}}}
     {tx x447a4000 x44ae8925 x44582db7}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear124 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ad7333 x4455199a 1}
       {x44adc000 x4456199a 1}
       {x44ae0ccd x4456c000 1}
       {x44aed333 x44588ccd 1}
       {x44af8ccd x4459f333 1}
       {x44afb333 x445a3333 1}
       {x44af8ccd x44598ccd 1}}}
     {tx x447a4000 x44aeb249 x44580750}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear123 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ad4ccd x44554000 1}
       {x44ad8ccd x44563333 1}
       {x44adc666 x4456d99a 1}
       {x44ae999a x4458999a 1}
       {x44af4666 x445a0ccd 1}
       {x44af199a x4459599a 1}}}
     {tx x447a4000 x44ae4444 x4457b778}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear122 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ad2666 x44556666 1}
       {x44ad599a x44564ccd 1}
       {x44ad9333 x44570000 1}
       {x44ae6666 x4458c000 1}
       {x44af0000 x445a199a 1}
       {x44af0000 x4459d99a 1}
       {x44aee666 x44598ccd 1}}}
     {tx x447a4000 x44ae3249 x445822bf}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear121 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ac8666 x4455d99a 1}
       {x44ace000 x4456999a 1}
       {x44ad4ccd x44576666 1}
       {x44ae6666 x44592666 1}
       {x44aef99a x445a3333 1}
       {x44ae999a x4459599a 1}}}
     {tx x447a4000 x44adc777 x44581777}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear120 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ac2666 x44566666 1}
       {x44ac2666 x4456a666 1}
       {x44aca000 x4458199a 1}
       {x44ad4000 x44594000 1}
       {x44ae2666 x445b0000 1}
       {x44ae8000 x445bc000 1}
       {x44ae4ccd x445b0000 1}}}
     {tx x447a4000 x44ad4db7 x44592a0f}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear119 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ab5333 x4454e666 1}
       {x44ab5333 x44554000 1}
       {x44ab8ccd x44564ccd 1}
       {x44abf333 x44576666 1}
       {x44acf333 x4459d99a 1}
       {x44adc000 x445b8ccd 1}
       {x44adaccd x445b4000 1}}}
     {tx x447a4000 x44ac5c59 x44581249}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear118 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aab333 x44556666 1}
       {x44aaf333 x44563333 1}
       {x44ab8ccd x44576666 1}
       {x44ac9333 x44598ccd 1}
       {x44ad2ccd x445ae666 1}
       {x44ad4666 x445b4000 1}
       {x44acf333 x445a4000 1}
       {x44aca000 x44597333 1}}}
     {tx x447a4000 x44ac3999 x4458cccc}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear117 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aa6666 x44554000 1}
       {x44aa6000 x4455b333 1}
       {x44aa799a x44560ccd 1}
       {x44ab399a x4457c000 1}
       {x44ac399a x4459f333 1}
       {x44accccd x445b199a 1}
       {x44acb333 x445ad99a 1}
       {x44ac5333 x445a199a 1}}}
     {tx x447a4000 x44ab90cc x445857ff}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear116 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a8eccd x44564ccd 1}
       {x44a9199a x4456cccd 1}
       {x44a93333 x44574000 1}
       {x44a9b99a x44588000 1}
       {x44aa9333 x445a4000 1}
       {x44aad99a x445ab333 1}
       {x44aaf333 x445a7333 1}}}
     {tx x447a4000 x44a9e751 x44589b6d}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear115 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a7e666 x44578ccd 1}
       {x44a80000 x4457f333 1}
       {x44a8199a x4458599a 1}
       {x44a87333 x44590ccd 1}
       {x44a93333 x445a7333 1}
       {x44a9c666 x445bc000 1}
       {x44a96ccd x445a4000 1}
       {x44a94000 x4459c000 1}}}
     {tx x447a4000 x44a8c334 x44596333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear114 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a2a000 x445a4000 1}
       {x44a33333 x445c0000 1}
       {x44a3b99a x445d199a 1}
       {x44a4599a x445e8ccd 1}
       {x44a47333 x445f4000 1}}}
     {tx x447a4000 x44a3ab86 x445d07ad}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear113 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a0999a x445b8ccd 1}
       {x44a0accd x445bd99a 1}
       {x44a0c666 x445c4000 1}
       {x44a1599a x445dcccd 1}
       {x44a20666 x445f4ccd 1}
       {x44a22000 x445f7333 1}
       {x44a22000 x445f199a 1}}}
     {tx x447a4000 x44a161d5 x445d9d41}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear112 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a1999a x445b0000 1}
       {x44a1a000 x445c0000 1}
       {x44a1c000 x445cb333 1}
       {x44a23333 x445e7333 1}
       {x44a2799a x4460cccd 1}
       {x44a2799a x44613333 1}}}
     {tx x447a4000 x44a20555 x445e0667}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear111 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a76000 x4458e666 1}
       {x44a7799a x44594ccd 1}
       {x44a7f333 x445ab333 1}
       {x44a8199a x445b4000 1}
       {x44a84ccd x445d8ccd 1}
       {x44a7e000 x445e4ccd 1}}}
     {tx x447a4000 x44a7d889 x445b5557}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear110 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a70666 x4458599a 1}
       {x44a72000 x4458999a 1}
       {x44a74666 x4458f333 1}
       {x44a7b333 x4459f333 1}
       {x44a8799a x445b8ccd 1}
       {x44a92000 x445cf333 1}
       {x44a93333 x445d8ccd 1}
       {x44a8f333 x445d2666 1}}}
     {tx x447a4000 x44a81bff x445ae19a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear109 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a61333 x4458cccd 1}
       {x44a62ccd x44590ccd 1}
       {x44a66000 x44598000 1}
       {x44a70000 x445acccd 1}
       {x44a7c666 x445ce666 1}
       {x44a80ccd x445dc000 1}
       {x44a80000 x445d6666 1}
       {x44a7d99a x445cc000 1}}}
     {tx x447a4000 x44a72999 x445b5e66}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear108 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a67333 x4458999a 1}
       {x44a67333 x4459a666 1}
       {x44a6a000 x445a8000 1}
       {x44a70000 x445c6666 1}
       {x44a76ccd x445e2666 1}
       {x44a7999a x445eb333 1}
       {x44a79333 x445e199a 1}}}
     {tx x447a4000 x44a70492 x445c03a8}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear107 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a9199a x4456199a 1}
       {x44a92666 x4456999a 1}
       {x44a98ccd x44580000 1}
       {x44a9c666 x4458999a 1}
       {x44aa4ccd x445b199a 1}
       {x44aa6000 x445c8ccd 1}
       {x44a9e000 x445c2666 1}}}
     {tx x447a4000 x44a9bb6e x44594cce}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear106 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a8d333 x4456a666 1}
       {x44a9199a x44580000 1}
       {x44a95333 x44592666 1}
       {x44a9b99a x445b199a 1}
       {x44aa0000 x445c7333 1}
       {x44a9b333 x445b0ccd 1}}}
     {tx x447a4000 x44a97222 x4459bbbc}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear105 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a8799a x44570ccd 1}
       {x44a89333 x4457599a 1}
       {x44a8f333 x44588000 1}
       {x44a9399a x44598000 1}
       {x44a9a000 x445b4ccd 1}
       {x44a9e666 x445cb333 1}
       {x44a9e666 x445c6666 1}
       {x44a98666 x445b3333 1}}}
     {tx x447a4000 x44a9459a x445a0000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear104 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a82ccd x4457e666 1}
       {x44a84ccd x44594ccd 1}
       {x44a8b99a x445acccd 1}
       {x44a92000 x445c6666 1}
       {x44a96666 x445d3333 1}
       {x44a94000 x445ce666 1}
       {x44a9199a x445c599a 1}
       {x44a90666 x445c2666 1}}}
     {tx x447a4000 x44a8e333 x445b6000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear103 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a80000 x4457cccd 1}
       {x44a87333 x44598ccd 1}
       {x44a8a666 x445a4000 1}
       {x44a9199a x445c599a 1}
       {x44a9399a x445d3333 1}
       {x44a93333 x445cc000 1}
       {x44a8d333 x445b999a 1}}}
     {tx x447a4000 x44a8c751 x445b1248}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear102 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a7b333 x4458999a 1}
       {x44a7b99a x44594000 1}
       {x44a8199a x445b3333 1}
       {x44a84666 x445bc000 1}
       {x44a8c666 x445d199a 1}
       {x44a8e000 x445d599a 1}
       {x44a8a666 x445c599a 1}
       {x44a86666 x445b7333 1}}}
     {tx x447a4000 x44a85000 x445b6199}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear101 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a70666 x4458599a 1}
       {x44a7accd x445a4ccd 1}
       {x44a7e666 x445b7333 1}
       {x44a84ccd x445d8ccd 1}
       {x44a83333 x445ce666 1}}}
     {tx x447a4000 x44a7d1ec x445b4f5d}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear100 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a68666 x4458c000 1}
       {x44a6999a x44597333 1}
       {x44a6e666 x445b4000 1}
       {x44a72666 x445cb333 1}
       {x44a7799a x445e7333 1}
       {x44a79333 x445ee666 1}
       {x44a78000 x445df333 1}
       {x44a75333 x445cc000 1}}}
     {tx x447a4000 x44a7219a x445c4666}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear99 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a62ccd x44588000 1}
       {x44a62ccd x4458c000 1}
       {x44a66000 x445b999a 1}
       {x44a68666 x445c599a 1}
       {x44a6f333 x445ea666 1}
       {x44a70000 x445f0ccd 1}
       {x44a6eccd x445df333 1}
       {x44a6c000 x445d0000 1}}}
     {tx x447a4000 x44a69c00 x445c3b33}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear98 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a5799a x4458f333 1}
       {x44a58000 x44594000 1}
       {x44a5999a x4459c000 1}
       {x44a5c000 x445b4000 1}
       {x44a5cccd x445c4000 1}
       {x44a5e666 x445f199a 1}
       {x44a5f99a x445fb333 1}
       {x44a5f99a x445ee666 1}
       {x44a5f333 x445ccccd 1}
       {x44a5e666 x445c6666 1}}}
     {tx x447a4000 x44a5c852 x445c3c28}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear97 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a4d333 x4459199a 1}
       {x44a50666 x4459c000 1}
       {x44a5accd x445bc000 1}
       {x44a61333 x445d999a 1}
       {x44a62ccd x445eb333 1}
       {x44a5cccd x445d3333 1}}}
     {tx x447a4000 x44a59888 x445c0443}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear96 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a48000 x44582666 1}
       {x44a4c666 x4459a666 1}
       {x44a51333 x445b0000 1}
       {x44a58ccd x445d8000 1}
       {x44a5d99a x445ef333 1}
       {x44a5cccd x445eb333 1}
       {x44a58ccd x445d4ccd 1}
       {x44a5599a x445c8ccd 1}}}
     {tx x447a4000 x44a54e66 x445c399a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear95 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a40ccd x4459199a 1}
       {x44a40ccd x44598ccd 1}
       {x44a4e666 x445bcccd 1}
       {x44a54ccd x445ce666 1}
       {x44a5cccd x445f4000 1}
       {x44a5c666 x445f8000 1}
       {x44a58000 x445e599a 1}
       {x44a53333 x445d8000 1}}}
     {tx x447a4000 x44a51266 x445cbe66}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear94 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a3799a x4458cccd 1}
       {x44a38666 x44592666 1}
       {x44a3c000 x445a4ccd 1}
       {x44a3f99a x445b6666 1}
       {x44a46666 x445dcccd 1}
       {x44a4a000 x445f4000 1}
       {x44a4a000 x445ed99a 1}
       {x44a45333 x445d599a 1}
       {x44a44000 x445d0000 1}}}
     {tx x447a4000 x44a41b05 x445c360c}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear93 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a30ccd x44594ccd 1}
       {x44a38ccd x445b3333 1}
       {x44a3d99a x445c2666 1}
       {x44a48000 x445e4ccd 1}
       {x44a4b333 x445ef333 1}
       {x44a4999a x445e4ccd 1}
       {x44a44ccd x445d599a 1}}}
     {tx x447a4000 x44a4141e x445ccaf9}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear92 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a2c666 x44598ccd 1}
       {x44a2d99a x4459d99a 1}
       {x44a3199a x445b0000 1}
       {x44a3799a x445c2666 1}
       {x44a3f99a x445df333 1}
       {x44a42666 x445ee666 1}
       {x44a40ccd x445e599a 1}
       {x44a3d333 x445db333 1}}}
     {tx x447a4000 x44a38667 x445c6e66}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear91 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a26ccd x445a6666 1}
       {x44a28666 x445ad99a 1}
       {x44a2e666 x445c2666 1}
       {x44a34666 x445d599a 1}
       {x44a3d99a x445f7333 1}
       {x44a3eccd x445fd99a 1}
       {x44a3c666 x445f0ccd 1}
       {x44a36666 x445e0ccd 1}}}
     {tx x447a4000 x44a34266 x445d64cd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear90 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a14666 x445a4000 1}
       {x44a16000 x445a8000 1}
       {x44a1f333 x445ba666 1}
       {x44a25333 x445c7333 1}
       {x44a31333 x445eb333 1}
       {x44a3599a x44603333 1}
       {x44a34000 x44600000 1}
       {x44a2d99a x445eb333 1}
       {x44a2b99a x445e7333 1}}}
     {tx x447a4000 x44a276c1 x445d6eee}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear89 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a0accd x445a3333 1}
       {x44a10ccd x445b7333 1}
       {x44a16ccd x445c8ccd 1}
       {x44a23333 x445ed99a 1}
       {x44a26666 x44606666 1}
       {x44a2199a x445fe666 1}
       {x44a20000 x445fb333 1}}}
     {tx x447a4000 x44a1b15f x445ddd42}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear88 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a0c666 x445ae666 1}
       {x44a0c666 x445b4ccd 1}
       {x44a0e666 x445c8ccd 1}
       {x44a10ccd x445d6666 1}
       {x44a16ccd x4460199a 1}
       {x44a1b333 x44614000 1}
       {x44a18ccd x4460c000 1}
       {x44a17333 x44604ccd 1}}}
     {tx x447a4000 x44a13400 x445e519a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear87 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a0c000 x445b6666 1}
       {x44a0e000 x445c0000 1}
       {x44a16000 x445db333 1}
       {x44a1a666 x445eb333 1}
       {x44a2199a x4460cccd 1}
       {x44a22000 x4461599a 1}
       {x44a1e666 x4460cccd 1}}}
     {tx x447a4000 x44a18a0f x445eadb7}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear86 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a06666 x445b7333 1}
       {x44a0799a x445c4000 1}
       {x44a0999a x445d0000 1}
       {x44a11333 x445ee666 1}
       {x44a14666 x4460d99a 1}
       {x44a15333 x44612666 1}
       {x44a12666 x4460199a 1}}}
     {tx x447a4000 x44a0e666 x445e8750}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear85 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449fa000 x445ba666 1}
       {x449fa666 x445c6666 1}
       {x449fcccd x445d3333 1}
       {x44a02000 x445f0ccd 1}
       {x44a04ccd x44600000 1}
       {x44a0599a x44604ccd 1}
       {x44a0799a x4460f333 1}
       {x44a09333 x44616666 1}
       {x44a08ccd x4460f333 1}}}
     {tx x447a4000 x44a0293e x445f199a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear84 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449ef333 x445b999a 1}
       {x449f0666 x445bd99a 1}
       {x449f399a x445d199a 1}
       {x449f599a x445dcccd 1}
       {x449fb333 x44600ccd 1}
       {x449fe666 x44610ccd 1}
       {x449fe000 x445fe666 1}}}
     {tx x447a4000 x449f6ea1 x445e3160}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear83 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449df99a x445ab333 1}
       {x449e0000 x445b0000 1}
       {x449e4ccd x445c7333 1}
       {x449e799a x445d199a 1}
       {x449ee000 x445f7333 1}
       {x449ee000 x44614000 1}
       {x449ec666 x4460c000 1}}}
     {tx x447a4000 x449e77c6 x445dd075}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear82 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449d199a x445d2666 1}
       {x449d199a x445e199a 1}
       {x449d2000 x445e8000 1}
       {x449d6666 x44607333 1}
       {x449da000 x4462199a 1}
       {x449db333 x44628ccd 1}
       {x449dc666 x44632666 1}
       {x449da000 x4462cccd 1}}}
     {tx x447a4000 x449d6e66 x4460999b}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear81 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449d0ccd x445c4000 1}
       {x449d0666 x445c999a 1}
       {x449d0ccd x445db333 1}
       {x449d399a x445ec000 1}
       {x449d6666 x44614000 1}
       {x449d6ccd x4463199a 1}
       {x449d799a x4463a666 1}
       {x449d5333 x4462f333 1}
       {x449d4ccd x4462b333 1}}}
     {tx x447a4000 x449d40b6 x446053e9}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear80 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449cd333 x445b8ccd 1}
       {x449d0000 x445c2666 1}
       {x449d199a x445cb333 1}
       {x449d4ccd x445d999a 1}
       {x449da000 x445f999a 1}
       {x449e0000 x44624ccd 1}
       {x449e1333 x44644000 1}
       {x449e1333 x4464a666 1}
       {x449e199a x4463e666 1}}}
     {tx x447a4000 x449d9111 x446013ea}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear79 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449bb333 x445e0666 1}
       {x449bc000 x445e8ccd 1}
       {x449be333 x445fc666 1}
       {x449c0333 x4460799a 1}
       {x449c599a x44620000 1}
       {x449c699a x4462d333 1}}}
     {tx x447a4000 x449c04cd x44604665}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear78 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449ba333 x445d1333 1}
       {x449b999a x445d9333 1}
       {x449b999a x445ef99a 1}
       {x449bb000 x445fe000 1}
       {x449c1333 x4461eccd 1}
       {x449c5333 x44626ccd 1}
       {x449c5333 x4461cccd 1}
       {x449c0333 x44606000 1}
       {x449bf666 x44602000 1}}}
     {tx x447a4000 x449be9f4 x44600445}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear77 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449b8000 x445d199a 1}
       {x449b8000 x445d6ccd 1}
       {x449b9333 x445eaccd 1}
       {x449b999a x445f4000 1}
       {x449be333 x4461599a 1}
       {x449c2ccd x4461f99a 1}
       {x449c1666 x44617333 1}
       {x449bfccd x44610000 1}}}
     {tx x447a4000 x449bca01 x445fc733}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear76 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449b299a x445d2666 1}
       {x449b499a x445deccd 1}
       {x449b6000 x445eeccd 1}
       {x449b8000 x4460accd 1}
       {x449bcccd x4461e666 1}
       {x449bc000 x4461999a 1}}}
     {tx x447a4000 x449b7aab x445fb221}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear75 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449a8ccd x445d4000 1}
       {x449a9666 x445db99a 1}
       {x449a9ccd x445e2ccd 1}
       {x449ab000 x445fb99a 1}
       {x449b0000 x44622000 1}
       {x449b3000 x4462c000 1}
       {x449b3000 x44624ccd 1}
       {x449b1333 x4461799a 1}}}
     {tx x447a4000 x449adc66 x446030cd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear74 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449a1ccd x445d6000 1}
       {x449a2333 x445dd99a 1}
       {x449a3000 x445e799a 1}
       {x449a3666 x44608666 1}
       {x449a7666 x44626666 1}
       {x449a9ccd x4462c000 1}
       {x449a899a x44620000 1}}}
     {tx x447a4000 x449a52bf x44603249}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear73 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44999333 x445d199a 1}
       {x4499a666 x445dd99a 1}
       {x4499b000 x445e6666 1}
       {x4499d000 x4460e000 1}
       {x449a0000 x44621333 1}
       {x449a1000 x4462999a 1}
       {x4499fccd x4461e666 1}}}
     {tx x447a4000 x4499d333 x44601d41}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear72 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44996333 x445d4000 1}
       {x44996333 x445de666 1}
       {x44996ccd x445e599a 1}
       {x44997666 x445f399a 1}
       {x44998333 x4461799a 1}
       {x4499b333 x4462d99a 1}
       {x4499accd x4462199a 1}}}
     {tx x447a4000 x449981d5 x445fe0e9}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear71 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4498bccd x445d4000 1}
       {x4498bccd x445de000 1}
       {x4498bccd x445e4ccd 1}
       {x4498cccd x445fc000 1}
       {x4498f99a x44613333 1}
       {x44993000 x44620000 1}
       {x44992ccd x44614666 1}}}
     {tx x447a4000 x4498e83b x445faa0f}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear70 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44985000 x445d8666 1}
       {x44985000 x445e0000 1}
       {x44985000 x445e799a 1}
       {x44987000 x44608000 1}
       {x4498accd x4461999a 1}
       {x4498c000 x4461f333 1}
       {x4498bccd x4461999a 1}
       {x4498a333 x4460e000 1}}}
     {tx x447a4000 x44988599 x446010cc}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear69 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4497a99a x445e8ccd 1}
       {x4497b000 x445f2000 1}
       {x4497c666 x44603333 1}
       {x4497e000 x44614000 1}
       {x44983000 x4462999a 1}
       {x44983ccd x4462e000 1}
       {x4498299a x4462599a 1}
       {x4498099a x44619333 1}}}
     {tx x447a4000 x4497f400 x446110cc}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear68 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44973ccd x445e6666 1}
       {x44976000 x445f4000 1}
       {x44976666 x445f999a 1}
       {x4497799a x4461599a 1}
       {x4497a666 x44628ccd 1}
       {x4497b333 x4462f99a 1}
       {x4497a333 x44624666 1}}}
     {tx x447a4000 x44977f16 x4460ea0f}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear67 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4496d99a x445ec000 1}
       {x4496f000 x445fc666 1}
       {x4496fccd x44606ccd 1}
       {x44973000 x4462599a 1}
       {x44977666 x4463599a 1}
       {x44974333 x44626666 1}}}
     {tx x447a4000 x44971d56 x44612ccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear66 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4496a000 x445ec000 1}
       {x4496c000 x445f4000 1}
       {x4496dccd x445feccd 1}
       {x44970000 x44617333 1}
       {x44972ccd x4462a000 1}
       {x44974000 x44633333 1}
       {x44971666 x44628666 1}}}
     {tx x447a4000 x4496f6db x44611a83}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear65 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44962ccd x445eaccd 1}
       {x44963000 x44601333 1}
       {x4496399a x4460cccd 1}
       {x4496699a x4462d333 1}
       {x44969333 x4463c666 1}
       {x44968ccd x4463399a 1}}}
     {tx x447a4000 x44965aab x44619000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear64 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4495a000 x445ea000 1}
       {x4495accd x445fc000 1}
       {x4495b666 x44606666 1}
       {x4495dccd x4462399a 1}
       {x4495f99a x4463799a 1}
       {x4495fccd x4463c666 1}
       {x44960000 x44637333 1}}}
     {tx x447a4000 x4495d57b x4461abe2}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear63 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44949ccd x445f999a 1}
       {x4494b333 x44608666 1}
       {x4494c666 x44613333 1}
       {x4494d333 x4462b333 1}
       {x4494e666 x4463d99a 1}
       {x4494f000 x4464199a 1}}}
     {tx x447a4000 x4494caab x4461feef}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear62 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4494c000 x445ee000 1}
       {x4494bccd x445f999a 1}
       {x4494bccd x44601333 1}
       {x4494b000 x4461d333 1}
       {x4494a666 x4462f99a 1}
       {x4494a666 x44638000 1}
       {x4494c333 x44632000 1}}}
     {tx x447a4000 x4494b5f1 x44616ccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear61 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4494c000 x445e799a 1}
       {x4494b99a x445f0000 1}
       {x4494d666 x445f6ccd 1}
       {x4494f000 x445fd99a 1}
       {x4495399a x44614000 1}
       {x44958000 x4462b333 1}
       {x4495999a x44634000 1}
       {x44959000 x4462eccd 1}}}
     {tx x447a4000 x44952466 x4460dc00}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear60 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4494f99a x44607333 1}
       {x4494f99a x4460cccd 1}
       {x44950666 x4461199a 1}
       {x44954666 x44624ccd 1}
       {x44958ccd x4463999a 1}
       {x4495a000 x44644ccd 1}
       {x4495b333 x4464d99a 1}
       {x44958ccd x4463b333 1}}}
     {tx x447a4000 x4495559a x4462a333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear59 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44940666 x4460599a 1}
       {x44940666 x4461199a 1}
       {x4494199a x4462199a 1}
       {x44944000 x44640000 1}
       {x4494599a x44654ccd 1}
       {x44948000 x4464e666 1}
       {x44948666 x44644ccd 1}}}
     {tx x447a4000 x449440ea x44632668}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear58 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44942ccd x4460199a 1}
       {x44942ccd x4460599a 1}
       {x44942666 x44613333 1}
       {x44942ccd x4462d99a 1}
       {x44944ccd x44648ccd 1}
       {x44945333 x44658000 1}
       {x44943333 x44650ccd 1}}}
     {tx x447a4000 x449436db x4462ccce}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear57 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44932666 x4460d99a 1}
       {x44932000 x4461b333 1}
       {x44932ccd x44628ccd 1}
       {x44935333 x4464999a 1}
       {x44936ccd x4465e666 1}
       {x44937333 x44664000 1}
       {x44937333 x44656666 1}
       {x44936ccd x4464f333 1}}}
     {tx x447a4000 x449350cd x44640666}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear56 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44925333 x4461c000 1}
       {x44926ccd x4462c000 1}
       {x44929333 x4463a666 1}
       {x4492eccd x44656666 1}
       {x44932ccd x44668ccd 1}
       {x44931333 x4465d99a 1}}}
     {tx x447a4000 x4492c000 x44645334}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear55 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4492599a x4461cccd 1}
       {x44924666 x44620ccd 1}
       {x44924000 x44626666 1}
       {x44923333 x44634000 1}
       {x44923333 x44640000 1}
       {x44928000 x44658ccd 1}
       {x4492b99a x44668ccd 1}
       {x4492c000 x44662666 1}
       {x4492c000 x4465d99a 1}}}
     {tx x447a4000 x449271c7 x44642d84}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear54 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44932000 x44606666 1}
       {x44932000 x4460b333 1}
       {x44932666 x4461999a 1}
       {x44933333 x44624ccd 1}
       {x44936000 x44643333 1}
       {x4493799a x4464f333 1}
       {x44938000 x4464b333 1}
       {x44938000 x44644000 1}}}
     {tx x447a4000 x44934e66 x4462e332}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear53 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4492eccd x4460a666 1}
       {x4492eccd x44617333 1}
       {x4492f333 x44623333 1}
       {x44931333 x4463c000 1}
       {x4493399a x4464f333 1}
       {x44935333 x44654000 1}
       {x44935333 x4464cccd 1}
       {x44934000 x44646666 1}}}
     {tx x447a4000 x44932000 x44636e67}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear52 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44928666 x4460cccd 1}
       {x4492accd x4462199a 1}
       {x4492cccd x4462cccd 1}
       {x4493399a x4465199a 1}
       {x44935333 x44657333 1}
       {x44934666 x4464f333 1}}}
     {tx x447a4000 x4492f888 x44638888}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear51 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4490d99a x44617333 1}
       {x44911333 x4462599a 1}
       {x44914ccd x4462f333 1}
       {x4491b99a x4464b333 1}
       {x4491f99a x44658ccd 1}
       {x44920000 x44654000 1}}}
     {tx x447a4000 x44917ccc x4463b555}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear50 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44912ccd x4461b333 1}
       {x44912666 x4461f333 1}
       {x44912666 x4462a666 1}
       {x44912666 x44630ccd 1}
       {x44917333 x44647333 1}
       {x4491accd x44654000 1}
       {x4491b333 x44650000 1}}}
     {tx x447a4000 x4491599a x44636f8a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear49 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44912000 x44613333 1}
       {x44912000 x44618ccd 1}
       {x44916000 x4462c000 1}
       {x4491c666 x44647333 1}
       {x4491d99a x4464b333 1}
       {x4491eccd x44650000 1}
       {x4491e666 x4464a666 1}}}
     {tx x447a4000 x44919507 x446378b0}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear48 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4491799a x44614000 1}
       {x4491799a x4461b333 1}
       {x44918ccd x44622666 1}
       {x4491d99a x44636666 1}
       {x4492199a x4464999a 1}
       {x4491f99a x44646666 1}}}
     {tx x447a4000 x4491bccc x4462eaab}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear47 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44918000 x44614000 1}
       {x44916000 x44613333 1}
       {x44915333 x44617333 1}
       {x44918ccd x4462999a 1}
       {x4491cccd x4463599a 1}
       {x44924666 x44650ccd 1}
       {x44928ccd x44660ccd 1}
       {x44924666 x44656666 1}}}
     {tx x447a4000 x4491d4cc x44634b34}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear46 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448f7333 x4462199a 1}
       {x448f799a x44626666 1}
       {x448fb99a x4463a666 1}
       {x448fd99a x44648ccd 1}
       {x44900ccd x4465a666 1}
       {x44902666 x44663333 1}
       {x44902ccd x44667333 1}}}
     {tx x447a4000 x448fd6db x44646db6}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear45 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448f9333 x4460a666 1}
       {x448fb99a x44618000 1}
       {x448fe000 x4462599a 1}
       {x44903333 x44640000 1}
       {x4490599a x4464f333 1}
       {x44902666 x44647333 1}}}
     {tx x447a4000 x448ffaab x4462fbbb}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear44 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448f1333 x4461199a 1}
       {x448f4000 x4462199a 1}
       {x448f5333 x44628ccd 1}
       {x448fa000 x4464999a 1}
       {x448fa666 x4464d99a 1}
       {x448f999a x44648000 1}
       {x448f799a x44640ccd 1}}}
     {tx x447a4000 x448f6db7 x44636492}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear43 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448ea666 x44613333 1}
       {x448ec666 x4462199a 1}
       {x448ed99a x44630000 1}
       {x448f0666 x4464f333 1}
       {x448f1333 x44658ccd 1}
       {x448f0ccd x44654ccd 1}
       {x448ef333 x4464a666 1}}}
     {tx x447a4000 x448ee925 x4463d24a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear42 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448e4000 x44610ccd 1}
       {x448e599a x44620ccd 1}
       {x448e6666 x4462b333 1}
       {x448ea666 x44652666 1}
       {x448ec666 x4465f333 1}
       {x448eaccd x44657333 1}}}
     {tx x447a4000 x448e8445 x4463b998}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear41 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448d8ccd x4460c000 1}
       {x448d8ccd x44617333 1}
       {x448d9333 x4462599a 1}
       {x448dcccd x4464a666 1}
       {x448e2000 x44660ccd 1}
       {x448e0ccd x44658000 1}}}
     {tx x447a4000 x448dc666 x44637557}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear40 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448ce666 x4460199a 1}
       {x448ce666 x44608000 1}
       {x448ceccd x4460f333 1}
       {x448d2666 x44636666 1}
       {x448d6666 x44658000 1}
       {x448d8666 x44668000 1}
       {x448d8ccd x44663333 1}
       {x448d8000 x4465d99a 1}}}
     {tx x447a4000 x448d3b34 x44639fff}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear39 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448c6ccd x4460e666 1}
       {x448c7333 x44612666 1}
       {x448c8666 x4461e666 1}
       {x448cc000 x4463a666 1}
       {x448d2000 x4465c000 1}
       {x448d4ccd x44667333 1}
       {x448d4666 x4466199a 1}
       {x448d3333 x4465c000 1}}}
     {tx x447a4000 x448ce199 x4463f4cc}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear38 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448b5333 x44622666 1}
       {x448b6ccd x4462999a 1}
       {x448b9333 x4463c000 1}
       {x448bb99a x4464e666 1}
       {x448c0000 x4466599a 1}
       {x448c0666 x4466999a 1}
       {x448bf99a x44664000 1}}}
     {tx x447a4000 x448bb8b0 x4464a83a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear37 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448b0000 x4461599a 1}
       {x448b0666 x4461c000 1}
       {x448b199a x4462599a 1}
       {x448b4666 x4463cccd 1}
       {x448b5333 x4465b333 1}
       {x448b5333 x44664000 1}
       {x448b5333 x4465cccd 1}}}
     {tx x447a4000 x448b324a x4463db6e}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear36 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448a0000 x4460e666 1}
       {x448a0ccd x44617333 1}
       {x448a2666 x4461cccd 1}
       {x448a7333 x44638ccd 1}
       {x448ad99a x44657333 1}
       {x448b1333 x44664ccd 1}
       {x448b0ccd x4465c000 1}}}
     {tx x447a4000 x448a8492 x44639999}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear35 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4489c666 x44618000 1}
       {x4489c666 x44620000 1}
       {x4489d333 x44627333 1}
       {x448a1333 x4463cccd 1}
       {x448a7333 x44657333 1}
       {x448a999a x44662666 1}
       {x448a8666 x44656666 1}}}
     {tx x447a4000 x448a257d x4463d249}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear34 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4488eccd x4461999a 1}
       {x4488eccd x4461f333 1}
       {x4488f333 x44628000 1}
       {x44893333 x4463cccd 1}
       {x44897333 x44654000 1}
       {x44898666 x44660ccd 1}}}
     {tx x447a4000 x44892999 x44638667}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear33 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44882666 x4461999a 1}
       {x44882000 x44620000 1}
       {x44884666 x44630000 1}
       {x44886666 x44638000 1}
       {x4488d99a x4465599a 1}
       {x4489199a x4466b333 1}
       {x44890666 x4465f333 1}}}
     {tx x447a4000 x44888f8a x446403a7}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear32 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4487599a x44617333 1}
       {x44878000 x44624ccd 1}
       {x4487accd x4462d99a 1}
       {x4487cccd x4463599a 1}
       {x4487f99a x44648ccd 1}
       {x44880000 x44660ccd 1}
       {x44880666 x4466a666 1}
       {x44880666 x4466199a 1}}}
     {tx x447a4000 x4487cb34 x4464299a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear31 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4485d99a x4463f333 1}
       {x4485b333 x4464f333 1}
       {x4485b99a x44656666 1}
       {x44860666 x4466999a 1}
       {x44862666 x44673333 1}}}
     {tx x447a4000 x4485e3d6 x44659eb8}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear30 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4485e000 x4462999a 1}
       {x4485e666 x4463a666 1}
       {x44860000 x44647333 1}
       {x44865333 x44663333 1}
       {x44869333 x44677333 1}
       {x44869333 x4467c000 1}}}
     {tx x447a4000 x44863555 x44655999}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear29 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4486799a x4462599a 1}
       {x44864ccd x44630ccd 1}
       {x44864ccd x44638ccd 1}
       {x44866666 x4465199a 1}
       {x4486accd x44667333 1}
       {x4486d99a x44677333 1}}}
     {tx x447a4000 x44868000 x4464a888}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear28 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44868000 x44612666 1}
       {x44868666 x44620000 1}
       {x4486a666 x44630ccd 1}
       {x44870000 x4464a666 1}
       {x44875333 x4466199a 1}
       {x44876ccd x4466a666 1}
       {x44876ccd x44660ccd 1}}}
     {tx x447a4000 x4486fa83 x44643c58}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear27 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4486399a x4461e666 1}
       {x44862ccd x4462c000 1}
       {x44863333 x44636666 1}
       {x44866ccd x44648000 1}
       {x44869333 x4465d99a 1}
       {x4486accd x44668000 1}
       {x4486accd x44660ccd 1}}}
     {tx x447a4000 x44866be3 x44646be3}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear26 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4484f333 x44623333 1}
       {x4484e000 x44632666 1}
       {x4484eccd x44644000 1}
       {x4484f333 x4465599a 1}
       {x4484f99a x4465f333 1}
       {x44850ccd x4466999a 1}
       {x44853333 x4466999a 1}}}
     {tx x447a4000 x4484fd42 x4464df15}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear25 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4484e000 x44620ccd 1}
       {x4484e000 x4462599a 1}
       {x4484e666 x44630000 1}
       {x4484f333 x4463f333 1}
       {x44850000 x4464999a 1}
       {x4485199a x44658000 1}
       {x44853333 x44663333 1}
       {x44853333 x44668ccd 1}}}
     {tx x447a4000 x44850333 x44644667}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear24 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4483d333 x4461f333 1}
       {x4483d99a x44624ccd 1}
       {x4483eccd x44638ccd 1}
       {x44840000 x4464b333 1}
       {x44842ccd x44668000 1}
       {x44844000 x4466f333 1}
       {x44844000 x4466599a 1}
       {x44842ccd x44660000 1}}}
     {tx x447a4000 x44840e66 x4464c999}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear23 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44832ccd x4461d99a 1}
       {x44834000 x4462b333 1}
       {x44835333 x44638ccd 1}
       {x44839333 x44658ccd 1}
       {x4483b99a x4466599a 1}
       {x4483a666 x4465d99a 1}
       {x44838666 x44653333 1}}}
     {tx x447a4000 x448375f2 x44646f8a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear22 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4481f99a x4461cccd 1}
       {x44820000 x4462a666 1}
       {x4482199a x44637333 1}
       {x44824666 x44650ccd 1}
       {x44825333 x4466599a 1}
       {x44825333 x4465b333 1}}}
     {tx x447a4000 x44822aab x44642aab}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear21 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4481199a x4461d99a 1}
       {x4481199a x4462cccd 1}
       {x44811333 x44638000 1}
       {x44812ccd x4465599a 1}
       {x4481599a x44668ccd 1}
       {x4481599a x4465f333 1}}}
     {tx x447a4000 x44813111 x44645555}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear20 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44805333 x44624ccd 1}
       {x44805333 x4462f333 1}
       {x44805333 x4463b333 1}
       {x44806666 x44662666 1}
       {x44808666 x44674ccd 1}
       {x44809333 x44668ccd 1}}}
     {tx x447a4000 x4480699a x4464d334}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear19 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447f0ccd x4461d99a 1}
       {x447f0ccd x44628ccd 1}
       {x447f3333 x44643333 1}
       {x447f599a x44653333 1}
       {x447fa666 x44672666 1}
       {x447fcccd x4467a666 1}
       {x447fa666 x44670000 1}}}
     {tx x447a4000 x447f6493 x446515f2}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear18 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447df333 x4466b333 1}}}
     {tx x447a4000 x447df333 x4466b333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear17 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447d7333 x4462b333 1}
       {x447d8000 x44640000 1}
       {x447d8ccd x4464b333 1}
       {x447dcccd x4466599a 1}
       {x447dd99a x4466f333 1}}}
     {tx x447a4000 x447da148 x4464f0a3}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear16 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447bf333 x44620ccd 1}
       {x447bd99a x4462b333 1}
       {x447bd99a x4463a666 1}
       {x447bf333 x44650ccd 1}
       {x447bf333 x4466a666 1}
       {x447bf333 x4466f333 1}
       {x447bd99a x4466b333 1}}}
     {tx x447a4000 x447be83a x4464d248}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear15 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447aa666 x44624ccd 1}
       {x447aa666 x44630000 1}
       {x447ab333 x44638000 1}
       {x447ad99a x44653333 1}
       {x447af333 x4466b333 1}
       {x447b0000 x44673333 1}
       {x447b0000 x4466d99a 1}}}
     {tx x447a4000 x447ad41d x4464f6da}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear14 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44788ccd x44627333 1}
       {x44788ccd x4463599a 1}
       {x4478a666 x44640000 1}
       {x4478f333 x44660ccd 1}
       {x44790ccd x44678ccd 1}
       {x44790ccd x4467cccd 1}
       {x44790000 x44677333 1}}}
     {tx x447a4000 x4478d41e x4465857d}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear13 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4477d99a x4462d99a 1}
       {x4477b333 x4463a666 1}
       {x44778ccd x44650ccd 1}
       {x44778ccd x44657333 1}
       {x4477a666 x44660000 1}
       {x44780000 x44673333 1}}}
     {tx x447a4000 x4477b777 x44650888}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear12 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4476599a x4462a666 1}
       {x4476599a x44634ccd 1}
       {x4476599a x44640000 1}
       {x4476599a x4465b333 1}
       {x44767333 x44673333 1}
       {x44767333 x44678000 1}}}
     {tx x447a4000 x44766221 x44650eef}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear11 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44757333 x44637333 1}
       {x4475599a x4464d99a 1}
       {x44754ccd x4465b333 1}
       {x44758000 x44678000 1}
       {x4475a666 x44683333 1}
       {x44758000 x4467f333 1}}}
     {tx x447a4000 x44757555 x44664665}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear10 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44743333 x44638ccd 1}
       {x44740ccd x4463d99a 1}
       {x4473f333 x44650ccd 1}
       {x4473f333 x44658ccd 1}
       {x44740ccd x4466f333 1}
       {x44742666 x4467b333 1}}}
     {tx x447a4000 x44740ef0 x44657110}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear9 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446e8ccd x4464f333 1}
       {x446e8ccd x44654ccd 1}
       {x446eb333 x44668000 1}
       {x446ecccd x44674ccd 1}
       {x446ef333 x4467f333 1}}}
     {tx x447a4000 x446eb5c2 x44666666}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear8 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4471599a x44628ccd 1}
       {x44714ccd x4463599a 1}
       {x44714ccd x44640ccd 1}
       {x4471599a x44658000 1}
       {x4471b333 x44670000 1}
       {x4471a666 x4467599a 1}}}
     {tx x447a4000 x44717111 x4464f777}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear7 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446ff333 x44637333 1}
       {x446ff333 x4463cccd 1}
       {x446fd99a x4464cccd 1}
       {x446fd99a x4465599a 1}
       {x446ff333 x4466cccd 1}
       {x44700000 x44677333 1}}}
     {tx x447a4000 x446feccc x44654667}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear6 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446fcccd x4463599a 1}
       {x446fcccd x4463d99a 1}
       {x446fcccd x4464a666 1}
       {x446ff333 x44658000 1}
       {x44700000 x44662666 1}}}
     {tx x447a4000 x446fdeba x4464b333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear5 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446b2666 x44648000 1}
       {x446b0000 x4464d99a 1}
       {x446af333 x44660000 1}
       {x446af333 x4466599a 1}
       {x446b2666 x44673333 1}}}
     {tx x447a4000 x446b0a3d x4465c7ad}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear4 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446cb333 x44643333 1}
       {x446c8000 x44650000 1}
       {x446c7333 x4465a666 1}
       {x446c7333 x4466d99a 1}
       {x446c7333 x44678ccd 1}
       {x446c7333 x4467f333 1}}}
     {tx x447a4000 x446c8000 x44663333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear3 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446db333 x4462f333 1}
       {x446db333 x4463599a 1}
       {x446db333 x4463cccd 1}
       {x446dd99a x4464a666 1}
       {x446dd99a x44660000 1}
       {x446e0ccd x4467d99a 1}
       {x446e2666 x4468d99a 1}
       {x446e2666 x44693333 1}
       {x446e0000 x4468d99a 1}}}
     {tx x447a4000 x446de7d2 x44662aab}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear2 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446bf333 x4462a666 1}
       {x446bd99a x44630000 1}
       {x446bcccd x4463599a 1}
       {x446ba666 x44642666 1}
       {x446b8ccd x44650000 1}
       {x446b7333 x44663333 1}
       {x446b7333 x44670ccd 1}
       {x446b7333 x44680000 1}
       {x446b8000 x4468a666 1}
       {x446b8ccd x44690ccd 1}
       {x446ba666 x4469599a 1}}}
     {tx x447a4000 x446b9f6a x44660a7a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear1 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44698ccd x4460b333 1}
       {x44698ccd x44613333 1}
       {x44697333 x44620ccd 1}
       {x44693333 x44630ccd 1}
       {x44692666 x44638ccd 1}
       {x44692666 x44648000 1}
       {x44692666 x44653333 1}
       {x44692666 x44660000 1}
       {x44692666 x44668ccd 1}
       {x44692666 x44674ccd 1}
       {x44692666 x4467a666 1}
       {x44692666 x44680ccd 1}
       {x44693333 x44688ccd 1}
       {x44694ccd x44690000 1}
       {x44694ccd x4469599a 1}}}
     {tx x447a4000 x44693fff x4465836b}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}}}}}
  toolbox {smear {
  { selectAll bs 28.2 src 1 str 1 ssx 1 ssy 1 sf 1 ep1 15 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear bs 28.2 src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 ltn 1001 ltm 1001 ep1 15 tt 25 }
} }
  toolbar_brush_size 28.20000076
  toolbar_brush_hardness 0.200000003
  toolbar_lifetime_type single
  toolbar_lifetime_start 1001
  toolbar_lifetime_end 1001
  toolbar_effect_parameter1 15
  toolbar_paint_source fg
  toolbar_source_transform_scale {1 1}
  toolbar_source_transform_center {960 540}
  colorOverlay {0 0 0 0}
  paint_source foreground
  lifetime_type "all frames"
  lifetime_start 1001
  lifetime_end 1001
  brush_type smear
  brush_size 40.40000153
  brush_spacing 0.05000000075
  brush_hardness 0.200000003
  effect_parameter1 15
  source_black_outside true
  name RotoPaint2
  xpos -4626
  ypos 283
 }
 Mirror2 {
  flop true
  name Mirror2_2
  xpos -4626
  ypos 309
 }
push $N50346640
 RotoPaint {
  curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44700000 x44070000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {cubiccurve Smear812 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44764000 x430e999a 1}
       {x44766666 x430b6666 1}
       {x4476a666 x43080000 1}
       {x4476d99a x43050000 1}
       {x44770000 x43010000 1}}}
     {tx x447a4000 x4476a148 x43080000}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear811 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44752666 x43180000 1}
       {x44752666 x43150000 1}
       {x4475c000 x43096666 1}
       {x4476199a x43040000 1}
       {x44766666 x4302999a 1}
       {x44766666 x43076666 1}
       {x44764000 x4309999a 1}}}
     {tx x447a4000 x4475e2bf x430b2492}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear810 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4473e666 x431f999a 1}
       {x4473e666 x431e999a 1}
       {x4473e666 x43166666 1}
       {x44740000 x430d0000 1}
       {x4473c000 x43050000 1}
       {x4473e666 x43036666 1}
       {x4474199a x43066666 1}}}
     {tx x447a4000 x4473ebe2 x43100ea1}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear809 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4471d99a x431a6666 1}
       {x44718000 x43160000 1}
       {x44716666 x4314999a 1}
       {x44716666 x430c999a 1}
       {x44716666 x4308999a 1}
       {x44718000 x43056666 1}
       {x4471c000 x4301999a 1}}}
     {tx x447a4000 x44718af9 x430de2be}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear808 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4471599a x431f6666 1}
       {x4470d99a x431b6666 1}
       {x4470c000 x43190000 1}
       {x4470599a x430c999a 1}
       {x44706666 x43066666 1}
       {x4470a666 x4305999a 1}
       {x4470d99a x43080000 1}}}
     {tx x447a4000 x4470be2d x4310a0ea}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear807 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44736666 x431f6666 1}
       {x44730000 x43186666 1}
       {x4472c000 x4313999a 1}
       {x44722666 x43086666 1}
       {x4472199a x4301999a 1}
       {x4472199a x42fc0000 1}}}
     {tx x447a4000 x44729555 x430de667}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear806 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446ae666 x431c0000 1}
       {x446ad99a x431b0000 1}
       {x446aa666 x430f0000 1}
       {x446aa666 x43060000 1}
       {x446ba666 x42f40000 1}
       {x446c6666 x42f13333 1}}}
     {tx x447a4000 x446b2ef0 x430a6eef}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear805 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4468c000 x4316999a 1}
       {x4468a666 x4315999a 1}
       {x44688000 x430d999a 1}
       {x4468999a x43096666 1}
       {x4468e666 x43016666 1}
       {x44696666 x42f73333 1}}}
     {tx x447a4000 x4468cccd x430ab333}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear804 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44696666 x431a999a 1}
       {x44694000 x4318999a 1}
       {x44692666 x430f0000 1}
       {x44694000 x430a6666 1}
       {x44692666 x43016666 1}
       {x44692666 x42fc0000 1}
       {x4469199a x42fecccd 1}}}
     {tx x447a4000 x44693507 x430ac57d}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear803 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4469d99a x431e999a 1}
       {x4469c000 x431d6666 1}
       {x44696666 x430e0000 1}
       {x44696666 x430b0000 1}
       {x4469599a x43040000 1}
       {x44692666 x4304999a 1}
       {x4468e666 x43076666 1}}}
     {tx x447a4000 x44696667 x430e6db7}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear802 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4469999a x43220000 1}
       {x44696666 x431c999a 1}
       {x44698000 x43120000 1}
       {x4469999a x430d6666 1}
       {x4469999a x4308999a 1}
       {x4469a666 x4305999a 1}
       {x4469999a x43070000 1}
       {x44696666 x430a6666 1}}}
     {tx x447a4000 x44698b33 x430fb333}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear801 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446a2666 x4323999a 1}
       {x4469d99a x4314999a 1}
       {x4469d99a x430d0000 1}
       {x4469d99a x43056666 1}
       {x4469e666 x43046666 1}
       {x4469c000 x43060000 1}
       {x44694000 x430c0000 1}}}
     {tx x447a4000 x4469cccd x430ddb6e}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear800 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446c199a x4321999a 1}
       {x446bc000 x43200000 1}
       {x446b999a x4317999a 1}
       {x446b999a x43130000 1}
       {x446b8000 x43066666 1}
       {x446b8000 x4303999a 1}
       {x446b999a x43020000 1}
       {x446b599a x43056666 1}
       {x446b2666 x43076666 1}
       {x446ad99a x4309999a 1}}}
     {tx x447a4000 x446b8000 x430e428f}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear799 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446b4000 x4320999a 1}
       {x446ae666 x431d999a 1}
       {x446ac000 x43146666 1}
       {x446a999a x4306999a 1}
       {x446ac000 x43010000 1}
       {x446ae666 x4302999a 1}
       {x446ae666 x43066666 1}}}
     {tx x447a4000 x446add42 x430e2be3}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear798 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446c6666 x43206666 1}
       {x446c199a x43106666 1}
       {x446bd99a x430a999a 1}
       {x446b4000 x43010000 1}
       {x446b4000 x42fccccd 1}
       {x446b599a x42facccd 1}
       {x446b599a x42ff3333 1}
       {x446b599a x43040000 1}
       {x446ae666 x430c6666 1}}}
     {tx x447a4000 x446b8887 x430805b1}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear797 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446d2666 x43216666 1}
       {x446cd99a x431e6666 1}
       {x446cc000 x4310999a 1}
       {x446ca666 x430a0000 1}
       {x446c999a x43010000 1}
       {x446c999a x43000000 1}
       {x446ca666 x43016666 1}
       {x446c8000 x43056666 1}}}
     {tx x447a4000 x446cb800 x430c4667}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear796 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446ed99a x431e6666 1}
       {x446e8000 x431d0000 1}
       {x446e4000 x4313999a 1}
       {x446e4000 x43106666 1}
       {x446e6666 x43040000 1}
       {x446e8000 x4300999a 1}
       {x446e599a x43050000 1}}}
     {tx x447a4000 x446e715f x430f0000}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear795 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446f0000 x431c6666 1}
       {x446ed99a x43186666 1}
       {x446e8000 x430e999a 1}
       {x446e4000 x430a6666 1}
       {x446e2666 x43066666 1}
       {x446e4000 x43020000 1}
       {x446e2666 x43060000 1}}}
     {tx x447a4000 x446e7333 x430d2be2}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear794 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446e199a x43236666 1}
       {x446e199a x4324999a 1}
       {x446e4000 x43230000 1}
       {x446e599a x431c999a 1}
       {x446e599a x4318999a 1}
       {x446e599a x43146666 1}
       {x446e599a x43096666 1}
       {x446e8000 x43046666 1}
       {x446ea666 x43026666 1}
       {x446ec000 x4303999a 1}
       {x446ec000 x4304999a 1}}}
     {tx x447a4000 x446e68ba x4312a2e9}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear793 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44707333 x43226666 1}
       {x44707333 x43216666 1}
       {x4470599a x43143333 1}
       {x44706666 x430c999a 1}
       {x44706666 x4303cccd 1}
       {x4470599a x43006666 1}
       {x4470199a x43003333 1}}}
     {tx x447a4000 x44705b6e x430effff}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear792 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44716666 x4322cccd 1}
       {x44717333 x431a6666 1}
       {x4471a666 x4311cccd 1}
       {x44717333 x430b0000 1}
       {x4470cccd x43026666 1}
       {x44706666 x4304cccd 1}}}
     {tx x447a4000 x44713111 x43103333}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear791 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4473999a x4325cccd 1}
       {x4472999a x431a6666 1}
       {x44728ccd x43150000 1}
       {x44726666 x430b999a 1}
       {x4472199a x4305cccd 1}
       {x4471e666 x43080000 1}}}
     {tx x447a4000 x44728667 x43126eef}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear790 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44740ccd x4324999a 1}
       {x4473e666 x4323cccd 1}
       {x4473cccd x431c3333 1}
       {x4473cccd x43176666 1}
       {x44738ccd x430a6666 1}
       {x4473599a x4305cccd 1}
       {x44734ccd x4309999a 1}}}
     {tx x447a4000 x4473adb7 x43156667}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear789 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4474c000 x4323cccd 1}
       {x44744000 x431b3333 1}
       {x44744000 x4314cccd 1}
       {x44744000 x430c0000 1}
       {x44746666 x43066666 1}
       {x44748ccd x4307cccd 1}}}
     {tx x447a4000 x44746889 x43125555}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear788 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4475a666 x4322999a 1}
       {x44754ccd x43233333 1}
       {x4475199a x431d999a 1}
       {x4475199a x43166666 1}
       {x44750ccd x430d0000 1}
       {x44750000 x43066666 1}
       {x44750000 x43056666 1}
       {x4474f333 x4308cccd 1}}}
     {tx x447a4000 x447524cd x43136ccd}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear787 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44773333 x43246666 1}
       {x44770000 x43226666 1}
       {x44770000 x431ecccd 1}
       {x44770000 x43150000 1}
       {x4476c000 x430acccd 1}
       {x4476c000 x4304999a 1}
       {x4476a666 x43060000 1}
       {x44768000 x43076666 1}}}
     {tx x447a4000 x4476db33 x4312eccd}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear786 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4477d99a x43243333 1}
       {x4477d99a x4322cccd 1}
       {x4477f333 x43200000 1}
       {x44783333 x43196666 1}
       {x44784000 x4311cccd 1}
       {x44783333 x430a0000 1}
       {x44783333 x4307999a 1}
       {x4478199a x43093333 1}}}
     {tx x447a4000 x44781333 x4315a000}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear785 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44762666 x43243333 1}
       {x44763333 x4322cccd 1}
       {x4476599a x4320999a 1}
       {x4476c000 x431a3333 1}
       {x4476cccd x4310cccd 1}
       {x4476cccd x430a0000 1}
       {x4476d99a x43063333 1}
       {x44770ccd x43083333 1}}}
     {tx x447a4000 x44769e67 x43155fff}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear784 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447f999a x4322cccd 1}
       {x447f7333 x4321cccd 1}
       {x447f7333 x431ecccd 1}
       {x447f8000 x4318999a 1}
       {x447f8000 x430f6666 1}
       {x447f8000 x4309999a 1}
       {x447f8000 x43066666 1}
       {x447fa666 x43046666 1}}}
     {tx x447a4000 x447f84cd x4313f99a}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear783 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4478a666 x431a3333 1}
       {x44787333 x43176666 1}
       {x44784000 x430fcccd 1}
       {x4478b333 x430a6666 1}
       {x4479599a x4306cccd 1}}}
     {tx x447a4000 x4478ae15 x4310851e}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear782 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447a0ccd x431e6666 1}
       {x447a2666 x4321cccd 1}
       {x4479d99a x431d999a 1}
       {x44798000 x4312cccd 1}
       {x44790000 x430b0000 1}
       {x4478f333 x4309999a 1}
       {x4478f333 x430b999a 1}
       {x4478f333 x43106666 1}
       {x4478d99a x43193333 1}
       {x4478f333 x431f999a 1}
       {x4478599a x43163333 1}
       {x4477f333 x430c0000 1}
       {x4477f333 x430a3333 1}
       {x44782666 x43096666 1}
       {x44783333 x430a6666 1}
       {x44784000 x430d6666 1}}}
     {tx x447a4000 x4478e0cc x43127998}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear781 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447af333 x43203333 1}
       {x447aa666 x431f0000 1}
       {x447a4ccd x4311cccd 1}
       {x447a4ccd x430d3333 1}
       {x447a4ccd x43076666 1}
       {x447a6666 x4308999a 1}
       {x447a0ccd x43113333 1}
       {x447a0000 x4312999a 1}}}
     {tx x447a4000 x447a5e67 x43124000}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear780 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447ac000 x43220000 1}
       {x447ac000 x43233333 1}
       {x447a7333 x43213333 1}
       {x447a4ccd x4315999a 1}
       {x447a2666 x430c3333 1}
       {x447a199a x43093333 1}
       {x447a199a x4306cccd 1}
       {x447a2666 x4308cccd 1}
       {x447a2666 x430c6666 1}}}
     {tx x447a4000 x447a527c x43134445}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear779 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447be666 x43226666 1}
       {x447b8000 x431d6666 1}
       {x447b3333 x43130000 1}
       {x447b0000 x430a3333 1}
       {x447b0000 x43056666 1}
       {x447b2666 x430a0000 1}}}
     {tx x447a4000 x447b4aab x43121111}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear778 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447c4000 x4325cccd 1}
       {x447bc000 x431f6666 1}
       {x447bb333 x43193333 1}
       {x447ba666 x430dcccd 1}
       {x447b8ccd x4306999a 1}
       {x447bb333 x4304cccd 1}
       {x447be666 x43066666 1}
       {x447c0ccd x430a6666 1}}}
     {tx x447a4000 x447bd19a x43110ccd}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear777 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447f999a x43160000 1}
       {x447f6666 x430e999a 1}
       {x447f7333 x43093333 1}
       {x447fc000 x43050000 1}
       {x447f8000 x4305cccd 1}}}
     {tx x447a4000 x447f8a3d x430b51eb}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear776 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447f199a x4317cccd 1}
       {x447f0ccd x4316999a 1}
       {x447f199a x4310999a 1}
       {x447f4000 x430d999a 1}
       {x447f4ccd x4308999a 1}
       {x447f4ccd x43076666 1}
       {x447f4000 x4308999a 1}}}
     {tx x447a4000 x447f3160 x430e7508}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear775 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447ef333 x431c999a 1}
       {x447f0ccd x4317cccd 1}
       {x447f2666 x4314999a 1}
       {x447f4ccd x4310999a 1}
       {x447f599a x430dcccd 1}
       {x447f6666 x430a0000 1}
       {x447f7333 x43090000 1}
       {x447f7333 x430a6666 1}}}
     {tx x447a4000 x447f4333 x4310999a}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear774 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447e4000 x4318cccd 1}
       {x447e4ccd x431a6666 1}
       {x447e599a x43193333 1}
       {x447e599a x43170000 1}
       {x447e599a x43116666 1}
       {x447e599a x430c3333 1}
       {x447e599a x430b0000 1}
       {x447e6666 x430c3333 1}}}
     {tx x447a4000 x447e5666 x43130666}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear773 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447e599a x43200000 1}
       {x447e3333 x431d0000 1}
       {x447e0ccd x4316999a 1}
       {x447df333 x4310cccd 1}
       {x447df333 x430b0000 1}
       {x447e0ccd x430c999a 1}}}
     {tx x447a4000 x447e1778 x4314aaab}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear772 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447d0000 x43253333 1}
       {x447d3333 x4323cccd 1}
       {x447d8ccd x431ccccd 1}
       {x447d8ccd x4319cccd 1}
       {x447d8ccd x43133333 1}
       {x447d8ccd x43116666 1}
       {x447d8ccd x430c3333 1}
       {x447d999a x430b0000 1}
       {x447db333 x430dcccd 1}}}
     {tx x447a4000 x447d78e4 x43165b05}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear771 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4480599a x431fcccd 1}
       {x44804000 x431d999a 1}
       {x44804000 x431a3333 1}
       {x44805333 x4312cccd 1}
       {x4480599a x43096666 1}
       {x4480599a x43053333 1}
       {x44804000 x4301999a 1}
       {x4480399a x42fe0000 1}}}
     {tx x447a4000 x44804b33 x430f3334}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear770 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44810ccd x43213333 1}
       {x4480e666 x431c3333 1}
       {x4480e666 x4318cccd 1}
       {x4480f99a x430f6666 1}
       {x4480e666 x43066666 1}
       {x4480e666 x4304cccd 1}
       {x4480cccd x43060000 1}
       {x4480c000 x43073333 1}}}
     {tx x447a4000 x4480e59a x430fc000}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear769 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4480f99a x43286666 1}
       {x4480c666 x43240000 1}
       {x4480c666 x431e999a 1}
       {x4480e000 x4315cccd 1}
       {x4480cccd x430c999a 1}
       {x4480cccd x43090000 1}
       {x4480eccd x43090000 1}
       {x4480e666 x430acccd 1}}}
     {tx x447a4000 x4480da66 x43154667}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear768 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4481f99a x432b6666 1}
       {x4481eccd x4329cccd 1}
       {x4481c666 x43263333 1}
       {x44818000 x431ecccd 1}
       {x44812ccd x43140000 1}
       {x4481199a x430d999a 1}
       {x4481199a x430c0000 1}
       {x44812000 x430dcccd 1}}}
     {tx x447a4000 x4481759a x431ab334}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear767 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44836666 x43290000 1}
       {x4483f333 x43136666 1}
       {x4483e666 x43116666 1}
       {x4483c000 x430e0000 1}
       {x4483a666 x430c0000 1}}}
     {tx x447a4000 x4483bae2 x4314c28f}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear766 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44834000 x432a3333 1}
       {x44834666 x432b6666 1}
       {x44836000 x43283333 1}
       {x44837333 x4322999a 1}
       {x44838ccd x431e3333 1}
       {x4483a000 x431acccd 1}
       {x4483a666 x43146666 1}
       {x4483999a x430fcccd 1}
       {x44838000 x430c6666 1}}}
     {tx x447a4000 x44837999 x431d8e3a}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear765 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4481a000 x4322999a 1}
       {x4481a666 x4323cccd 1}
       {x4481999a x4322cccd 1}
       {x44818666 x43176666 1}
       {x4481b333 x430d999a 1}
       {x44820000 x4308999a 1}
       {x44821333 x430acccd 1}}}
     {tx x447a4000 x4481bd42 x431715f1}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear764 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44826ccd x43226666 1}
       {x44820ccd x431b999a 1}
       {x4481f333 x4312cccd 1}
       {x4481eccd x43100000 1}
       {x4481d99a x430b6666 1}
       {x4481c000 x4307cccd 1}
       {x4481a000 x4308cccd 1}
       {x44816ccd x430d999a 1}}}
     {tx x447a4000 x4481e000 x43114ccc}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear763 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44826000 x4325cccd 1}
       {x4482399a x4325999a 1}
       {x44822666 x43196666 1}
       {x4482399a x43130000 1}
       {x4482599a x430b999a 1}
       {x44826666 x43090000 1}
       {x4482599a x430b6666 1}
       {x44824ccd x430d3333 1}}}
     {tx x447a4000 x44824c00 x4314a000}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear762 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4482b99a x4326999a 1}
       {x4482accd x4320999a 1}
       {x4482d333 x431a0000 1}
       {x44832000 x430f0000 1}
       {x4483399a x4307cccd 1}
       {x4482e000 x430c3333 1}}}
     {tx x447a4000 x4482e889 x43160889}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear761 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4484199a x431c999a 1}
       {x4483f333 x43176666 1}
       {x4483f99a x430d3333 1}
       {x44841333 x43080000 1}
       {x44841333 x4306cccd 1}
       {x4483c666 x4308cccd 1}}}
     {tx x447a4000 x4483fddd x430ecccd}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear760 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44839333 x4324cccd 1}
       {x44836ccd x4322999a 1}
       {x44836000 x4317999a 1}
       {x4483799a x4310999a 1}
       {x44839333 x430b0000 1}
       {x44835333 x430d3333 1}}}
     {tx x447a4000 x44837555 x4316a223}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear759 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44831333 x4325cccd 1}
       {x44830ccd x431c999a 1}
       {x44831333 x43196666 1}
       {x44832ccd x43100000 1}
       {x44833333 x430b6666 1}
       {x44830666 x430f6666 1}}}
     {tx x447a4000 x44831999 x43166ef0}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear758 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4484a000 x43283333 1}
       {x4484599a x43273333 1}
       {x44842000 x431e999a 1}
       {x44842666 x431a0000 1}
       {x44848666 x430fcccd 1}
       {x4484a666 x430b999a 1}
       {x44848666 x430c0000 1}}}
     {tx x447a4000 x44846be3 x43190ea1}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear757 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4486599a x43256666 1}
       {x4486399a x431d3333 1}
       {x4486399a x43190000 1}
       {x44866666 x43103333 1}
       {x44867333 x43093333 1}
       {x44866ccd x43080000 1}
       {x4486399a x430a3333 1}}}
     {tx x447a4000 x4486541e x43135075}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear756 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4484e666 x4324999a 1}
       {x4484cccd x4322cccd 1}
       {x4484a000 x4315999a 1}
       {x4484799a x430d999a 1}
       {x44847333 x43080000 1}
       {x44847333 x430a0000 1}
       {x44847333 x430bcccd 1}}}
     {tx x447a4000 x448497c6 x43137c58}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear755 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44850000 x43236666 1}
       {x4484accd x43166666 1}
       {x4484a666 x43120000 1}
       {x4484a000 x430c0000 1}
       {x4484accd x430acccd 1}
       {x4484accd x430c3333 1}
       {x4484accd x430ecccd 1}
       {x4484a666 x43156666 1}}}
     {tx x447a4000 x4484b3ff x43126000}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear754 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44852ccd x4326999a 1}
       {x4484e000 x43180000 1}
       {x4484d99a x43136666 1}
       {x4484d333 x430b0000 1}
       {x4484d333 x430c3333 1}
       {x4484accd x4310cccd 1}}}
     {tx x447a4000 x4484deef x43145555}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear753 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44858666 x43276666 1}
       {x44858666 x4328999a 1}
       {x44854666 x431f6666 1}
       {x44854666 x4314999a 1}
       {x44855333 x430c0000 1}
       {x44855333 x43096666 1}
       {x44854666 x430d6666 1}
       {x44853333 x43106666 1}}}
     {tx x447a4000 x44855733 x4316e667}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear752 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4485a000 x4324999a 1}
       {x4485accd x43263333 1}
       {x4485accd x43186666 1}
       {x4485b99a x430c999a 1}
       {x4485cccd x43093333 1}
       {x4485d333 x43080000 1}
       {x4485b333 x430d999a 1}
       {x4485a000 x430ecccd 1}}}
     {tx x447a4000 x4485b4cc x4313accd}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear751 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44866ccd x43286666 1}
       {x44862000 x43213333 1}
       {x44862000 x431f999a 1}
       {x4486199a x431c0000 1}
       {x44860ccd x4311999a 1}
       {x44860ccd x430a3333 1}
       {x4485e666 x430c0000 1}
       {x4485c000 x430f0000 1}}}
     {tx x447a4000 x448610cd x43178000}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear750 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44876ccd x43246666 1}
       {x44873333 x431b999a 1}
       {x44872666 x43150000 1}
       {x44870ccd x430dcccd 1}
       {x44870666 x4308999a 1}
       {x44870000 x4309999a 1}
       {x4486d99a x430d999a 1}}}
     {tx x447a4000 x44871999 x4312a83a}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear749 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4487599a x43286666 1}
       {x44874ccd x43263333 1}
       {x44874ccd x431e3333 1}
       {x44875333 x43190000 1}
       {x44876000 x430dcccd 1}
       {x4487799a x4308cccd 1}
       {x44878000 x4307cccd 1}
       {x44876000 x430a6666 1}}}
     {tx x447a4000 x44876000 x4315d333}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear748 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4487f333 x43233333 1}
       {x4487e000 x4320999a 1}
       {x4487d333 x43190000 1}
       {x4487b333 x43100000 1}
       {x4487a666 x430b6666 1}
       {x4487a666 x4308cccd 1}
       {x44879333 x430acccd 1}}}
     {tx x447a4000 x4487bf16 x4313f8af}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear747 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44886666 x43260000 1}
       {x44885333 x43210000 1}
       {x44884ccd x431bcccd 1}
       {x44884000 x43140000 1}
       {x44882000 x430b6666 1}
       {x44882000 x43080000 1}
       {x4488199a x43093333 1}}}
     {tx x447a4000 x44883b6e x43150ea0}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear746 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4488999a x43286666 1}
       {x4488999a x431f999a 1}
       {x4488a666 x431b3333 1}
       {x4488cccd x4312999a 1}
       {x4488eccd x430bcccd 1}
       {x4488eccd x430a6666 1}
       {x4488cccd x430bcccd 1}}}
     {tx x447a4000 x4488c1d4 x4315af8b}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear745 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44894000 x432bcccd 1}
       {x44890000 x43210000 1}
       {x4488f333 x4318999a 1}
       {x4488eccd x43103333 1}
       {x4488f99a x430b999a 1}
       {x4488e666 x430d6666 1}}}
     {tx x447a4000 x44890000 x4317c444}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear744 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4489accd x4325999a 1}
       {x44899333 x43206666 1}
       {x44899333 x431a3333 1}
       {x44899333 x43130000 1}
       {x44899333 x430c999a 1}
       {x44898000 x43103333 1}}}
     {tx x447a4000 x44899445 x43180001}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear743 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4489eccd x43296666 1}
       {x4489accd x43213333 1}
       {x4489accd x431e6666 1}
       {x4489a666 x4314999a 1}
       {x4489a666 x430d999a 1}
       {x4489a666 x430fcccd 1}}}
     {tx x447a4000 x4489b445 x4319d555}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear742 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448a8666 x432e0000 1}
       {x448a599a x432b3333 1}
       {x448a599a x43210000 1}
       {x448a6666 x431c999a 1}
       {x448a6666 x4313999a 1}
       {x448a6666 x430e999a 1}
       {x448a6666 x430d6666 1}
       {x448a599a x43106666 1}
       {x448a4000 x4312999a 1}}}
     {tx x447a4000 x448a616c x4319eeef}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear741 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448b9333 x4323cccd 1}
       {x448bb333 x431d999a 1}
       {x448be000 x43146666 1}
       {x448be000 x43106666 1}
       {x448be000 x430b6666 1}
       {x448bb333 x430c3333 1}}}
     {tx x447a4000 x448bc445 x4314f777}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear740 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448bc000 x43220000 1}
       {x448bb333 x43200000 1}
       {x448baccd x43193333 1}
       {x448bc000 x4315cccd 1}
       {x448bd333 x43106666 1}
       {x448be000 x430c6666 1}
       {x448bd333 x430e0000 1}}}
     {tx x447a4000 x448bc57d x431641d5}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear739 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448b399a x432a3333 1}
       {x448b2000 x43290000 1}
       {x448b1333 x4326999a 1}
       {x448b1333 x431c999a 1}
       {x448af99a x43146666 1}
       {x448af333 x43116666 1}
       {x448af333 x43130000 1}}}
     {tx x447a4000 x448b0db7 x431d999a}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear738 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448b8000 x432bcccd 1}
       {x448b6ccd x432d0000 1}
       {x448b4ccd x4329999a 1}
       {x448b1333 x43236666 1}
       {x448af99a x43213333 1}
       {x448ae666 x431c999a 1}
       {x448ae000 x4314cccd 1}
       {x448ae666 x43106666 1}
       {x448ae000 x43123333 1}}}
     {tx x447a4000 x448b1778 x431f71c8}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear737 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448daccd x43270000 1}
       {x448da000 x431db333 1}
       {x448db333 x431a199a 1}
       {x448dc333 x4315cccd 1}
       {x448dd333 x4314b333 1}}}
     {tx x447a4000 x448db7ae x431b75c3}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear736 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448deccd x432ae666 1}
       {x448db333 x4329199a 1}
       {x448daccd x4326199a 1}
       {x448dd000 x431e3333 1}
       {x448dd333 x4318b333 1}
       {x448dd99a x4317199a 1}
       {x448deccd x4318b333 1}}}
     {tx x447a4000 x448dd0ea x43201d41}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear735 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448cc666 x4326cccd 1}
       {x448c999a x43233333 1}
       {x448cd333 x431b6666 1}
       {x448cfccd x43193333 1}}}
     {tx x447a4000 x448ccc00 x431fa666}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear734 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448cc333 x4329999a 1}
       {x448c5ccd x43258000 1}
       {x448c5666 x4319999a 1}
       {x448c6ccd x4317999a 1}
       {x448c7ccd x43190000 1}
       {x448ca666 x431d199a 1}}}
     {tx x447a4000 x448c8111 x431e6667}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear733 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448d5666 x432db333 1}
       {x448cfccd x432a6666 1}
       {x448ce000 x43213333 1}
       {x448cf000 x431a999a 1}
       {x448cfccd x43193333 1}
       {x448cfccd x431b6666 1}
       {x448ce99a x4321cccd 1}
       {x448cd333 x4329999a 1}
       {x448cbccd x432cb333 1}
       {x448c9000 x432b6666 1}
       {x448c6000 x4323e666 1}
       {x448c5ccd x431b0000 1}
       {x448c7333 x4318b333 1}
       {x448c9333 x431eb333 1}}}
     {tx x447a4000 x448cc78b x43227333}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear732 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448df000 x432ae666 1}
       {x448db99a x432c8000 1}
       {x448d9666 x4321999a 1}
       {x448d899a x431d8000 1}
       {x448d8333 x4319999a 1}
       {x448d8333 x431a999a 1}
       {x448d7333 x431f199a 1}
       {x448d6333 x43224ccd 1}}}
     {tx x447a4000 x448d94cd x43218333}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear731 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448e2333 x432b3333 1}
       {x448e0333 x432a0000 1}
       {x448df666 x4326199a 1}
       {x448df666 x43206666 1}
       {x448df666 x4319b333 1}
       {x448e0666 x4316b333 1}
       {x448e0ccd x4318e666 1}
       {x448e1333 x431d199a 1}}}
     {tx x447a4000 x448e0600 x43204333}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear730 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448e5333 x432b199a 1}
       {x448e4666 x432c199a 1}
       {x448e299a x432a6666 1}
       {x448e2333 x4326cccd 1}
       {x448e2333 x43220000 1}
       {x448e299a x431e3333 1}
       {x448e3000 x431b0000 1}
       {x448e4666 x4317cccd 1}
       {x448e5333 x4319999a 1}
       {x448e4666 x431e6666 1}}}
     {tx x447a4000 x448e39eb x4321f0a4}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear729 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448ec333 x432a0000 1}
       {x448ec333 x432bcccd 1}
       {x448ec333 x432a8000 1}
       {x448ed666 x43236666 1}
       {x448ec99a x431c199a 1}
       {x448ec000 x4318b333 1}
       {x448eaccd x431a8000 1}
       {x448e8666 x431f999a 1}}}
     {tx x447a4000 x448ebb99 x43225333}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear728 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448fa99a x4327b333 1}
       {x448fa333 x431f199a 1}
       {x448f999a x43190000 1}
       {x448f9333 x43180000 1}
       {x448f7ccd x4319999a 1}
       {x448f5333 x431c6666 1}}}
     {tx x447a4000 x448f8c44 x431cf778}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear727 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448fa99a x4326cccd 1}
       {x448fb000 x4329199a 1}
       {x448fc000 x43248000 1}
       {x448fc000 x4320e666 1}
       {x448fb000 x431b6666 1}
       {x448fb000 x43190000 1}
       {x448fb333 x431bb333 1}}}
     {tx x447a4000 x448fb41d x4320c57d}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear726 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448ee666 x43303333 1}
       {x448f099a x432c199a 1}
       {x448f3666 x4328999a 1}
       {x448f4ccd x4321999a 1}
       {x448f4ccd x431a999a 1}
       {x448f699a x4317cccd 1}
       {x448f7ccd x4318e666 1}
       {x448f8ccd x431bb333 1}}}
     {tx x447a4000 x448f4666 x4321afff}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear725 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44902666 x4326999a 1}
       {x44902000 x4324cccd 1}
       {x44903333 x431db333 1}
       {x44904333 x431b8000 1}}}
     {tx x447a4000 x44902f33 x43212667}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear724 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44907ccd x43298000 1}
       {x44906ccd x4324999a 1}
       {x44906666 x431ccccd 1}
       {x44906000 x431b6666 1}
       {x4490599a x4319b333 1}
       {x44905000 x431c6666 1}
       {x4490499a x431de666 1}}}
     {tx x447a4000 x44906075 x431f2f8b}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear723 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44908666 x432c4ccd 1}
       {x44906ccd x4324999a 1}
       {x44906000 x4321999a 1}
       {x44904333 x431c6666 1}
       {x44905000 x431f8000 1}}}
     {tx x447a4000 x44906148 x4322e148}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear722 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4490e99a x432d3333 1}
       {x4490d99a x4324199a 1}
       {x4490d99a x4320e666 1}
       {x4490d99a x431c999a 1}
       {x4490c000 x431e0000 1}
       {x4490b666 x43208000 1}}}
     {tx x447a4000 x4490d223 x43223777}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear721 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44912333 x432e199a 1}
       {x44910666 x4326cccd 1}
       {x44910666 x4321999a 1}
       {x44910000 x431d8000 1}
       {x44910000 x431c3333 1}
       {x4490f000 x431e6666 1}
       {x4490e333 x4321199a 1}}}
     {tx x447a4000 x44910075 x43223e2b}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear720 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4491a000 x432ce666 1}
       {x44919000 x43266666 1}
       {x4491899a x4322199a 1}
       {x44916ccd x431d0000 1}
       {x44916000 x431b6666 1}
       {x44916000 x431d199a 1}
       {x4491499a x43213333 1}}}
     {tx x447a4000 x44917492 x4321ba83}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear719 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4491c666 x432db333 1}
       {x4491b000 x432b3333 1}
       {x4491b666 x43286666 1}
       {x4491cccd x4321199a 1}
       {x4491cccd x431ccccd 1}
       {x4491c666 x431b8000 1}
       {x4491accd x431d4ccd 1}
       {x4491a000 x431f999a 1}}}
     {tx x447a4000 x4491bb32 x4322f333}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear718 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44926666 x432cb333 1}
       {x44929000 x4326cccd 1}
       {x4492accd x4322b333 1}
       {x4492c333 x431d199a 1}
       {x4492d333 x431a4ccd 1}
       {x4492c333 x431b3333 1}
       {x4492a666 x431c199a 1}}}
     {tx x447a4000 x4492a99a x4320b333}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear717 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44924ccd x432f3333 1}
       {x44924666 x43303333 1}
       {x4492399a x432a0000 1}
       {x4492399a x4325e666 1}
       {x4492399a x431ee666 1}
       {x4492399a x431be666 1}
       {x4492399a x431db333 1}}}
     {tx x447a4000 x44923e2b x4325af8b}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear716 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4492accd x432e999a 1}
       {x44926333 x43294ccd 1}
       {x44926333 x4323e666 1}
       {x44926666 x431de666 1}
       {x44927333 x431be666 1}
       {x44925666 x431de666 1}}}
     {tx x447a4000 x44927088 x43234000}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear715 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44930333 x432f3333 1}
       {x4492c333 x43263333 1}
       {x4492c333 x43224ccd 1}
       {x4492c333 x431d0000 1}
       {x4492c333 x431b8000 1}
       {x4492c333 x431de666 1}}}
     {tx x447a4000 x4492cdde x43225999}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear714 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44938ccd x43318000 1}
       {x44938000 x432cb333 1}
       {x44938666 x432a3333 1}
       {x44938666 x4323b333 1}
       {x44938000 x43224ccd 1}
       {x44937333 x43203333 1}
       {x44937000 x431ee666 1}
       {x44936333 x43206666 1}
       {x44935333 x4321999a 1}}}
     {tx x447a4000 x44937777 x4325471c}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear713 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44938666 x4332999a 1}
       {x44939666 x432e999a 1}
       {x44939666 x432bcccd 1}
       {x4493a333 x43266666 1}
       {x4493b333 x43220000 1}
       {x4493c99a x431eb333 1}
       {x4493d666 x4320b333 1}}}
     {tx x447a4000 x4493aa83 x43278af9}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear712 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44944ccd x432e8000 1}
       {x44942ccd x4326999a 1}
       {x44942ccd x4322e666 1}
       {x44942ccd x431f199a 1}}}
     {tx x447a4000 x449434cd x4325c666}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear711 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44948666 x432d6666 1}
       {x44946000 x43266666 1}
       {x44946000 x43236666 1}
       {x4494599a x43203333 1}
       {x44945333 x4321999a 1}}}
     {tx x447a4000 x449463d7 x43250000}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear710 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4494c000 x4331199a 1}
       {x4494a99a x432a3333 1}
       {x4494b333 x4327199a 1}
       {x4494b333 x43236666 1}
       {x4494b000 x43253333 1}}}
     {tx x447a4000 x4494b333 x4328999a}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear709 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4494e666 x4331b333 1}
       {x4494cccd x432b6666 1}
       {x4494cccd x4328999a 1}
       {x4494cccd x43258000 1}
       {x4494d000 x4323e666 1}
       {x4494e333 x4326199a 1}}}
     {tx x447a4000 x4494d555 x4328dddd}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear708 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44956000 x4331199a 1}
       {x4495399a x432f6666 1}
       {x44952ccd x432d6666 1}
       {x44952ccd x4328999a 1}
       {x44952ccd x43266666 1}
       {x44952ccd x43233333 1}
       {x44954333 x43248000 1}}}
     {tx x447a4000 x44953925 x4329cccd}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear707 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4495e99a x4333199a 1}
       {x4495b000 x432db333 1}
       {x4495b000 x432a8000 1}
       {x4495b666 x4325b333 1}
       {x4495b666 x4322b333 1}
       {x4495b666 x43248000 1}}}
     {tx x447a4000 x4495bccd x43295dde}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear706 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44961000 x4331b333 1}
       {x4495dccd x432d0000 1}
       {x4495dccd x4329999a 1}
       {x4495e99a x43253333 1}
       {x44960000 x43230000 1}
       {x44961666 x4325e666 1}}}
     {tx x447a4000 x4495f6ef x43291111}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear705 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44968333 x4332e666 1}
       {x44962666 x432a6666 1}
       {x44962ccd x4326999a 1}
       {x4496499a x43230000 1}
       {x44967333 x43244ccd 1}}}
     {tx x447a4000 x449650a4 x4328a3d7}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear704 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44971ccd x4332999a 1}
       {x4496d333 x432d3333 1}
       {x4496d333 x4328e666 1}
       {x4496e99a x4323e666 1}
       {x44970000 x4321999a 1}
       {x44970666 x43236666 1}
       {x4496fccd x4324999a 1}}}
     {tx x447a4000 x4496f493 x4327be2b}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear703 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44975ccd x4332b333 1}
       {x4497299a x4331199a 1}
       {x44970000 x43280000 1}
       {x44970666 x43258000 1}
       {x4497199a x4322199a 1}
       {x44974000 x43244ccd 1}}}
     {tx x447a4000 x44972667 x43294889}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear702 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4497bccd x4331b333 1}
       {x44976666 x4329cccd 1}
       {x44976ccd x43270000 1}
       {x4497a666 x43220000 1}
       {x4497b99a x43244ccd 1}}}
     {tx x447a4000 x44979666 x432828f6}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear701 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4497b99a x4330999a 1}
       {x4497b99a x432f6666 1}
       {x4497b99a x432ce666 1}
       {x4497c99a x43250000 1}
       {x4497e000 x4322e666 1}
       {x4497eccd x43253333 1}}}
     {tx x447a4000 x4497cb33 x4329aaab}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear700 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4497c99a x4330199a 1}
       {x4497d000 x432d3333 1}
       {x4497d99a x4325e666 1}
       {x4497f000 x43216666 1}
       {x4498199a x431d0000 1}}}
     {tx x447a4000 x4497e5c3 x4326b852}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear699 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44982333 x43360000 1}
       {x4498199a x4331b333 1}
       {x44980666 x43230000 1}
       {x44980333 x431fcccd 1}
       {x44980333 x431d8000 1}
       {x44980333 x431eb333 1}}}
     {tx x447a4000 x44980ccd x43267333}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear698 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44985ccd x43384ccd 1}
       {x44981333 x432c199a 1}
       {x44980ccd x4327b333 1}
       {x44980ccd x431f999a 1}
       {x44982000 x4321199a 1}
       {x44982000 x43236666 1}}}
     {tx x447a4000 x44982199 x43280889}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear697 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44988000 x433c0000 1}
       {x44982333 x43303333 1}
       {x44980666 x4329999a 1}
       {x4497fccd x43228000 1}
       {x4497fccd x431fcccd 1}
       {x44980ccd x4323b333 1}}}
     {tx x447a4000 x44981d55 x4329f778}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear696 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4498eccd x433a6666 1}
       {x44988ccd x432cb333 1}
       {x4498799a x43263333 1}
       {x44987333 x431ee666 1}
       {x44987333 x4321199a 1}
       {x44985333 x43258000 1}}}
     {tx x447a4000 x44988778 x43287777}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear695 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4498f333 x43398000 1}
       {x4498e666 x43384ccd 1}
       {x44987000 x43294ccd 1}
       {x4498699a x43263333 1}
       {x44986333 x43236666 1}
       {x44986333 x4322199a 1}
       {x44987333 x431d8000 1}
       {x44988666 x431be666 1}
       {x44989ccd x431d199a 1}
       {x44989666 x43220000 1}}}
     {tx x447a4000 x449890a4 x4326547a}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear694 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4498f99a x433a999a 1}
       {x4498f333 x43376666 1}
       {x4498d666 x432ab333 1}
       {x4498accd x431f199a 1}
       {x4498b333 x431a999a 1}
       {x4498d666 x4319e666 1}
       {x4498dccd x431f199a 1}
       {x4498b333 x4323999a 1}}}
     {tx x447a4000 x4498d133 x43266000}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear693 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44993666 x433e8000 1}
       {x44993000 x433cb333 1}
       {x4498fccd x432c0000 1}
       {x4498eccd x43256666 1}
       {x4498dccd x431ee666 1}
       {x4498dccd x431d4ccd 1}
       {x4498eccd x43228000 1}}}
     {tx x447a4000 x4498fea1 x432ac1d5}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear692 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449a0000 x4342999a 1}
       {x4499dccd x4342199a 1}
       {x44997666 x4336e666 1}
       {x44996000 x432c8000 1}
       {x44996000 x4323999a 1}
       {x4499699a x43203333 1}
       {x4499599a x4322b333 1}
       {x44991000 x43283333 1}}}
     {tx x447a4000 x44997ccc x432ed998}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear691 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449a5000 x43400000 1}
       {x4499dccd x43318000 1}
       {x4499cccd x4327b333 1}
       {x4499dccd x43208000 1}
       {x4499eccd x431ee666 1}
       {x4499e666 x4321999a 1}
       {x4499cccd x43244ccd 1}}}
     {tx x447a4000 x4499ec58 x4328edb7}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear690 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449a6ccd x433e0000 1}
       {x449a7ccd x433ee666 1}
       {x449a7ccd x433be666 1}
       {x449a7ccd x4331b333 1}
       {x449a7ccd x4327b333 1}
       {x449a7ccd x43230000 1}
       {x449a7ccd x43216666 1}
       {x449a6ccd x43248000 1}
       {x449a599a x43266666 1}}}
     {tx x447a4000 x449a7555 x432e638e}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear689 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449a2000 x4341999a 1}
       {x449a1666 x4342999a 1}
       {x4499d000 x43393333 1}
       {x4499cccd x43348000 1}
       {x4499cccd x432ae666 1}
       {x4499d000 x4327199a 1}
       {x4499d000 x432d0000 1}}}
     {tx x447a4000 x4499e492 x4334b333}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear688 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449a6000 x43436666 1}
       {x449a0333 x4340199a 1}
       {x4499d666 x433b8000 1}
       {x4499cccd x43340000 1}
       {x4499e333 x432bcccd 1}
       {x449a0000 x43280000 1}
       {x449a0333 x432c4ccd 1}
       {x449a0000 x432d6666 1}}}
     {tx x447a4000 x4499fd9a x43341001}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear687 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449b0666 x4342199a 1}
       {x449b0000 x433a199a 1}
       {x449af99a x4336b333 1}
       {x449af000 x432c8000 1}
       {x449af000 x43266666 1}
       {x449af000 x43248000 1}
       {x449ab000 x4326999a 1}
       {x449a9333 x43286666 1}}}
     {tx x447a4000 x449ae266 x432f299a}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear686 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449bc666 x433d8000 1}
       {x449bc666 x433c0000 1}
       {x449bbccd x433acccd 1}
       {x449bb000 x43376666 1}
       {x449bb000 x43334ccd 1}
       {x449bb666 x432e999a 1}
       {x449bbccd x432b3333 1}
       {x449bc666 x4328b333 1}
       {x449bc666 x4327b333 1}}}
     {tx x447a4000 x449bbd84 x4332cccc}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear685 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449b8000 x4341cccd 1}
       {x449b5333 x43403333 1}
       {x449b0ccd x43380000 1}
       {x449b0ccd x4334cccd 1}
       {x449b0ccd x43326666 1}
       {x449b0666 x432f3333 1}
       {x449b0000 x432e0000 1}
       {x449b0000 x432c0000 1}
       {x449b0000 x432acccd 1}
       {x449b0000 x4329999a 1}
       {x449b0000 x43286666 1}}}
     {tx x447a4000 x449b1746 x43321bed}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear684 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449b4ccd x4339cccd 1}
       {x449b4000 x43386666 1}
       {x449b3333 x43366666 1}
       {x449b2666 x4333cccd 1}
       {x449b2666 x43313333 1}
       {x449b2666 x432e0000 1}
       {x449b2666 x432c6666 1}
       {x449b3333 x432b3333 1}
       {x449b399a x432c3333 1}
       {x449b4000 x432e3333 1}
       {x449b4000 x43300000 1}
       {x449b4666 x43326666 1}
       {x449b4ccd x43346666 1}
       {x449b5333 x43363333 1}
       {x449b5333 x4337cccd 1}
       {x449b5333 x4336999a 1}
       {x449b5333 x4332cccd 1}
       {x449b4ccd x432f999a 1}
       {x449b4666 x432c6666 1}
       {x449b4666 x43293333 1}
       {x449b4000 x4327999a 1}
       {x449b4000 x43266666 1}}}
     {tx x447a4000 x449b3fff x4330ae8b}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear683 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449b2000 x43423333 1}
       {x449b0666 x433e0000 1}
       {x449b199a x4330999a 1}
       {x449b2000 x432dcccd 1}
       {x449b2666 x432acccd 1}
       {x449b2666 x4328cccd 1}
       {x449b2666 x43266666 1}
       {x449b2666 x4324cccd 1}
       {x449b2ccd x4323999a 1}
       {x449b2ccd x4325cccd 1}}}
     {tx x447a4000 x449b21ed x432d7ae2}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear682 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449f9ccd x433d0000 1}
       {x449fa99a x4338999a 1}
       {x449fc333 x43353333 1}
       {x449fd99a x432bb333 1}
       {x449fd99a x4324999a 1}
       {x449fc99a x431ecccd 1}
       {x449fa333 x431de666 1}}}
     {tx x447a4000 x449fbccd x432c8af9}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear681 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449feccd x4346b333 1}
       {x449ff333 x43458000 1}
       {x449fe666 x43433333 1}
       {x449fe000 x4340199a 1}
       {x449fd666 x4336e666 1}
       {x449fd666 x432dcccd 1}
       {x449fc333 x43284ccd 1}
       {x449fb666 x4326b333 1}
       {x449f7333 x43274ccd 1}}}
     {tx x447a4000 x449fce39 x43368001}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear680 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449ccccd x43386666 1}
       {x449c999a x43313333 1}
       {x449c8666 x432b6666 1}
       {x449c7333 x4321cccd 1}
       {x449c6ccd x431a0000 1}
       {x449c599a x4316cccd 1}}}
     {tx x447a4000 x449c8667 x43269999}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear679 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449c8ccd x433d999a 1}
       {x449c8ccd x433c999a 1}
       {x449c599a x43326666 1}
       {x449c599a x432d999a 1}
       {x449c599a x43283333 1}
       {x449c599a x43266666 1}
       {x449c3333 x43280000 1}}}
     {tx x447a4000 x449c62be x43301d41}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear678 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449c7333 x433acccd 1}
       {x449c599a x4338cccd 1}
       {x449c3333 x43323333 1}
       {x449c2ccd x432f999a 1}
       {x449c2ccd x43273333 1}
       {x449c399a x4324cccd 1}
       {x449c399a x43260000 1}
       {x449c2666 x4328999a 1}}}
     {tx x447a4000 x449c3e66 x432e0000}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear677 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449ce000 x433b6666 1}
       {x449ccccd x43383333 1}
       {x449ca000 x432e999a 1}
       {x449c999a x432a3333 1}
       {x449c999a x43233333 1}
       {x449ca000 x43216666 1}
       {x449c9333 x43240000 1}
       {x449c6ccd x43276666 1}}}
     {tx x447a4000 x449ca400 x432b8ccd}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear676 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449d399a x433fcccd 1}
       {x449d0000 x4338999a 1}
       {x449cf99a x43346666 1}
       {x449cf99a x432a999a 1}
       {x449cf99a x43256666 1}
       {x449cd333 x43280000 1}}}
     {tx x447a4000 x449cfeef x4330cccd}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear675 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449d7333 x433e6666 1}
       {x449d3333 x43340000 1}
       {x449d3333 x432f999a 1}
       {x449d4666 x4327999a 1}
       {x449d6ccd x43243333 1}
       {x449d5333 x4325999a 1}
       {x449d2000 x4329cccd 1}}}
     {tx x447a4000 x449d4925 x432d5076}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear674 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449dc666 x43420000 1}
       {x449d8666 x43343333 1}
       {x449d8666 x43326666 1}
       {x449d8666 x432d999a 1}
       {x449d8666 x43260000 1}
       {x449d8666 x4324cccd 1}
       {x449d4ccd x43290000 1}
       {x449d4666 x432a0000 1}}}
     {tx x447a4000 x449d7f34 x432e8000}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear673 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449e599a x433f6666 1}
       {x449e2666 x433b6666 1}
       {x449e2000 x43360000 1}
       {x449e2666 x432b999a 1}
       {x449e599a x43243333 1}
       {x449e6666 x43230000 1}
       {x449e599a x43246666 1}
       {x449e3333 x4326cccd 1}
       {x449e0666 x432a0000 1}}}
     {tx x447a4000 x449e3bbc x432d6c18}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear672 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449ea666 x4343cccd 1}
       {x449e6ccd x4340999a 1}
       {x449e6ccd x433f999a 1}
       {x449e6000 x433a0000 1}
       {x449e6000 x43360000 1}
       {x449e6000 x4330999a 1}
       {x449e6000 x432e0000 1}
       {x449e8000 x43260000 1}
       {x449e8000 x4324cccd 1}
       {x449e6000 x43276666 1}}}
     {tx x447a4000 x449e7000 x4333ae15}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear671 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449fa666 x433b999a 1}
       {x449fa000 x4337999a 1}
       {x449fb99a x432f999a 1}
       {x449feccd x43293333 1}
       {x44a00000 x4325999a 1}
       {x449ff333 x43276666 1}
       {x449fc000 x432a0000 1}
       {x449faccd x432b0000 1}}}
     {tx x447a4000 x449fc99a x432dc001}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear670 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449fb99a x43370000 1}
       {x449fc666 x432f999a 1}
       {x449fcccd x432c999a 1}
       {x449fe666 x43270000 1}
       {x449feccd x4325cccd 1}
       {x449fe666 x4327cccd 1}
       {x449fb333 x432c0000 1}}}
     {tx x447a4000 x449fd15e x432bf8b0}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear669 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449f9333 x43346666 1}
       {x449fc000 x432ecccd 1}
       {x449fc666 x432c0000 1}
       {x449fd333 x43290000 1}
       {x449fe000 x43273333 1}
       {x449fe666 x43260000 1}
       {x449fd333 x43276666 1}
       {x449fc000 x4328999a 1}}}
     {tx x447a4000 x449fc8cc x432aaccd}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear668 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449f8ccd x4339cccd 1}
       {x449f999a x4337999a 1}
       {x449fb333 x43316666 1}
       {x449fb99a x432b6666 1}
       {x449fb99a x4327cccd 1}
       {x449fb99a x4326999a 1}
       {x449fa666 x4329cccd 1}
       {x449f8ccd x432f0000 1}
       {x449f8000 x43300000 1}}}
     {tx x447a4000 x449fa2d9 x432ed27e}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear667 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449f9333 x433d0000 1}
       {x449f8000 x4338cccd 1}
       {x449f8000 x43356666 1}
       {x449f8000 x43300000 1}
       {x449f8000 x432a999a 1}
       {x449f8ccd x4329999a 1}
       {x449f8000 x432b0000 1}
       {x449f6666 x432f3333 1}}}
     {tx x447a4000 x449f80cd x43313332}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear666 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449f8000 x4343cccd 1}
       {x449f8000 x43450000 1}
       {x449f8000 x43433333 1}
       {x449f6ccd x43396666 1}
       {x449f6666 x43326666 1}
       {x449f6666 x432a6666 1}
       {x449f7333 x4327cccd 1}
       {x449f799a x4326999a 1}
       {x449f6666 x43296666 1}
       {x449f599a x432a999a 1}}}
     {tx x447a4000 x449f70a3 x4333a8f6}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear665 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449f8000 x434ccccd 1}
       {x449f6ccd x434b6666 1}
       {x449f2ccd x43476666 1}
       {x449f0ccd x43433333 1}
       {x449ef333 x433e0000 1}
       {x449ee000 x43360000 1}
       {x449eeccd x43320000 1}
       {x449f0666 x432a0000 1}
       {x449f0ccd x43273333 1}
       {x449f0ccd x4323999a 1}
       {x449ef333 x4326999a 1}
       {x449ee000 x43286666 1}}}
     {tx x447a4000 x449f1223 x43366221}
     {a ro 0 go 0 bo 0 ao 0 bs x41e1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear664 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a0799a x433de666 1}
       {x44a08ccd x43400000 1}
       {x44a09333 x433d4ccd 1}
       {x44a09333 x433b6666 1}
       {x44a09333 x43368000 1}
       {x44a09333 x4334b333 1}
       {x44a09666 x4331b333 1}
       {x44a09ccd x4330b333 1}
       {x44a0a99a x43326666 1}
       {x44a0a99a x43374ccd 1}
       {x44a0a99a x433a8000 1}
       {x44a0a99a x433d6666 1}
       {x44a0b333 x433f0000 1}
       {x44a0accd x433c8000 1}
       {x44a0a333 x4338b333 1}
       {x44a09666 x4335b333 1}
       {x44a08ccd x43336666 1}
       {x44a0999a x4331e666 1}
       {x44a0a666 x4334199a 1}
       {x44a0accd x4335e666 1}
       {x44a0c99a x433bb333 1}
       {x44a0d666 x433e8000 1}
       {x44a0e000 x43410000 1}
       {x44a0c99a x433de666 1}
       {x44a0b333 x433b4ccd 1}
       {x44a09666 x4338999a 1}
       {x44a07666 x43356666 1}
       {x44a08666 x43378000 1}
       {x44a09333 x43396666 1}
       {x44a0a99a x433c999a 1}
       {x44a0c000 x43420000 1}
       {x44a0accd x4340999a 1}
       {x44a09666 x433e3333 1}
       {x44a0799a x433bb333 1}
       {x44a06000 x4338199a 1}
       {x44a0699a x4339999a 1}
       {x44a07666 x433b3333 1}
       {x44a08666 x433de666 1}
       {x44a0a666 x43424ccd 1}
       {x44a0b333 x4343999a 1}
       {x44a0a99a x4341cccd 1}
       {x44a09333 x433ee666 1}
       {x44a08000 x433c6666 1}
       {x44a0699a x433a0000 1}
       {x44a06000 x4337b333 1}
       {x44a07333 x433d4ccd 1}
       {x44a08666 x4341199a 1}
       {x44a08000 x43400000 1}
       {x44a07333 x433e0000 1}
       {x44a0499a x43396666 1}
       {x44a03666 x43373333 1}
       {x44a05000 x4339999a 1}
       {x44a05666 x433b4ccd 1}
       {x44a06000 x433e0000 1}
       {x44a07333 x4341199a 1}
       {x44a07666 x433f199a 1}
       {x44a07666 x433a4ccd 1}
       {x44a07000 x4338999a 1}
       {x44a06333 x43350000 1}
       {x44a04666 x4330cccd 1}
       {x44a0499a x432fb333 1}}}
     {tx x447a4000 x44a08c2e x433a8c29}
     {a ro 0 go 0 bo 0 ao 0 bs x41433333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear663 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a0dccd x433f0000 1}
       {x44a0cccd x433ae666 1}
       {x44a0c99a x43393333 1}
       {x44a0c666 x43364ccd 1}
       {x44a0b99a x4331b333 1}
       {x44a0b99a x432eb333 1}
       {x44a0bccd x432d0000 1}
       {x44a0b99a x432e3333 1}
       {x44a09666 x4332e666 1}
       {x44a08000 x4335b333 1}}}
     {tx x447a4000 x44a0b8f6 x43348f5b}
     {a ro 0 go 0 bo 0 ao 0 bs x41433333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear662 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a07333 x43426666 1}
       {x44a06666 x433c6666 1}
       {x44a06333 x43394ccd 1}
       {x44a05000 x4332cccd 1}
       {x44a0499a x43310000 1}
       {x44a05333 x432f999a 1}
       {x44a05333 x43313333 1}}}
     {tx x447a4000 x44a05af9 x433662be}
     {a ro 0 go 0 bo 0 ao 0 bs x41433333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear661 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a21000 x4340999a 1}
       {x44a2099a x433f199a 1}
       {x44a1f333 x433c0000 1}
       {x44a1d333 x43384ccd 1}
       {x44a1c000 x4335999a 1}
       {x44a1a99a x43338000 1}
       {x44a16ccd x4333e666 1}}}
     {tx x447a4000 x44a1d0ea x43394925}
     {a ro 0 go 0 bo 0 ao 0 bs x41433333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear660 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a1c99a x4340999a 1}
       {x44a1fccd x4338999a 1}
       {x44a1fccd x4334199a 1}
       {x44a1f99a x43310000 1}
       {x44a1f666 x43330000 1}
       {x44a1eccd x4335199a 1}
       {x44a1e666 x43380000 1}}}
     {tx x447a4000 x44a1eea1 x4336a0ea}
     {a ro 0 go 0 bo 0 ao 0 bs x41433333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear659 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a19333 x4341cccd 1}
       {x44a19000 x433e199a 1}
       {x44a19000 x433b8000 1}
       {x44a19666 x43353333 1}
       {x44a1c333 x43324ccd 1}
       {x44a1c666 x43338000 1}
       {x44a1c000 x4335e666 1}}}
     {tx x447a4000 x44a1a750 x43389d42}
     {a ro 0 go 0 bo 0 ao 0 bs x41433333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear658 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a10ccd x433f999a 1}
       {x44a0f99a x433a8000 1}
       {x44a0f99a x4336cccd 1}
       {x44a10333 x43313333 1}
       {x44a10ccd x43300000 1}
       {x44a12000 x432ee666 1}
       {x44a12ccd x43304ccd 1}
       {x44a1399a x43320000 1}}}
     {tx x447a4000 x44a112cd x4334699a}
     {a ro 0 go 0 bo 0 ao 0 bs x41433333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear657 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a0b333 x433e0000 1}
       {x44a0b333 x433be666 1}
       {x44a0b99a x4339b333 1}
       {x44a0cccd x4334b333 1}
       {x44a0dccd x432f999a 1}
       {x44a0e99a x432e999a 1}
       {x44a0d666 x4330e666 1}}}
     {tx x447a4000 x44a0ca83 x4335a0ea}
     {a ro 0 go 0 bo 0 ao 0 bs x41433333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear656 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a08ccd x433e3333 1}
       {x44a08ccd x433be666 1}
       {x44a0899a x43378000 1}
       {x44a08666 x4335199a 1}
       {x44a08333 x43303333 1}
       {x44a08333 x432eb333 1}
       {x44a08ccd x432db333 1}
       {x44a08ccd x432f3333 1}}}
     {tx x447a4000 x44a08934 x43344fff}
     {a ro 0 go 0 bo 0 ao 0 bs x41433333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear655 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a07000 x4341199a 1}
       {x44a05666 x433e199a 1}
       {x44a04333 x433ae666 1}
       {x44a03333 x4333999a 1}
       {x44a03333 x4330b333 1}
       {x44a03ccd x432db333 1}
       {x44a04333 x432c8000 1}}}
     {tx x447a4000 x44a046db x4335cccd}
     {a ro 0 go 0 bo 0 ao 0 bs x41433333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear654 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a0599a x43440000 1}
       {x44a05333 x43423333 1}
       {x44a04666 x4340cccd 1}
       {x44a04333 x433ccccd 1}
       {x44a05000 x4336199a 1}
       {x44a07000 x432f3333 1}
       {x44a07000 x432d8000 1}
       {x44a07000 x432c199a 1}
       {x44a05666 x432cb333 1}}}
     {tx x447a4000 x44a05a4f x43370b60}
     {a ro 0 go 0 bo 0 ao 0 bs x41433333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear653 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a13333 x43486666 1}
       {x44a11000 x43470000 1}
       {x44a0f666 x4343e666 1}
       {x44a0f000 x433f999a 1}
       {x44a0f000 x43388000 1}
       {x44a0d99a x43306666 1}
       {x44a0d666 x432eb333 1}
       {x44a0d666 x432d999a 1}
       {x44a0d666 x432eb333 1}}}
     {tx x447a4000 x44a0f0b6 x4339a4fa}
     {a ro 0 go 0 bo 0 ao 0 bs x41b33333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear652 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a17333 x43493333 1}
       {x44a16ccd x43468000 1}
       {x44a16ccd x4343e666 1}
       {x44a17333 x433bb333 1}
       {x44a1499a x4333b333 1}
       {x44a14000 x432e199a 1}
       {x44a15666 x432cb333 1}
       {x44a13666 x432f999a 1}}}
     {tx x447a4000 x44a15acd x4339accc}
     {a ro 0 go 0 bo 0 ao 0 bs x41b33333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear651 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a1c666 x4346999a 1}
       {x44a1c666 x4347b333 1}
       {x44a1c666 x4348b333 1}
       {x44a1a000 x43433333 1}
       {x44a1899a x4339e666 1}
       {x44a17ccd x43373333 1}
       {x44a16666 x4332199a 1}
       {x44a16ccd x432c8000 1}
       {x44a17000 x432e3333 1}}}
     {tx x447a4000 x44a194fa x433b9110}
     {a ro 0 go 0 bo 0 ao 0 bs x41b33333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear650 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a23ccd x4345b333 1}
       {x44a25000 x4343199a 1}
       {x44a2599a x433bb333 1}
       {x44a24ccd x4337999a 1}
       {x44a22000 x43326666 1}
       {x44a2099a x432c4ccd 1}
       {x44a20ccd x432d999a 1}
       {x44a1fccd x4330b333 1}}}
     {tx x447a4000 x44a22cce x43372333}
     {a ro 0 go 0 bo 0 ao 0 bs x41b33333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear649 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a23ccd x4347b333 1}
       {x44a23ccd x4346999a 1}
       {x44a2399a x43446666 1}
       {x44a23666 x433c8000 1}
       {x44a20666 x4333b333 1}
       {x44a1e666 x432dcccd 1}
       {x44a1e666 x432ab333 1}
       {x44a1f333 x432e6666 1}}}
     {tx x447a4000 x44a21600 x43393999}
     {a ro 0 go 0 bo 0 ao 0 bs x41b33333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear648 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a2b000 x434a4ccd 1}
       {x44a2accd x43474ccd 1}
       {x44a2b000 x43420000 1}
       {x44a2b000 x433ccccd 1}
       {x44a2999a x4335e666 1}
       {x44a28ccd x43304ccd 1}
       {x44a28333 x432d3333 1}
       {x44a27666 x43316666 1}}}
     {tx x447a4000 x44a29b9a x433aa666}
     {a ro 0 go 0 bo 0 ao 0 bs x41b33333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear647 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a2b99a x43514ccd 1}
       {x44a2b000 x434fb333 1}
       {x44a2b000 x434cb333 1}
       {x44a2c99a x4346e666 1}
       {x44a2dccd x433f3333 1}
       {x44a2dccd x43370000 1}
       {x44a2e99a x4331cccd 1}
       {x44a30ccd x432f4ccd 1}
       {x44a30666 x43316666 1}}}
     {tx x447a4000 x44a2d82e x433fb334}
     {a ro 0 go 0 bo 0 ao 0 bs x41b33333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear646 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a33ccd x4348199a 1}
       {x44a34000 x4346999a 1}
       {x44a35666 x43443333 1}
       {x44a37000 x433f0000 1}
       {x44a37000 x433b6666 1}
       {x44a3799a x433a4ccd 1}
       {x44a37ccd x433b6666 1}
       {x44a38ccd x433fe666 1}
       {x44a38ccd x4343199a 1}
       {x44a36ccd x433eb333 1}
       {x44a36ccd x4339cccd 1}
       {x44a36ccd x4338b333 1}
       {x44a37666 x4337b333 1}
       {x44a39ccd x433b6666 1}
       {x44a3999a x433e8000 1}
       {x44a39333 x433d0000 1}
       {x44a38ccd x43386666 1}
       {x44a39000 x43330000 1}
       {x44a3a666 x4330999a 1}}}
     {tx x447a4000 x44a379f1 x433cb9ef}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear645 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a3299a x4349999a 1}
       {x44a3299a x4346999a 1}
       {x44a3299a x43440000 1}
       {x44a33ccd x433e6666 1}
       {x44a34ccd x433b0000 1}
       {x44a35333 x4339999a 1}}}
     {tx x447a4000 x44a3399a x43413333}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear644 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a2f99a x4355b333 1}
       {x44a30000 x4354199a 1}
       {x44a31000 x43508000 1}
       {x44a32333 x434a8000 1}
       {x44a32333 x43428000 1}
       {x44a31666 x433d3333 1}
       {x44a31000 x43383333 1}
       {x44a31000 x43373333 1}}}
     {tx x447a4000 x44a310cd x43467ccc}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear643 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a41666 x435a999a 1}
       {x44a41666 x435b999a 1}
       {x44a4099a x435a6666 1}
       {x44a40666 x4358cccd 1}
       {x44a40333 x43566666 1}
       {x44a3f99a x4350cccd 1}
       {x44a3d99a x43486666 1}
       {x44a3bccd x433f999a 1}
       {x44a3cccd x43364ccd 1}
       {x44a3fccd x43304ccd 1}
       {x44a41000 x432d999a 1}
       {x44a42ccd x432ab333 1}
       {x44a4099a x432c199a 1}}}
     {tx x447a4000 x44a3fd8b x43453334}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear642 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a3b333 x43590000 1}
       {x44a3bccd x4357cccd 1}
       {x44a3c333 x43563333 1}
       {x44a3d000 x4353999a 1}
       {x44a3d000 x43510000 1}
       {x44a3b333 x434b4ccd 1}
       {x44a39ccd x43480000 1}
       {x44a3b666 x43490000 1}
       {x44a3c333 x434b999a 1}}}
     {tx x447a4000 x44a3bc17 x4350638e}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear641 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a44666 x4359cccd 1}
       {x44a4299a x4357cccd 1}
       {x44a41666 x4355b333 1}
       {x44a40333 x4351999a 1}
       {x44a3eccd x434bb333 1}
       {x44a3c99a x43416666 1}
       {x44a3c000 x4338e666 1}
       {x44a3f99a x4330b333 1}
       {x44a42666 x432e3333 1}
       {x44a45ccd x432bcccd 1}}}
     {tx x447a4000 x44a40c7b x434428f6}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear640 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a40666 x4356b333 1}
       {x44a3e666 x4354b333 1}
       {x44a3d666 x434d3333 1}
       {x44a3d000 x434ab333 1}
       {x44a3b000 x43410000 1}
       {x44a3a666 x433bcccd 1}
       {x44a3bccd x4335999a 1}
       {x44a3e666 x4331b333 1}
       {x44a41666 x432e6666 1}
       {x44a4399a x432b8000 1}}}
     {tx x447a4000 x44a3e2e2 x43402148}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear639 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a4099a x43556666 1}
       {x44a3eccd x43560000 1}
       {x44a3e666 x43550000 1}
       {x44a3e666 x43530000 1}
       {x44a3e666 x434ce666 1}
       {x44a3cccd x4344b333 1}
       {x44a3b666 x433bcccd 1}
       {x44a3b666 x4335cccd 1}
       {x44a3c333 x4332e666 1}
       {x44a3d000 x43316666 1}
       {x44a3eccd x432fe666 1}}}
     {tx x447a4000 x44a3da79 x4343e413}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear638 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a4299a x4358999a 1}
       {x44a4299a x4357999a 1}
       {x44a41ccd x43543333 1}
       {x44a41ccd x4351b333 1}
       {x44a41000 x434a199a 1}
       {x44a3e666 x43410000 1}
       {x44a3c99a x433a0000 1}
       {x44a3c99a x43363333 1}
       {x44a3eccd x43328000 1}}}
     {tx x447a4000 x44a4005b x43478b61}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear637 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a47000 x43580000 1}
       {x44a4399a x4353199a 1}
       {x44a42ccd x434fcccd 1}
       {x44a42000 x434c6666 1}
       {x44a4099a x43478000 1}
       {x44a3eccd x433ce666 1}
       {x44a3e666 x43368000 1}
       {x44a40666 x43334ccd 1}
       {x44a41ccd x4334b333 1}}}
     {tx x447a4000 x44a41b61 x4344b05c}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear636 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a4799a x4355999a 1}
       {x44a47ccd x4354999a 1}
       {x44a4799a x4351b333 1}
       {x44a47333 x434a999a 1}
       {x44a46333 x4343199a 1}
       {x44a45666 x433b4ccd 1}
       {x44a45666 x43383333 1}
       {x44a48000 x4332cccd 1}
       {x44a49333 x43314ccd 1}}}
     {tx x447a4000 x44a4727d x4343b05c}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear635 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a4d333 x43556666 1}
       {x44a4d99a x43566666 1}
       {x44a4bccd x4353999a 1}
       {x44a48000 x434b6666 1}
       {x44a4699a x4348cccd 1}
       {x44a45000 x43423333 1}
       {x44a45000 x433de666 1}
       {x44a45ccd x43393333 1}
       {x44a47000 x4334cccd 1}
       {x44a45666 x43364ccd 1}}}
     {tx x447a4000 x44a4823e x4345999a}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear634 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a4f666 x435a8000 1}
       {x44a4e000 x43580000 1}
       {x44a4d99a x4354199a 1}
       {x44a4d99a x434dcccd 1}
       {x44a4accd x43463333 1}
       {x44a49333 x433e0000 1}
       {x44a49666 x433c3333 1}
       {x44a4b666 x4337cccd 1}
       {x44a4c333 x4336999a 1}
       {x44a4b666 x433a0000 1}
       {x44a4a99a x433b4ccd 1}
       {x44a4999a x433c999a 1}}}
     {tx x447a4000 x44a4bc44 x43446ccd}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear633 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a58666 x434de666 1}
       {x44a58ccd x434cb333 1}
       {x44a5999a x43474ccd 1}
       {x44a5a333 x43423333 1}
       {x44a58000 x4339e666 1}
       {x44a55666 x43344ccd 1}
       {x44a55333 x4332999a 1}
       {x44a54666 x4333999a 1}}}
     {tx x447a4000 x44a57800 x433f1000}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear632 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a50000 x434c199a 1}
       {x44a51000 x434b3333 1}
       {x44a52000 x43426666 1}
       {x44a51666 x433e4ccd 1}
       {x44a4f666 x4338e666 1}
       {x44a4dccd x4332e666 1}
       {x44a4d99a x43314ccd 1}}}
     {tx x447a4000 x44a4fe2d x433e715f}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear631 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a4e000 x43508000 1}
       {x44a4e666 x434f199a 1}
       {x44a4e666 x434d8000 1}
       {x44a4e000 x4341cccd 1}
       {x44a4b99a x43398000 1}
       {x44a4a333 x43346666 1}
       {x44a4a333 x4332199a 1}
       {x44a4a333 x4330b333 1}
       {x44a4999a x4331e666 1}}}
     {tx x447a4000 x44a4c111 x433e638d}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear630 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a4a000 x434f8000 1}
       {x44a4a000 x434d8000 1}
       {x44a49666 x43466666 1}
       {x44a48ccd x43428000 1}
       {x44a47ccd x433eb333 1}
       {x44a47000 x4337999a 1}
       {x44a47000 x43364ccd 1}
       {x44a4799a x43348000 1}
       {x44a46666 x4335e666 1}}}
     {tx x447a4000 x44a4838e x433fa7d4}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear629 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a4bccd x4354199a 1}
       {x44a4b000 x4355999a 1}
       {x44a4a99a x43544ccd 1}
       {x44a4899a x434e999a 1}
       {x44a47ccd x4344cccd 1}
       {x44a46666 x433b6666 1}
       {x44a47333 x43348000 1}
       {x44a48000 x4332cccd 1}
       {x44a49333 x43316666 1}
       {x44a4899a x4332999a 1}
       {x44a48000 x43340000 1}}}
     {tx x447a4000 x44a48d61 x4341199a}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear628 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a4dccd x43594ccd 1}
       {x44a4d000 x4355999a 1}
       {x44a4d99a x4350199a 1}
       {x44a4f000 x43488000 1}
       {x44a4e99a x433f199a 1}
       {x44a4d99a x4337cccd 1}
       {x44a4d99a x43350000 1}
       {x44a4e666 x4331199a 1}
       {x44a4dccd x43326666 1}
       {x44a4bccd x4334b333 1}}}
     {tx x447a4000 x44a4db86 x434128f6}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear627 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a4799a x4360199a 1}
       {x44a44ccd x435cb333 1}
       {x44a4399a x4359e666 1}
       {x44a42000 x4351999a 1}
       {x44a4099a x43490000 1}
       {x44a3f99a x43403333 1}
       {x44a3f333 x433a0000 1}
       {x44a40666 x43348000 1}
       {x44a41666 x43328000 1}
       {x44a41ccd x43318000 1}}}
     {tx x447a4000 x44a4219a x4346cccc}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear626 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a4c666 x43623333 1}
       {x44a4accd x43614ccd 1}
       {x44a49666 x435b0000 1}
       {x44a49333 x43580000 1}
       {x44a48000 x43510000 1}
       {x44a47ccd x434d199a 1}
       {x44a46666 x4342e666 1}
       {x44a46333 x433d0000 1}
       {x44a4699a x4335cccd 1}
       {x44a47ccd x43334ccd 1}
       {x44a49333 x43316666 1}
       {x44a4b000 x432f199a 1}}}
     {tx x447a4000 x44a48bbb x4347d778}
     {a ro 0 go 0 bo 0 ao 0 bs x41833333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear625 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a50ccd x43594ccd 1}
       {x44a4f333 x4357199a 1}
       {x44a4e000 x43536666 1}
       {x44a4e666 x434cb333 1}
       {x44a4f000 x4342cccd 1}
       {x44a4c666 x43386666 1}
       {x44a4d99a x43303333 1}
       {x44a4f333 x432d999a 1}
       {x44a51666 x43298000 1}}}
     {tx x447a4000 x44a4ee39 x43421c72}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear624 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a5399a x435d199a 1}
       {x44a52666 x435c0000 1}
       {x44a50ccd x4357999a 1}
       {x44a50333 x43548000 1}
       {x44a4f666 x434e6666 1}
       {x44a4d99a x43468000 1}
       {x44a4d333 x433e4ccd 1}
       {x44a4dccd x43370000 1}
       {x44a4e000 x4332999a 1}
       {x44a4f333 x432fe666 1}
       {x44a4e99a x43314ccd 1}}}
     {tx x447a4000 x44a4f86f x43461bed}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear623 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a56ccd x4355999a 1}
       {x44a5699a x43506666 1}
       {x44a5699a x4349cccd 1}
       {x44a57333 x433fe666 1}
       {x44a55333 x43373333 1}
       {x44a53ccd x4333999a 1}}}
     {tx x447a4000 x44a56089 x43446aab}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear622 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a6c333 x435a6666 1}
       {x44a6c333 x43594ccd 1}
       {x44a6c666 x4357999a 1}
       {x44a6dccd x43514ccd 1}
       {x44a6e333 x434e999a 1}
       {x44a6b99a x4343e666 1}
       {x44a69333 x4339cccd 1}
       {x44a6c666 x43344ccd 1}
       {x44a6e333 x43350000 1}
       {x44a6b666 x43388000 1}}}
     {tx x447a4000 x44a6c5c2 x43477853}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear621 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a66000 x4358cccd 1}
       {x44a65666 x4350999a 1}
       {x44a65000 x434b6666 1}
       {x44a65666 x433ecccd 1}
       {x44a65666 x433a0000 1}
       {x44a66666 x43334ccd 1}
       {x44a67ccd x43323333 1}}}
     {tx x447a4000 x44a65ea1 x4342ba83}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear620 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a5eccd x4354e666 1}
       {x44a5eccd x4353cccd 1}
       {x44a60666 x434ecccd 1}
       {x44a63000 x434ae666 1}
       {x44a6799a x433f999a 1}
       {x44a69333 x4335e666 1}
       {x44a6d666 x43316666 1}
       {x44a6fccd x43326666 1}
       {x44a6e99a x4335199a 1}
       {x44a6d666 x4336199a 1}}}
     {tx x447a4000 x44a67800 x4340b0a4}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear619 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a60666 x43524ccd 1}
       {x44a5f000 x434d999a 1}
       {x44a5e333 x43466666 1}
       {x44a5d99a x433f999a 1}
       {x44a5d99a x433b199a 1}
       {x44a60ccd x43340000 1}
       {x44a62666 x4332999a 1}
       {x44a64333 x4331e666 1}
       {x44a66666 x4332e666 1}}}
     {tx x447a4000 x44a60bbb x433dd27d}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear618 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a59ccd x43583333 1}
       {x44a58333 x4351e666 1}
       {x44a58000 x434e0000 1}
       {x44a57333 x4341999a 1}
       {x44a5699a x4338cccd 1}
       {x44a57666 x4335cccd 1}
       {x44a58ccd x4333b333 1}}}
     {tx x447a4000 x44a58001 x4343ffff}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear617 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a5a99a x435ee666 1}
       {x44a58666 x435c8000 1}
       {x44a58333 x435b8000 1}
       {x44a5799a x43578000 1}
       {x44a57333 x434f0000 1}
       {x44a5399a x43404ccd 1}
       {x44a53000 x433b0000 1}
       {x44a54333 x43388000 1}
       {x44a57666 x43358000 1}
       {x44a56666 x43383333 1}}}
     {tx x447a4000 x44a56a90 x43497d71}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear616 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a57333 x4361199a 1}
       {x44a5799a x435e8000 1}
       {x44a58666 x435be666 1}
       {x44a58666 x43536666 1}
       {x44a57333 x43498000 1}
       {x44a55333 x433e4ccd 1}
       {x44a56000 x43394ccd 1}
       {x44a57333 x43380000 1}
       {x44a58333 x43394ccd 1}}}
     {tx x447a4000 x44a57444 x434acfa6}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear615 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a63333 x435e199a 1}
       {x44a6299a x4359e666 1}
       {x44a61ccd x43543333 1}
       {x44a60ccd x4349199a 1}
       {x44a5f666 x433e0000 1}
       {x44a5f000 x4339199a 1}
       {x44a60ccd x43340000 1}
       {x44a61333 x4332cccd 1}}}
     {tx x447a4000 x44a61199 x43466667}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear614 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a65000 x435cb333 1}
       {x44a64333 x4354b333 1}
       {x44a64000 x43508000 1}
       {x44a63ccd x434a999a 1}
       {x44a63666 x4346199a 1}
       {x44a63333 x433e0000 1}
       {x44a6499a x4339e666 1}
       {x44a66000 x4335cccd 1}
       {x44a63666 x4338b333 1}}}
     {tx x447a4000 x44a642d9 x43465555}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear613 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a71333 x43586666 1}
       {x44a70000 x4356b333 1}
       {x44a6f333 x4353199a 1}
       {x44a6cccd x43463333 1}
       {x44a6b666 x43414ccd 1}
       {x44a6a000 x433d4ccd 1}
       {x44a69333 x43386666 1}
       {x44a69333 x4339999a 1}}}
     {tx x447a4000 x44a6c9ff x43472000}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear612 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a74666 x4353999a 1}
       {x44a74666 x43528000 1}
       {x44a74ccd x43514ccd 1}
       {x44a77666 x43498000 1}
       {x44a7899a x43426666 1}
       {x44a7899a x433d4ccd 1}
       {x44a77666 x4339cccd 1}}}
     {tx x447a4000 x44a7683a x434857c7}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear611 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a78333 x4353199a 1}
       {x44a7899a x4354199a 1}
       {x44a7a000 x4350999a 1}
       {x44a7b000 x43493333 1}
       {x44a7b333 x43468000 1}
       {x44a7bccd x43423333 1}
       {x44a7d000 x433e6666 1}
       {x44a7d333 x433ce666 1}
       {x44a7accd x433d999a 1}}}
     {tx x447a4000 x44a7adde x43476666}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear610 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a7099a x43554ccd 1}
       {x44a72333 x43518000 1}
       {x44a73666 x434f6666 1}
       {x44a74666 x434d3333 1}
       {x44a76000 x43484ccd 1}
       {x44a7899a x43433333 1}
       {x44a79666 x433e6666 1}
       {x44a7999a x433c3333 1}
       {x44a7899a x433eb333 1}}}
     {tx x447a4000 x44a75ddd x434805af}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear609 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a73ccd x435ee666 1}
       {x44a74333 x435c8000 1}
       {x44a73ccd x435b8000 1}
       {x44a73666 x43586666 1}
       {x44a72000 x4352b333 1}
       {x44a7099a x434d999a 1}
       {x44a6f99a x4347e666 1}
       {x44a6e99a x43434ccd 1}
       {x44a6e333 x433e199a 1}
       {x44a6e333 x433c8000 1}
       {x44a6e333 x433b0000 1}
       {x44a6e333 x43393333 1}
       {x44a6d666 x433ce666 1}}}
     {tx x447a4000 x44a707a0 x434a589c}
     {a ro 0 go 0 bo 0 ao 0 bs x41aa6666 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear608 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a6accd x435f0000 1}
       {x44a6c666 x435d0000 1}
       {x44a6f333 x43578000 1}
       {x44a7099a x4353e666 1}
       {x44a72000 x434a3333 1}
       {x44a7399a x43416666 1}
       {x44a77000 x433b0000 1}
       {x44a77333 x4338cccd 1}
       {x44a7599a x4336999a 1}
       {x44a7199a x4337b333 1}
       {x44a6f000 x4339cccd 1}}}
     {tx x447a4000 x44a718b9 x43472c37}
     {a ro 0 go 0 bo 0 ao 0 bs x42093333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear607 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a77000 x43624ccd 1}
       {x44a73666 x4360cccd 1}
       {x44a72333 x435f4ccd 1}
       {x44a7099a x4359b333 1}
       {x44a6f99a x4352199a 1}
       {x44a6e666 x43480000 1}
       {x44a6e666 x433f3333 1}
       {x44a6fccd x43383333 1}
       {x44a72000 x4334b333 1}
       {x44a6f333 x4335cccd 1}}}
     {tx x447a4000 x44a710f6 x434c028f}
     {a ro 0 go 0 bo 0 ao 0 bs x42093333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear606 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aae000 x434ce666 1}
       {x44aafccd x4345199a 1}
       {x44ab0333 x43428000 1}
       {x44ab0666 x433f0000 1}}}
     {tx x447a4000 x44aaf99a x4344e000}
     {a ro 0 go 0 bo 0 ao 0 bs x42093333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear605 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aa999a x43528000 1}
       {x44aa999a x43510000 1}
       {x44aabccd x43488000 1}
       {x44aad666 x43438000 1}
       {x44aaf99a x433d4ccd 1}
       {x44ab0333 x433bb333 1}
       {x44aaeccd x433d4ccd 1}
       {x44aab333 x4340e666 1}}}
     {tx x447a4000 x44aacc66 x4344d667}
     {a ro 0 go 0 bo 0 ao 0 bs x42093333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear604 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aa6000 x43580000 1}
       {x44aa5ccd x43568000 1}
       {x44aa699a x434f6666 1}
       {x44aa8000 x434a3333 1}
       {x44aa8666 x43413333 1}
       {x44aa8000 x433ccccd 1}
       {x44aa8ccd x433e199a 1}}}
     {tx x447a4000 x44aa75f2 x4349be2d}
     {a ro 0 go 0 bo 0 ao 0 bs x42093333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear603 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aa499a x4354999a 1}
       {x44aa399a x434fe666 1}
       {x44aa3ccd x434b6666 1}
       {x44aa4666 x4342e666 1}
       {x44aa3ccd x433c199a 1}
       {x44aa3ccd x433de666 1}}}
     {tx x447a4000 x44aa4000 x43477778}
     {a ro 0 go 0 bo 0 ao 0 bs x42093333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear602 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aa2000 x43586666 1}
       {x44a9f666 x4351b333 1}
       {x44a9f666 x434c0000 1}
       {x44aa0333 x4343cccd 1}
       {x44aa0ccd x433a0000 1}
       {x44aa399a x4336999a 1}
       {x44aa3000 x4337999a 1}}}
     {tx x447a4000 x44aa1333 x4344df16}
     {a ro 0 go 0 bo 0 ao 0 bs x42093333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear601 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a9bccd x435d6666 1}
       {x44a9a000 x43583333 1}
       {x44a9a000 x4353e666 1}
       {x44a9a333 x4347e666 1}
       {x44a98ccd x433e4ccd 1}
       {x44a98ccd x4337cccd 1}
       {x44a98666 x433a4ccd 1}}}
     {tx x447a4000 x44a99b6e x43496668}
     {a ro 0 go 0 bo 0 ao 0 bs x42093333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear600 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a94000 x435eb333 1}
       {x44a92000 x435a3333 1}
       {x44a92000 x43550000 1}
       {x44a92ccd x43498000 1}
       {x44a93333 x43403333 1}
       {x44a92666 x433a6666 1}
       {x44a92666 x4338cccd 1}
       {x44a91333 x433a0000 1}}}
     {tx x447a4000 x44a92800 x4348999a}
     {a ro 0 go 0 bo 0 ao 0 bs x42093333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear599 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a83000 x435e199a 1}
       {x44a8299a x435c0000 1}
       {x44a82666 x4355b333 1}
       {x44a81ccd x4350cccd 1}
       {x44a7f99a x4347b333 1}
       {x44a7e99a x433f6666 1}
       {x44a7f333 x433b4ccd 1}
       {x44a80666 x4339cccd 1}}}
     {tx x447a4000 x44a80f33 x434b999a}
     {a ro 0 go 0 bo 0 ao 0 bs x42093333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear598 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a9699a x435f0000 1}
       {x44a92ccd x435d0000 1}
       {x44a8e333 x43578000 1}
       {x44a8d666 x43548000 1}
       {x44a8b666 x434ce666 1}
       {x44a88333 x43438000 1}
       {x44a87ccd x433d3333 1}
       {x44a88ccd x433acccd 1}
       {x44a8699a x433eb333 1}}}
     {tx x447a4000 x44a8c6c2 x434c582d}
     {a ro 0 go 0 bo 0 ao 0 bs x42093333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear597 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a86ccd x435b4ccd 1}
       {x44a84ccd x43584ccd 1}
       {x44a84666 x4355999a 1}
       {x44a82333 x434d4ccd 1}
       {x44a7e666 x4344999a 1}
       {x44a7dccd x433de666 1}
       {x44a7f666 x43388000 1}
       {x44a80ccd x4336e666 1}
       {x44a81ccd x4335e666 1}}}
     {tx x447a4000 x44a81d28 x4346ec17}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear596 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a87000 x435bb333 1}
       {x44a8499a x4355999a 1}
       {x44a84ccd x4351b333 1}
       {x44a86000 x4347e666 1}
       {x44a8599a x43414ccd 1}
       {x44a87666 x433c999a 1}
       {x44a87ccd x433b8000 1}}}
     {tx x447a4000 x44a862bf x4349c1d5}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear595 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a8eccd x435b999a 1}
       {x44a8cccd x43574ccd 1}
       {x44a8c99a x4354e666 1}
       {x44a8c99a x434bcccd 1}
       {x44a8d000 x43410000 1}
       {x44a8e666 x433f0000 1}
       {x44a8f333 x433e0000 1}
       {x44a90666 x433d0000 1}
       {x44a8e666 x433eb333 1}}}
     {tx x447a4000 x44a8e05c x434896c2}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear594 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a9099a x435d199a 1}
       {x44a8d99a x435b4ccd 1}
       {x44a8cccd x43586666 1}
       {x44a8b666 x434cb333 1}
       {x44a8b666 x4343999a 1}
       {x44a8d666 x433de666 1}
       {x44a8e666 x433c8000 1}
       {x44a8e000 x433e8000 1}}}
     {tx x447a4000 x44a8d734 x434b4001}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear593 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a9b000 x435f0000 1}
       {x44a96666 x43598000 1}
       {x44a9599a x43554ccd 1}
       {x44a93666 x434ae666 1}
       {x44a90666 x43403333 1}
       {x44a8f99a x433bb333 1}}}
     {tx x447a4000 x44a94667 x434e1998}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear592 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a9a000 x4359e666 1}
       {x44a9c333 x43508000 1}
       {x44a9c666 x434a999a 1}
       {x44a9a99a x43426666 1}
       {x44a9999a x433d999a 1}
       {x44a9a000 x433bcccd 1}}}
     {tx x447a4000 x44a9accd x43482223}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear591 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aa0333 x435ccccd 1}
       {x44a9e000 x435c6666 1}
       {x44a9b666 x4357199a 1}
       {x44a9accd x4352b333 1}
       {x44a9a333 x4349199a 1}
       {x44a9899a x433e6666 1}
       {x44a98ccd x433b4ccd 1}
       {x44a98ccd x433c6666 1}}}
     {tx x447a4000 x44a9b19b x434c4668}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear590 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aa699a x435ae666 1}
       {x44aa3333 x43574ccd 1}
       {x44aa2000 x4354199a 1}
       {x44aa199a x434a4ccd 1}
       {x44aa3000 x4340e666 1}
       {x44aa3000 x433d3333 1}
       {x44aa1666 x433e6666 1}}}
     {tx x447a4000 x44aa2f8b x434b03a8}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear589 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aabccd x435d199a 1}
       {x44aa9000 x435a999a 1}
       {x44aa8000 x4355999a 1}
       {x44aa8000 x434bcccd 1}
       {x44aa799a x4341b333 1}
       {x44aa8666 x433db333 1}}}
     {tx x447a4000 x44aa8ccd x434ec000}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear588 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aaf666 x4364999a 1}
       {x44aad666 x4362b333 1}
       {x44aac000 x4358999a 1}
       {x44aabccd x4353199a 1}
       {x44aaa99a x43466666 1}
       {x44aaa666 x4341b333 1}
       {x44aab000 x433b4ccd 1}
       {x44aac000 x43393333 1}}}
     {tx x447a4000 x44aac133 x434df333}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear587 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44abe333 x435d0000 1}
       {x44abcccd x4357999a 1}
       {x44abf000 x43526666 1}
       {x44ac2333 x43486666 1}
       {x44ac299a x4341999a 1}
       {x44ac1666 x433de666 1}}}
     {tx x447a4000 x44ac0089 x434d2667}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear586 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ab9ccd x4357cccd 1}
       {x44ab8666 x43548000 1}
       {x44ab8333 x434fb333 1}
       {x44ab799a x43473333 1}
       {x44ab7000 x433f199a 1}
       {x44ab799a x433c999a 1}}}
     {tx x447a4000 x44ab8199 x434a7bbc}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear585 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44abc000 x43594ccd 1}
       {x44abb99a x4356b333 1}
       {x44abc333 x43508000 1}
       {x44abd000 x434bcccd 1}
       {x44abe333 x43456666 1}
       {x44abe666 x43403333 1}
       {x44abdccd x433f199a 1}
       {x44abc000 x433fe666 1}}}
     {tx x447a4000 x44abce67 x434a1ccc}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear584 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ab8333 x4360b333 1}
       {x44ab7ccd x435f6666 1}
       {x44ab7333 x435d199a 1}
       {x44ab899a x4354199a 1}
       {x44ab9666 x434c0000 1}
       {x44ab9666 x4343999a 1}
       {x44aba666 x433e8000 1}
       {x44aba99a x433d3333 1}
       {x44ab9000 x433de666 1}}}
     {tx x447a4000 x44ab8f4b x434d9c71}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear583 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aaf666 x43660000 1}
       {x44ab1000 x4361cccd 1}
       {x44ab1ccd x435eb333 1}
       {x44ab2000 x4359e666 1}
       {x44ab0333 x4350999a 1}
       {x44aae333 x43498000 1}
       {x44aae000 x4348199a 1}
       {x44aad99a x4340b333 1}
       {x44aad666 x433db333 1}
       {x44aad666 x433b4ccd 1}
       {x44aac99a x4337999a 1}}}
     {tx x447a4000 x44aaf0df x434d7209}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear582 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ac4333 x435ab333 1}
       {x44ac3000 x4358b333 1}
       {x44ac3000 x4354e666 1}
       {x44ac5000 x434bcccd 1}
       {x44ac3ccd x4343cccd 1}
       {x44ac0666 x433e6666 1}
       {x44abd99a x433cb333 1}}}
     {tx x447a4000 x44ac26db x434bdb6e}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear581 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aca666 x43603333 1}
       {x44ac799a x435c3333 1}
       {x44ac6ccd x43583333 1}
       {x44ac6ccd x43504ccd 1}
       {x44ac6ccd x4347cccd 1}
       {x44ac499a x43426666 1}}}
     {tx x447a4000 x44ac72ab x43528444}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear580 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aca666 x4362b333 1}
       {x44aca666 x435d3333 1}
       {x44aca666 x4359b333 1}
       {x44ac8000 x434ee666 1}
       {x44ac6000 x4346b333 1}
       {x44ac5666 x43420000 1}
       {x44ac8666 x43426666 1}}}
     {tx x447a4000 x44ac86db x435083a8}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear579 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44acd666 x43644ccd 1}
       {x44acbccd x435de666 1}
       {x44acbccd x435a199a 1}
       {x44acc99a x434d3333 1}
       {x44acc99a x434a4ccd 1}
       {x44acc99a x4345199a 1}
       {x44acd666 x43408000 1}
       {x44ace333 x433e999a 1}
       {x44ace99a x43404ccd 1}}}
     {tx x447a4000 x44accfff x434d5dde}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear578 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ad2ccd x43660000 1}
       {x44ad1333 x4363199a 1}
       {x44ad1333 x435f199a 1}
       {x44ad3333 x4352999a 1}
       {x44ad199a x43473333 1}
       {x44acf666 x433f4ccd 1}
       {x44acf666 x433d999a 1}
       {x44acf99a x433c8000 1}
       {x44ad0000 x433dcccd 1}
       {x44ad0000 x433f0000 1}}}
     {tx x447a4000 x44ad0d71 x434c051f}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear577 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ad4666 x43660000 1}
       {x44ad399a x43638000 1}
       {x44ad499a x435e8000 1}
       {x44ad9666 x43520000 1}
       {x44ad999a x43468000 1}
       {x44ad9000 x433e6666 1}
       {x44ad9000 x433d0000 1}
       {x44ad7666 x433e999a 1}}}
     {tx x447a4000 x44ad7200 x434f5000}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear576 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44adcccd x4363199a 1}
       {x44ada000 x4359b333 1}
       {x44ada000 x4354b333 1}
       {x44adaccd x434a8000 1}
       {x44ada000 x43420000 1}
       {x44ada000 x433f8000 1}
       {x44ad9000 x43418000 1}}}
     {tx x447a4000 x44ada5f1 x434d9249}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear575 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ae399a x4369199a 1}
       {x44ae1666 x4367b333 1}
       {x44adf666 x435fcccd 1}
       {x44adf666 x435a199a 1}
       {x44adf666 x434b4ccd 1}
       {x44add99a x4343999a 1}
       {x44add99a x43420000 1}
       {x44adc666 x4342cccd 1}}}
     {tx x447a4000 x44adf59a x4353cccd}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear574 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ae599a x43684ccd 1}
       {x44ae4ccd x43620000 1}
       {x44ae5333 x435b3333 1}
       {x44ae6000 x434e3333 1}
       {x44ae399a x4345199a 1}
       {x44ae4000 x43430000 1}
       {x44ae6ccd x43454ccd 1}}}
     {tx x447a4000 x44ae524a x43527160}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear573 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ae7333 x436b6666 1}
       {x44ae6ccd x436a3333 1}
       {x44ae6ccd x43653333 1}
       {x44aea333 x4358b333 1}
       {x44aeb666 x434d6666 1}
       {x44aeb666 x4343999a 1}
       {x44aec333 x43414ccd 1}
       {x44aed666 x433f8000 1}
       {x44aec99a x43423333 1}}}
     {tx x447a4000 x44aea38e x43529c72}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear572 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44af4333 x4371e666 1}
       {x44af3ccd x436acccd 1}
       {x44af499a x4365cccd 1}
       {x44af5ccd x4357cccd 1}
       {x44af5ccd x43516666 1}
       {x44af5000 x43473333 1}
       {x44af499a x43430000 1}
       {x44af4333 x43418000 1}
       {x44af3000 x43436666 1}}}
     {tx x447a4000 x44af48e3 x4354c16c}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear571 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b0199a x4368199a 1}
       {x44b01666 x43624ccd 1}
       {x44b02000 x435d4ccd 1}
       {x44b01666 x434c0000 1}
       {x44aff666 x4343cccd 1}
       {x44b00333 x4340b333 1}}}
     {tx x447a4000 x44b01000 x43540888}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear570 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44af0666 x43700000 1}
       {x44af2000 x436d199a 1}
       {x44af3ccd x43698000 1}
       {x44afa000 x435d4ccd 1}
       {x44afc99a x43516666 1}
       {x44afdccd x43468000 1}
       {x44afe99a x43430000 1}
       {x44aff666 x4341cccd 1}
       {x44afe333 x43440000 1}}}
     {tx x447a4000 x44af9a50 x4355d82d}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear569 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44af8666 x43610000 1}
       {x44af7666 x435f8000 1}
       {x44af799a x435b999a 1}
       {x44af9333 x4354199a 1}
       {x44afa000 x434fb333 1}
       {x44afa666 x434eb333 1}
       {x44afb333 x434fb333 1}
       {x44afd000 x43533333 1}
       {x44afe99a x43588000 1}
       {x44afe99a x435c999a 1}
       {x44afe99a x4357999a 1}
       {x44afe99a x43533333 1}
       {x44afe99a x4354e666 1}
       {x44afdccd x43566666 1}
       {x44afd666 x43588000 1}
       {x44afc99a x435eb333 1}
       {x44afd000 x435d8000 1}
       {x44affccd x4356cccd 1}
       {x44b02000 x434d6666 1}
       {x44b02000 x434b8000 1}
       {x44b02000 x4348cccd 1}}}
     {tx x447a4000 x44afcfd9 x4355ce03}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear568 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aee000 x4366999a 1}
       {x44aee666 x43653333 1}
       {x44aeeccd x4361cccd 1}
       {x44af2000 x4359e666 1}
       {x44af3666 x43560000 1}
       {x44af3666 x4354199a 1}
       {x44af499a x434f8000 1}
       {x44af5000 x434d6666 1}
       {x44af5ccd x434bcccd 1}
       {x44af6333 x434a199a 1}
       {x44af5000 x434c6666 1}}}
     {tx x447a4000 x44af2c82 x4355e413}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear567 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aeb666 x436b6666 1}
       {x44aec99a x436c4ccd 1}
       {x44aef99a x436b3333 1}
       {x44af0ccd x4366cccd 1}
       {x44af0ccd x4362e666 1}
       {x44af0000 x435b999a 1}
       {x44aeeccd x43548000 1}
       {x44aee666 x434d0000 1}
       {x44aeeccd x43486666 1}}}
     {tx x447a4000 x44aeeccd x435e749f}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear566 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b0b666 x43648000 1}
       {x44b0c666 x435f199a 1}
       {x44b0f333 x43563333 1}
       {x44b11666 x434e4ccd 1}
       {x44b13666 x434bb333 1}
       {x44b1499a x434ccccd 1}}}
     {tx x447a4000 x44b10111 x43556eef}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear565 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b0d333 x43674ccd 1}
       {x44b0c666 x4362b333 1}
       {x44b0c666 x43588000 1}
       {x44b0c666 x4354e666 1}
       {x44b0d333 x43513333 1}
       {x44b0e666 x43538000 1}
       {x44b0e666 x43594ccd 1}
       {x44b0b99a x435e4ccd 1}}}
     {tx x447a4000 x44b0d000 x435a7667}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear564 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b2399a x436c0000 1}
       {x44b1e333 x43678000 1}
       {x44b1a000 x435c6666 1}
       {x44b18000 x4356999a 1}
       {x44b17333 x43534ccd 1}
       {x44b16000 x4355b333 1}
       {x44b1499a x43573333 1}}}
     {tx x447a4000 x44b19f16 x435c62be}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear563 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b2899a x4366cccd 1}
       {x44b2a000 x43628000 1}
       {x44b2999a x43583333 1}
       {x44b2699a x4350cccd 1}
       {x44b25ccd x43520000 1}}}
     {tx x447a4000 x44b281ec x435a75c3}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear562 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b1dccd x436b999a 1}
       {x44b20ccd x4360999a 1}
       {x44b20ccd x435a199a 1}
       {x44b1e99a x43526666 1}
       {x44b1dccd x4350b333 1}
       {x44b1e99a x4354e666 1}
       {x44b1f000 x4356cccd 1}}}
     {tx x447a4000 x44b1f0ea x4359df17}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear561 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b18666 x436b0000 1}
       {x44b18000 x4366cccd 1}
       {x44b18000 x43628000 1}
       {x44b19333 x43588000 1}
       {x44b1799a x434e0000 1}
       {x44b1799a x434bb333 1}
       {x44b1799a x43516666 1}}}
     {tx x447a4000 x44b180ea x435a457d}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear560 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b17333 x436f3333 1}
       {x44b18000 x436ce666 1}
       {x44b18666 x435fcccd 1}
       {x44b1799a x43598000 1}
       {x44b16666 x43558000 1}
       {x44b1499a x434b199a 1}
       {x44b1499a x4349e666 1}
       {x44b14333 x434c999a 1}}}
     {tx x447a4000 x44b165ff x43598fff}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear559 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b09666 x437a0000 1}
       {x44b09666 x4375cccd 1}
       {x44b09666 x43724ccd 1}
       {x44b0899a x4367e666 1}
       {x44b04666 x435ab333 1}
       {x44b03333 x43508000 1}
       {x44b07ccd x43490000 1}
       {x44b09ccd x43468000 1}}}
     {tx x447a4000 x44b07c00 x43609666}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear558 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b03333 x437ecccd 1}
       {x44b03333 x437b4ccd 1}
       {x44b03333 x43796666 1}
       {x44b03333 x4370cccd 1}
       {x44aff666 x43666666 1}
       {x44afc99a x43583333 1}
       {x44afdccd x4353b333 1}
       {x44b02000 x434d3333 1}
       {x44b04666 x434ab333 1}}}
     {tx x447a4000 x44b0171c x43652aa9}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear557 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b0b000 x437ecccd 1}
       {x44b0a99a x437c4ccd 1}
       {x44b09ccd x43706666 1}
       {x44b0899a x436b0000 1}
       {x44b0399a x435de666 1}
       {x44b02666 x4359e666 1}
       {x44b01666 x43520000 1}
       {x44b0199a x434d999a 1}
       {x44b02666 x4350b333 1}}}
     {tx x447a4000 x44b05b61 x43636666}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear556 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b0d99a x437d4ccd 1}
       {x44b0b99a x437b0000 1}
       {x44b0a99a x43750000 1}
       {x44b09666 x43703333 1}
       {x44b07ccd x4366cccd 1}
       {x44b07000 x435b0000 1}
       {x44b08333 x4350199a 1}
       {x44b09666 x434e0000 1}
       {x44b09ccd x434c999a 1}
       {x44b0899a x434e4ccd 1}}}
     {tx x447a4000 x44b0999a x43626e15}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear555 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b0b000 x437bb333 1}
       {x44b0b000 x437d199a 1}
       {x44b0b000 x43793333 1}
       {x44b0b000 x436fcccd 1}
       {x44b0899a x4361cccd 1}
       {x44b05333 x43570000 1}
       {x44b05333 x43530000 1}
       {x44b06666 x434dcccd 1}
       {x44b04666 x434fb333 1}}}
     {tx x447a4000 x44b08333 x4364c9f5}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear554 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b0c666 x43784ccd 1}
       {x44b0b666 x4371b333 1}
       {x44b0b666 x436d199a 1}
       {x44b0a333 x435e4ccd 1}
       {x44b07000 x4354199a 1}
       {x44b07000 x434d0000 1}
       {x44b07ccd x434bcccd 1}
       {x44b07000 x434d0000 1}}}
     {tx x447a4000 x44b09466 x435de99a}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear553 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b10000 x437be666 1}
       {x44b0eccd x4377b333 1}
       {x44b0e000 x43713333 1}
       {x44b0b99a x4362b333 1}
       {x44b09ccd x43570000 1}
       {x44b09ccd x4351cccd 1}
       {x44b0a99a x434e0000 1}}}
     {tx x447a4000 x44b0c5f1 x4364541e}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear552 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b10000 x437f6666 1}
       {x44b0d99a x437be666 1}
       {x44b0cccd x43778000 1}
       {x44b0b99a x436c4ccd 1}
       {x44b0899a x435c6666 1}
       {x44b08333 x4350199a 1}
       {x44b09666 x434d0000 1}
       {x44b0b000 x434a8000 1}
       {x44b07666 x434d6666 1}}}
     {tx x447a4000 x44b0af4a x4361d555}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear551 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b14333 x437ecccd 1}
       {x44b14333 x437b0000 1}
       {x44b14333 x4374cccd 1}
       {x44b13ccd x4368b333 1}
       {x44b10000 x43594ccd 1}
       {x44b0d99a x434e8000 1}
       {x44b0d99a x434c0000 1}
       {x44b0d99a x434a8000 1}
       {x44b0cccd x434c0000 1}
       {x44b0b99a x434e8000 1}
       {x44b0b000 x4350b333 1}}}
     {tx x447a4000 x44b0fb0e x435d29e4}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear550 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b1a666 x4380c000 1}
       {x44b18666 x437dcccd 1}
       {x44b18000 x43793333 1}
       {x44b1799a x436de666 1}
       {x44b13ccd x435f8000 1}
       {x44b1099a x4354e666 1}
       {x44b1099a x43523333 1}
       {x44b12333 x43513333 1}
       {x44b13666 x4352cccd 1}
       {x44b13ccd x43560000 1}}}
     {tx x447a4000 x44b14e15 x4363e666}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear549 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b27666 x43710000 1}
       {x44b25ccd x436c0000 1}
       {x44b25666 x4365cccd 1}
       {x44b24000 x43594ccd 1}
       {x44b21333 x4350cccd 1}
       {x44b1f99a x434ccccd 1}
       {x44b1e333 x434dcccd 1}
       {x44b1c99a x434f199a 1}}}
     {tx x447a4000 x44b22466 x435ad334}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear548 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b20000 x437b4ccd 1}
       {x44b1f000 x43796666 1}
       {x44b1e333 x43750000 1}
       {x44b1dccd x436d199a 1}
       {x44b1e99a x435ee666 1}
       {x44b1bccd x4355199a 1}
       {x44b1b000 x4350cccd 1}
       {x44b1b000 x43533333 1}
       {x44b1b000 x43554ccd 1}}}
     {tx x447a4000 x44b1d27d x436402d9}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear547 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b1c000 x437c4000 1}
       {x44b18666 x4376cccd 1}
       {x44b18000 x43737333 1}
       {x44b18000 x436acccd 1}
       {x44b1799a x4364a666 1}
       {x44b18800 x4360199a 1}
       {x44b1ab33 x435d599a 1}}}
     {tx x447a4000 x44b19075 x436bea0e}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear546 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b1ae66 x437f3333 1}
       {x44b18000 x437a0000 1}
       {x44b17ccd x43767333 1}
       {x44b18000 x436d3333 1}
       {x44b1799a x4364599a 1}
       {x44b18800 x435fc000 1}
       {x44b1999a x435dc000 1}
       {x44b18800 x435f7333 1}}}
     {tx x447a4000 x44b189cd x436bc4cd}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear545 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b22b33 x437c4000 1}
       {x44b1f4cd x4377e666 1}
       {x44b1e800 x43743333 1}
       {x44b1eb33 x436a0000 1}
       {x44b1ee66 x4360a666 1}
       {x44b20666 x435b599a 1}
       {x44b2199a x435a7333 1}
       {x44b20b33 x435ca666 1}}}
     {tx x447a4000 x44b20199 x4368ae66}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear544 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b24800 x437d8ccd 1}
       {x44b23ccd x4378e666 1}
       {x44b2399a x4373199a 1}
       {x44b22b33 x436d0000 1}
       {x44b22000 x4362cccd 1}
       {x44b24000 x435e3333 1}
       {x44b2599a x435c199a 1}}}
     {tx x447a4000 x44b23be3 x436bf333}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear543 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b3ab33 x4374199a 1}
       {x44b3ab33 x43714000 1}
       {x44b3c800 x436b4000 1}
       {x44b3ce66 x4366e666 1}
       {x44b3b800 x4360e666 1}
       {x44b3ae66 x435d4000 1}}}
     {tx x447a4000 x44b3b889 x4368f111}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear542 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b3a000 x43763333 1}
       {x44b394cd x4373e666 1}
       {x44b394cd x4371599a 1}
       {x44b3a333 x436a3333 1}
       {x44b3a666 x43634000 1}
       {x44b3a666 x4360599a 1}}}
     {tx x447a4000 x44b39eef x436c3554}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear541 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b38333 x4376c000 1}
       {x44b37800 x4374599a 1}
       {x44b3799a x436c199a 1}
       {x44b3799a x4368a666 1}
       {x44b38666 x4362e666 1}
       {x44b3a666 x4360a666 1}}}
     {tx x447a4000 x44b38489 x436b3bbc}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear540 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b3519a x437aa666 1}
       {x44b3599a x4379599a 1}
       {x44b36000 x43770000 1}
       {x44b36333 x436fe666 1}
       {x44b3519a x43684000 1}
       {x44b34800 x4363c000 1}
       {x44b354cd x4361cccd 1}
       {x44b34e66 x43630000 1}}}
     {tx x447a4000 x44b35567 x436d7667}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear539 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b36666 x437d8ccd 1}
       {x44b36800 x437a4000 1}
       {x44b36000 x4377199a 1}
       {x44b3519a x43740000 1}
       {x44b32333 x436c4000 1}
       {x44b3119a x43668ccd 1}
       {x44b3199a x4361cccd 1}
       {x44b32e66 x4360199a 1}
       {x44b3119a x4362e666 1}}}
     {tx x447a4000 x44b33a7d x436d9c72}
     {a ro 0 go 0 bo 0 ao 0 bs x41a73333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear538 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b32666 x437c599a 1}
       {x44b3199a x437b199a 1}
       {x44b31800 x4375599a 1}
       {x44b3199a x43737333 1}
       {x44b3119a x436ac000 1}
       {x44b30b33 x43660000 1}
       {x44b30e66 x43637333 1}}}
     {tx x447a4000 x44b31666 x4370a2be}
     {a ro 0 go 0 bo 0 ao 0 bs x41ef3333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear537 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b2b19a x437d599a 1}
       {x44b2c800 x4377e666 1}
       {x44b2d19a x4373a666 1}
       {x44b2d4cd x436fe666 1}
       {x44b2bccd x43680000 1}
       {x44b2b4cd x43637333 1}
       {x44b2b800 x43617333 1}
       {x44b2a666 x4362a666 1}
       {x44b28e66 x43640000 1}}}
     {tx x447a4000 x44b2b8b6 x436c09f5}
     {a ro 0 go 0 bo 0 ao 0 bs x41ef3333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear536 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b2ae66 x43854666 1}
       {x44b2a800 x43848000 1}
       {x44b2a800 x4383399a 1}
       {x44b2a800 x43810ccd 1}
       {x44b2ab33 x4376e666 1}
       {x44b2ab33 x43717333 1}
       {x44b28666 x4369c000 1}
       {x44b274cd x4363c000 1}
       {x44b274cd x43600000 1}
       {x44b274cd x435dcccd 1}
       {x44b26b33 x435f4000 1}}}
     {tx x447a4000 x44b2929f x4372d174}
     {a ro 0 go 0 bo 0 ao 0 bs x41ef3333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear535 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b42ccd x437a6666 1}
       {x44b4199a x43743333 1}
       {x44b40ccd x43706666 1}
       {x44b3cccd x43650000 1}
       {x44b3accd x435ccccd 1}
       {x44b3accd x43570000 1}
       {x44b3c000 x43543333 1}}}
     {tx x447a4000 x44b3e3a8 x43664925}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear534 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b44666 x437ecccd 1}
       {x44b44ccd x437b6666 1}
       {x44b45333 x43796666 1}
       {x44b44ccd x43700000 1}
       {x44b40000 x4363999a 1}
       {x44b3eccd x435bcccd 1}
       {x44b3f333 x435acccd 1}
       {x44b40000 x435d0000 1}}}
     {tx x447a4000 x44b42266 x436b599a}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear533 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b4999a x437ccccd 1}
       {x44b4999a x43793333 1}
       {x44b4999a x43730000 1}
       {x44b4999a x43696666 1}
       {x44b4799a x43603333 1}
       {x44b46ccd x435a999a 1}
       {x44b46ccd x435ccccd 1}}}
     {tx x447a4000 x44b4883b x436a9249}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear532 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b4f333 x4380cccd 1}
       {x44b4d99a x437e0000 1}
       {x44b4d99a x437a0000 1}
       {x44b4d99a x4373cccd 1}
       {x44b49333 x4366999a 1}
       {x44b44ccd x435d999a 1}
       {x44b44666 x435a6666 1}
       {x44b46666 x435d0000 1}}}
     {tx x447a4000 x44b4a19a x436d2000}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear531 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b4e000 x437f6666 1}
       {x44b4c000 x437c6666 1}
       {x44b4c000 x43776666 1}
       {x44b4c000 x4372cccd 1}
       {x44b4c000 x43713333 1}
       {x44b4b333 x436dcccd 1}
       {x44b48666 x43636666 1}
       {x44b48000 x435e999a 1}
       {x44b48666 x435b0000 1}
       {x44b48ccd x435d0000 1}
       {x44b48666 x435f999a 1}}}
     {tx x447a4000 x44b4a791 x436b8254}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear530 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b5b333 x437f0000 1}
       {x44b56000 x43786666 1}
       {x44b55333 x4373cccd 1}
       {x44b54ccd x4368999a 1}
       {x44b5399a x435c0000 1}
       {x44b5399a x43590000 1}
       {x44b4e666 x435c6666 1}}}
     {tx x447a4000 x44b54af9 x4369e2bf}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear529 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b5d99a x43808000 1}
       {x44b5b333 x437f3333 1}
       {x44b5999a x4376999a 1}
       {x44b5999a x436f6666 1}
       {x44b58666 x4363999a 1}
       {x44b58666 x435b3333 1}
       {x44b59333 x43593333 1}
       {x44b58666 x435bcccd 1}}}
     {tx x447a4000 x44b59ccd x436b4000}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear528 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b5b333 x43803333 1}
       {x44b58ccd x43796666 1}
       {x44b58ccd x4374cccd 1}
       {x44b5accd x43653333 1}
       {x44b5accd x43613333 1}
       {x44b5b99a x435c999a 1}
       {x44b5d333 x43580000 1}
       {x44b5d333 x435a6666 1}
       {x44b5d333 x435d3333 1}}}
     {tx x447a4000 x44b5b49e x43673e94}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear527 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b68666 x437f999a 1}
       {x44b64000 x437c0000 1}
       {x44b62666 x43756666 1}
       {x44b61333 x436a0000 1}
       {x44b60666 x435d999a 1}
       {x44b62ccd x43590000 1}
       {x44b63333 x435b999a 1}
       {x44b6199a x435f999a 1}}}
     {tx x447a4000 x44b63000 x43699999}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear526 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b6b333 x4377cccd 1}
       {x44b6b333 x43760000 1}
       {x44b6b99a x436f0000 1}
       {x44b6d99a x43676666 1}
       {x44b6e666 x43616666 1}
       {x44b6f99a x4359999a 1}
       {x44b6d333 x435dcccd 1}
       {x44b6a666 x43616666 1}}}
     {tx x447a4000 x44b6ca66 x4367cccd}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear525 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b6cccd x43803333 1}
       {x44b6c000 x437b999a 1}
       {x44b6b99a x43773333 1}
       {x44b6a666 x436b6666 1}
       {x44b6999a x4363cccd 1}
       {x44b6999a x43623333 1}
       {x44b6999a x4360999a 1}
       {x44b6accd x435a999a 1}
       {x44b6a666 x435e0000 1}}}
     {tx x447a4000 x44b6ac17 x436a6c15}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear524 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b62000 x43848000 1}
       {x44b5f333 x437f999a 1}
       {x44b60666 x43773333 1}
       {x44b62666 x436a0000 1}
       {x44b60666 x435e0000 1}
       {x44b60666 x4359999a 1}
       {x44b6199a x435b6666 1}}}
     {tx x447a4000 x44b60ea1 x436d41d5}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear523 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b82000 x437e6666 1}
       {x44b80ccd x437bcccd 1}
       {x44b80666 x43780000 1}
       {x44b7eccd x436fcccd 1}
       {x44b7e666 x4367999a 1}
       {x44b7f333 x435f999a 1}
       {x44b7f99a x435c999a 1}}}
     {tx x447a4000 x44b7fe2a x436e8af8}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear522 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b7599a x437f999a 1}
       {x44b77333 x437bcccd 1}
       {x44b7a666 x4375999a 1}
       {x44b7c000 x436d0000 1}
       {x44b7c000 x43633333 1}
       {x44b7b99a x435ecccd 1}
       {x44b7accd x4360cccd 1}}}
     {tx x447a4000 x44b79f16 x436dd41e}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear521 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b7d333 x437a6666 1}
       {x44b7e666 x43783333 1}
       {x44b7f333 x4375999a 1}
       {x44b81333 x436d6666 1}
       {x44b81333 x43660000 1}
       {x44b82000 x4361cccd 1}
       {x44b7f99a x43633333 1}}}
     {tx x447a4000 x44b7fd41 x436dcccd}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear520 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b78ccd x437c6666 1}
       {x44b78666 x43796666 1}
       {x44b78666 x43710000 1}
       {x44b78666 x436fcccd 1}
       {x44b78666 x436d0000 1}
       {x44b78000 x43656666 1}
       {x44b78000 x4362cccd 1}
       {x44b78000 x43606666 1}}}
     {tx x447a4000 x44b784cd x436d8667}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear519 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b78666 x43846666 1}
       {x44b76ccd x4382cccd 1}
       {x44b76ccd x4381199a 1}
       {x44b7799a x43786666 1}
       {x44b78ccd x436e6666 1}
       {x44b7a000 x43680000 1}
       {x44b7accd x4365cccd 1}
       {x44b7b333 x4364cccd 1}
       {x44b78ccd x43666666 1}}}
     {tx x447a4000 x44b78ccc x4373999b}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear518 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b74000 x43880000 1}
       {x44b72ccd x4386e666 1}
       {x44b72666 x43858000 1}
       {x44b72000 x43818000 1}
       {x44b72000 x4380cccd 1}
       {x44b71333 x437d3333 1}
       {x44b6f333 x43763333 1}
       {x44b6d333 x436f0000 1}
       {x44b6b333 x43686666 1}
       {x44b6a666 x4361cccd 1}
       {x44b68666 x43623333 1}}}
     {tx x447a4000 x44b6f586 x4379d61a}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear517 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b8a000 x43836666 1}
       {x44b8a000 x43818000 1}
       {x44b8a000 x437d3333 1}
       {x44b86ccd x4373999a 1}
       {x44b82000 x436ccccd 1}
       {x44b7cccd x43636666 1}
       {x44b7e000 x435f3333 1}}}
     {tx x447a4000 x44b84ccd x4373b6db}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear516 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b8eccd x43876666 1}
       {x44b8d333 x4385b333 1}
       {x44b8a666 x4381199a 1}
       {x44b88ccd x437d999a 1}
       {x44b87333 x4378999a 1}
       {x44b84ccd x436f0000 1}
       {x44b84ccd x4369cccd 1}
       {x44b84ccd x43670000 1}
       {x44b86ccd x4363999a 1}}}
     {tx x447a4000 x44b88668 x4377c71c}
     {a ro 0 go 0 bo 0 ao 0 bs x41c1999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear515 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b98ccd x4385b333 1}
       {x44b9799a x43844ccd 1}
       {x44b9799a x43823333 1}
       {x44b9799a x437bcccd 1}
       {x44b92ccd x436f3333 1}
       {x44b90000 x43650000 1}
       {x44b90ccd x43623333 1}}}
     {tx x447a4000 x44b95075 x43785f16}
     {a ro 0 go 0 bo 0 ao 0 bs x421c0000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear514 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ba2000 x43850000 1}
       {x44ba3333 x4382b333 1}
       {x44ba4666 x43804ccd 1}
       {x44ba5333 x43776666 1}
       {x44ba599a x436b999a 1}
       {x44ba6000 x4367999a 1}}}
     {tx x447a4000 x44ba4667 x4379c444}
     {a ro 0 go 0 bo 0 ao 0 bs x421c0000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear513 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bab333 x43860000 1}
       {x44ba8ccd x4384cccd 1}
       {x44ba999a x437d3333 1}
       {x44ba999a x437a3333 1}
       {x44ba999a x43706666 1}
       {x44baa000 x436d999a 1}
       {x44baa000 x436c999a 1}}}
     {tx x447a4000 x44ba9d41 x437a3a83}
     {a ro 0 go 0 bo 0 ao 0 bs x421c0000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear512 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44baa666 x4387e666 1}
       {x44baaccd x43868000 1}
       {x44baaccd x4382b333 1}
       {x44baaccd x43804ccd 1}
       {x44baaccd x437a3333 1}
       {x44baa666 x43723333 1}
       {x44baaccd x43706666 1}
       {x44baaccd x4371999a 1}}}
     {tx x447a4000 x44baab34 x437e2665}
     {a ro 0 go 0 bo 0 ao 0 bs x421c0000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear511 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bbe666 x43890000 1}
       {x44bbc000 x4388199a 1}
       {x44bb9333 x43820000 1}
       {x44bb9333 x437c999a 1}
       {x44bbaccd x4376999a 1}
       {x44bbc000 x43750000 1}}}
     {tx x447a4000 x44bbb444 x43813333}
     {a ro 0 go 0 bo 0 ao 0 bs x41b33333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear510 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bbc666 x4388199a 1}
       {x44bbb99a x4384199a 1}
       {x44bbb99a x43824ccd 1}
       {x44bbe666 x437d3333 1}
       {x44bc1333 x437b3333 1}
       {x44bc2ccd x437e0000 1}}}
     {tx x447a4000 x44bbe555 x43819ddd}
     {a ro 0 go 0 bo 0 ao 0 bs x41b33333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear509 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bbf99a x43896666 1}
       {x44bbd333 x43886666 1}
       {x44bbcccd x4387999a 1}
       {x44bbc000 x4383cccd 1}
       {x44bbcccd x43804ccd 1}
       {x44bbf333 x437d0000 1}}}
     {tx x447a4000 x44bbd999 x4384aaab}
     {a ro 0 go 0 bo 0 ao 0 bs x41b33333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear508 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bc4ccd x438a999a 1}
       {x44bc0ccd x43830000 1}
       {x44bc0666 x43823333 1}
       {x44bc0666 x4381199a 1}}}
     {tx x447a4000 x44bc199a x4384399a}
     {a ro 0 go 0 bo 0 ao 0 bs x41b33333 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear507 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bc2ccd x438a199a 1}
       {x44bc2000 x43896666 1}
       {x44bc0666 x4385999a 1}
       {x44bc1333 x43834ccd 1}
       {x44bc399a x4380cccd 1}
       {x44bc4666 x437f0000 1}
       {x44bc5333 x43800000 1}}}
     {tx x447a4000 x44bc2ccd x4384199a}
     {a ro 0 go 0 bo 0 ao 0 bs x41e00000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear506 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bc9000 x43886666 1}
       {x44bc9000 x43848ccd 1}
       {x44bc9666 x43824ccd 1}
       {x44bc7ccd x43788000 1}
       {x44bc7000 x4373199a 1}
       {x44bc799a x43718000 1}}}
     {tx x447a4000 x44bc84cd x437f4444}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear505 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bd0666 x438cf333 1}
       {x44bcc000 x438a0ccd 1}
       {x44bc999a x43870000 1}
       {x44bc7000 x43816666 1}
       {x44bc6666 x437cb333 1}
       {x44bc8333 x43790000 1}}}
     {tx x447a4000 x44bc9eef x43846000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear504 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bcc99a x438ec000 1}
       {x44bcaccd x438c7333 1}
       {x44bcaccd x43892666 1}
       {x44bca333 x4384d99a 1}
       {x44bc7000 x43802666 1}
       {x44bc7333 x437b3333 1}
       {x44bc9000 x437a999a 1}}}
     {tx x447a4000 x44bc9a83 x43852db6}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear503 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bdb333 x438f4ccd 1}
       {x44bd7000 x438c999a 1}
       {x44bd599a x438a4ccd 1}
       {x44bd3666 x4382f333 1}
       {x44bd2ccd x4381599a 1}
       {x44bd2000 x437e999a 1}
       {x44bd2333 x4379199a 1}}}
     {tx x447a4000 x44bd4e2b x43857a83}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear502 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bd9ccd x438fa666 1}
       {x44bd8ccd x438f3333 1}
       {x44bd7000 x438b8000 1}
       {x44bd7000 x4389199a 1}
       {x44bd799a x43840000 1}
       {x44bd599a x437d999a 1}
       {x44bd499a x43788000 1}}}
     {tx x447a4000 x44bd7332 x438736db}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear501 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44be0ccd x438e8ccd 1}
       {x44bdfccd x438d4000 1}
       {x44bdfccd x438a599a 1}
       {x44be1666 x4384d99a 1}
       {x44be1333 x43800000 1}
       {x44be1333 x437c8000 1}}}
     {tx x447a4000 x44be0b34 x4386e000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear500 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bf3333 x438fa666 1}
       {x44bf1666 x438d0ccd 1}
       {x44bf2000 x43897333 1}
       {x44bf2ccd x4387e666 1}
       {x44bf3333 x43838000 1}
       {x44bf2333 x43813333 1}
       {x44bf2333 x437fcccd 1}
       {x44bf3333 x437ccccd 1}}}
     {tx x447a4000 x44bf2865 x4386219a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear499 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bef333 x4393199a 1}
       {x44bed666 x4391c000 1}
       {x44bed666 x4390199a 1}
       {x44bedccd x438a599a 1}
       {x44bea666 x4384c000 1}
       {x44be7666 x437f6666 1}
       {x44be7666 x437cb333 1}
       {x44be899a x4379e666 1}}}
     {tx x447a4000 x44beb333 x4387e19a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear498 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44be2666 x438fcccd 1}
       {x44be2666 x438f2666 1}
       {x44be2000 x438cc000 1}
       {x44be299a x438b3333 1}
       {x44be4666 x43863333 1}
       {x44be4666 x4381f333 1}
       {x44be3ccd x437d6666 1}}}
     {tx x447a4000 x44be324a x4388d24a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear497 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bdd666 x43894000 1}
       {x44bde000 x43866666 1}
       {x44bde000 x43858000 1}
       {x44bdd000 x4382f333 1}
       {x44bdb000 x437fcccd 1}
       {x44bdb99a x437d999a 1}
       {x44bdcccd x437e8000 1}}}
     {tx x447a4000 x44bdcd42 x43832666}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear496 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bdc666 x438a4ccd 1}
       {x44bdb000 x43894ccd 1}
       {x44bda000 x4388599a 1}
       {x44bd9ccd x43853333 1}
       {x44bd9666 x4381cccd 1}
       {x44bd9333 x437e0000 1}
       {x44bd9333 x4378cccd 1}
       {x44bda000 x43773333 1}}}
     {tx x447a4000 x44bda1ff x43833e67}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear495 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bda000 x43888ccd 1}
       {x44bd9ccd x4387c000 1}
       {x44bd9ccd x4386199a 1}
       {x44bda000 x43818000 1}
       {x44bda666 x437cb333 1}
       {x44bdbccd x437a0000 1}}}
     {tx x447a4000 x44bda4cd x43833555}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear494 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bdd666 x43878000 1}
       {x44bdd666 x4385e666 1}
       {x44bdd99a x43844ccd 1}
       {x44bde333 x43804ccd 1}
       {x44bdd99a x437c199a 1}
       {x44bdd99a x437b0000 1}}}
     {tx x447a4000 x44bdda23 x43824222}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear493 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bd9ccd x43884000 1}
       {x44bd9333 x43863333 1}
       {x44bd9333 x4384199a 1}
       {x44bd9666 x43803333 1}
       {x44bd9666 x437c6666 1}}}
     {tx x447a4000 x44bd9666 x438363d7}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear492 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bd6333 x4387599a 1}
       {x44bd599a x4385f333 1}
       {x44bd5000 x4383d99a 1}
       {x44bd5000 x43807333 1}
       {x44bd4000 x437b999a 1}}}
     {tx x447a4000 x44bd528f x4383147a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear491 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bd2000 x4388b333 1}
       {x44bd0ccd x43878000 1}
       {x44bd0333 x43852666 1}
       {x44bcf99a x4380cccd 1}
       {x44bcdccd x437b8000 1}
       {x44bcd666 x4379b333 1}}}
     {tx x447a4000 x44bcfa21 x4382caab}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear490 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bc9666 x43870ccd 1}
       {x44bc8666 x43864000 1}
       {x44bc7ccd x4383b333 1}
       {x44bc7333 x43814000 1}
       {x44bc699a x437de666 1}
       {x44bc6666 x4378cccd 1}}}
     {tx x447a4000 x44bc7a23 x43824445}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear489 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bcd666 x438a0000 1}
       {x44bccccd x43892666 1}
       {x44bcb666 x4386d99a 1}
       {x44bcb666 x4385e666 1}
       {x44bcb333 x43844ccd 1}
       {x44bc9666 x43818ccd 1}
       {x44bc7000 x437d999a 1}
       {x44bc6000 x437c199a 1}
       {x44bc4ccd x437d4ccd 1}}}
     {tx x447a4000 x44bc9b61 x4383b1c7}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear488 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bfe333 x438c3333 1}
       {x44bfc000 x4389a666 1}
       {x44bfbccd x4386199a 1}
       {x44bfbccd x4384199a 1}
       {x44bfd666 x43834ccd 1}}}
     {tx x447a4000 x44bfca3d x438711eb}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear487 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c08ccd x438eb333 1}
       {x44c03000 x438b199a 1}
       {x44c02000 x438a0000 1}
       {x44bfd333 x43858000 1}
       {x44bfbccd x43844ccd 1}
       {x44bfc666 x43858000 1}
       {x44bfcccd x43864ccd 1}
       {x44bfcccd x4387b333 1}}}
     {tx x447a4000 x44bff99a x43882333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear486 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c0c333 x4391b333 1}
       {x44c09666 x438ff333 1}
       {x44c08ccd x438d0ccd 1}
       {x44c0699a x43880ccd 1}
       {x44c04ccd x4385599a 1}
       {x44c03ccd x43847333 1}
       {x44c03666 x43850000 1}}}
     {tx x447a4000 x44c07000 x4389ef8b}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear485 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c1399a x43934ccd 1}
       {x44c12ccd x4391cccd 1}
       {x44c12ccd x438f999a 1}
       {x44c12ccd x438d8000 1}
       {x44c11333 x43884ccd 1}
       {x44c0f000 x43852666 1}
       {x44c0fccd x43864ccd 1}}}
     {tx x447a4000 x44c11b6e x438c4751}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear484 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c10666 x43940000 1}
       {x44c0e666 x43914000 1}
       {x44c0e000 x438da666 1}
       {x44c0b99a x4388f333 1}
       {x44c09666 x43858000 1}
       {x44c09666 x4384e666 1}
       {x44c0bccd x4386199a 1}}}
     {tx x447a4000 x44c0c6dd x438ae83a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear483 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c2b000 x4393a666 1}
       {x44c2a666 x4391999a 1}
       {x44c2a666 x438f0000 1}
       {x44c26ccd x4388f333 1}
       {x44c22666 x43858000 1}
       {x44c21333 x4385f333 1}}}
     {tx x447a4000 x44c27088 x438c1bbc}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear482 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c34333 x43956666 1}
       {x44c32333 x43924000 1}
       {x44c32333 x438f8000 1}
       {x44c31666 x438a999a 1}
       {x44c2f000 x4387b333 1}
       {x44c2d99a x43882666 1}}}
     {tx x447a4000 x44c31199 x438d9999}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear481 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c30ccd x43950ccd 1}
       {x44c30ccd x4394599a 1}
       {x44c31ccd x43913333 1}
       {x44c32666 x438f6666 1}
       {x44c31ccd x438b7333 1}
       {x44c31000 x438a2666 1}
       {x44c2f99a x438ad99a 1}}}
     {tx x447a4000 x44c312bf x438f3507}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear480 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c1d666 x43940000 1}
       {x44c1cccd x43908ccd 1}
       {x44c1d000 x438e0000 1}
       {x44c1cccd x438a599a 1}
       {x44c1b000 x43880ccd 1}
       {x44c1a99a x4388a666 1}}}
     {tx x447a4000 x44c1c444 x438ceeef}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear479 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c28000 x4397f333 1}
       {x44c25ccd x43958ccd 1}
       {x44c25333 x4393cccd 1}
       {x44c2299a x438ecccd 1}
       {x44c20333 x438b7333 1}
       {x44c1eccd x4389b333 1}
       {x44c20333 x438ab333 1}}}
     {tx x447a4000 x44c22f8a x438ffe2c}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear478 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c39ccd x43984ccd 1}
       {x44c34333 x43953333 1}
       {x44c31666 x4392c000 1}
       {x44c2bccd x438e199a 1}
       {x44c2a666 x438b7333 1}
       {x44c2a666 x438a999a 1}
       {x44c2a666 x438b199a 1}}}
     {tx x447a4000 x44c2f333 x438fedb7}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear477 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c4899a x439dcccd 1}
       {x44c48333 x439c6666 1}
       {x44c48333 x439a8ccd 1}
       {x44c46ccd x43960000 1}
       {x44c42333 x4390c000 1}
       {x44c3f666 x438d999a 1}
       {x44c3f666 x438ce666 1}}}
     {tx x447a4000 x44c44af9 x43956db7}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear476 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c4dccd x439e999a 1}
       {x44c4a666 x439ac000 1}
       {x44c4999a x4396b333 1}
       {x44c49000 x43913333 1}
       {x44c49000 x438e7333 1}
       {x44c47333 x438ee666 1}}}
     {tx x447a4000 x44c49d55 x43951999}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear475 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c53000 x439ed99a 1}
       {x44c52666 x439e4000 1}
       {x44c51000 x439a4ccd 1}
       {x44c5099a x4398b333 1}
       {x44c4eccd x4393cccd 1}
       {x44c4c000 x438f999a 1}
       {x44c4bccd x438f0ccd 1}
       {x44c4b666 x438fd99a 1}}}
     {tx x447a4000 x44c4f201 x43964ccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear474 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c58000 x439f4ccd 1}
       {x44c55ccd x439c6666 1}
       {x44c56333 x43998000 1}
       {x44c55ccd x4393b333 1}
       {x44c54333 x438f8000 1}
       {x44c53ccd x438e7333 1}
       {x44c53ccd x43903333 1}}}
     {tx x447a4000 x44c555f2 x4395941e}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear473 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c6e333 x439e0000 1}
       {x44c6dccd x439d7333 1}
       {x44c6b99a x4399b333 1}
       {x44c6b000 x4397a666 1}
       {x44c68ccd x4393599a 1}
       {x44c68333 x4391599a 1}
       {x44c66666 x4391f333 1}}}
     {tx x447a4000 x44c6a925 x43975999}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear472 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c79666 x43a1f333 1}
       {x44c78333 x439fc000 1}
       {x44c78333 x439e0000 1}
       {x44c77333 x4399599a 1}
       {x44c74000 x43958ccd 1}
       {x44c72666 x43938ccd 1}
       {x44c6f333 x43940000 1}}}
     {tx x447a4000 x44c7583a x439a057d}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear471 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c6eccd x43a2199a 1}
       {x44c6e666 x43a03333 1}
       {x44c6dccd x439c8000 1}
       {x44c6c666 x4399999a 1}
       {x44c6999a x4396199a 1}
       {x44c69333 x4394f333 1}
       {x44c69333 x43957333 1}}}
     {tx x447a4000 x44c6bea0 x439a6a0f}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear470 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c66000 x43a30000 1}
       {x44c6599a x43a38000 1}
       {x44c6499a x43a08ccd 1}
       {x44c6499a x439bf333 1}
       {x44c6399a x4399999a 1}
       {x44c61666 x43976666 1}
       {x44c5d333 x43937333 1}}}
     {tx x447a4000 x44c63492 x439c7e2b}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear469 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c90333 x43a9cccd 1}
       {x44c8fccd x43a90ccd 1}
       {x44c8fccd x43a54000 1}
       {x44c8fccd x43a2199a 1}
       {x44c8d000 x439d599a 1}
       {x44c89666 x43996666 1}
       {x44c87666 x43970ccd 1}
       {x44c87666 x4396599a 1}}}
     {tx x447a4000 x44c8c99a x439fcb34}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear468 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c89666 x43b28000 1}
       {x44c87666 x43b0c000 1}
       {x44c86000 x43abd99a 1}
       {x44c8499a x43a8c000 1}
       {x44c7f99a x43a20000 1}
       {x44c7e99a x439d8ccd 1}
       {x44c7f000 x439b999a 1}}}
     {tx x447a4000 x44c8383a x43a74925}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear467 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c96333 x43b52666 1}
       {x44c9199a x43b1a666 1}
       {x44c8fccd x43ae199a 1}
       {x44c8b333 x43a6a666 1}
       {x44c88000 x43a16666 1}
       {x44c87000 x439cf333 1}
       {x44c87666 x439b7333 1}}}
     {tx x447a4000 x44c8cbe3 x43a79f17}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear466 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c9c666 x43b56666 1}
       {x44c99333 x43b44000 1}
       {x44c94ccd x43af999a 1}
       {x44c94000 x43ad8000 1}
       {x44c90666 x43a57333 1}
       {x44c8e000 x439e999a 1}
       {x44c8c333 x439c0ccd 1}}}
     {tx x447a4000 x44c93923 x43aa1f17}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear465 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ca699a x43af8ccd 1}
       {x44ca599a x43aec000 1}
       {x44ca3ccd x43aa199a 1}
       {x44ca3ccd x43a70000 1}
       {x44ca2000 x43a0e666 1}
       {x44c9f333 x439c8000 1}
       {x44c9cccd x439c8000 1}}}
     {tx x447a4000 x44ca28b0 x43a5e667}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear464 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cb0000 x43b1199a 1}
       {x44cb0000 x43accccd 1}
       {x44cb0000 x43aa7333 1}
       {x44cad000 x43a3599a 1}
       {x44cab99a x43a1c000 1}
       {x44caa333 x439f3333 1}
       {x44caa333 x439d0000 1}}}
     {tx x447a4000 x44cad491 x43a5f335}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear463 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cb399a x43b5f333 1}
       {x44cb2333 x43b3cccd 1}
       {x44cb0666 x43b17333 1}
       {x44cad000 x43ab8000 1}
       {x44ca7000 x43a32666 1}
       {x44ca6333 x439f8ccd 1}
       {x44ca8666 x439e2666 1}}}
     {tx x447a4000 x44cacaf8 x43aa38b0}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear462 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cb2ccd x43bb3333 1}
       {x44cb1ccd x43b8c000 1}
       {x44cb0ccd x43b54ccd 1}
       {x44cae000 x43ae8ccd 1}
       {x44ca7000 x43a73333 1}
       {x44ca5333 x43a18000 1}
       {x44ca5ccd x43a03333 1}}}
     {tx x447a4000 x44cac333 x43add075}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear461 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cc7333 x43b88ccd 1}
       {x44cc7333 x43b7c000 1}
       {x44cc3ccd x43b2999a 1}
       {x44cc3000 x43b0a666 1}
       {x44cc0333 x43a97333 1}
       {x44cbf99a x43a44ccd 1}
       {x44cc2000 x43a23333 1}}}
     {tx x447a4000 x44cc3492 x43ae36db}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear460 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cc9000 x43b87333 1}
       {x44cc899a x43b78000 1}
       {x44cc8000 x43b5d99a 1}
       {x44cc799a x43b02666 1}
       {x44cc5333 x43a9e666 1}
       {x44cc299a x43a6999a 1}
       {x44cc3666 x43a5199a 1}}}
     {tx x447a4000 x44cc657d x43af5d42}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear459 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ccd333 x43bc599a 1}
       {x44ccd333 x43bb3333 1}
       {x44cce333 x43b93333 1}
       {x44cce99a x43b48ccd 1}
       {x44ccbccd x43add99a 1}
       {x44cc999a x43a8d99a 1}
       {x44cc8333 x43a74ccd 1}}}
     {tx x447a4000 x44ccc1d3 x43b2c1d5}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear458 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cec99a x43bc8ccd 1}
       {x44ce8ccd x43b98000 1}
       {x44ce7ccd x43b74ccd 1}
       {x44ce6666 x43b2e666 1}
       {x44ce7666 x43af4ccd 1}
       {x44cea666 x43ad8000 1}}}
     {tx x447a4000 x44ce8e67 x43b4d778}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear457 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cf4000 x43bae666 1}
       {x44cf3ccd x43ba3333 1}
       {x44cf3666 x43b6b333 1}
       {x44cf3666 x43b4cccd 1}
       {x44cf1ccd x43b0cccd 1}
       {x44cefccd x43adf333 1}}}
     {tx x447a4000 x44cf2b34 x43b53999}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear456 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ceaccd x43bd4ccd 1}
       {x44ceb333 x43bc6666 1}
       {x44ceaccd x43ba599a 1}
       {x44cea000 x43b60ccd 1}
       {x44ce799a x43b04ccd 1}
       {x44ce799a x43add99a 1}
       {x44ce9ccd x43ad0000 1}}}
     {tx x447a4000 x44ce9af9 x43b55249}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear455 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cec99a x43c24ccd 1}
       {x44cec000 x43c17333 1}
       {x44cea666 x43bea666 1}
       {x44ce8ccd x43bba666 1}
       {x44ce499a x43b72666 1}
       {x44cdfccd x43b30000 1}
       {x44ce2333 x43b10000 1}
       {x44ce4666 x43b08ccd 1}}}
     {tx x447a4000 x44ce6d9a x43b93801}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear454 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ceaccd x43c40000 1}
       {x44ce9333 x43c2599a 1}
       {x44ce899a x43bf8ccd 1}
       {x44ce8333 x43b98ccd 1}
       {x44ce4666 x43b50ccd 1}
       {x44ce1666 x43b1f333 1}
       {x44ce2333 x43b14ccd 1}}}
     {tx x447a4000 x44ce6666 x43ba4000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear453 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d08333 x43c10000 1}
       {x44d04000 x43be999a 1}
       {x44d02ccd x43bc8000 1}
       {x44d00ccd x43b6599a 1}
       {x44d00333 x43b5199a 1}
       {x44cffccd x43b4999a 1}
       {x44cfe99a x43b37333 1}
       {x44cfc000 x43b26666 1}
       {x44cf9333 x43b2d99a 1}}}
     {tx x447a4000 x44d00666 x43b7a665}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear452 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d10333 x43c47333 1}
       {x44d0e000 x43c3cccd 1}
       {x44d0b666 x43c1d99a 1}
       {x44d08ccd x43bd2666 1}
       {x44d06333 x43b80000 1}
       {x44d05666 x43b4b333 1}
       {x44d06ccd x43b3a666 1}}}
     {tx x447a4000 x44d09d42 x43bc83a8}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear451 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d06000 x43c3e666 1}
       {x44d05333 x43c30000 1}
       {x44d04333 x43bf8000 1}
       {x44d03333 x43bd6666 1}
       {x44cfe333 x43b84ccd 1}
       {x44cfa666 x43b4e666 1}
       {x44cf9ccd x43b3199a 1}
       {x44cf9ccd x43b3f333 1}}}
     {tx x447a4000 x44cffd9b x43bb0199}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear450 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d16333 x43cd199a 1}
       {x44d1a000 x43cd199a 1}
       {x44d2199a x43cd4000 1}
       {x44d37666 x43cd6666 1}
       {x44d4f000 x43cd8000 1}
       {x44d62666 x43cd8000 1}
       {x44d72000 x43cdb333 1}
       {x44d74333 x43cdcccd 1}}}
     {tx x447a4000 x44d4419a x43cd6b33}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear449 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2699a x43ccb333 1}
       {x44d2e333 x43cd0000 1}
       {x44d3699a x43cd4000 1}
       {x44d49333 x43cd8000 1}
       {x44d59666 x43cd8000 1}
       {x44d63000 x43cd4ccd 1}
       {x44d61000 x43cd4000 1}}}
     {tx x447a4000 x44d47249 x43cd36db}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear448 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d28ccd x43cbcccd 1}
       {x44d2bccd x43cbe666 1}
       {x44d2e333 x43cbf333 1}
       {x44d34666 x43cc0ccd 1}
       {x44d3f666 x43cc3333 1}
       {x44d4d000 x43cc4ccd 1}
       {x44d58ccd x43cc599a 1}
       {x44d5b000 x43cc599a 1}}}
     {tx x447a4000 x44d3eecd x43cc1ccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear447 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2bccd x43ca8ccd 1}
       {x44d2f333 x43cad99a 1}
       {x44d3499a x43cad99a 1}
       {x44d4e666 x43caf333 1}
       {x44d5eccd x43caf333 1}
       {x44d6499a x43cad99a 1}
       {x44d5f666 x43cad99a 1}}}
     {tx x447a4000 x44d4941e x43cad5f1}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear446 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d1b000 x43c88000 1}
       {x44d22000 x43c8d99a 1}
       {x44d2c666 x43c90ccd 1}
       {x44d45666 x43c8f333 1}
       {x44d59ccd x43c8a666 1}
       {x44d64000 x43c84ccd 1}
       {x44d5f666 x43c86666 1}}}
     {tx x447a4000 x44d41b6f x43c8abe3}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear445 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cfa000 x43c30000 1}
       {x44cfc333 x43c34000 1}
       {x44d04000 x43c38ccd 1}
       {x44d0e000 x43c3b333 1}
       {x44d2c99a x43c43333 1}
       {x44d46000 x43c4c000 1}
       {x44d4d666 x43c5999a 1}
       {x44d4899a x43c6199a 1}}}
     {tx x447a4000 x44d2219a x43c444cc}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear444 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cfd666 x43c02666 1}
       {x44d0499a x43bfe666 1}
       {x44d10666 x43bfc000 1}
       {x44d2799a x43bf999a 1}
       {x44d3c333 x43bf599a 1}
       {x44d46000 x43bf4000 1}
       {x44d41666 x43bf4000 1}}}
     {tx x447a4000 x44d243a8 x43bf9b6e}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear443 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cee333 x43c04ccd 1}
       {x44cf3ccd x43c04ccd 1}
       {x44cfa99a x43c03333 1}
       {x44d0e99a x43c00ccd 1}
       {x44d28ccd x43bfd99a 1}
       {x44d3b99a x43bf999a 1}
       {x44d40666 x43bf8000 1}
       {x44d3e666 x43bf8000 1}}}
     {tx x447a4000 x44d19ccd x43bfe999}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear442 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ce2000 x43c12666 1}
       {x44ce6ccd x43c1199a 1}
       {x44ced333 x43c1199a 1}
       {x44d09666 x43c10000 1}
       {x44d12000 x43c0f333 1}
       {x44d1f000 x43c0d99a 1}
       {x44d39000 x43c07333 1}
       {x44d41666 x43c03333 1}
       {x44d3d99a x43c02666 1}}}
     {tx x447a4000 x44d12b61 x43c0c5b0}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear441 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cedccd x43c28000 1}
       {x44cf5666 x43c28000 1}
       {x44cfe666 x43c28000 1}
       {x44d17333 x43c28000 1}
       {x44d3c000 x43c20ccd 1}
       {x44d4199a x43c1c000 1}
       {x44d3a666 x43c1c000 1}}}
     {tx x447a4000 x44d1941e x43c238b0}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear440 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cec000 x43c34ccd 1}
       {x44cee666 x43c34ccd 1}
       {x44d0499a x43c38ccd 1}
       {x44d17ccd x43c38ccd 1}
       {x44d3b000 x43c34ccd 1}
       {x44d4b333 x43c30000 1}}}
     {tx x447a4000 x44d14d55 x43c35555}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear439 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cf7666 x43c56666 1}
       {x44d0199a x43c56666 1}
       {x44d0b666 x43c56666 1}
       {x44d26000 x43c54ccd 1}
       {x44d4dccd x43c48000 1}
       {x44d52666 x43c4599a 1}
       {x44d56000 x43c43333 1}
       {x44d50ccd x43c40ccd 1}}}
     {tx x447a4000 x44d2e2ce x43c4d333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear438 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cf999a x43c7d99a 1}
       {x44d04000 x43c7999a 1}
       {x44d14000 x43c77333 1}
       {x44d33666 x43c6f333 1}
       {x44d5199a x43c6199a 1}
       {x44d5699a x43c5b333 1}
       {x44d52333 x43c5999a 1}}}
     {tx x447a4000 x44d2da0e x43c6c000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear437 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cdd666 x43ca2666 1}
       {x44cea666 x43ca4ccd 1}
       {x44cf499a x43ca4ccd 1}
       {x44d1299a x43ca4ccd 1}
       {x44d2f000 x43ca2666 1}
       {x44d4accd x43c9e666 1}
       {x44d5a000 x43c9c000 1}}}
     {tx x447a4000 x44d1741e x43ca1f16}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear436 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ceb666 x43cb599a 1}
       {x44cfe666 x43cb4000 1}
       {x44d08ccd x43cb4000 1}
       {x44d19666 x43cb0000 1}
       {x44d3b666 x43ca8ccd 1}
       {x44d55666 x43ca2666 1}
       {x44d64ccd x43ca0000 1}}}
     {tx x447a4000 x44d24cce x43cacaf8}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear435 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d1999a x43ce0ccd 1}
       {x44d21000 x43ce4000 1}
       {x44d2a333 x43ce599a 1}
       {x44d3e333 x43ce199a 1}
       {x44d4e666 x43cd8ccd 1}
       {x44d58333 x43cd2666 1}}}
     {tx x447a4000 x44d36eef x43cde889}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear434 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2d666 x43cf999a 1}
       {x44d2f99a x43cf999a 1}
       {x44d3f333 x43cf999a 1}
       {x44d4c666 x43cf999a 1}
       {x44d67ccd x43cf3333 1}
       {x44d73ccd x43cee666 1}
       {x44d7c666 x43cf0000 1}}}
     {tx x447a4000 x44d525f2 x43cf5b6e}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear433 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d1f000 x43d08ccd 1}
       {x44d21000 x43d08000 1}
       {x44d28ccd x43d06666 1}
       {x44d3e333 x43d0599a 1}
       {x44d5499a x43d0199a 1}
       {x44d68666 x43cf999a 1}
       {x44d6f666 x43cf6666 1}}}
     {tx x447a4000 x44d42c58 x43d020e9}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear432 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d1e000 x43d10ccd 1}
       {x44d2a666 x43d0a666 1}
       {x44d32000 x43d08ccd 1}
       {x44d3b99a x43d08000 1}
       {x44d5699a x43d04000 1}
       {x44d6cccd x43cfcccd 1}
       {x44d73ccd x43cf7333 1}
       {x44d6f000 x43cf6666 1}
       {x44d6b333 x43cf6666 1}}}
     {tx x447a4000 x44d4f0b6 x43d01dde}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear431 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d20000 x43d2cccd 1}
       {x44d1e000 x43d2b333 1}
       {x44d27000 x43d28ccd 1}
       {x44d4299a x43d28000 1}
       {x44d4f666 x43d24ccd 1}
       {x44d6a333 x43d1c000 1}
       {x44d74ccd x43d1599a 1}
       {x44d72ccd x43d12666 1}
       {x44d6f666 x43d12666 1}}}
     {tx x447a4000 x44d4d5b1 x43d2071c}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear430 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2199a x43d4d99a 1}
       {x44d24666 x43d4f333 1}
       {x44d2b333 x43d4f333 1}
       {x44d3c99a x43d4d99a 1}
       {x44d57333 x43d46666 1}
       {x44d67ccd x43d3e666 1}
       {x44d78333 x43d3599a 1}
       {x44d7f333 x43d3199a 1}}}
     {tx x447a4000 x44d4c866 x43d44b33}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear429 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d28000 x43d5c000 1}
       {x44d24666 x43d5a666 1}
       {x44d2fccd x43d5a666 1}
       {x44d45666 x43d58ccd 1}
       {x44d55000 x43d56666 1}
       {x44d6b99a x43d52666 1}
       {x44d79333 x43d4cccd 1}
       {x44d7b666 x43d48ccd 1}}}
     {tx x447a4000 x44d4ed99 x43d55001}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear428 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d23ccd x43d62666 1}
       {x44d21333 x43d62666 1}
       {x44d1f000 x43d63333 1}
       {x44d27666 x43d67333 1}
       {x44d42000 x43d67333 1}
       {x44d4e666 x43d67333 1}
       {x44d6899a x43d63333 1}
       {x44d73666 x43d5e666 1}
       {x44d71000 x43d5c000 1}
       {x44d6d666 x43d5a666 1}}}
     {tx x447a4000 x44d489eb x43d6228e}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear427 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d3c000 x43d5cccd 1}
       {x44d3f333 x43d5f333 1}
       {x44d43333 x43d60ccd 1}
       {x44d61ccd x43d67333 1}
       {x44d68666 x43d67333 1}
       {x44d73666 x43d67333 1}
       {x44d7a666 x43d67333 1}
       {x44d7699a x43d6599a 1}}}
     {tx x447a4000 x44d5da00 x43d63e65}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear426 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d39ccd x43d6599a 1}
       {x44d4999a x43d6d99a 1}
       {x44d57ccd x43d7199a 1}
       {x44d6f000 x43d74000 1}
       {x44d7e333 x43d72666 1}}}
     {tx x447a4000 x44d5b47b x43d6f0a5}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear425 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d40000 x43d8e666 1}
       {x44d50000 x43d8e666 1}
       {x44d5b666 x43d90000 1}
       {x44d73666 x43d8d99a 1}
       {x44d7a666 x43d8199a 1}
       {x44d7799a x43d7f333 1}}}
     {tx x447a4000 x44d62ccd x43d89ddd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear424 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d35333 x43d90ccd 1}
       {x44d39000 x43d94ccd 1}
       {x44d5099a x43da199a 1}
       {x44d5d99a x43da599a 1}
       {x44d7a333 x43da8000 1}
       {x44d8499a x43da6666 1}
       {x44d88ccd x43da599a 1}}}
     {tx x447a4000 x44d60925 x43da01d5}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear423 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d4999a x43db3333 1}
       {x44d4e99a x43db7333 1}
       {x44d59333 x43db999a 1}
       {x44d6f99a x43dbd99a 1}
       {x44d9099a x43dbd99a 1}
       {x44da099a x43dbd99a 1}}}
     {tx x447a4000 x44d6db33 x43dba221}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear422 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d34000 x43dacccd 1}
       {x44d3c333 x43daf333 1}
       {x44d4b333 x43db3333 1}
       {x44d63666 x43db7333 1}
       {x44d7c666 x43db7333 1}
       {x44d86333 x43db599a 1}}}
     {tx x447a4000 x44d5ae67 x43db3333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear421 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d1dccd x43db0ccd 1}
       {x44d20666 x43db0ccd 1}
       {x44d2f333 x43db599a 1}
       {x44d3c333 x43db8000 1}
       {x44d55000 x43dbb333 1}
       {x44d70666 x43dbb333 1}
       {x44d86000 x43dbc000 1}}}
     {tx x447a4000 x44d47926 x43db715f}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear420 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d4f666 x43de8ccd 1}
       {x44d60333 x43de0ccd 1}
       {x44d69666 x43de0ccd 1}
       {x44d7699a x43de0000 1}
       {x44d7c99a x43de0000 1}}}
     {tx x447a4000 x44d68d70 x43de2148}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear419 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d5199a x43df199a 1}
       {x44d64000 x43ded99a 1}
       {x44d6b99a x43de999a 1}
       {x44d71000 x43de3333 1}}}
     {tx x447a4000 x44d648cd x43deb001}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear418 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d4f666 x43dfa666 1}
       {x44d59666 x43df599a 1}
       {x44d65ccd x43df0000 1}
       {x44d7899a x43de8ccd 1}}}
     {tx x447a4000 x44d61ccc x43df2333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear417 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d50000 x43e0599a 1}
       {x44d5a666 x43dfe666 1}
       {x44d63000 x43df8000 1}
       {x44d78ccd x43deb333 1}
       {x44d7fccd x43de7333 1}
       {x44d7bccd x43de999a 1}}}
     {tx x447a4000 x44d6af78 x43df4000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear416 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d51ccd x43e07333 1}
       {x44d5499a x43e04ccd 1}
       {x44d5c666 x43dff333 1}
       {x44d6e666 x43df6666 1}
       {x44d7e000 x43def333 1}
       {x44d80333 x43ded99a 1}}}
     {tx x447a4000 x44d67e67 x43dfa665}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear415 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d49333 x43e0d99a 1}
       {x44d4f99a x43e03333 1}
       {x44d65ccd x43df6666 1}
       {x44d6f666 x43df0000 1}
       {x44d7c666 x43de7333 1}
       {x44d83666 x43de0ccd 1}
       {x44d7fccd x43de3333 1}}}
     {tx x447a4000 x44d6b160 x43df2a0e}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear414 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d5699a x43e1cccd 1}
       {x44d54000 x43e1b333 1}
       {x44d56000 x43e16666 1}
       {x44d66666 x43e0e666 1}
       {x44d72333 x43e08000 1}
       {x44d81666 x43dfcccd 1}
       {x44d86ccd x43df6666 1}
       {x44d81666 x43df4000 1}}}
     {tx x447a4000 x44d6c59a x43e09801}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear413 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d53333 x43e1cccd 1}
       {x44d5599a x43e1cccd 1}
       {x44d59666 x43e1cccd 1}
       {x44d6c333 x43e1f333 1}
       {x44d79ccd x43e1f333 1}
       {x44d80ccd x43e1cccd 1}
       {x44d79333 x43e1b333 1}}}
     {tx x447a4000 x44d69750 x43e1d41e}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear412 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d53333 x43e2a666 1}
       {x44d5799a x43e2a666 1}
       {x44d66333 x43e2c000 1}
       {x44d6c99a x43e2c000 1}
       {x44d7accd x43e2999a 1}
       {x44d7fccd x43e28000 1}}}
     {tx x447a4000 x44d695df x43e2a667}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear411 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d51ccd x43e30000 1}
       {x44d55000 x43e32666 1}
       {x44d6499a x43e34ccd 1}
       {x44d70666 x43e34ccd 1}
       {x44d82ccd x43e32666 1}
       {x44d8b000 x43e30000 1}
       {x44d88333 x43e2c000 1}}}
     {tx x447a4000 x44d7041e x43e317c6}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear410 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d54000 x43e2c000 1}
       {x44d5c666 x43e2e666 1}
       {x44d64333 x43e30000 1}
       {x44d72333 x43e30ccd 1}
       {x44d7d99a x43e30ccd 1}
       {x44d85000 x43e2e666 1}
       {x44d82ccd x43e2d99a 1}}}
     {tx x447a4000 x44d6f751 x43e2edb7}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear409 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d4f666 x43e44000 1}
       {x44d53ccd x43e44000 1}
       {x44d5899a x43e44000 1}
       {x44d68000 x43e4599a 1}
       {x44d79ccd x43e4199a 1}
       {x44d84000 x43e3cccd 1}
       {x44d80ccd x43e37333 1}}}
     {tx x447a4000 x44d697c7 x43e41075}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear408 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d52666 x43e54ccd 1}
       {x44d59ccd x43e5599a 1}
       {x44d60666 x43e5599a 1}
       {x44d73ccd x43e5599a 1}
       {x44d8099a x43e52666 1}
       {x44d79333 x43e4c000 1}}}
     {tx x447a4000 x44d69b33 x43e53555}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear407 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d4c666 x43e5d99a 1}
       {x44d5699a x43e60000 1}
       {x44d61ccd x43e62666 1}
       {x44d7799a x43e64000 1}
       {x44d8699a x43e62666 1}}}
     {tx x447a4000 x44d67000 x43e6147b}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear406 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d54000 x43e6199a 1}
       {x44d61666 x43e6199a 1}
       {x44d6c333 x43e62666 1}
       {x44d76666 x43e62666 1}
       {x44d8499a x43e5e666 1}}}
     {tx x447a4000 x44d6c1eb x43e6147b}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear405 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d5c000 x43e68ccd 1}
       {x44d60666 x43e6b333 1}
       {x44d62666 x43e6b333 1}
       {x44d77666 x43e6f333 1}
       {x44d8b000 x43e6cccd 1}
       {x44d91666 x43e6a666 1}
       {x44d8a666 x43e68000 1}}}
     {tx x447a4000 x44d766db x43e6b160}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear404 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d55666 x43e6d99a 1}
       {x44d5b666 x43e6d99a 1}
       {x44d61ccd x43e6f333 1}
       {x44d72ccd x43e73333 1}
       {x44d83666 x43e74000 1}
       {x44d8c000 x43e74000 1}
       {x44d89000 x43e7199a 1}}}
     {tx x447a4000 x44d71f8a x43e71076}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear403 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d5b99a x43e74000 1}
       {x44d69666 x43e77333 1}
       {x44d7199a x43e78000 1}
       {x44d84666 x43e78000 1}
       {x44d8eccd x43e74000 1}}}
     {tx x447a4000 x44d75290 x43e763d6}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear402 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d65ccd x43e7c000 1}
       {x44d72ccd x43e7e666 1}
       {x44d8c99a x43e7e666 1}
       {x44d9099a x43e7c000 1}
       {x44d95666 x43e78000 1}
       {x44d91000 x43e78000 1}}}
     {tx x447a4000 x44d84b34 x43e7b778}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear401 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d61ccd x43e84ccd 1}
       {x44d6bccd x43e86666 1}
       {x44d75000 x43e87333 1}
       {x44d8b000 x43e87333 1}
       {x44d9accd x43e84ccd 1}
       {x44d96ccd x43e82666 1}}}
     {tx x447a4000 x44d7fddf x43e85778}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear400 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d60333 x43ea3333 1}
       {x44d65ccd x43ea4ccd 1}
       {x44d6d333 x43ea599a 1}
       {x44d88666 x43ea4ccd 1}
       {x44d9dccd x43e98ccd 1}
       {x44d9e666 x43e90000 1}}}
     {tx x447a4000 x44d7ea23 x43e9f333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear399 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d62000 x43ec599a 1}
       {x44d6cccd x43ec599a 1}
       {x44d75ccd x43ec599a 1}
       {x44d80333 x43ec4000 1}
       {x44d95ccd x43ec3333 1}
       {x44da7333 x43ebd99a 1}}}
     {tx x447a4000 x44d804cc x43ec3999}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear398 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d4b333 x43eb8ccd 1}
       {x44d4799a x43ebcccd 1}
       {x44d57000 x43ec199a 1}
       {x44d6999a x43ec199a 1}
       {x44d76000 x43ec199a 1}
       {x44d94333 x43ebd99a 1}
       {x44da0333 x43eba666 1}
       {x44d96666 x43eba666 1}}}
     {tx x447a4000 x44d72866 x43ebd99a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear397 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d70000 x43f63333 1}
       {x44d7a666 x43f6999a 1}
       {x44d86000 x43f6cccd 1}
       {x44d9e000 x43f7199a 1}
       {x44dbb99a x43f76666 1}
       {x44dd399a x43f83333 1}}}
     {tx x447a4000 x44d9a444 x43f70ccc}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear396 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d70ccd x43f1999a 1}
       {x44d72ccd x43f1999a 1}
       {x44d84ccd x43f20000 1}
       {x44d94ccd x43f20000 1}
       {x44da6ccd x43f20000 1}
       {x44dbe000 x43f1cccd 1}
       {x44dc2ccd x43f1cccd 1}
       {x44dc0ccd x43f1cccd 1}}}
     {tx x447a4000 x44d9cb34 x43f1d334}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear395 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d67333 x43f0e666 1}
       {x44d72ccd x43f0e666 1}
       {x44d7b333 x43f10000 1}
       {x44d92666 x43f10000 1}
       {x44da2666 x43f0e666 1}
       {x44da6666 x43f0cccd 1}
       {x44d9c666 x43f0cccd 1}}}
     {tx x447a4000 x44d8af8b x43f0e667}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear394 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d58000 x43f0e666 1}
       {x44d6a666 x43f10000 1}
       {x44d74666 x43f1199a 1}
       {x44d8f99a x43f1199a 1}
       {x44da199a x43f0b333 1}
       {x44da8000 x43f06666 1}
       {x44da0ccd x43f06666 1}}}
     {tx x447a4000 x44d86f8b x43f0cccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear393 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d5e000 x43f16666 1}
       {x44d81333 x43f18000 1}
       {x44d8c666 x43f18000 1}
       {x44d98000 x43f16666 1}
       {x44d94ccd x43f14ccd 1}
       {x44d8a666 x43f14ccd 1}}}
     {tx x447a4000 x44d85ccd x43f16668}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear392 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d60000 x43f1b333 1}
       {x44d72ccd x43f20000 1}
       {x44d7d99a x43f2199a 1}
       {x44d94ccd x43f23333 1}
       {x44da0000 x43f23333 1}
       {x44d9d99a x43f2199a 1}}}
     {tx x447a4000 x44d85ccc x43f20ccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear391 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d6799a x43f28000 1}
       {x44d6c000 x43f28000 1}
       {x44d7f333 x43f2b333 1}
       {x44d8999a x43f2b333 1}
       {x44d9cccd x43f2cccd 1}
       {x44da199a x43f2cccd 1}
       {x44d98000 x43f2cccd 1}}}
     {tx x447a4000 x44d8741e x43f2af8d}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear390 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d5f99a x43f38000 1}
       {x44d68ccd x43f38000 1}
       {x44d81333 x43f3b333 1}
       {x44d8d333 x43f3b333 1}
       {x44da0666 x43f3999a 1}
       {x44da3333 x43f36666 1}
       {x44d9d333 x43f34ccd 1}}}
     {tx x447a4000 x44d87f16 x43f38751}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear389 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d6e000 x43f4199a 1}
       {x44d88ccd x43f48000 1}
       {x44da399a x43f4999a 1}
       {x44da9333 x43f4999a 1}
       {x44db0000 x43f44ccd 1}
       {x44da8000 x43f43333 1}}}
     {tx x447a4000 x44d99ef0 x43f46223}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear388 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d62ccd x43f4b333 1}
       {x44d6f333 x43f4cccd 1}
       {x44d8d99a x43f50000 1}
       {x44d9d99a x43f4e666 1}
       {x44db0ccd x43f48000 1}
       {x44dad333 x43f43333 1}
       {x44daa666 x43f43333 1}}}
     {tx x447a4000 x44d9315f x43f49d41}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear387 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d60666 x43f56666 1}
       {x44d7accd x43f5b333 1}
       {x44d8399a x43f5cccd 1}
       {x44da0ccd x43f5cccd 1}
       {x44da8ccd x43f58000 1}}}
     {tx x447a4000 x44d88148 x43f5a3d6}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear386 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d4cccd x43f80000 1}
       {x44d5f99a x43f83333 1}
       {x44d6c666 x43f86666 1}
       {x44d8eccd x43f84ccd 1}
       {x44da399a x43f7999a 1}
       {x44da5333 x43f73333 1}}}
     {tx x447a4000 x44d7d667 x43f7f333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear385 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d6599a x43facccd 1}
       {x44d6a000 x43facccd 1}
       {x44d84666 x43fb0000 1}
       {x44d98666 x43fb0000 1}
       {x44db0000 x43fa6666 1}
       {x44dac000 x43fa0000 1}}}
     {tx x447a4000 x44d8c111 x43faaaab}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear384 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d68000 x43fbcccd 1}
       {x44d8d99a x43fc8000 1}
       {x44d94ccd x43fc8000 1}
       {x44da399a x43fc3333 1}
       {x44dacccd x43fc0000 1}
       {x44db2666 x43fbb333 1}
       {x44db599a x43fb999a 1}}}
     {tx x447a4000 x44d9bd42 x43fc0af8}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear383 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d5d333 x43f9199a 1}
       {x44d5f333 x43f9199a 1}
       {x44d68000 x43f94ccd 1}
       {x44d79333 x43f9b333 1}
       {x44d96ccd x43f9cccd 1}
       {x44da799a x43f9cccd 1}
       {x44daaccd x43f9e666 1}}}
     {tx x447a4000 x44d80f8b x43f98751}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear382 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d57333 x43f93333 1}
       {x44d6799a x43f9b333 1}
       {x44d74ccd x43f9e666 1}
       {x44d94000 x43fa0000 1}
       {x44db3333 x43fa0000 1}
       {x44db6000 x43fa0000 1}
       {x44db199a x43f9e666 1}}}
     {tx x447a4000 x44d8e0e9 x43f9d076}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear381 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d52ccd x43fb4ccd 1}
       {x44d5799a x43fb3333 1}
       {x44d5f99a x43fb199a 1}
       {x44d6e666 x43fb0000 1}
       {x44d9399a x43fa8000 1}
       {x44db1333 x43fa199a 1}
       {x44dbeccd x43f9b333 1}}}
     {tx x447a4000 x44d7f6db x43fab332}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear380 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d79333 x43ff8000 1}
       {x44d82666 x43ffb333 1}
       {x44d8f333 x43ffb333 1}
       {x44daa000 x43ff6666 1}
       {x44dbd333 x43ff199a 1}
       {x44dc0ccd x43ff199a 1}}}
     {tx x447a4000 x44d9dccd x43ff6aab}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear379 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d80666 x44003333 1}
       {x44d8accd x44002666 1}
       {x44d96000 x44002666 1}
       {x44da8000 x4400199a 1}
       {x44db999a x44000000 1}}}
     {tx x447a4000 x44d9a290 x44001eb8}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear378 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d69333 x44004ccd 1}
       {x44d6f99a x44004ccd 1}
       {x44d7accd x4400599a 1}
       {x44d90000 x4400599a 1}
       {x44da0666 x44004ccd 1}
       {x44da7333 x44004ccd 1}}}
     {tx x447a4000 x44d87333 x44005111}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear377 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d71333 x44004ccd 1}
       {x44d73333 x44004ccd 1}
       {x44d8599a x44006666 1}
       {x44d9e666 x44006666 1}
       {x44db3333 x44004ccd 1}
       {x44db9333 x44004000 1}
       {x44db2000 x44004000 1}}}
     {tx x447a4000 x44d97d41 x44005075}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear376 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d6c666 x4400999a 1}
       {x44d70000 x4400999a 1}
       {x44d88000 x4400a666 1}
       {x44da9333 x44008ccd 1}
       {x44dac000 x44008000 1}
       {x44db0666 x44008000 1}
       {x44db2666 x4400599a 1}
       {x44dae000 x4400599a 1}}}
     {tx x447a4000 x44d994ce x44008333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear375 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d73333 x4400c000 1}
       {x44d7b99a x4400d99a 1}
       {x44d84ccd x4400d99a 1}
       {x44d9c666 x4400d99a 1}
       {x44db6ccd x4400c000 1}
       {x44dbeccd x4400b333 1}
       {x44db6000 x4400a666 1}}}
     {tx x447a4000 x44d9acce x4400c57d}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear374 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d62000 x4401199a 1}
       {x44d6b99a x4401199a 1}
       {x44d75333 x44012666 1}
       {x44d92ccd x44012666 1}
       {x44dacccd x44010000 1}
       {x44db6ccd x4400d99a 1}
       {x44daf99a x4400cccd 1}}}
     {tx x447a4000 x44d8ef8b x4401057c}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear373 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d6a666 x4401c000 1}
       {x44d74000 x4401c000 1}
       {x44d76ccd x4401c000 1}
       {x44d7e666 x4401c000 1}
       {x44d98ccd x4401a666 1}
       {x44db4000 x44018000 1}
       {x44dba000 x44016666 1}}}
     {tx x447a4000 x44d8cea1 x4401a667}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear372 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d68ccd x44027333 1}
       {x44d7c000 x44028ccd 1}
       {x44d88ccd x44028ccd 1}
       {x44da4000 x44028ccd 1}
       {x44dbb99a x44026666 1}}}
     {tx x447a4000 x44d8f70a x44028000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear371 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d6a666 x4402a666 1}
       {x44d6eccd x4402a666 1}
       {x44d84000 x4402cccd 1}
       {x44d94666 x4402cccd 1}
       {x44db2666 x4402cccd 1}
       {x44dbf99a x4402b333 1}}}
     {tx x447a4000 x44d90999 x4402bbbb}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear370 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d66ccd x44030000 1}
       {x44d6f333 x4403199a 1}
       {x44d79333 x44032666 1}
       {x44d95333 x44034000 1}
       {x44dad333 x44034000 1}
       {x44db8ccd x44032666 1}
       {x44db4000 x44032666 1}}}
     {tx x447a4000 x44d920ea x44032667}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear369 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d60666 x44047333 1}
       {x44d68ccd x44047333 1}
       {x44d77333 x44047333 1}
       {x44d9b333 x44046666 1}
       {x44db1333 x4404199a 1}
       {x44db4666 x4403d99a 1}}}
     {tx x447a4000 x44d8addf x44044888}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear368 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d82000 x44062666 1}
       {x44d86ccd x4406599a 1}
       {x44d8d99a x44066666 1}
       {x44da6ccd x44067333 1}
       {x44dc0666 x4406599a 1}
       {x44dcd99a x44063333 1}}}
     {tx x447a4000 x44da1ddd x44065111}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear367 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d75333 x44058000 1}
       {x44d78666 x4405999a 1}
       {x44d93333 x4405999a 1}
       {x44da0000 x4405999a 1}
       {x44db999a x44058ccd 1}
       {x44dc599a x44056666 1}
       {x44dc3333 x44056666 1}}}
     {tx x447a4000 x44da0750 x4405857d}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear366 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d6cccd x4404a666 1}
       {x44d7e666 x4404b333 1}
       {x44d8eccd x4404c000 1}
       {x44d96ccd x4404c000 1}
       {x44db2666 x4404d99a 1}
       {x44dc5333 x4404b333 1}}}
     {tx x447a4000 x44d96bbb x4404bbbb}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear365 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d52000 x44050000 1}
       {x44d56000 x4405199a 1}
       {x44d64ccd x4405199a 1}
       {x44d70ccd x44050ccd 1}
       {x44d96666 x4404d99a 1}
       {x44db0000 x4404a666 1}
       {x44dc599a x4404a666 1}
       {x44dca666 x4404999a 1}
       {x44dc5333 x4404999a 1}}}
     {tx x447a4000 x44d9105b x4404d82d}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear364 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d7a99a x44080000 1}
       {x44d7cccd x44080000 1}
       {x44d8e333 x44080000 1}
       {x44d98000 x4407f333 1}
       {x44dac666 x4407e000 1}
       {x44db5000 x4407e000 1}
       {x44db7000 x4407e666 1}}}
     {tx x447a4000 x44d9a000 x4407f15f}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear363 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d6f000 x4408199a 1}
       {x44d8a99a x4408199a 1}
       {x44d8dccd x4408199a 1}
       {x44d91000 x4408199a 1}
       {x44d97000 x4408199a 1}
       {x44da3000 x44080ccd 1}
       {x44da799a x44080ccd 1}
       {x44da9ccd x44080ccd 1}
       {x44da7000 x4408199a 1}}}
     {tx x447a4000 x44d96889 x44081555}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear362 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d74666 x44085333 1}
       {x44d7a99a x4408399a 1}
       {x44d88000 x44082ccd 1}
       {x44d9b99a x44082ccd 1}
       {x44daa333 x44082ccd 1}
       {x44da7000 x44082ccd 1}}}
     {tx x447a4000 x44d90a21 x44083555}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear361 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d6e333 x4408b99a 1}
       {x44d73333 x4408b99a 1}
       {x44d8799a x4408b99a 1}
       {x44d92333 x4408accd 1}
       {x44da9000 x4408accd 1}
       {x44dae99a x4408b99a 1}}}
     {tx x447a4000 x44d8dccc x4408b555}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear360 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d71666 x44090ccd 1}
       {x44d74000 x44090ccd 1}
       {x44d83000 x4409199a 1}
       {x44d91ccd x4409199a 1}
       {x44da799a x4409199a 1}
       {x44dae333 x44090ccd 1}
       {x44dab000 x44090ccd 1}}}
     {tx x447a4000 x44d91925 x44091249}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear359 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d6b333 x4409999a 1}
       {x44d7c000 x4409999a 1}
       {x44d88ccd x4409a000 1}
       {x44da5000 x44098ccd 1}
       {x44db5ccd x44097333 1}}}
     {tx x447a4000 x44d8ef5d x440990a4}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear358 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d6dccd x4409accd 1}
       {x44d7c666 x4409b99a 1}
       {x44d87333 x4409b99a 1}
       {x44da5666 x4409a000 1}
       {x44db2333 x4409999a 1}}}
     {tx x447a4000 x44d8e99a x4409ab85}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear357 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d6699a x440a4666 1}
       {x44d68ccd x440a4666 1}
       {x44d7b99a x440a6000 1}
       {x44d8799a x440a7333 1}
       {x44da6333 x440a8000 1}
       {x44dadccd x440a8000 1}
       {x44da9000 x440a7333 1}}}
     {tx x447a4000 x44d8b5f1 x440a6751}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear356 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d60000 x440c2ccd 1}
       {x44d65ccd x440c199a 1}
       {x44d73333 x440c0ccd 1}
       {x44d85000 x440bf333 1}
       {x44d9b333 x440bc666 1}
       {x44da7000 x440b8000 1}}}
     {tx x447a4000 x44d80088 x440beccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear355 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d7299a x440e0ccd 1}
       {x44d79666 x440e0ccd 1}
       {x44d80666 x440e0ccd 1}
       {x44d95ccd x440e0000 1}
       {x44da699a x440de666 1}
       {x44dae333 x440daccd 1}}}
     {tx x447a4000 x44d8e800 x440df445}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear354 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d75666 x440de666 1}
       {x44d79ccd x440e0ccd 1}
       {x44d87333 x440e199a 1}
       {x44d9399a x440e0ccd 1}
       {x44da5666 x440df333 1}
       {x44daf000 x440de666 1}
       {x44dad000 x440de666 1}}}
     {tx x447a4000 x44d93ea1 x440dfa85}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear353 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d61000 x440d199a 1}
       {x44d64666 x440d2ccd 1}
       {x44d68ccd x440d399a 1}
       {x44d81000 x440d399a 1}
       {x44d9a99a x440d199a 1}
       {x44da9666 x440d0000 1}}}
     {tx x447a4000 x44d7dddf x440d2334}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear352 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d55000 x440c8000 1}
       {x44d5b99a x440c999a 1}
       {x44d71666 x440ca000 1}
       {x44d7cccd x440ca000 1}
       {x44d95000 x440c7333 1}
       {x44dad666 x440c4666 1}
       {x44db4666 x440c399a 1}}}
     {tx x447a4000 x44d83160 x440c78af}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear351 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d8399a x440ff333 1}
       {x44d86333 x440ff333 1}
       {x44d8a333 x440ff333 1}
       {x44d99ccd x440ff333 1}
       {x44daf333 x440fe666 1}
       {x44dbcccd x440ff333 1}}}
     {tx x447a4000 x44d99a23 x440ff111}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear350 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d74666 x44102ccd 1}
       {x44d7b333 x44102000 1}
       {x44d8e99a x4410199a 1}
       {x44d9399a x4410199a 1}
       {x44da7000 x440fe000 1}
       {x44db4ccd x440f999a 1}
       {x44dbd666 x440f7333 1}}}
     {tx x447a4000 x44d986db x440feaf9}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear349 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d6b000 x44106666 1}
       {x44d6e333 x44106666 1}
       {x44d7f000 x44106666 1}
       {x44d85000 x44106666 1}
       {x44d95ccd x44106000 1}
       {x44d9d000 x44105333 1}
       {x44d9699a x44105333 1}}}
     {tx x447a4000 x44d8583a x44106000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear348 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d69666 x44108000 1}
       {x44d80000 x44108000 1}
       {x44d8d000 x44107333 1}
       {x44d9d000 x44107333 1}
       {x44d9f99a x44107333 1}
       {x44d9c666 x44107333 1}}}
     {tx x447a4000 x44d8d3bc x44107778}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear347 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d69666 x4410accd 1}
       {x44d6d000 x4410accd 1}
       {x44d74ccd x4410accd 1}
       {x44d8c666 x4410a000 1}
       {x44d9e333 x4410999a 1}
       {x44da1ccd x44108ccd 1}
       {x44d98ccd x44108ccd 1}}}
     {tx x447a4000 x44d86ea1 x44109f16}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear346 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d65666 x44116000 1}
       {x44d75666 x44115333 1}
       {x44d7f99a x44115333 1}
       {x44d98ccd x44114666 1}
       {x44da1ccd x44112ccd 1}
       {x44d9e333 x44112000 1}}}
     {tx x447a4000 x44d88888 x44114445}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear345 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d5c666 x44118ccd 1}
       {x44d6dccd x4411999a 1}
       {x44d7799a x4411a000 1}
       {x44d8cccd x4411accd 1}
       {x44d96333 x4411accd 1}
       {x44d9299a x4411accd 1}}}
     {tx x447a4000 x44d7e911 x4411a222}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear344 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d6799a x44126666 1}
       {x44d73333 x44126000 1}
       {x44d7c666 x44126000 1}
       {x44d94000 x44124666 1}
       {x44da1666 x4412199a 1}
       {x44d98666 x44120000 1}}}
     {tx x447a4000 x44d862ab x44124111}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear343 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d65ccd x4412c666 1}
       {x44d6b000 x4412c666 1}
       {x44d72333 x4412d333 1}
       {x44d88000 x4412e000 1}
       {x44d99000 x4412e000 1}
       {x44d9e99a x4412b99a 1}
       {x44d9a99a x4412accd 1}}}
     {tx x447a4000 x44d842be x4412ca0f}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear342 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d5f000 x4412e000 1}
       {x44d6d000 x4412d333 1}
       {x44d76333 x4412d333 1}
       {x44d8799a x4412f333 1}
       {x44d93000 x4412f333 1}
       {x44d8d666 x4412f333 1}}}
     {tx x447a4000 x44d7c5df x4412e556}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear341 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d58000 x4413accd 1}
       {x44d69000 x4413c666 1}
       {x44d7299a x4413d333 1}
       {x44d85ccd x4413e000 1}
       {x44d98000 x4413c666 1}
       {x44da0ccd x4413accd 1}}}
     {tx x447a4000 x44d7db33 x4413c445}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear340 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d51ccd x4414e000 1}
       {x44d54ccd x4414e000 1}
       {x44d65ccd x4415199a 1}
       {x44d69000 x44152000 1}
       {x44d80ccd x44152ccd 1}
       {x44d89000 x44152ccd 1}}}
     {tx x447a4000 x44d6a889 x44150ddd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear339 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d46333 x44165333 1}
       {x44d48666 x44165333 1}
       {x44d57333 x44167333 1}
       {x44d60ccd x44168000 1}
       {x44d79666 x44168ccd 1}
       {x44d88666 x44168000 1}
       {x44d8c000 x44166666 1}}}
     {tx x447a4000 x44d677c6 x44166f8a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear338 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d44666 x4417999a 1}
       {x44d51666 x4417a000 1}
       {x44d60000 x4417accd 1}
       {x44d77333 x4417accd 1}
       {x44d87000 x4417999a 1}
       {x44d85000 x44177333 1}}}
     {tx x447a4000 x44d69800 x44179aab}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear337 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d44666 x4417b99a 1}
       {x44d49ccd x4417c666 1}
       {x44d5a99a x4417d333 1}
       {x44d67333 x4417e000 1}
       {x44d75ccd x4417d333 1}
       {x44d7b333 x4417d333 1}
       {x44d78000 x4417d333 1}}}
     {tx x447a4000 x44d63925 x4417cf8b}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear336 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d46333 x4418399a 1}
       {x44d50ccd x44182ccd 1}
       {x44d58ccd x44182000 1}
       {x44d6dccd x4418199a 1}
       {x44d7b000 x44180000 1}
       {x44d7f333 x4417f333 1}
       {x44d77333 x4417f333 1}}}
     {tx x447a4000 x44d66b6d x44181333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear335 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2f000 x4418d333 1}
       {x44d34666 x4418accd 1}
       {x44d4e333 x4418a000 1}
       {x44d5c666 x44188ccd 1}
       {x44d6dccd x44186000 1}
       {x44d75ccd x44184666 1}
       {x44d6e333 x44184666 1}}}
     {tx x447a4000 x44d56d42 x441883a8}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear334 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d3299a x44197333 1}
       {x44d44666 x44195333 1}
       {x44d4cccd x44195333 1}
       {x44d65000 x44194666 1}
       {x44d75666 x44192ccd 1}
       {x44d73333 x44192ccd 1}
       {x44d68666 x44192ccd 1}}}
     {tx x447a4000 x44d5a8af x4419457d}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear333 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d1a333 x441ad333 1}
       {x44d1f99a x441ad333 1}
       {x44d28000 x441ad333 1}
       {x44d39ccd x441ac666 1}
       {x44d54666 x441aa000 1}
       {x44d7299a x441a6666 1}
       {x44d7cccd x441a4666 1}
       {x44d7699a x441a2ccd 1}
       {x44d71000 x441a2000 1}}}
     {tx x447a4000 x44d4f000 x441a89f5}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear332 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d4799a x441d6666 1}
       {x44d4b000 x441d6666 1}
       {x44d57000 x441d8000 1}
       {x44d5f333 x441d7333 1}
       {x44d64666 x441d2ccd 1}}}
     {tx x447a4000 x44d55d70 x441d628f}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear331 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d4699a x441d6666 1}
       {x44d49666 x441d7333 1}
       {x44d55000 x441d7333 1}
       {x44d60666 x441d7333 1}
       {x44d70ccd x441d6666 1}
       {x44d7b000 x441d6666 1}
       {x44d76333 x441d6666 1}}}
     {tx x447a4000 x44d610ea x441d6be3}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear330 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2b000 x441d7333 1}
       {x44d2f99a x441d999a 1}
       {x44d42333 x441db99a 1}
       {x44d51000 x441daccd 1}
       {x44d68666 x441d8ccd 1}
       {x44d75666 x441d6666 1}
       {x44d71ccd x441d6666 1}}}
     {tx x447a4000 x44d51ea1 x441d8af9}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear329 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d22333 x441a7333 1}
       {x44d2f000 x441a8000 1}
       {x44d3c666 x441a8000 1}
       {x44d55666 x441a8000 1}
       {x44d69000 x441a8000 1}
       {x44d67333 x441ab99a 1}}}
     {tx x447a4000 x44d48888 x441a8778}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear328 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d3399a x441b0000 1}
       {x44d40000 x441af333 1}
       {x44d4cccd x441ae666 1}
       {x44d66333 x441ab99a 1}
       {x44d74000 x441a999a 1}
       {x44d6f333 x441a8ccd 1}}}
     {tx x447a4000 x44d56f78 x441ac99a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear327 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d21666 x441b8ccd 1}
       {x44d24ccd x441b999a 1}
       {x44d2b99a x441b999a 1}
       {x44d45666 x441baccd 1}
       {x44d61000 x441b8ccd 1}
       {x44d6e99a x441b7333 1}
       {x44d6b99a x441b5333 1}
       {x44d69000 x441b5333 1}}}
     {tx x447a4000 x44d4b6cd x441b8266}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear326 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2c000 x441c6666 1}
       {x44d2f99a x441c6666 1}
       {x44d4c000 x441c7333 1}
       {x44d5799a x441c6666 1}
       {x44d6cccd x441c2ccd 1}
       {x44d7399a x441c0ccd 1}
       {x44d7699a x441be666 1}}}
     {tx x447a4000 x44d55750 x441c40ea}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear325 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d21000 x441ce000 1}
       {x44d26333 x441ce000 1}
       {x44d2c666 x441ce666 1}
       {x44d40ccd x441cd333 1}
       {x44d4cccd x441cb99a 1}
       {x44d5299a x441caccd 1}}}
     {tx x447a4000 x44d38a21 x441ccfff}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear324 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d1e99a x441d8000 1}
       {x44d2299a x441d8000 1}
       {x44d2b333 x441d8000 1}
       {x44d4b333 x441d6666 1}
       {x44d5d000 x441d4666 1}
       {x44d64ccd x441d2ccd 1}
       {x44d71ccd x441d0ccd 1}}}
     {tx x447a4000 x44d462c0 x441d57c6}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear323 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d34000 x44204666 1}
       {x44d44666 x44204666 1}
       {x44d51666 x44204666 1}
       {x44d7799a x44202ccd 1}
       {x44d91000 x441ff333 1}
       {x44d96333 x441fe666 1}}}
     {tx x447a4000 x44d66c44 x44202444}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear322 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2d666 x44206000 1}
       {x44d31666 x44204666 1}
       {x44d39000 x4420399a 1}
       {x44d4399a x44202ccd 1}
       {x44d68000 x4420199a 1}
       {x44d7f000 x44200000 1}
       {x44d8a99a x44200000 1}}}
     {tx x447a4000 x44d54249 x44202a0f}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear321 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d28666 x4420c666 1}
       {x44d2d666 x4420c666 1}
       {x44d3699a x4420accd 1}
       {x44d4e333 x44208000 1}
       {x44d67000 x44208000 1}
       {x44d8299a x44208000 1}
       {x44d8699a x44208000 1}}}
     {tx x447a4000 x44d53d42 x44209a83}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear320 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cfe333 x44286ccd 1}
       {x44d00333 x44286ccd 1}
       {x44d08000 x44285333 1}
       {x44d1199a x44284000 1}
       {x44d20ccd x4428199a 1}
       {x44d38ccd x4427eccd 1}
       {x44d50333 x4427accd 1}
       {x44d66ccd x44275333 1}
       {x44d73ccd x4426d99a 1}
       {x44d7e000 x4426accd 1}}}
     {tx x447a4000 x44d35d72 x4427cc29}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear319 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cea99a x44292ccd 1}
       {x44cef666 x44291333 1}
       {x44cfe99a x4428d99a 1}
       {x44d04333 x4428cccd 1}
       {x44d19ccd x4428999a 1}
       {x44d31ccd x44286ccd 1}
       {x44d4a333 x44286ccd 1}
       {x44d58333 x44286ccd 1}
       {x44d5d333 x4428799a 1}}}
     {tx x447a4000 x44d20e38 x4428b1c7}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear318 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d13666 x4425799a 1}
       {x44d16000 x4425e000 1}
       {x44d1e99a x4426f333 1}
       {x44d2299a x44278000 1}
       {x44d2c333 x4428a666 1}
       {x44d3b000 x44294ccd 1}
       {x44d4399a x4429399a 1}}}
     {tx x447a4000 x44d27a0e x4427915f}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear317 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d09ccd x44292000 1}
       {x44d19ccd x4428f99a 1}
       {x44d25333 x4428e666 1}
       {x44d3d99a x44289333 1}
       {x44d4a99a x44283333 1}
       {x44d4e000 x4427eccd 1}}}
     {tx x447a4000 x44d2fd55 x44289dde}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear316 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d0a99a x44289333 1}
       {x44d1c333 x4427d333 1}
       {x44d2b333 x44277333 1}
       {x44d4399a x44270000 1}
       {x44d4a333 x4426f333 1}
       {x44d47333 x44272000 1}}}
     {tx x447a4000 x44d312a9 x44277ccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear315 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d05ccd x4428d99a 1}
       {x44d4699a x44275333 1}
       {x44d4099a x4427999a 1}
       {x44d38666 x4427d333 1}}}
     {tx x447a4000 x44d3159a x4427e666}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear314 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d02000 x4428f99a 1}
       {x44d0899a x4428e666 1}
       {x44d1eccd x4428b333 1}
       {x44d32333 x44288666 1}
       {x44d41000 x44284666 1}
       {x44d3cccd x44284666 1}}}
     {tx x447a4000 x44d243bd x44289bbc}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear313 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cfd99a x44292ccd 1}
       {x44d16ccd x44292ccd 1}
       {x44d27ccd x44292ccd 1}
       {x44d3e000 x4428eccd 1}
       {x44d42666 x4428e666 1}
       {x44d3999a x4428d99a 1}
       {x44d27666 x4428d99a 1}}}
     {tx x447a4000 x44d28ccd x442901d3}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear312 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cfd333 x44292000 1}
       {x44d1e99a x4429599a 1}
       {x44d27666 x44296666 1}
       {x44d35333 x44297333 1}}}
     {tx x447a4000 x44d1e199 x442954cd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear311 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d00ccd x442a0000 1}
       {x44d0499a x442a0000 1}
       {x44d0c000 x442a0000 1}
       {x44d24666 x442a199a 1}
       {x44d30333 x442a199a 1}
       {x44d2b666 x442a0000 1}}}
     {tx x447a4000 x44d183bc x442a0888}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear310 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d07333 x442ad333 1}
       {x44d0fccd x442aeccd 1}
       {x44d19666 x442b2666 1}
       {x44d2accd x442b8666 1}
       {x44d35333 x442b9333 1}
       {x44d33333 x442b599a 1}}}
     {tx x447a4000 x44d20999 x442b399b}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear309 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d05666 x442d799a 1}
       {x44d08000 x442d999a 1}
       {x44d19ccd x442df99a 1}
       {x44d23ccd x442e2ccd 1}
       {x44d3699a x442e4000 1}
       {x44d4099a x442e2ccd 1}}}
     {tx x447a4000 x44d205dd x442df111}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear308 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d10000 x442d0000 1}
       {x44d0d333 x442d9333 1}
       {x44d0f000 x442dc000 1}
       {x44d1dccd x442e1333 1}
       {x44d2c333 x442e2000 1}
       {x44d33333 x442deccd 1}}}
     {tx x447a4000 x44d1c3bb x442dbddf}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear307 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cf099a x442c2000 1}
       {x44cf6333 x442c2000 1}
       {x44cfb000 x442c2000 1}
       {x44d18333 x442c6666 1}
       {x44d2f99a x442caccd 1}
       {x44d3a000 x442cc666 1}
       {x44d35ccd x442cb99a 1}}}
     {tx x447a4000 x44d15ea1 x442c6be2}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear306 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d31666 x44294ccd 1}
       {x44d38ccd x44294ccd 1}
       {x44d3eccd x4429599a 1}
       {x44d4399a x44297333 1}}}
     {tx x447a4000 x44d3b266 x4429599a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear305 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2dccd x44283333 1}
       {x44d35666 x44289333 1}
       {x44d3d333 x4428d99a 1}
       {x44d41ccd x44290666 1}
       {x44d44333 x44292000 1}}}
     {tx x447a4000 x44d3ae15 x4428c148}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear304 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2a000 x44297333 1}
       {x44d2c99a x44298666 1}
       {x44d39333 x4429b99a 1}
       {x44d3e666 x4429b99a 1}
       {x44d44000 x44298666 1}}}
     {tx x447a4000 x44d36d70 x4429970a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear303 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d21ccd x44292ccd 1}
       {x44d2b666 x4429a000 1}
       {x44d3e000 x4429f333 1}
       {x44d41000 x442a0000 1}
       {x44d44000 x4429f333 1}}}
     {tx x447a4000 x44d3670a x4429bd71}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear302 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2c333 x44288666 1}
       {x44d3f666 x44294000 1}
       {x44d48ccd x44297333 1}
       {x44d4099a x44294ccd 1}}}
     {tx x447a4000 x44d3d400 x44292199}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear301 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2dccd x44277333 1}
       {x44d4399a x44284666 1}
       {x44d4a333 x4428799a 1}
       {x44d4fccd x4428999a 1}
       {x44d4bccd x44289333 1}}}
     {tx x447a4000 x44d44a3e x44284666}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear300 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d31666 x44258ccd 1}
       {x44d38000 x4426199a 1}
       {x44d4799a x4426a000 1}
       {x44d54333 x4426d99a 1}
       {x44d52000 x4426e666 1}}}
     {tx x447a4000 x44d44a3d x442667ae}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear299 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2accd x44232666 1}
       {x44d4099a x4423b333 1}
       {x44d46ccd x4423cccd 1}
       {x44d4f000 x4423eccd 1}
       {x44d55ccd x44241333 1}
       {x44d4e99a x44242000 1}
       {x44d4a333 x44242ccd 1}}}
     {tx x447a4000 x44d46d41 x4423d999}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear298 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2dccd x4421799a 1}
       {x44d32333 x4421799a 1}
       {x44d40333 x4421799a 1}
       {x44d4e99a x4421799a 1}
       {x44d5499a x44219333 1}
       {x44d4e99a x4421cccd 1}
       {x44d4c000 x4421d99a 1}}}
     {tx x447a4000 x44d44492 x442196db}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear297 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2e666 x44220666 1}
       {x44d47333 x44220000 1}
       {x44d4d99a x44220000 1}
       {x44d5499a x44220000 1}
       {x44d5099a x4421f333 1}}}
     {tx x447a4000 x44d48146 x4421feb9}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear296 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d30000 x44227333 1}
       {x44d37ccd x44227333 1}
       {x44d4699a x44227333 1}
       {x44d4e000 x44227333 1}
       {x44d5799a x44227333 1}
       {x44d55666 x44227333 1}
       {x44d53666 x44227333 1}}}
     {tx x447a4000 x44d48af9 x44227333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear295 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d2e666 x4422e000 1}
       {x44d3eccd x4422e000 1}
       {x44d4bccd x4422d333 1}
       {x44d5199a x4422d333 1}
       {x44d54333 x4422c666 1}
       {x44d5799a x4422c666 1}
       {x44d52000 x4422c666 1}}}
     {tx x447a4000 x44d4a57b x4422d160}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear294 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d3399a x4422eccd 1}
       {x44d4a333 x4422f99a 1}
       {x44d5499a x4422f99a 1}
       {x44d5cccd x4422e000 1}
       {x44d59ccd x4422e000 1}}}
     {tx x447a4000 x44d4e99a x4422eccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear293 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d28333 x4424599a 1}
       {x44d2d000 x44244ccd 1}
       {x44d34ccd x44244ccd 1}
       {x44d5099a x44244ccd 1}
       {x44d6299a x44244ccd 1}}}
     {tx x447a4000 x44d3f70a x44244f5c}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear292 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d23666 x4426199a 1}
       {x44d2b333 x4426accd 1}
       {x44d3d333 x44276666 1}
       {x44d4699a x4427a666 1}
       {x44d5499a x4427d333 1}
       {x44d55666 x44277333 1}}}
     {tx x447a4000 x44d3f667 x44272eef}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear291 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d29333 x4426b99a 1}
       {x44d2c99a x44277333 1}
       {x44d31ccd x4428199a 1}
       {x44d43333 x4429599a 1}
       {x44d4f000 x442a199a 1}
       {x44d4d99a x4429b99a 1}}}
     {tx x447a4000 x44d3be67 x44289333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear290 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d26000 x4424b99a 1}
       {x44d26333 x4425199a 1}
       {x44d2bccd x4426599a 1}
       {x44d3099a x44271333 1}
       {x44d3d99a x4428799a 1}
       {x44d46333 x44294ccd 1}}}
     {tx x447a4000 x44d32110 x4426d666}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear289 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d21ccd x4423799a 1}
       {x44d21ccd x4423cccd 1}
       {x44d23ccd x44249333 1}
       {x44d26333 x44254666 1}
       {x44d2c99a x44270000 1}
       {x44d35666 x44297333 1}
       {x44d39333 x442ae000 1}
       {x44d36333 x442ac000 1}}}
     {tx x447a4000 x44d2be00 x4426e666}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear288 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d22ccd x4425a666 1}
       {x44d24ccd x44268000 1}
       {x44d2b333 x4429a666 1}
       {x44d2e000 x442bcccd 1}
       {x44d36000 x442f4ccd 1}
       {x44d4199a x44317333 1}}}
     {tx x447a4000 x44d2ebbc x442b0eef}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear287 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d22666 x4426199a 1}
       {x44d22666 x4426a666 1}
       {x44d22000 x44294000 1}
       {x44d22000 x442ae666 1}
       {x44d26ccd x442e999a 1}
       {x44d2f333 x44308000 1}
       {x44d2d99a x442f599a 1}
       {x44d2b333 x442e999a 1}}}
     {tx x447a4000 x44d26f32 x442bbe66}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear286 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d1e666 x44244ccd 1}
       {x44d1f333 x44257333 1}
       {x44d20000 x4426c000 1}
       {x44d2199a x442b3333 1}
       {x44d24ccd x442da666 1}
       {x44d27333 x442ed99a 1}
       {x44d28ccd x442f7333 1}
       {x44d26666 x442e7333 1}
       {x44d25333 x442e199a 1}}}
     {tx x447a4000 x44d2382d x442b2221}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear285 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d16ccd x44248ccd 1}
       {x44d16ccd x4425199a 1}
       {x44d16ccd x44270000 1}
       {x44d16ccd x44292666 1}
       {x44d1a000 x442cd99a 1}
       {x44d20000 x442e999a 1}
       {x44d20666 x442da666 1}
       {x44d1eccd x442ca666 1}}}
     {tx x447a4000 x44d1a8cd x4429f19a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear284 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d0a000 x4423f333 1}
       {x44d0999a x44256666 1}
       {x44d0a000 x44267333 1}
       {x44d0c666 x442aa666 1}
       {x44d0eccd x442eb333 1}
       {x44d10666 x44303333 1}}}
     {tx x447a4000 x44d0c334 x44298eef}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear283 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44d0c000 x4425f333 1}
       {x44d0b333 x44268000 1}
       {x44d0b333 x4426f333 1}
       {x44d0b333 x44276666 1}
       {x44d0b333 x442a8ccd 1}
       {x44d0d99a x442f999a 1}
       {x44d14666 x44320000 1}
       {x44d15333 x4431b333 1}}}
     {tx x447a4000 x44d0e000 x442b14cd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear282 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cfcccd x442a4000 1}
       {x44cfb333 x442c0ccd 1}
       {x44cfb99a x442d3333 1}
       {x44d00666 x4431999a 1}
       {x44d0799a x4433b333 1}}}
     {tx x447a4000 x44cff1eb x442e8f5c}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear281 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cfa000 x442a199a 1}
       {x44cfaccd x442b2666 1}
       {x44cfb99a x442c2666 1}
       {x44cfc666 x442ea666 1}
       {x44cfd99a x4431b333 1}
       {x44d0199a x44330000 1}
       {x44d01333 x4431b333 1}}}
     {tx x447a4000 x44cfd507 x442ea2be}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear280 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cf6666 x4429cccd 1}
       {x44cf6666 x442a4ccd 1}
       {x44cf6666 x442b8000 1}
       {x44cf6666 x442d4ccd 1}
       {x44cf6ccd x44308000 1}
       {x44cfb99a x4433199a 1}
       {x44cfd333 x4433c000 1}
       {x44cfb333 x44328000 1}}}
     {tx x447a4000 x44cf88cc x442ed800}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear279 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cf1333 x4429f333 1}
       {x44cf199a x442a6666 1}
       {x44cf199a x442ad99a 1}
       {x44cf2000 x442d0ccd 1}
       {x44cf0000 x44310000 1}
       {x44cf2000 x44336666 1}
       {x44cf4666 x4433c000 1}
       {x44cf4666 x44323333 1}
       {x44cf3333 x44304ccd 1}}}
     {tx x447a4000 x44cf2444 x442efd28}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear278 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ce5333 x442c199a 1}
       {x44ce5333 x442ce666 1}
       {x44ce5333 x442d8ccd 1}
       {x44ce5333 x442fcccd 1}
       {x44ce799a x44343333 1}
       {x44ced333 x44364000 1}
       {x44cef333 x4437599a 1}
       {x44ceb99a x44364ccd 1}
       {x44ceb333 x4435f333 1}}}
     {tx x447a4000 x44ce8d82 x44324444}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear277 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ce6ccd x442ab333 1}
       {x44ce6ccd x442b0ccd 1}
       {x44ce799a x442c0ccd 1}
       {x44ce799a x442dcccd 1}
       {x44ce4ccd x44320000 1}
       {x44cea000 x4435a666 1}
       {x44cf0000 x44367333 1}
       {x44cf0ccd x44352666 1}
       {x44cf0ccd x44348000 1}}}
     {tx x447a4000 x44cea5b2 x4430d111}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear276 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cc7333 x44308000 1}
       {x44cc799a x4430cccd 1}
       {x44cc8ccd x44320ccd 1}
       {x44cca000 x4432f333 1}
       {x44ccc000 x44352666 1}
       {x44ccf99a x44374ccd 1}
       {x44cd0666 x4437999a 1}}}
     {tx x447a4000 x44ccb15f x4433c3a8}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear275 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ccd333 x4431999a 1}
       {x44ccc000 x44326666 1}
       {x44ccb333 x44336666 1}
       {x44cc8ccd x44348ccd 1}
       {x44cc3333 x4437599a 1}
       {x44cc3333 x44384ccd 1}
       {x44cc3333 x4437cccd 1}
       {x44cc3333 x44378ccd 1}}}
     {tx x447a4000 x44cc73ff x44355e68}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear274 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cce666 x44308ccd 1}
       {x44ccf333 x44314ccd 1}
       {x44ccf333 x4431c000 1}
       {x44ccf99a x4433e666 1}
       {x44cd0000 x4436b333 1}
       {x44cd0666 x4438999a 1}
       {x44ccf333 x44394ccd 1}
       {x44ccd333 x44393333 1}}}
     {tx x447a4000 x44ccf266 x4435299a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear273 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cd2666 x442e999a 1}
       {x44cd2666 x442f4ccd 1}
       {x44cd2666 x442fe666 1}
       {x44cd0000 x4432b333 1}
       {x44cceccd x44357333 1}
       {x44ccf333 x4437999a 1}
       {x44cceccd x44380000 1}}}
     {tx x447a4000 x44cd0925 x4433141e}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear272 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ccf99a x442da666 1}
       {x44ccf99a x442e6666 1}
       {x44ccf99a x442ef333 1}
       {x44cd0000 x44314000 1}
       {x44ccf333 x44344ccd 1}
       {x44cceccd x44377333 1}
       {x44cd0ccd x4438599a 1}}}
     {tx x447a4000 x44ccfa85 x443255f1}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear271 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ccaccd x4431e666 1}
       {x44ccaccd x44324ccd 1}
       {x44ccaccd x4433e666 1}
       {x44ccaccd x44347333 1}
       {x44ccd333 x44368000 1}
       {x44cceccd x44373333 1}}}
     {tx x447a4000 x44ccbddf x44346000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear270 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cd0666 x4431f333 1}
       {x44ccf333 x44332666 1}
       {x44cceccd x4433d99a 1}
       {x44ccc000 x4435e666 1}
       {x44ccb99a x4437e666 1}
       {x44ccb99a x44383333 1}}}
     {tx x447a4000 x44ccd999 x44352888}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear269 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cd0666 x442f4ccd 1}
       {x44cd2666 x442fd99a 1}
       {x44cd399a x4430599a 1}
       {x44cd6666 x44323333 1}
       {x44cd6666 x4434e666 1}
       {x44cd799a x44368000 1}}}
     {tx x447a4000 x44cd4778 x44322eef}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear268 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cd0000 x44306666 1}
       {x44cd199a x4431d99a 1}
       {x44cd3333 x4432cccd 1}
       {x44cd6ccd x44357333 1}
       {x44cd9333 x44374ccd 1}
       {x44cd7333 x44374000 1}}}
     {tx x447a4000 x44cd4aa9 x44342ccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear267 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cca000 x4431199a 1}
       {x44ccaccd x44318ccd 1}
       {x44ccb99a x44320ccd 1}
       {x44ccf333 x44338ccd 1}
       {x44cd1333 x4435cccd 1}
       {x44cd2000 x44374ccd 1}}}
     {tx x447a4000 x44ccdccd x44338eef}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear266 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cccccd x44310ccd 1}
       {x44ccb333 x44314000 1}
       {x44ccb333 x4431999a 1}
       {x44ccaccd x4432f333 1}
       {x44ccb99a x4435199a 1}
       {x44ccc000 x4437b333 1}
       {x44cce000 x4438a666 1}
       {x44ccf333 x44384000 1}
       {x44ccf333 x4437d99a 1}}}
     {tx x447a4000 x44cccaaa x4434eeef}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear265 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cbe333 x4433a000 1}
       {x44cbe333 x44352000 1}
       {x44cbdccd x44361333 1}
       {x44cbdccd x44386ccd 1}
       {x44cc099a x443b0666 1}
       {x44cbfccd x443c2666 1}}}
     {tx x447a4000 x44cbebbc x4437bccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear264 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cb9666 x4432b99a 1}
       {x44cba666 x4433a000 1}
       {x44cbaccd x4434c000 1}
       {x44cba666 x44374ccd 1}
       {x44cbe99a x443a0000 1}
       {x44cc0333 x443b2ccd 1}
       {x44cc0333 x443aeccd 1}
       {x44cbdccd x4438d99a 1}}}
     {tx x447a4000 x44cbcb99 x44376b33}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear263 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cb3000 x4432f333 1}
       {x44cb3666 x44333333 1}
       {x44cb4666 x44343333 1}
       {x44cb4666 x4435399a 1}
       {x44cb5333 x4437f333 1}
       {x44cb9000 x4439e666 1}
       {x44cba333 x443a4666 1}
       {x44cb9666 x44386000 1}
       {x44cb9000 x44380ccd 1}}}
     {tx x447a4000 x44cb671c x4436ae39}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear262 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cb3000 x4434199a 1}
       {x44cb1ccd x44346000 1}
       {x44cb1666 x44356ccd 1}
       {x44cb1666 x4436399a 1}
       {x44cb3666 x4438d99a 1}
       {x44cb7000 x443a8000 1}
       {x44cb5333 x4439a000 1}}}
     {tx x447a4000 x44cb3507 x443703a8}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear261 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44cae666 x4432accd 1}
       {x44caf99a x44330000 1}
       {x44cb2333 x4434a666 1}
       {x44cb2333 x4434f333 1}
       {x44cb2333 x4435a666 1}
       {x44cb2333 x44389333 1}
       {x44cb3666 x443a2ccd 1}
       {x44cb399a x44396ccd 1}}}
     {tx x447a4000 x44cb1b9a x44362333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear260 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ca8666 x44329333 1}
       {x44ca8000 x4433599a 1}
       {x44ca7333 x4433cccd 1}
       {x44ca2ccd x44366666 1}
       {x44ca199a x4439b333 1}
       {x44ca799a x443b8000 1}
       {x44caa333 x443bb333 1}
       {x44cab000 x4439cccd 1}}}
     {tx x447a4000 x44ca7199 x44375a66}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear259 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ca3000 x4433d99a 1}
       {x44ca3000 x4434f333 1}
       {x44ca2666 x4435c000 1}
       {x44c9f666 x4438accd 1}
       {x44ca0ccd x443be000 1}
       {x44ca3666 x443caccd 1}
       {x44ca3000 x443beccd 1}
       {x44ca199a x4439cccd 1}}}
     {tx x447a4000 x44ca2133 x4438b001}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear258 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c97ccd x44340ccd 1}
       {x44c9899a x4434799a 1}
       {x44c9899a x44351333 1}
       {x44c9699a x4437eccd 1}
       {x44c94666 x443b2000 1}
       {x44c97000 x443d9333 1}
       {x44c9a000 x443e6ccd 1}
       {x44c9a666 x443d3333 1}
       {x44c9999a x443c2666 1}}}
     {tx x447a4000 x44c981c7 x44398e39}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear257 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c86ccd x44382666 1}
       {x44c85333 x4439c000 1}
       {x44c85000 x443b0666 1}
       {x44c85000 x443d799a 1}
       {x44c85000 x443ea000 1}
       {x44c84333 x443e5333 1}}}
     {tx x447a4000 x44c85333 x443be444}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear256 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c7f99a x44384ccd 1}
       {x44c7f99a x4438cccd 1}
       {x44c80000 x4439399a 1}
       {x44c80666 x4439a666 1}
       {x44c8199a x443ba666 1}
       {x44c8299a x443e2666 1}
       {x44c85333 x443f0ccd 1}
       {x44c85000 x443e6ccd 1}}}
     {tx x447a4000 x44c81bff x443b6801}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear255 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c8899a x4438a000 1}
       {x44c88000 x44398666 1}
       {x44c8799a x443a6000 1}
       {x44c86666 x443be000 1}
       {x44c87333 x443e0000 1}
       {x44c8899a x443eb333 1}
       {x44c87333 x443e2666 1}}}
     {tx x447a4000 x44c87a83 x443be492}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear254 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c90333 x44376666 1}
       {x44c90333 x4437accd 1}
       {x44c8fccd x44393333 1}
       {x44c8fccd x443a2000 1}
       {x44c8f000 x443cb99a 1}
       {x44c8d99a x443e6ccd 1}
       {x44c8cccd x443f0ccd 1}
       {x44c8b666 x443e2666 1}}}
     {tx x447a4000 x44c8e99a x443b5801}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear253 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c88666 x4438b99a 1}
       {x44c89000 x4439d99a 1}
       {x44c89000 x443a8ccd 1}
       {x44c89000 x443c9333 1}
       {x44c89000 x443cf333 1}
       {x44c89666 x443f2ccd 1}
       {x44c89666 x443f999a 1}
       {x44c8899a x443f4666 1}}}
     {tx x447a4000 x44c88f9a x443c9667}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear252 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c8d99a x44373333 1}
       {x44c8d99a x4437a000 1}
       {x44c8d99a x4438199a 1}
       {x44c8c000 x443a1333 1}
       {x44c8a99a x443caccd 1}
       {x44c8b000 x443f2000 1}
       {x44c8a333 x44408000 1}
       {x44c88000 x4440b333 1}
       {x44c86000 x443f7333 1}
       {x44c86000 x443f2ccd 1}}}
     {tx x447a4000 x44c8a75c x443c7666}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear251 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c8e666 x44352ccd 1}
       {x44c8e666 x4435a666 1}
       {x44c8f666 x44367333 1}
       {x44c9099a x4438799a 1}
       {x44c8e000 x443bc666 1}
       {x44c8d333 x443db99a 1}
       {x44c8cccd x443cc666 1}}}
     {tx x447a4000 x44c8e666 x4439257d}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear250 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c92666 x44351333 1}
       {x44c92333 x44358000 1}
       {x44c91ccd x4435d99a 1}
       {x44c91000 x44371333 1}
       {x44c90333 x44398666 1}
       {x44c90333 x443c2000 1}
       {x44c91000 x443d8666 1}
       {x44c91666 x443ceccd 1}}}
     {tx x447a4000 x44c91466 x4438f334}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear249 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c8e000 x44386000 1}
       {x44c8d333 x4438b99a 1}
       {x44c8cccd x4439799a 1}
       {x44c8c666 x443a2000 1}
       {x44c8c666 x443a6000 1}
       {x44c8a99a x443c4ccd 1}
       {x44c8d99a x443d799a 1}}}
     {tx x447a4000 x44c8cb6e x443a683a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear248 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c58666 x443fcccd 1}
       {x44c5a333 x4441c666 1}
       {x44c5b666 x4442accd 1}
       {x44c5bccd x44439333 1}}}
     {tx x447a4000 x44c5a733 x4441f4cd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear247 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c5f99a x443d4000 1}
       {x44c5e000 x443e2666 1}
       {x44c5d000 x443f2ccd 1}
       {x44c5b000 x44413333 1}
       {x44c5bccd x44430000 1}
       {x44c5a333 x4442799a 1}}}
     {tx x447a4000 x44c5c999 x44403555}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear246 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c6c000 x443b399a 1}
       {x44c6b99a x443c2666 1}
       {x44c6b333 x443d199a 1}
       {x44c6b333 x443f4666 1}
       {x44c6a333 x44418000 1}
       {x44c69666 x4442accd 1}
       {x44c67666 x44426ccd 1}}}
     {tx x447a4000 x44c6a6db x443f3160}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear245 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c7799a x44396000 1}
       {x44c75ccd x4439a000 1}
       {x44c74000 x443ad99a 1}
       {x44c6f000 x443d2666 1}
       {x44c6cccd x443ee666 1}
       {x44c6e333 x4440f99a 1}
       {x44c72000 x4442199a 1}}}
     {tx x447a4000 x44c71ea1 x443d483a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear244 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c74000 x44386ccd 1}
       {x44c75666 x4438a000 1}
       {x44c76333 x4439199a 1}
       {x44c77666 x4439d99a 1}
       {x44c78000 x443b8000 1}
       {x44c78000 x443daccd 1}
       {x44c7999a x443e799a 1}
       {x44c7a666 x443dcccd 1}
       {x44c7accd x443d0000 1}}}
     {tx x447a4000 x44c77c17 x443b6223}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear243 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c7eccd x4439f333 1}
       {x44c7dccd x443a399a 1}
       {x44c7d000 x443aa666 1}
       {x44c7c99a x443b1333 1}
       {x44c7c333 x443c6666 1}
       {x44c7b666 x443ecccd 1}
       {x44c7a666 x443fa666 1}
       {x44c78666 x443f5333 1}
       {x44c7799a x443e9333 1}}}
     {tx x447a4000 x44c7b93e x443cbd27}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear242 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c78000 x443a3333 1}
       {x44c78000 x443b4000 1}
       {x44c7999a x443be666 1}
       {x44c7c666 x443dd99a 1}
       {x44c7eccd x443ff333 1}
       {x44c80666 x44408000 1}}}
     {tx x447a4000 x44c7b888 x443d4665}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear241 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c74ccd x443a8000 1}
       {x44c74ccd x443b0ccd 1}
       {x44c75333 x443b8ccd 1}
       {x44c75333 x443d0000 1}
       {x44c75333 x443dc000 1}
       {x44c74ccd x443fc000 1}
       {x44c75333 x44400ccd 1}
       {x44c75333 x443ecccd 1}
       {x44c74ccd x443da666 1}}}
     {tx x447a4000 x44c7505b x443d582e}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear240 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c74ccd x443a8000 1}
       {x44c74ccd x443bf333 1}
       {x44c75333 x443ce666 1}
       {x44c75333 x443fcccd 1}
       {x44c75333 x44413333 1}
       {x44c7399a x4440a666 1}
       {x44c7199a x443f599a 1}}}
     {tx x447a4000 x44c7457d x443e55f1}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear239 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c6e000 x443b599a 1}
       {x44c6e000 x443ba666 1}
       {x44c6e000 x443d4ccd 1}
       {x44c6f99a x443ecccd 1}
       {x44c73333 x4440e666 1}
       {x44c74ccd x44416666 1}
       {x44c72000 x44404ccd 1}
       {x44c7199a x443fc000 1}}}
     {tx x447a4000 x44c70a66 x443eae67}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear238 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c6a666 x443a999a 1}
       {x44c6a666 x443b8ccd 1}
       {x44c6a666 x443cb333 1}
       {x44c6799a x443f599a 1}
       {x44c68666 x4441e666 1}
       {x44c69333 x4440c000 1}}}
     {tx x447a4000 x44c69665 x443e2445}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear237 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c5999a x443bd99a 1}
       {x44c5999a x443c4000 1}
       {x44c5c666 x443dcccd 1}
       {x44c5d99a x443e8ccd 1}
       {x44c5f333 x44416666 1}
       {x44c62ccd x4443599a 1}
       {x44c62ccd x44420ccd 1}}}
     {tx x447a4000 x44c5e000 x443f5249}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear236 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c53333 x443b8000 1}
       {x44c54666 x443c7333 1}
       {x44c54ccd x443d4000 1}
       {x44c55333 x4440a666 1}
       {x44c54ccd x44432666 1}
       {x44c54ccd x4443b333 1}
       {x44c54666 x4442cccd 1}
       {x44c52666 x44417333 1}}}
     {tx x447a4000 x44c54400 x44401e66}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear235 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c46000 x443dcccd 1}
       {x44c46ccd x443e4000 1}
       {x44c48666 x443fc000 1}
       {x44c48ccd x4440599a 1}
       {x44c48ccd x44410ccd 1}
       {x44c48ccd x44436666 1}
       {x44c48666 x4444599a 1}
       {x44c4799a x44436666 1}
       {x44c4799a x44432666 1}}}
     {tx x447a4000 x44c47e94 x4441471c}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear234 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c4399a x443df333 1}
       {x44c4399a x443e4000 1}
       {x44c4599a x4440199a 1}
       {x44c46ccd x44428ccd 1}
       {x44c4599a x4443c000 1}
       {x44c42666 x44457333 1}
       {x44c3f333 x44454ccd 1}
       {x44c3accd x44442666 1}}}
     {tx x447a4000 x44c42b34 x44423001}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear233 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c34ccd x443ec000 1}
       {x44c36666 x443ff333 1}
       {x44c38000 x44413333 1}
       {x44c38ccd x44444ccd 1}
       {x44c3799a x44466666 1}
       {x44c34ccd x4445a666 1}}}
     {tx x447a4000 x44c36bbc x4442b555}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear232 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c36000 x443f599a 1}
       {x44c36000 x4440599a 1}
       {x44c36000 x44417333 1}
       {x44c3199a x4444999a 1}
       {x44c2e000 x4446d99a 1}
       {x44c2e000 x44474ccd 1}
       {x44c2e000 x44468000 1}
       {x44c2e000 x4445a666 1}}}
     {tx x447a4000 x44c31733 x4444019a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear231 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c3599a x443f999a 1}
       {x44c3799a x443ff333 1}
       {x44c3999a x44424ccd 1}
       {x44c36000 x44450ccd 1}
       {x44c34ccd x44460ccd 1}
       {x44c34ccd x44470ccd 1}
       {x44c32000 x4445e666 1}}}
     {tx x447a4000 x44c35c58 x4443b333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear230 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c2e000 x4440199a 1}
       {x44c2eccd x4440599a 1}
       {x44c31333 x44414ccd 1}
       {x44c3199a x44420000 1}
       {x44c32000 x4443f333 1}
       {x44c30666 x44466666 1}
       {x44c30666 x44470ccd 1}
       {x44c30000 x4446a666 1}
       {x44c2e000 x4444f333 1}}}
     {tx x447a4000 x44c300b6 x4443a38e}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear229 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c24ccd x4441199a 1}
       {x44c2999a x44423333 1}
       {x44c2b333 x4442d99a 1}
       {x44c2cccd x4445199a 1}
       {x44c2999a x44478ccd 1}
       {x44c28ccd x44482666 1}
       {x44c28ccd x44477333 1}
       {x44c27333 x4445e666 1}}}
     {tx x447a4000 x44c2919a x44450999}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear228 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c1f99a x44417333 1}
       {x44c22666 x4441d99a 1}
       {x44c26666 x44434000 1}
       {x44c27333 x44442666 1}
       {x44c28000 x4445a666 1}
       {x44c24000 x44482666 1}
       {x44c24000 x44496666 1}
       {x44c24000 x4448f333 1}
       {x44c23333 x44478ccd 1}
       {x44c22666 x4446d99a 1}}}
     {tx x447a4000 x44c241ec x4445b99a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear227 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c1b99a x4441999a 1}
       {x44c1d99a x4442999a 1}
       {x44c1f333 x4443999a 1}
       {x44c20666 x4445c000 1}
       {x44c1eccd x4448999a 1}
       {x44c1eccd x4449b333 1}
       {x44c1e000 x44494ccd 1}
       {x44c1b99a x44483333 1}
       {x44c1a000 x44473333 1}}}
     {tx x447a4000 x44c1d8e4 x44464888}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear226 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c12ccd x44424ccd 1}
       {x44c14666 x4442a666 1}
       {x44c17333 x44442666 1}
       {x44c18666 x4445199a 1}
       {x44c18666 x44478ccd 1}
       {x44c19333 x4449c000 1}
       {x44c1a000 x444a2666 1}
       {x44c1799a x4449599a 1}}}
     {tx x447a4000 x44c17400 x44466000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear225 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c0f99a x4442cccd 1}
       {x44c10ccd x44430ccd 1}
       {x44c12ccd x44446666 1}
       {x44c13333 x44454ccd 1}
       {x44c14000 x44486666 1}
       {x44c13333 x444af333 1}
       {x44c13333 x444ba666 1}
       {x44c11333 x444ad99a 1}
       {x44c0f333 x4449e666 1}
       {x44c0d99a x44492666 1}}}
     {tx x447a4000 x44c117ad x4447a51e}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear224 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44c0799a x44424ccd 1}
       {x44c08666 x4442999a 1}
       {x44c0accd x4443b333 1}
       {x44c0c666 x44448ccd 1}
       {x44c0cccd x4445a666 1}
       {x44c0cccd x44490000 1}
       {x44c0c666 x4449f333 1}
       {x44c0b99a x4449b333 1}
       {x44c09333 x4448f333 1}}}
     {tx x447a4000 x44c0ae38 x44464444}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear223 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bfd333 x44443333 1}
       {x44c00000 x44457333 1}
       {x44c00ccd x44464000 1}
       {x44c0399a x44488ccd 1}
       {x44c02666 x444a8000 1}
       {x44c00000 x444b4ccd 1}
       {x44bfb333 x444a599a 1}}}
     {tx x447a4000 x44bffe2b x444815f1}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear222 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bee000 x4443cccd 1}
       {x44bf0666 x4444c000 1}
       {x44bf0ccd x4445d99a 1}
       {x44bf2000 x44480ccd 1}
       {x44bf2666 x444ac000 1}
       {x44bf399a x444b7333 1}}}
     {tx x447a4000 x44bf1333 x44477111}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear221 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44be799a x44450ccd 1}
       {x44be799a x44468000 1}
       {x44be8000 x44477333 1}
       {x44be8ccd x444a4ccd 1}
       {x44be999a x444c3333 1}
       {x44beaccd x444ccccd 1}
       {x44be999a x444c0000 1}}}
     {tx x447a4000 x44be8db7 x444978b0}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear220 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44be6666 x44457333 1}
       {x44be799a x4445f333 1}
       {x44be8000 x44463333 1}
       {x44be9333 x44477333 1}
       {x44bea666 x4448cccd 1}
       {x44beaccd x444b4ccd 1}
       {x44bec000 x444c4000 1}}}
     {tx x447a4000 x44be9333 x44483333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear219 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bf2000 x44452666 1}
       {x44bf2000 x4447199a 1}
       {x44bf2000 x4447cccd 1}
       {x44bf2000 x444a8000 1}
       {x44bf1333 x444c8ccd 1}
       {x44bf1333 x444d0000 1}
       {x44beb333 x444b199a 1}}}
     {tx x447a4000 x44bf0ccd x44499999}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear218 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bf799a x4443c000 1}
       {x44bfa000 x44452666 1}
       {x44bfb333 x44464ccd 1}
       {x44bfd333 x4448999a 1}
       {x44bfe666 x444b199a 1}
       {x44bfb99a x444c4ccd 1}
       {x44bf799a x444bcccd 1}
       {x44bf6000 x444b4000 1}}}
     {tx x447a4000 x44bfa333 x4448c801}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear217 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bf999a x4444c000 1}
       {x44bf999a x44452666 1}
       {x44bfa000 x4445f333 1}
       {x44bfa000 x44474000 1}
       {x44bfa000 x444a599a 1}
       {x44bfa000 x444c7333 1}
       {x44bf799a x444ca666 1}
       {x44bf4666 x444bd99a 1}}}
     {tx x447a4000 x44bf8e66 x4448cccc}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear216 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bf5333 x44442666 1}
       {x44bf599a x44448000 1}
       {x44bf599a x4445e666 1}
       {x44bf599a x4446e666 1}
       {x44bf6ccd x444a2666 1}
       {x44bf5333 x444cc000 1}
       {x44bf2ccd x444cd99a 1}
       {x44bf1333 x444c4ccd 1}
       {x44bef99a x444bcccd 1}}}
     {tx x447a4000 x44bf42d8 x44490889}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear215 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bec000 x44450ccd 1}
       {x44bec000 x44463333 1}
       {x44bec000 x44474000 1}
       {x44beb333 x4449b333 1}
       {x44be8ccd x444c7333 1}
       {x44be8ccd x444d6666 1}
       {x44be6666 x444cf333 1}
       {x44be6000 x444ca666 1}}}
     {tx x447a4000 x44be9a67 x4449f4cd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear214 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44be199a x4445d99a 1}
       {x44be2000 x44464000 1}
       {x44be2000 x44474ccd 1}
       {x44be2ccd x44484000 1}
       {x44be3333 x4449599a 1}
       {x44be2ccd x444bb333 1}
       {x44be0666 x444d4000 1}
       {x44bdf99a x444cf333 1}
       {x44bdf99a x444be666 1}}}
     {tx x447a4000 x44be18e4 x4449a4fa}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear213 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bc9333 x4448599a 1}
       {x44bca000 x4449c000 1}
       {x44bc9333 x444ad99a 1}
       {x44bc8ccd x444d0000 1}
       {x44bc3333 x444e8000 1}
       {x44bc2666 x444e2666 1}}}
     {tx x447a4000 x44bc7223 x444bc444}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear212 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bcb99a x4447cccd 1}
       {x44bcc666 x4448b333 1}
       {x44bcc666 x4449599a 1}
       {x44bcaccd x444b7333 1}
       {x44bc799a x444d0ccd 1}
       {x44bc6666 x444db333 1}
       {x44bc4ccd x444d0000 1}}}
     {tx x447a4000 x44bc96dd x444b01d3}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear211 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bcf333 x44474ccd 1}
       {x44bce000 x4448599a 1}
       {x44bce000 x44490000 1}
       {x44bce000 x444ac000 1}
       {x44bcd99a x444d2666 1}
       {x44bcaccd x444e2666 1}
       {x44bc799a x444dc000 1}
       {x44bc6000 x444d599a 1}}}
     {tx x447a4000 x44bcbe67 x444b399a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear210 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bde000 x44458ccd 1}
       {x44bdb333 x44468000 1}
       {x44bda666 x44473333 1}
       {x44bd8000 x4449cccd 1}
       {x44bd399a x444c0ccd 1}
       {x44bd0ccd x444d3333 1}
       {x44bcf99a x444ca666 1}}}
     {tx x447a4000 x44bd6ccd x44499075}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear209 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bd0666 x4444199a 1}
       {x44bd0666 x44448000 1}
       {x44bd2666 x4445199a 1}
       {x44bd399a x44454ccd 1}
       {x44bd599a x44466666 1}
       {x44bd599a x4447999a 1}
       {x44bd399a x444a7333 1}
       {x44bd399a x444c0ccd 1}
       {x44bd6666 x444e0000 1}
       {x44bd6666 x444e6666 1}
       {x44bd399a x444d8ccd 1}
       {x44bd0666 x444c4000 1}}}
     {tx x447a4000 x44bd37ff x44492444}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear208 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bccccd x4448999a 1}
       {x44bccccd x4449a666 1}
       {x44bccccd x444a4ccd 1}
       {x44bd0000 x444c8ccd 1}
       {x44bd0ccd x444e2666 1}
       {x44bd0ccd x444de666 1}
       {x44bce000 x444d0000 1}
       {x44bcb99a x444c599a 1}}}
     {tx x447a4000 x44bce333 x444bd000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear207 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bc799a x4447a666 1}
       {x44bc799a x4448599a 1}
       {x44bc6ccd x44490000 1}
       {x44bc2666 x444b2666 1}
       {x44bc199a x444d8000 1}
       {x44bc4000 x444e999a 1}
       {x44bc4000 x444d199a 1}}}
     {tx x447a4000 x44bc4db7 x444b0ccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear206 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bc199a x44483333 1}
       {x44bc199a x44488ccd 1}
       {x44bc2ccd x4449d99a 1}
       {x44bc5333 x444c0000 1}
       {x44bc6000 x444d599a 1}
       {x44bc199a x444bd99a 1}
       {x44bc1333 x444b999a 1}}}
     {tx x447a4000 x44bc2db7 x444ac57b}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear205 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bc0666 x4448cccd 1}
       {x44bc2666 x4449e666 1}
       {x44bc599a x444b4000 1}
       {x44bc7333 x444cb333 1}
       {x44bc3333 x444a999a 1}}}
     {tx x447a4000 x44bc3c2a x444aa666}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear204 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bbd333 x44494ccd 1}
       {x44bc0666 x444ab333 1}
       {x44bc1333 x444ce666 1}
       {x44bc1333 x444d8ccd 1}
       {x44bc0666 x444c3333 1}
       {x44bbeccd x444a6666 1}
       {x44bbeccd x4449d99a 1}}}
     {tx x447a4000 x44bbfb6f x444b457d}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear203 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bbc000 x4448a666 1}
       {x44bbc000 x4449599a 1}
       {x44bbc000 x444a2666 1}
       {x44bbc000 x444bd99a 1}
       {x44bbb99a x444d8000 1}
       {x44bbb99a x444ccccd 1}
       {x44bbb99a x444b999a 1}}}
     {tx x447a4000 x44bbbd41 x444b20ea}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear202 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bc0666 x44490ccd 1}
       {x44bc0ccd x444ab333 1}
       {x44bc0ccd x444b599a 1}
       {x44bc0666 x444cf333 1}
       {x44bc0666 x444d599a 1}
       {x44bc0000 x444ccccd 1}
       {x44bbe666 x444c4000 1}}}
     {tx x447a4000 x44bc02bf x444bc751}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear201 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bbc666 x44497333 1}
       {x44bbcccd x444a8000 1}
       {x44bbe000 x444b4ccd 1}
       {x44bbe000 x444d0ccd 1}
       {x44bbe000 x444e0000 1}
       {x44bbeccd x444dc000 1}
       {x44bbeccd x444c8ccd 1}
       {x44bbeccd x444b8000 1}}}
     {tx x447a4000 x44bbdf34 x444c0334}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear200 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bb8ccd x4449d99a 1}
       {x44bba666 x444a0ccd 1}
       {x44bba666 x444a8000 1}
       {x44bba666 x444b599a 1}
       {x44bb999a x444d4ccd 1}
       {x44bb8ccd x444ed99a 1}
       {x44bb7333 x444e0000 1}
       {x44bb599a x444d199a 1}}}
     {tx x447a4000 x44bb8e66 x444c2000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear199 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44baf333 x44488000 1}
       {x44bb0000 x44492666 1}
       {x44bb0ccd x444a0ccd 1}
       {x44bb0ccd x444c199a 1}
       {x44bb0ccd x444e2666 1}
       {x44bb1333 x444ed99a 1}
       {x44bb2000 x444e599a 1}
       {x44bb2ccd x444d4000 1}}}
     {tx x447a4000 x44bb0f33 x444c0ccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear198 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44bb199a x4449599a 1}
       {x44bb2000 x4449d99a 1}
       {x44bb2000 x444a6666 1}
       {x44bb2ccd x444c6666 1}
       {x44bb3333 x444eb333 1}
       {x44bb4666 x44504000 1}
       {x44bb2000 x444ec000 1}
       {x44bb1333 x444e6666 1}}}
     {tx x447a4000 x44bb2666 x444cc333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear197 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ba799a x44487333 1}
       {x44ba9333 x4448e666 1}
       {x44baa666 x44497333 1}
       {x44bac666 x444bd99a 1}
       {x44bac666 x444eb333 1}
       {x44bad99a x44500000 1}
       {x44baeccd x444ec000 1}}}
     {tx x447a4000 x44bab7c6 x444c03a9}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear196 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ba599a x444a2666 1}
       {x44ba599a x444a8ccd 1}
       {x44ba6666 x444b4000 1}
       {x44ba8666 x444cf333 1}
       {x44ba8666 x444f4000 1}
       {x44ba8000 x4450999a 1}
       {x44ba799a x444f0000 1}
       {x44ba6ccd x444eb333 1}}}
     {tx x447a4000 x44ba719a x444d4e66}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear195 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b9d99a x4449999a 1}
       {x44b9f333 x444a8ccd 1}
       {x44ba0000 x444b4ccd 1}
       {x44ba199a x444dd99a 1}
       {x44ba199a x444ed99a 1}
       {x44ba199a x444f6666 1}
       {x44ba1333 x44502666 1}
       {x44ba1333 x444f8ccd 1}
       {x44ba1333 x444ed99a 1}}}
     {tx x447a4000 x44ba093d x444d9112}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear194 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b89333 x444d0ccd 1}
       {x44b89333 x444d599a 1}
       {x44b8b333 x444ed99a 1}
       {x44b8b99a x444fb333 1}
       {x44b88000 x4451e666 1}
       {x44b87333 x4452a666 1}
       {x44b83333 x4451c000 1}}}
     {tx x447a4000 x44b88839 x444fe492}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear193 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b94666 x4449b333 1}
       {x44b9399a x444b0000 1}
       {x44b92ccd x444c3333 1}
       {x44b8f333 x444f4ccd 1}
       {x44b8accd x4451599a 1}
       {x44b8a000 x44523333 1}
       {x44b84666 x44517333 1}}}
     {tx x447a4000 x44b8e2bf x444e7507}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear192 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b92666 x444ab333 1}
       {x44b92ccd x444b8ccd 1}
       {x44b9399a x444c199a 1}
       {x44b95333 x444dcccd 1}
       {x44b97333 x444fcccd 1}
       {x44b97333 x44508000 1}
       {x44b98666 x44504000 1}
       {x44b98666 x444ff333 1}
       {x44b97333 x444ea666 1}}}
     {tx x447a4000 x44b95d28 x444e24fa}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear191 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b8b99a x4449c000 1}
       {x44b8b99a x444a2666 1}
       {x44b8d333 x444bcccd 1}
       {x44b8e000 x444ccccd 1}
       {x44b8f333 x444ff333 1}
       {x44b8f333 x4451b333 1}
       {x44b8c666 x44504000 1}
       {x44b8b99a x444f8000 1}}}
     {tx x447a4000 x44b8d19a x444dbccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear190 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b7c000 x444c4000 1}
       {x44b7e000 x444d599a 1}
       {x44b80000 x444e6666 1}
       {x44b82000 x4450a666 1}
       {x44b82666 x4452d99a 1}
       {x44b7eccd x4451f333 1}}}
     {tx x447a4000 x44b7f889 x444f9333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear189 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b7599a x444b8ccd 1}
       {x44b7599a x444bd99a 1}
       {x44b7799a x444d3333 1}
       {x44b78666 x444dc000 1}
       {x44b7a666 x444ff333 1}
       {x44b7c000 x44524000 1}
       {x44b7cccd x44536666 1}
       {x44b79333 x44523333 1}
       {x44b78666 x4451e666 1}}}
     {tx x447a4000 x44b78e3a x444f8fa5}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear188 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b68ccd x444bcccd 1}
       {x44b6d333 x444c8000 1}
       {x44b6e666 x444d3333 1}
       {x44b6eccd x444f8000 1}
       {x44b6d333 x44524000 1}
       {x44b6e666 x44534ccd 1}
       {x44b6e666 x4452e666 1}
       {x44b6d333 x44518000 1}}}
     {tx x447a4000 x44b6d4cd x444fde67}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear187 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b5c666 x444c599a 1}
       {x44b5f333 x444c6666 1}
       {x44b61333 x444d0000 1}
       {x44b62000 x444e999a 1}
       {x44b61333 x44518000 1}
       {x44b60000 x44534ccd 1}
       {x44b60ccd x4453c000 1}
       {x44b60000 x4452a666 1}
       {x44b5e666 x4451a666 1}}}
     {tx x447a4000 x44b5fe94 x44502223}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear186 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b54ccd x444d0ccd 1}
       {x44b5599a x444e0ccd 1}
       {x44b56000 x444ee666 1}
       {x44b56ccd x4450d99a 1}
       {x44b56666 x4453199a 1}
       {x44b54666 x44544000 1}
       {x44b52666 x4453a666 1}
       {x44b51333 x44523333 1}}}
     {tx x447a4000 x44b54b33 x44510199}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear185 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b4a666 x444f0000 1}
       {x44b4a666 x444eb333 1}
       {x44b4a666 x444e6666 1}
       {x44b4a666 x444ea666 1}
       {x44b4a666 x444f2666 1}
       {x44b4b99a x44500000 1}
       {x44b4d333 x44517333 1}
       {x44b4b99a x44530ccd 1}
       {x44b4a666 x4454d99a 1}
       {x44b4999a x44544ccd 1}
       {x44b48ccd x4453e666 1}}}
     {tx x447a4000 x44b4aa79 x44510a79}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear184 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b4b333 x444d4000 1}
       {x44b49333 x444d999a 1}
       {x44b49333 x444de666 1}
       {x44b4999a x444e7333 1}
       {x44b4c000 x444fc000 1}
       {x44b4d333 x44510000 1}
       {x44b4d333 x44527333 1}
       {x44b4999a x4453f333 1}
       {x44b48000 x4454999a 1}
       {x44b47333 x4453999a 1}
       {x44b47333 x44532666 1}}}
     {tx x447a4000 x44b49f69 x4450e1bd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear183 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b3999a x4450d99a 1}
       {x44b3b333 x44517333 1}
       {x44b3b99a x4451b333 1}
       {x44b3e000 x4452a666 1}
       {x44b3b99a x4453599a 1}
       {x44b38ccd x44537333 1}}}
     {tx x447a4000 x44b3b223 x44523ddd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear182 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b3399a x44507333 1}
       {x44b34000 x4450f333 1}
       {x44b34666 x44514ccd 1}
       {x44b3599a x44526666 1}
       {x44b3599a x4453a666 1}
       {x44b34666 x44533333 1}}}
     {tx x447a4000 x44b34999 x4451fddd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear181 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b29333 x44508ccd 1}
       {x44b2a000 x4450e666 1}
       {x44b2accd x44514000 1}
       {x44b2c000 x44522666 1}
       {x44b2cccd x44538000 1}
       {x44b2c666 x44544000 1}
       {x44b2999a x4453c000 1}}}
     {tx x447a4000 x44b2af8a x445255f1}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear180 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b11333 x44516666 1}
       {x44b12000 x4452199a 1}
       {x44b12ccd x44528000 1}
       {x44b16ccd x4453c000 1}
       {x44b18666 x4454a666 1}}}
     {tx x447a4000 x44b143d6 x4452e148}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear179 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b0f99a x4451999a 1}
       {x44b0eccd x44520000 1}
       {x44b0e666 x4452cccd 1}
       {x44b0e666 x44538ccd 1}
       {x44b0cccd x4454e666 1}
       {x44b0a000 x4455cccd 1}
       {x44b08ccd x44558000 1}}}
     {tx x447a4000 x44b0cf8b x4453bc58}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear178 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b1a666 x44514ccd 1}
       {x44b1a000 x4451a666 1}
       {x44b1a000 x44528ccd 1}
       {x44b1a666 x44533333 1}
       {x44b1a666 x4454599a 1}
       {x44b1999a x44550ccd 1}
       {x44b18000 x4454e666 1}
       {x44b15333 x44542666 1}}}
     {tx x447a4000 x44b19400 x445364ce}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear177 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b20ccd x44508ccd 1}
       {x44b2199a x4451599a 1}
       {x44b22ccd x4451d99a 1}
       {x44b24000 x44526666 1}
       {x44b24666 x4453e666 1}
       {x44b24000 x4454c000 1}
       {x44b20000 x4453e666 1}
       {x44b1f333 x4453999a 1}}}
     {tx x447a4000 x44b22199 x4452c99a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear176 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b32000 x44527333 1}
       {x44b36666 x4453e666 1}
       {x44b39333 x44546666 1}
       {x44b3f333 x44564ccd 1}
       {x44b3d99a x4457199a 1}}}
     {tx x447a4000 x44b3947b x4454d47b}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear175 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b1c666 x4452b333 1}
       {x44b1c666 x44530ccd 1}
       {x44b20000 x44546666 1}
       {x44b2199a x4454e666 1}
       {x44b24ccd x44568ccd 1}}}
     {tx x447a4000 x44b1fd71 x445451ed}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear174 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b22ccd x4451e666 1}
       {x44b22ccd x4452b333 1}
       {x44b2399a x4454cccd 1}
       {x44b2399a x44554000 1}
       {x44b21333 x4456199a 1}
       {x44b1e000 x4455d99a 1}}}
     {tx x447a4000 x44b22000 x44546eef}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear173 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b38ccd x44514ccd 1}
       {x44b3599a x44538000 1}
       {x44b35333 x4454599a 1}
       {x44b30666 x44558ccd 1}
       {x44b2accd x44558ccd 1}}}
     {tx x447a4000 x44b32f5c x44540ccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear172 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b3e000 x44508ccd 1}
       {x44b3e000 x44514ccd 1}
       {x44b40000 x4452d99a 1}
       {x44b41333 x44546666 1}
       {x44b40ccd x44550ccd 1}
       {x44b3b99a x4454999a 1}
       {x44b3799a x4453a666 1}}}
     {tx x447a4000 x44b3de2b x44533333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear171 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b3a666 x444fcccd 1}
       {x44b3c666 x444ff333 1}
       {x44b3e000 x4451199a 1}
       {x44b3f333 x44528ccd 1}
       {x44b3d99a x4453f333 1}
       {x44b3b99a x44540ccd 1}
       {x44b39333 x4452d99a 1}}}
     {tx x447a4000 x44b3c57b x44520925}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear170 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b34666 x44508ccd 1}
       {x44b34666 x44520000 1}
       {x44b35333 x4452e666 1}
       {x44b38000 x4454999a 1}
       {x44b3a000 x4454cccd 1}
       {x44b3a000 x4454199a 1}
       {x44b38000 x4452d99a 1}}}
     {tx x447a4000 x44b37249 x44531d41}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear169 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b2799a x44517333 1}
       {x44b26000 x4451e666 1}
       {x44b26666 x4453cccd 1}
       {x44b2799a x4454599a 1}
       {x44b2a000 x4455b333 1}
       {x44b2accd x4454f333 1}
       {x44b2a000 x4453f333 1}}}
     {tx x447a4000 x44b2857d x4453ba82}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear168 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b2c000 x44508000 1}
       {x44b28ccd x4452199a 1}
       {x44b28ccd x44530000 1}
       {x44b2accd x44548000 1}
       {x44b2b333 x4454cccd 1}
       {x44b2b333 x44546666 1}
       {x44b2a000 x4453e666 1}}}
     {tx x447a4000 x44b2a666 x44535076}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear167 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b2a000 x44514000 1}
       {x44b2b333 x44522666 1}
       {x44b2cccd x4452c000 1}
       {x44b2f99a x4453f333 1}
       {x44b30ccd x44553333 1}
       {x44b2f333 x44543333 1}}}
     {tx x447a4000 x44b2d999 x44534000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear166 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b1f333 x4451999a 1}
       {x44b21333 x44524000 1}
       {x44b25333 x44532666 1}
       {x44b2799a x4453cccd 1}
       {x44b2a000 x44546666 1}
       {x44b2c000 x44554000 1}
       {x44b2b333 x4454a666 1}}}
     {tx x447a4000 x44b26a0e x445395f1}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear165 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b0b333 x44534ccd 1}
       {x44b0accd x4453f333 1}
       {x44b0accd x44546666 1}
       {x44b0d333 x44558000 1}
       {x44b0e666 x44567333 1}
       {x44b0eccd x4456b333 1}
       {x44b0f99a x44566666 1}}}
     {tx x447a4000 x44b0cf8b x44553e2b}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear164 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b0e666 x44528ccd 1}
       {x44b0d333 x44533333 1}
       {x44b0d333 x4453cccd 1}
       {x44b0eccd x4454f333 1}
       {x44b10ccd x44564ccd 1}
       {x44b11333 x4456e666 1}
       {x44b0f99a x44564ccd 1}}}
     {tx x447a4000 x44b0f075 x4454db6f}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear163 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b18ccd x4451e666 1}
       {x44b18000 x44528ccd 1}
       {x44b18000 x44530ccd 1}
       {x44b18000 x44540ccd 1}
       {x44b18000 x4454999a 1}
       {x44b18000 x44554000 1}
       {x44b18000 x44560000 1}
       {x44b1599a x44558ccd 1}}}
     {tx x447a4000 x44b17ccd x44541e67}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear162 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44b0e666 x44510000 1}
       {x44b0eccd x44518ccd 1}
       {x44b0f99a x4451e666 1}
       {x44b12000 x44533333 1}
       {x44b1599a x4454999a 1}
       {x44b17333 x44558ccd 1}
       {x44b18000 x44567333 1}
       {x44b16ccd x44570000 1}
       {x44b16000 x4456c000 1}
       {x44b1599a x44567333 1}}}
     {tx x447a4000 x44b13ccd x445471eb}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear161 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4488d333 x4461e666 1}
       {x4488c000 x4462199a 1}
       {x4488accd x4462a666 1}
       {x44888666 x4463999a 1}
       {x4488799a x44644ccd 1}
       {x4488799a x4465f333 1}
       {x44888000 x4466cccd 1}}}
     {tx x447a4000 x44889a83 x4463e667}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear160 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4494c666 x445ee666 1}
       {x4494c000 x445f3333 1}
       {x4494accd x445fd99a 1}
       {x44946000 x44618ccd 1}
       {x44942ccd x4462599a 1}
       {x4493f333 x44638ccd 1}
       {x44940ccd x4463c000 1}}}
     {tx x447a4000 x44946492 x44614ea1}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear159 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448a199a x44618000 1}
       {x448a0666 x4461b333 1}
       {x4489e666 x44630000 1}
       {x4489eccd x44644000 1}
       {x448a0000 x44658ccd 1}
       {x4489e666 x4465f333 1}}}
     {tx x447a4000 x4489f999 x4463a888}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear158 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4488c666 x44632666 1}
       {x4488c000 x4463999a 1}
       {x4488c000 x4463f333 1}
       {x4488c000 x4464b333 1}}}
     {tx x447a4000 x4488c19a x4463d99a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear157 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4488c000 x4462c000 1}
       {x4488a000 x4462e666 1}
       {x4488999a x44636666 1}
       {x4488999a x44642666 1}
       {x4488999a x44654ccd 1}
       {x44888666 x4466199a 1}}}
     {tx x447a4000 x44889ddf x44641999}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear156 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448cf333 x44626666 1}
       {x448ce000 x44634000 1}
       {x448cd99a x4463a666 1}
       {x448ce000 x4464b333 1}}}
     {tx x447a4000 x448ce334 x44638000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear155 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448c999a x4461599a 1}
       {x448c9333 x4461cccd 1}
       {x448c9333 x4462cccd 1}
       {x448c9333 x44632666 1}
       {x448ca666 x4464e666 1}
       {x448caccd x4465cccd 1}
       {x448c8000 x4465a666 1}}}
     {tx x447a4000 x448c97c5 x4463a2bf}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear154 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44909333 x4461199a 1}
       {x44908ccd x4461b333 1}
       {x44908ccd x44620ccd 1}
       {x44909333 x4463599a 1}
       {x4490999a x4464a666 1}
       {x44908000 x4464cccd 1}}}
     {tx x447a4000 x44908eef x4462f111}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear153 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4490cccd x44607333 1}
       {x4490b333 x4460d99a 1}
       {x4490accd x4461199a 1}
       {x4490accd x4461a666 1}
       {x4490accd x4463199a 1}
       {x4490c666 x4464d99a 1}
       {x4490c666 x44658ccd 1}
       {x4490accd x4465599a 1}}}
     {tx x447a4000 x4490b800 x4462dccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear152 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a4d333 x4458c000 1}
       {x44a4c666 x44590ccd 1}
       {x44a4b333 x44596666 1}
       {x44a4a666 x4459a666 1}
       {x44a48ccd x445b599a 1}
       {x44a48000 x445c4000 1}
       {x44a47333 x445ce666 1}
       {x44a4599a x445c8ccd 1}}}
     {tx x447a4000 x44a49999 x445abccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear151 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a0c000 x445b4000 1}
       {x44a0c000 x445bd99a 1}
       {x44a0c000 x445c2666 1}
       {x44a0b99a x445d0ccd 1}
       {x44a0accd x445d6666 1}}}
     {tx x447a4000 x44a0bae1 x445c570a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear150 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a08ccd x445b599a 1}
       {x44a08ccd x445bc000 1}
       {x44a08ccd x445c8ccd 1}
       {x44a08666 x445d4000 1}
       {x44a08000 x445e2666 1}
       {x44a08000 x445ed99a 1}}}
     {tx x447a4000 x44a08778 x445cfbbc}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear149 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a0d333 x4459c000 1}
       {x44a0c000 x445a0000 1}
       {x44a0b99a x445a8ccd 1}
       {x44a0b333 x445b0000 1}
       {x44a0a666 x445c0000 1}
       {x44a0a000 x445d199a 1}
       {x44a0a666 x445e0ccd 1}
       {x44a0a666 x445ea666 1}
       {x44a08ccd x445e4000 1}}}
     {tx x447a4000 x44a0ae3a x445c2667}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear148 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a7d99a x4454c000 1}
       {x44a7e000 x44557333 1}
       {x44a80000 x4455e666 1}
       {x44a8199a x4456199a 1}}}
     {tx x447a4000 x44a7f4cd x44558ccc}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear147 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a7c666 x4453b333 1}
       {x44a7c666 x4453f333 1}
       {x44a7cccd x44544ccd 1}
       {x44a7e666 x4455a666 1}}}
     {tx x447a4000 x44a7d000 x44546666}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear146 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a6c000 x4458b333 1}
       {x44a74ccd x44583333 1}
       {x44a7999a x4458199a 1}
       {x44a80ccd x4457e666 1}
       {x44a82666 x4457b333 1}}}
     {tx x447a4000 x44a791eb x44581eb8}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear145 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a97333 x4458199a 1}
       {x44a9199a x44580000 1}
       {x44a8799a x4458199a 1}
       {x44a7f99a x44582666 1}
       {x44a76666 x44583333 1}
       {x44a78666 x44582666 1}
       {x44a7cccd x4458199a 1}}}
     {tx x447a4000 x44a83f17 x44581d41}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear144 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a66ccd x4458c000 1}
       {x44a6999a x4458999a 1}
       {x44a6c000 x44588ccd 1}
       {x44a72000 x44588ccd 1}
       {x44a80000 x44588000 1}
       {x44a87333 x44588000 1}
       {x44a89333 x44586666 1}
       {x44a83333 x4458599a 1}
       {x44a7e000 x44584ccd 1}
       {x44a78666 x44584ccd 1}
       {x44a72000 x44583333 1}
       {x44a7b99a x44583333 1}
       {x44a84000 x44583333 1}
       {x44a80ccd x44583333 1}
       {x44a78000 x44583333 1}
       {x44a7cccd x4458199a 1}
       {x44a79333 x44582666 1}
       {x44a75333 x44582666 1}
       {x44a72666 x44582666 1}
       {x44a74666 x44582666 1}
       {x44a78000 x44582666 1}
       {x44a7a000 x44582666 1}
       {x44a79333 x4457cccd 1}}}
     {tx x447a4000 x44a790b1 x44584973}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear143 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a94ccd x4455199a 1}
       {x44a93333 x44557333 1}
       {x44a90ccd x4456c000 1}
       {x44a8d99a x44594000 1}
       {x44a8d333 x445a4000 1}
       {x44a8c666 x445bf333 1}
       {x44a8b99a x445c8ccd 1}
       {x44a8a666 x445c599a 1}}}
     {tx x447a4000 x44a8ec00 x445934cd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear142 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a7b99a x4455a666 1}
       {x44a7b99a x4455e666 1}
       {x44a7b99a x44563333 1}
       {x44a7f333 x44577333 1}
       {x44a81333 x4458999a 1}
       {x44a82666 x445ae666 1}
       {x44a83333 x445ce666 1}
       {x44a82ccd x445dc000 1}
       {x44a80ccd x445d999a 1}}}
     {tx x447a4000 x44a7f99a x4459705c}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear141 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44acd99a x44564ccd 1}
       {x44acb99a x4457e666 1}
       {x44acc666 x4458599a 1}
       {x44acaccd x4458f333 1}}}
     {tx x447a4000 x44acc199 x4457e001}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear140 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44accccd x44554ccd 1}
       {x44acb99a x44560ccd 1}
       {x44acb333 x4456cccd 1}
       {x44ac9333 x44586666 1}
       {x44ac9333 x4459a666 1}
       {x44ac8666 x4459e666 1}
       {x44ac8666 x4459199a 1}}}
     {tx x447a4000 x44aca1d5 x4457e2bf}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear139 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ad6666 x44542666 1}
       {x44ad7333 x4454b333 1}
       {x44ad7333 x44553333 1}
       {x44ad9333 x4456cccd 1}
       {x44ade000 x44588ccd 1}
       {x44adeccd x4459599a 1}}}
     {tx x447a4000 x44ad9ccd x44567555}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear138 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44adb99a x4453b333 1}
       {x44adaccd x44542666 1}
       {x44ada000 x4454c000 1}
       {x44ada000 x44567333 1}
       {x44add333 x44588ccd 1}
       {x44add333 x44597333 1}
       {x44add333 x44592666 1}
       {x44add333 x4458999a 1}}}
     {tx x447a4000 x44adbe66 x4456d999}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear137 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44afc666 x4452cccd 1}
       {x44afc000 x44534ccd 1}
       {x44af999a x44547333 1}
       {x44af9333 x4454e666 1}
       {x44af8ccd x44553333 1}
       {x44af799a x44573333 1}
       {x44af6666 x4458cccd 1}
       {x44af599a x44592666 1}
       {x44af199a x4458999a 1}}}
     {tx x447a4000 x44af8222 x44560b60}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear136 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44afc666 x44520ccd 1}
       {x44afc666 x4452599a 1}
       {x44afc666 x4452b333 1}
       {x44afc666 x44534ccd 1}
       {x44afcccd x44550ccd 1}
       {x44aff333 x4456cccd 1}
       {x44b00666 x44580000 1}
       {x44b00666 x44584ccd 1}
       {x44afd99a x4457999a 1}}}
     {tx x447a4000 x44afdc72 x445520b7}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear135 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44af7333 x44533333 1}
       {x44af6000 x4453b333 1}
       {x44af6000 x4454e666 1}
       {x44af6000 x44558000 1}
       {x44af999a x44572666 1}
       {x44afb333 x4457cccd 1}
       {x44afb333 x44578ccd 1}
       {x44afb333 x4456cccd 1}}}
     {tx x447a4000 x44af88cc x4455d334}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear134 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aff333 x4453cccd 1}
       {x44aff333 x44544000 1}
       {x44aff333 x44548ccd 1}
       {x44b00ccd x4455999a 1}
       {x44b04666 x44573333 1}
       {x44b06ccd x44588ccd 1}
       {x44b07333 x44590ccd 1}
       {x44b06000 x44588ccd 1}}}
     {tx x447a4000 x44b02d99 x4456719a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear133 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44afaccd x4452c000 1}
       {x44afb333 x44530000 1}
       {x44afb333 x4453599a 1}
       {x44afc666 x4454a666 1}
       {x44aff99a x4456199a 1}
       {x44b04000 x4457f333 1}
       {x44b06000 x4458999a 1}
       {x44b0599a x44582666 1}}}
     {tx x447a4000 x44aff999 x44559199}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear132 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44af9333 x44532666 1}
       {x44af8ccd x44536666 1}
       {x44af8ccd x4453c000 1}
       {x44af8ccd x4454c000 1}
       {x44afc666 x4456d99a 1}
       {x44afe000 x44582666 1}
       {x44afd99a x44574000 1}}}
     {tx x447a4000 x44afaccd x4455541e}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear131 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aed333 x44530000 1}
       {x44aee666 x4453999a 1}
       {x44af0000 x4454c000 1}
       {x44af199a x44560ccd 1}
       {x44af6666 x4458199a 1}
       {x44af799a x4458c000 1}
       {x44af799a x44584ccd 1}
       {x44af6666 x4457c000 1}}}
     {tx x447a4000 x44af3266 x4456499a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear130 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ae6666 x4452f333 1}
       {x44ae599a x44538ccd 1}
       {x44ae599a x44544ccd 1}
       {x44ae6666 x4455b333 1}
       {x44ae999a x4457b333 1}
       {x44aea000 x44588ccd 1}
       {x44ae999a x4457599a 1}}}
     {tx x447a4000 x44ae7999 x4455ba83}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear129 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ade000 x44534ccd 1}
       {x44ade000 x4453e666 1}
       {x44adeccd x44548ccd 1}
       {x44ae2000 x4456199a 1}
       {x44ae5333 x4458199a 1}
       {x44ae5333 x4458e666 1}
       {x44ae5333 x44588000 1}
       {x44ae4ccd x4457999a 1}}}
     {tx x447a4000 x44ae2266 x44565e66}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear128 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aca000 x44547333 1}
       {x44acb333 x4454b333 1}
       {x44acb333 x44558000 1}
       {x44acb333 x44560ccd 1}
       {x44acb333 x4457599a 1}
       {x44acb333 x44588000 1}
       {x44acaccd x4457c000 1}}}
     {tx x447a4000 x44acaf8b x4456541e}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear127 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ad199a x44540ccd 1}
       {x44ad199a x44544ccd 1}
       {x44ad0ccd x44548ccd 1}
       {x44acb99a x44553333 1}
       {x44ac8000 x44563333 1}
       {x44ac8000 x44570000 1}
       {x44ac8000 x4458599a 1}
       {x44ac8000 x4459199a 1}
       {x44ac6ccd x44586666 1}
       {x44ac6ccd x44574000 1}}}
     {tx x447a4000 x44acaeb9 x445670a3}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear126 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ad799a x4454d99a 1}}}
     {tx x447a4000 x44ad799a x4454d99a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear125 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44add333 x44558000 1}
       {x44ae2000 x4456a666 1}
       {x44ae6666 x4457599a 1}
       {x44aeeccd x4458f333 1}
       {x44af0000 x4459b333 1}
       {x44aed333 x4459a666 1}
       {x44aea666 x44597333 1}}}
     {tx x447a4000 x44ae8925 x44582db7}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear124 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ad7333 x4455199a 1}
       {x44adc000 x4456199a 1}
       {x44ae0ccd x4456c000 1}
       {x44aed333 x44588ccd 1}
       {x44af8ccd x4459f333 1}
       {x44afb333 x445a3333 1}
       {x44af8ccd x44598ccd 1}}}
     {tx x447a4000 x44aeb249 x44580750}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear123 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ad4ccd x44554000 1}
       {x44ad8ccd x44563333 1}
       {x44adc666 x4456d99a 1}
       {x44ae999a x4458999a 1}
       {x44af4666 x445a0ccd 1}
       {x44af199a x4459599a 1}}}
     {tx x447a4000 x44ae4444 x4457b778}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear122 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ad2666 x44556666 1}
       {x44ad599a x44564ccd 1}
       {x44ad9333 x44570000 1}
       {x44ae6666 x4458c000 1}
       {x44af0000 x445a199a 1}
       {x44af0000 x4459d99a 1}
       {x44aee666 x44598ccd 1}}}
     {tx x447a4000 x44ae3249 x445822bf}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear121 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ac8666 x4455d99a 1}
       {x44ace000 x4456999a 1}
       {x44ad4ccd x44576666 1}
       {x44ae6666 x44592666 1}
       {x44aef99a x445a3333 1}
       {x44ae999a x4459599a 1}}}
     {tx x447a4000 x44adc777 x44581777}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear120 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ac2666 x44566666 1}
       {x44ac2666 x4456a666 1}
       {x44aca000 x4458199a 1}
       {x44ad4000 x44594000 1}
       {x44ae2666 x445b0000 1}
       {x44ae8000 x445bc000 1}
       {x44ae4ccd x445b0000 1}}}
     {tx x447a4000 x44ad4db7 x44592a0f}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear119 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44ab5333 x4454e666 1}
       {x44ab5333 x44554000 1}
       {x44ab8ccd x44564ccd 1}
       {x44abf333 x44576666 1}
       {x44acf333 x4459d99a 1}
       {x44adc000 x445b8ccd 1}
       {x44adaccd x445b4000 1}}}
     {tx x447a4000 x44ac5c59 x44581249}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear118 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aab333 x44556666 1}
       {x44aaf333 x44563333 1}
       {x44ab8ccd x44576666 1}
       {x44ac9333 x44598ccd 1}
       {x44ad2ccd x445ae666 1}
       {x44ad4666 x445b4000 1}
       {x44acf333 x445a4000 1}
       {x44aca000 x44597333 1}}}
     {tx x447a4000 x44ac3999 x4458cccc}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear117 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44aa6666 x44554000 1}
       {x44aa6000 x4455b333 1}
       {x44aa799a x44560ccd 1}
       {x44ab399a x4457c000 1}
       {x44ac399a x4459f333 1}
       {x44accccd x445b199a 1}
       {x44acb333 x445ad99a 1}
       {x44ac5333 x445a199a 1}}}
     {tx x447a4000 x44ab90cc x445857ff}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear116 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a8eccd x44564ccd 1}
       {x44a9199a x4456cccd 1}
       {x44a93333 x44574000 1}
       {x44a9b99a x44588000 1}
       {x44aa9333 x445a4000 1}
       {x44aad99a x445ab333 1}
       {x44aaf333 x445a7333 1}}}
     {tx x447a4000 x44a9e751 x44589b6d}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear115 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a7e666 x44578ccd 1}
       {x44a80000 x4457f333 1}
       {x44a8199a x4458599a 1}
       {x44a87333 x44590ccd 1}
       {x44a93333 x445a7333 1}
       {x44a9c666 x445bc000 1}
       {x44a96ccd x445a4000 1}
       {x44a94000 x4459c000 1}}}
     {tx x447a4000 x44a8c334 x44596333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear114 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a2a000 x445a4000 1}
       {x44a33333 x445c0000 1}
       {x44a3b99a x445d199a 1}
       {x44a4599a x445e8ccd 1}
       {x44a47333 x445f4000 1}}}
     {tx x447a4000 x44a3ab86 x445d07ad}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear113 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a0999a x445b8ccd 1}
       {x44a0accd x445bd99a 1}
       {x44a0c666 x445c4000 1}
       {x44a1599a x445dcccd 1}
       {x44a20666 x445f4ccd 1}
       {x44a22000 x445f7333 1}
       {x44a22000 x445f199a 1}}}
     {tx x447a4000 x44a161d5 x445d9d41}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear112 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a1999a x445b0000 1}
       {x44a1a000 x445c0000 1}
       {x44a1c000 x445cb333 1}
       {x44a23333 x445e7333 1}
       {x44a2799a x4460cccd 1}
       {x44a2799a x44613333 1}}}
     {tx x447a4000 x44a20555 x445e0667}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear111 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a76000 x4458e666 1}
       {x44a7799a x44594ccd 1}
       {x44a7f333 x445ab333 1}
       {x44a8199a x445b4000 1}
       {x44a84ccd x445d8ccd 1}
       {x44a7e000 x445e4ccd 1}}}
     {tx x447a4000 x44a7d889 x445b5557}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear110 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a70666 x4458599a 1}
       {x44a72000 x4458999a 1}
       {x44a74666 x4458f333 1}
       {x44a7b333 x4459f333 1}
       {x44a8799a x445b8ccd 1}
       {x44a92000 x445cf333 1}
       {x44a93333 x445d8ccd 1}
       {x44a8f333 x445d2666 1}}}
     {tx x447a4000 x44a81bff x445ae19a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear109 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a61333 x4458cccd 1}
       {x44a62ccd x44590ccd 1}
       {x44a66000 x44598000 1}
       {x44a70000 x445acccd 1}
       {x44a7c666 x445ce666 1}
       {x44a80ccd x445dc000 1}
       {x44a80000 x445d6666 1}
       {x44a7d99a x445cc000 1}}}
     {tx x447a4000 x44a72999 x445b5e66}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear108 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a67333 x4458999a 1}
       {x44a67333 x4459a666 1}
       {x44a6a000 x445a8000 1}
       {x44a70000 x445c6666 1}
       {x44a76ccd x445e2666 1}
       {x44a7999a x445eb333 1}
       {x44a79333 x445e199a 1}}}
     {tx x447a4000 x44a70492 x445c03a8}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear107 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a9199a x4456199a 1}
       {x44a92666 x4456999a 1}
       {x44a98ccd x44580000 1}
       {x44a9c666 x4458999a 1}
       {x44aa4ccd x445b199a 1}
       {x44aa6000 x445c8ccd 1}
       {x44a9e000 x445c2666 1}}}
     {tx x447a4000 x44a9bb6e x44594cce}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear106 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a8d333 x4456a666 1}
       {x44a9199a x44580000 1}
       {x44a95333 x44592666 1}
       {x44a9b99a x445b199a 1}
       {x44aa0000 x445c7333 1}
       {x44a9b333 x445b0ccd 1}}}
     {tx x447a4000 x44a97222 x4459bbbc}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear105 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a8799a x44570ccd 1}
       {x44a89333 x4457599a 1}
       {x44a8f333 x44588000 1}
       {x44a9399a x44598000 1}
       {x44a9a000 x445b4ccd 1}
       {x44a9e666 x445cb333 1}
       {x44a9e666 x445c6666 1}
       {x44a98666 x445b3333 1}}}
     {tx x447a4000 x44a9459a x445a0000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear104 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a82ccd x4457e666 1}
       {x44a84ccd x44594ccd 1}
       {x44a8b99a x445acccd 1}
       {x44a92000 x445c6666 1}
       {x44a96666 x445d3333 1}
       {x44a94000 x445ce666 1}
       {x44a9199a x445c599a 1}
       {x44a90666 x445c2666 1}}}
     {tx x447a4000 x44a8e333 x445b6000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear103 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a80000 x4457cccd 1}
       {x44a87333 x44598ccd 1}
       {x44a8a666 x445a4000 1}
       {x44a9199a x445c599a 1}
       {x44a9399a x445d3333 1}
       {x44a93333 x445cc000 1}
       {x44a8d333 x445b999a 1}}}
     {tx x447a4000 x44a8c751 x445b1248}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear102 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a7b333 x4458999a 1}
       {x44a7b99a x44594000 1}
       {x44a8199a x445b3333 1}
       {x44a84666 x445bc000 1}
       {x44a8c666 x445d199a 1}
       {x44a8e000 x445d599a 1}
       {x44a8a666 x445c599a 1}
       {x44a86666 x445b7333 1}}}
     {tx x447a4000 x44a85000 x445b6199}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear101 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a70666 x4458599a 1}
       {x44a7accd x445a4ccd 1}
       {x44a7e666 x445b7333 1}
       {x44a84ccd x445d8ccd 1}
       {x44a83333 x445ce666 1}}}
     {tx x447a4000 x44a7d1ec x445b4f5d}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear100 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a68666 x4458c000 1}
       {x44a6999a x44597333 1}
       {x44a6e666 x445b4000 1}
       {x44a72666 x445cb333 1}
       {x44a7799a x445e7333 1}
       {x44a79333 x445ee666 1}
       {x44a78000 x445df333 1}
       {x44a75333 x445cc000 1}}}
     {tx x447a4000 x44a7219a x445c4666}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear99 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a62ccd x44588000 1}
       {x44a62ccd x4458c000 1}
       {x44a66000 x445b999a 1}
       {x44a68666 x445c599a 1}
       {x44a6f333 x445ea666 1}
       {x44a70000 x445f0ccd 1}
       {x44a6eccd x445df333 1}
       {x44a6c000 x445d0000 1}}}
     {tx x447a4000 x44a69c00 x445c3b33}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear98 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a5799a x4458f333 1}
       {x44a58000 x44594000 1}
       {x44a5999a x4459c000 1}
       {x44a5c000 x445b4000 1}
       {x44a5cccd x445c4000 1}
       {x44a5e666 x445f199a 1}
       {x44a5f99a x445fb333 1}
       {x44a5f99a x445ee666 1}
       {x44a5f333 x445ccccd 1}
       {x44a5e666 x445c6666 1}}}
     {tx x447a4000 x44a5c852 x445c3c28}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear97 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a4d333 x4459199a 1}
       {x44a50666 x4459c000 1}
       {x44a5accd x445bc000 1}
       {x44a61333 x445d999a 1}
       {x44a62ccd x445eb333 1}
       {x44a5cccd x445d3333 1}}}
     {tx x447a4000 x44a59888 x445c0443}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear96 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a48000 x44582666 1}
       {x44a4c666 x4459a666 1}
       {x44a51333 x445b0000 1}
       {x44a58ccd x445d8000 1}
       {x44a5d99a x445ef333 1}
       {x44a5cccd x445eb333 1}
       {x44a58ccd x445d4ccd 1}
       {x44a5599a x445c8ccd 1}}}
     {tx x447a4000 x44a54e66 x445c399a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear95 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a40ccd x4459199a 1}
       {x44a40ccd x44598ccd 1}
       {x44a4e666 x445bcccd 1}
       {x44a54ccd x445ce666 1}
       {x44a5cccd x445f4000 1}
       {x44a5c666 x445f8000 1}
       {x44a58000 x445e599a 1}
       {x44a53333 x445d8000 1}}}
     {tx x447a4000 x44a51266 x445cbe66}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear94 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a3799a x4458cccd 1}
       {x44a38666 x44592666 1}
       {x44a3c000 x445a4ccd 1}
       {x44a3f99a x445b6666 1}
       {x44a46666 x445dcccd 1}
       {x44a4a000 x445f4000 1}
       {x44a4a000 x445ed99a 1}
       {x44a45333 x445d599a 1}
       {x44a44000 x445d0000 1}}}
     {tx x447a4000 x44a41b05 x445c360c}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear93 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a30ccd x44594ccd 1}
       {x44a38ccd x445b3333 1}
       {x44a3d99a x445c2666 1}
       {x44a48000 x445e4ccd 1}
       {x44a4b333 x445ef333 1}
       {x44a4999a x445e4ccd 1}
       {x44a44ccd x445d599a 1}}}
     {tx x447a4000 x44a4141e x445ccaf9}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear92 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a2c666 x44598ccd 1}
       {x44a2d99a x4459d99a 1}
       {x44a3199a x445b0000 1}
       {x44a3799a x445c2666 1}
       {x44a3f99a x445df333 1}
       {x44a42666 x445ee666 1}
       {x44a40ccd x445e599a 1}
       {x44a3d333 x445db333 1}}}
     {tx x447a4000 x44a38667 x445c6e66}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear91 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a26ccd x445a6666 1}
       {x44a28666 x445ad99a 1}
       {x44a2e666 x445c2666 1}
       {x44a34666 x445d599a 1}
       {x44a3d99a x445f7333 1}
       {x44a3eccd x445fd99a 1}
       {x44a3c666 x445f0ccd 1}
       {x44a36666 x445e0ccd 1}}}
     {tx x447a4000 x44a34266 x445d64cd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear90 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a14666 x445a4000 1}
       {x44a16000 x445a8000 1}
       {x44a1f333 x445ba666 1}
       {x44a25333 x445c7333 1}
       {x44a31333 x445eb333 1}
       {x44a3599a x44603333 1}
       {x44a34000 x44600000 1}
       {x44a2d99a x445eb333 1}
       {x44a2b99a x445e7333 1}}}
     {tx x447a4000 x44a276c1 x445d6eee}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear89 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a0accd x445a3333 1}
       {x44a10ccd x445b7333 1}
       {x44a16ccd x445c8ccd 1}
       {x44a23333 x445ed99a 1}
       {x44a26666 x44606666 1}
       {x44a2199a x445fe666 1}
       {x44a20000 x445fb333 1}}}
     {tx x447a4000 x44a1b15f x445ddd42}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear88 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a0c666 x445ae666 1}
       {x44a0c666 x445b4ccd 1}
       {x44a0e666 x445c8ccd 1}
       {x44a10ccd x445d6666 1}
       {x44a16ccd x4460199a 1}
       {x44a1b333 x44614000 1}
       {x44a18ccd x4460c000 1}
       {x44a17333 x44604ccd 1}}}
     {tx x447a4000 x44a13400 x445e519a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear87 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a0c000 x445b6666 1}
       {x44a0e000 x445c0000 1}
       {x44a16000 x445db333 1}
       {x44a1a666 x445eb333 1}
       {x44a2199a x4460cccd 1}
       {x44a22000 x4461599a 1}
       {x44a1e666 x4460cccd 1}}}
     {tx x447a4000 x44a18a0f x445eadb7}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear86 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a06666 x445b7333 1}
       {x44a0799a x445c4000 1}
       {x44a0999a x445d0000 1}
       {x44a11333 x445ee666 1}
       {x44a14666 x4460d99a 1}
       {x44a15333 x44612666 1}
       {x44a12666 x4460199a 1}}}
     {tx x447a4000 x44a0e666 x445e8750}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear85 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449fa000 x445ba666 1}
       {x449fa666 x445c6666 1}
       {x449fcccd x445d3333 1}
       {x44a02000 x445f0ccd 1}
       {x44a04ccd x44600000 1}
       {x44a0599a x44604ccd 1}
       {x44a0799a x4460f333 1}
       {x44a09333 x44616666 1}
       {x44a08ccd x4460f333 1}}}
     {tx x447a4000 x44a0293e x445f199a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear84 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449ef333 x445b999a 1}
       {x449f0666 x445bd99a 1}
       {x449f399a x445d199a 1}
       {x449f599a x445dcccd 1}
       {x449fb333 x44600ccd 1}
       {x449fe666 x44610ccd 1}
       {x449fe000 x445fe666 1}}}
     {tx x447a4000 x449f6ea1 x445e3160}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear83 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449df99a x445ab333 1}
       {x449e0000 x445b0000 1}
       {x449e4ccd x445c7333 1}
       {x449e799a x445d199a 1}
       {x449ee000 x445f7333 1}
       {x449ee000 x44614000 1}
       {x449ec666 x4460c000 1}}}
     {tx x447a4000 x449e77c6 x445dd075}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear82 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449d199a x445d2666 1}
       {x449d199a x445e199a 1}
       {x449d2000 x445e8000 1}
       {x449d6666 x44607333 1}
       {x449da000 x4462199a 1}
       {x449db333 x44628ccd 1}
       {x449dc666 x44632666 1}
       {x449da000 x4462cccd 1}}}
     {tx x447a4000 x449d6e66 x4460999b}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear81 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449d0ccd x445c4000 1}
       {x449d0666 x445c999a 1}
       {x449d0ccd x445db333 1}
       {x449d399a x445ec000 1}
       {x449d6666 x44614000 1}
       {x449d6ccd x4463199a 1}
       {x449d799a x4463a666 1}
       {x449d5333 x4462f333 1}
       {x449d4ccd x4462b333 1}}}
     {tx x447a4000 x449d40b6 x446053e9}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear80 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449cd333 x445b8ccd 1}
       {x449d0000 x445c2666 1}
       {x449d199a x445cb333 1}
       {x449d4ccd x445d999a 1}
       {x449da000 x445f999a 1}
       {x449e0000 x44624ccd 1}
       {x449e1333 x44644000 1}
       {x449e1333 x4464a666 1}
       {x449e199a x4463e666 1}}}
     {tx x447a4000 x449d9111 x446013ea}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear79 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449bb333 x445e0666 1}
       {x449bc000 x445e8ccd 1}
       {x449be333 x445fc666 1}
       {x449c0333 x4460799a 1}
       {x449c599a x44620000 1}
       {x449c699a x4462d333 1}}}
     {tx x447a4000 x449c04cd x44604665}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear78 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449ba333 x445d1333 1}
       {x449b999a x445d9333 1}
       {x449b999a x445ef99a 1}
       {x449bb000 x445fe000 1}
       {x449c1333 x4461eccd 1}
       {x449c5333 x44626ccd 1}
       {x449c5333 x4461cccd 1}
       {x449c0333 x44606000 1}
       {x449bf666 x44602000 1}}}
     {tx x447a4000 x449be9f4 x44600445}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear77 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449b8000 x445d199a 1}
       {x449b8000 x445d6ccd 1}
       {x449b9333 x445eaccd 1}
       {x449b999a x445f4000 1}
       {x449be333 x4461599a 1}
       {x449c2ccd x4461f99a 1}
       {x449c1666 x44617333 1}
       {x449bfccd x44610000 1}}}
     {tx x447a4000 x449bca01 x445fc733}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear76 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449b299a x445d2666 1}
       {x449b499a x445deccd 1}
       {x449b6000 x445eeccd 1}
       {x449b8000 x4460accd 1}
       {x449bcccd x4461e666 1}
       {x449bc000 x4461999a 1}}}
     {tx x447a4000 x449b7aab x445fb221}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear75 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449a8ccd x445d4000 1}
       {x449a9666 x445db99a 1}
       {x449a9ccd x445e2ccd 1}
       {x449ab000 x445fb99a 1}
       {x449b0000 x44622000 1}
       {x449b3000 x4462c000 1}
       {x449b3000 x44624ccd 1}
       {x449b1333 x4461799a 1}}}
     {tx x447a4000 x449adc66 x446030cd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear74 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x449a1ccd x445d6000 1}
       {x449a2333 x445dd99a 1}
       {x449a3000 x445e799a 1}
       {x449a3666 x44608666 1}
       {x449a7666 x44626666 1}
       {x449a9ccd x4462c000 1}
       {x449a899a x44620000 1}}}
     {tx x447a4000 x449a52bf x44603249}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear73 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44999333 x445d199a 1}
       {x4499a666 x445dd99a 1}
       {x4499b000 x445e6666 1}
       {x4499d000 x4460e000 1}
       {x449a0000 x44621333 1}
       {x449a1000 x4462999a 1}
       {x4499fccd x4461e666 1}}}
     {tx x447a4000 x4499d333 x44601d41}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear72 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44996333 x445d4000 1}
       {x44996333 x445de666 1}
       {x44996ccd x445e599a 1}
       {x44997666 x445f399a 1}
       {x44998333 x4461799a 1}
       {x4499b333 x4462d99a 1}
       {x4499accd x4462199a 1}}}
     {tx x447a4000 x449981d5 x445fe0e9}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear71 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4498bccd x445d4000 1}
       {x4498bccd x445de000 1}
       {x4498bccd x445e4ccd 1}
       {x4498cccd x445fc000 1}
       {x4498f99a x44613333 1}
       {x44993000 x44620000 1}
       {x44992ccd x44614666 1}}}
     {tx x447a4000 x4498e83b x445faa0f}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear70 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44985000 x445d8666 1}
       {x44985000 x445e0000 1}
       {x44985000 x445e799a 1}
       {x44987000 x44608000 1}
       {x4498accd x4461999a 1}
       {x4498c000 x4461f333 1}
       {x4498bccd x4461999a 1}
       {x4498a333 x4460e000 1}}}
     {tx x447a4000 x44988599 x446010cc}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear69 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4497a99a x445e8ccd 1}
       {x4497b000 x445f2000 1}
       {x4497c666 x44603333 1}
       {x4497e000 x44614000 1}
       {x44983000 x4462999a 1}
       {x44983ccd x4462e000 1}
       {x4498299a x4462599a 1}
       {x4498099a x44619333 1}}}
     {tx x447a4000 x4497f400 x446110cc}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear68 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44973ccd x445e6666 1}
       {x44976000 x445f4000 1}
       {x44976666 x445f999a 1}
       {x4497799a x4461599a 1}
       {x4497a666 x44628ccd 1}
       {x4497b333 x4462f99a 1}
       {x4497a333 x44624666 1}}}
     {tx x447a4000 x44977f16 x4460ea0f}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear67 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4496d99a x445ec000 1}
       {x4496f000 x445fc666 1}
       {x4496fccd x44606ccd 1}
       {x44973000 x4462599a 1}
       {x44977666 x4463599a 1}
       {x44974333 x44626666 1}}}
     {tx x447a4000 x44971d56 x44612ccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear66 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4496a000 x445ec000 1}
       {x4496c000 x445f4000 1}
       {x4496dccd x445feccd 1}
       {x44970000 x44617333 1}
       {x44972ccd x4462a000 1}
       {x44974000 x44633333 1}
       {x44971666 x44628666 1}}}
     {tx x447a4000 x4496f6db x44611a83}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear65 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44962ccd x445eaccd 1}
       {x44963000 x44601333 1}
       {x4496399a x4460cccd 1}
       {x4496699a x4462d333 1}
       {x44969333 x4463c666 1}
       {x44968ccd x4463399a 1}}}
     {tx x447a4000 x44965aab x44619000}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear64 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4495a000 x445ea000 1}
       {x4495accd x445fc000 1}
       {x4495b666 x44606666 1}
       {x4495dccd x4462399a 1}
       {x4495f99a x4463799a 1}
       {x4495fccd x4463c666 1}
       {x44960000 x44637333 1}}}
     {tx x447a4000 x4495d57b x4461abe2}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear63 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44949ccd x445f999a 1}
       {x4494b333 x44608666 1}
       {x4494c666 x44613333 1}
       {x4494d333 x4462b333 1}
       {x4494e666 x4463d99a 1}
       {x4494f000 x4464199a 1}}}
     {tx x447a4000 x4494caab x4461feef}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear62 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4494c000 x445ee000 1}
       {x4494bccd x445f999a 1}
       {x4494bccd x44601333 1}
       {x4494b000 x4461d333 1}
       {x4494a666 x4462f99a 1}
       {x4494a666 x44638000 1}
       {x4494c333 x44632000 1}}}
     {tx x447a4000 x4494b5f1 x44616ccd}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear61 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4494c000 x445e799a 1}
       {x4494b99a x445f0000 1}
       {x4494d666 x445f6ccd 1}
       {x4494f000 x445fd99a 1}
       {x4495399a x44614000 1}
       {x44958000 x4462b333 1}
       {x4495999a x44634000 1}
       {x44959000 x4462eccd 1}}}
     {tx x447a4000 x44952466 x4460dc00}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear60 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4494f99a x44607333 1}
       {x4494f99a x4460cccd 1}
       {x44950666 x4461199a 1}
       {x44954666 x44624ccd 1}
       {x44958ccd x4463999a 1}
       {x4495a000 x44644ccd 1}
       {x4495b333 x4464d99a 1}
       {x44958ccd x4463b333 1}}}
     {tx x447a4000 x4495559a x4462a333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear59 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44940666 x4460599a 1}
       {x44940666 x4461199a 1}
       {x4494199a x4462199a 1}
       {x44944000 x44640000 1}
       {x4494599a x44654ccd 1}
       {x44948000 x4464e666 1}
       {x44948666 x44644ccd 1}}}
     {tx x447a4000 x449440ea x44632668}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear58 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44942ccd x4460199a 1}
       {x44942ccd x4460599a 1}
       {x44942666 x44613333 1}
       {x44942ccd x4462d99a 1}
       {x44944ccd x44648ccd 1}
       {x44945333 x44658000 1}
       {x44943333 x44650ccd 1}}}
     {tx x447a4000 x449436db x4462ccce}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear57 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44932666 x4460d99a 1}
       {x44932000 x4461b333 1}
       {x44932ccd x44628ccd 1}
       {x44935333 x4464999a 1}
       {x44936ccd x4465e666 1}
       {x44937333 x44664000 1}
       {x44937333 x44656666 1}
       {x44936ccd x4464f333 1}}}
     {tx x447a4000 x449350cd x44640666}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear56 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44925333 x4461c000 1}
       {x44926ccd x4462c000 1}
       {x44929333 x4463a666 1}
       {x4492eccd x44656666 1}
       {x44932ccd x44668ccd 1}
       {x44931333 x4465d99a 1}}}
     {tx x447a4000 x4492c000 x44645334}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear55 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4492599a x4461cccd 1}
       {x44924666 x44620ccd 1}
       {x44924000 x44626666 1}
       {x44923333 x44634000 1}
       {x44923333 x44640000 1}
       {x44928000 x44658ccd 1}
       {x4492b99a x44668ccd 1}
       {x4492c000 x44662666 1}
       {x4492c000 x4465d99a 1}}}
     {tx x447a4000 x449271c7 x44642d84}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear54 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44932000 x44606666 1}
       {x44932000 x4460b333 1}
       {x44932666 x4461999a 1}
       {x44933333 x44624ccd 1}
       {x44936000 x44643333 1}
       {x4493799a x4464f333 1}
       {x44938000 x4464b333 1}
       {x44938000 x44644000 1}}}
     {tx x447a4000 x44934e66 x4462e332}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear53 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4492eccd x4460a666 1}
       {x4492eccd x44617333 1}
       {x4492f333 x44623333 1}
       {x44931333 x4463c000 1}
       {x4493399a x4464f333 1}
       {x44935333 x44654000 1}
       {x44935333 x4464cccd 1}
       {x44934000 x44646666 1}}}
     {tx x447a4000 x44932000 x44636e67}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear52 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44928666 x4460cccd 1}
       {x4492accd x4462199a 1}
       {x4492cccd x4462cccd 1}
       {x4493399a x4465199a 1}
       {x44935333 x44657333 1}
       {x44934666 x4464f333 1}}}
     {tx x447a4000 x4492f888 x44638888}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear51 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4490d99a x44617333 1}
       {x44911333 x4462599a 1}
       {x44914ccd x4462f333 1}
       {x4491b99a x4464b333 1}
       {x4491f99a x44658ccd 1}
       {x44920000 x44654000 1}}}
     {tx x447a4000 x44917ccc x4463b555}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear50 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44912ccd x4461b333 1}
       {x44912666 x4461f333 1}
       {x44912666 x4462a666 1}
       {x44912666 x44630ccd 1}
       {x44917333 x44647333 1}
       {x4491accd x44654000 1}
       {x4491b333 x44650000 1}}}
     {tx x447a4000 x4491599a x44636f8a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear49 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44912000 x44613333 1}
       {x44912000 x44618ccd 1}
       {x44916000 x4462c000 1}
       {x4491c666 x44647333 1}
       {x4491d99a x4464b333 1}
       {x4491eccd x44650000 1}
       {x4491e666 x4464a666 1}}}
     {tx x447a4000 x44919507 x446378b0}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear48 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4491799a x44614000 1}
       {x4491799a x4461b333 1}
       {x44918ccd x44622666 1}
       {x4491d99a x44636666 1}
       {x4492199a x4464999a 1}
       {x4491f99a x44646666 1}}}
     {tx x447a4000 x4491bccc x4462eaab}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear47 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44918000 x44614000 1}
       {x44916000 x44613333 1}
       {x44915333 x44617333 1}
       {x44918ccd x4462999a 1}
       {x4491cccd x4463599a 1}
       {x44924666 x44650ccd 1}
       {x44928ccd x44660ccd 1}
       {x44924666 x44656666 1}}}
     {tx x447a4000 x4491d4cc x44634b34}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear46 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448f7333 x4462199a 1}
       {x448f799a x44626666 1}
       {x448fb99a x4463a666 1}
       {x448fd99a x44648ccd 1}
       {x44900ccd x4465a666 1}
       {x44902666 x44663333 1}
       {x44902ccd x44667333 1}}}
     {tx x447a4000 x448fd6db x44646db6}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear45 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448f9333 x4460a666 1}
       {x448fb99a x44618000 1}
       {x448fe000 x4462599a 1}
       {x44903333 x44640000 1}
       {x4490599a x4464f333 1}
       {x44902666 x44647333 1}}}
     {tx x447a4000 x448ffaab x4462fbbb}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear44 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448f1333 x4461199a 1}
       {x448f4000 x4462199a 1}
       {x448f5333 x44628ccd 1}
       {x448fa000 x4464999a 1}
       {x448fa666 x4464d99a 1}
       {x448f999a x44648000 1}
       {x448f799a x44640ccd 1}}}
     {tx x447a4000 x448f6db7 x44636492}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear43 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448ea666 x44613333 1}
       {x448ec666 x4462199a 1}
       {x448ed99a x44630000 1}
       {x448f0666 x4464f333 1}
       {x448f1333 x44658ccd 1}
       {x448f0ccd x44654ccd 1}
       {x448ef333 x4464a666 1}}}
     {tx x447a4000 x448ee925 x4463d24a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear42 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448e4000 x44610ccd 1}
       {x448e599a x44620ccd 1}
       {x448e6666 x4462b333 1}
       {x448ea666 x44652666 1}
       {x448ec666 x4465f333 1}
       {x448eaccd x44657333 1}}}
     {tx x447a4000 x448e8445 x4463b998}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear41 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448d8ccd x4460c000 1}
       {x448d8ccd x44617333 1}
       {x448d9333 x4462599a 1}
       {x448dcccd x4464a666 1}
       {x448e2000 x44660ccd 1}
       {x448e0ccd x44658000 1}}}
     {tx x447a4000 x448dc666 x44637557}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear40 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448ce666 x4460199a 1}
       {x448ce666 x44608000 1}
       {x448ceccd x4460f333 1}
       {x448d2666 x44636666 1}
       {x448d6666 x44658000 1}
       {x448d8666 x44668000 1}
       {x448d8ccd x44663333 1}
       {x448d8000 x4465d99a 1}}}
     {tx x447a4000 x448d3b34 x44639fff}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear39 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448c6ccd x4460e666 1}
       {x448c7333 x44612666 1}
       {x448c8666 x4461e666 1}
       {x448cc000 x4463a666 1}
       {x448d2000 x4465c000 1}
       {x448d4ccd x44667333 1}
       {x448d4666 x4466199a 1}
       {x448d3333 x4465c000 1}}}
     {tx x447a4000 x448ce199 x4463f4cc}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear38 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448b5333 x44622666 1}
       {x448b6ccd x4462999a 1}
       {x448b9333 x4463c000 1}
       {x448bb99a x4464e666 1}
       {x448c0000 x4466599a 1}
       {x448c0666 x4466999a 1}
       {x448bf99a x44664000 1}}}
     {tx x447a4000 x448bb8b0 x4464a83a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear37 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448b0000 x4461599a 1}
       {x448b0666 x4461c000 1}
       {x448b199a x4462599a 1}
       {x448b4666 x4463cccd 1}
       {x448b5333 x4465b333 1}
       {x448b5333 x44664000 1}
       {x448b5333 x4465cccd 1}}}
     {tx x447a4000 x448b324a x4463db6e}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear36 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448a0000 x4460e666 1}
       {x448a0ccd x44617333 1}
       {x448a2666 x4461cccd 1}
       {x448a7333 x44638ccd 1}
       {x448ad99a x44657333 1}
       {x448b1333 x44664ccd 1}
       {x448b0ccd x4465c000 1}}}
     {tx x447a4000 x448a8492 x44639999}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear35 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4489c666 x44618000 1}
       {x4489c666 x44620000 1}
       {x4489d333 x44627333 1}
       {x448a1333 x4463cccd 1}
       {x448a7333 x44657333 1}
       {x448a999a x44662666 1}
       {x448a8666 x44656666 1}}}
     {tx x447a4000 x448a257d x4463d249}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear34 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4488eccd x4461999a 1}
       {x4488eccd x4461f333 1}
       {x4488f333 x44628000 1}
       {x44893333 x4463cccd 1}
       {x44897333 x44654000 1}
       {x44898666 x44660ccd 1}}}
     {tx x447a4000 x44892999 x44638667}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear33 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44882666 x4461999a 1}
       {x44882000 x44620000 1}
       {x44884666 x44630000 1}
       {x44886666 x44638000 1}
       {x4488d99a x4465599a 1}
       {x4489199a x4466b333 1}
       {x44890666 x4465f333 1}}}
     {tx x447a4000 x44888f8a x446403a7}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear32 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4487599a x44617333 1}
       {x44878000 x44624ccd 1}
       {x4487accd x4462d99a 1}
       {x4487cccd x4463599a 1}
       {x4487f99a x44648ccd 1}
       {x44880000 x44660ccd 1}
       {x44880666 x4466a666 1}
       {x44880666 x4466199a 1}}}
     {tx x447a4000 x4487cb34 x4464299a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear31 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4485d99a x4463f333 1}
       {x4485b333 x4464f333 1}
       {x4485b99a x44656666 1}
       {x44860666 x4466999a 1}
       {x44862666 x44673333 1}}}
     {tx x447a4000 x4485e3d6 x44659eb8}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear30 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4485e000 x4462999a 1}
       {x4485e666 x4463a666 1}
       {x44860000 x44647333 1}
       {x44865333 x44663333 1}
       {x44869333 x44677333 1}
       {x44869333 x4467c000 1}}}
     {tx x447a4000 x44863555 x44655999}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear29 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4486799a x4462599a 1}
       {x44864ccd x44630ccd 1}
       {x44864ccd x44638ccd 1}
       {x44866666 x4465199a 1}
       {x4486accd x44667333 1}
       {x4486d99a x44677333 1}}}
     {tx x447a4000 x44868000 x4464a888}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear28 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44868000 x44612666 1}
       {x44868666 x44620000 1}
       {x4486a666 x44630ccd 1}
       {x44870000 x4464a666 1}
       {x44875333 x4466199a 1}
       {x44876ccd x4466a666 1}
       {x44876ccd x44660ccd 1}}}
     {tx x447a4000 x4486fa83 x44643c58}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear27 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4486399a x4461e666 1}
       {x44862ccd x4462c000 1}
       {x44863333 x44636666 1}
       {x44866ccd x44648000 1}
       {x44869333 x4465d99a 1}
       {x4486accd x44668000 1}
       {x4486accd x44660ccd 1}}}
     {tx x447a4000 x44866be3 x44646be3}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear26 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4484f333 x44623333 1}
       {x4484e000 x44632666 1}
       {x4484eccd x44644000 1}
       {x4484f333 x4465599a 1}
       {x4484f99a x4465f333 1}
       {x44850ccd x4466999a 1}
       {x44853333 x4466999a 1}}}
     {tx x447a4000 x4484fd42 x4464df15}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear25 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4484e000 x44620ccd 1}
       {x4484e000 x4462599a 1}
       {x4484e666 x44630000 1}
       {x4484f333 x4463f333 1}
       {x44850000 x4464999a 1}
       {x4485199a x44658000 1}
       {x44853333 x44663333 1}
       {x44853333 x44668ccd 1}}}
     {tx x447a4000 x44850333 x44644667}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear24 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4483d333 x4461f333 1}
       {x4483d99a x44624ccd 1}
       {x4483eccd x44638ccd 1}
       {x44840000 x4464b333 1}
       {x44842ccd x44668000 1}
       {x44844000 x4466f333 1}
       {x44844000 x4466599a 1}
       {x44842ccd x44660000 1}}}
     {tx x447a4000 x44840e66 x4464c999}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear23 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44832ccd x4461d99a 1}
       {x44834000 x4462b333 1}
       {x44835333 x44638ccd 1}
       {x44839333 x44658ccd 1}
       {x4483b99a x4466599a 1}
       {x4483a666 x4465d99a 1}
       {x44838666 x44653333 1}}}
     {tx x447a4000 x448375f2 x44646f8a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear22 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4481f99a x4461cccd 1}
       {x44820000 x4462a666 1}
       {x4482199a x44637333 1}
       {x44824666 x44650ccd 1}
       {x44825333 x4466599a 1}
       {x44825333 x4465b333 1}}}
     {tx x447a4000 x44822aab x44642aab}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear21 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4481199a x4461d99a 1}
       {x4481199a x4462cccd 1}
       {x44811333 x44638000 1}
       {x44812ccd x4465599a 1}
       {x4481599a x44668ccd 1}
       {x4481599a x4465f333 1}}}
     {tx x447a4000 x44813111 x44645555}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear20 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44805333 x44624ccd 1}
       {x44805333 x4462f333 1}
       {x44805333 x4463b333 1}
       {x44806666 x44662666 1}
       {x44808666 x44674ccd 1}
       {x44809333 x44668ccd 1}}}
     {tx x447a4000 x4480699a x4464d334}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear19 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447f0ccd x4461d99a 1}
       {x447f0ccd x44628ccd 1}
       {x447f3333 x44643333 1}
       {x447f599a x44653333 1}
       {x447fa666 x44672666 1}
       {x447fcccd x4467a666 1}
       {x447fa666 x44670000 1}}}
     {tx x447a4000 x447f6493 x446515f2}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear18 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447df333 x4466b333 1}}}
     {tx x447a4000 x447df333 x4466b333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear17 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447d7333 x4462b333 1}
       {x447d8000 x44640000 1}
       {x447d8ccd x4464b333 1}
       {x447dcccd x4466599a 1}
       {x447dd99a x4466f333 1}}}
     {tx x447a4000 x447da148 x4464f0a3}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear16 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447bf333 x44620ccd 1}
       {x447bd99a x4462b333 1}
       {x447bd99a x4463a666 1}
       {x447bf333 x44650ccd 1}
       {x447bf333 x4466a666 1}
       {x447bf333 x4466f333 1}
       {x447bd99a x4466b333 1}}}
     {tx x447a4000 x447be83a x4464d248}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear15 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x447aa666 x44624ccd 1}
       {x447aa666 x44630000 1}
       {x447ab333 x44638000 1}
       {x447ad99a x44653333 1}
       {x447af333 x4466b333 1}
       {x447b0000 x44673333 1}
       {x447b0000 x4466d99a 1}}}
     {tx x447a4000 x447ad41d x4464f6da}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear14 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44788ccd x44627333 1}
       {x44788ccd x4463599a 1}
       {x4478a666 x44640000 1}
       {x4478f333 x44660ccd 1}
       {x44790ccd x44678ccd 1}
       {x44790ccd x4467cccd 1}
       {x44790000 x44677333 1}}}
     {tx x447a4000 x4478d41e x4465857d}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear13 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4477d99a x4462d99a 1}
       {x4477b333 x4463a666 1}
       {x44778ccd x44650ccd 1}
       {x44778ccd x44657333 1}
       {x4477a666 x44660000 1}
       {x44780000 x44673333 1}}}
     {tx x447a4000 x4477b777 x44650888}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear12 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4476599a x4462a666 1}
       {x4476599a x44634ccd 1}
       {x4476599a x44640000 1}
       {x4476599a x4465b333 1}
       {x44767333 x44673333 1}
       {x44767333 x44678000 1}}}
     {tx x447a4000 x44766221 x44650eef}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear11 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44757333 x44637333 1}
       {x4475599a x4464d99a 1}
       {x44754ccd x4465b333 1}
       {x44758000 x44678000 1}
       {x4475a666 x44683333 1}
       {x44758000 x4467f333 1}}}
     {tx x447a4000 x44757555 x44664665}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear10 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44743333 x44638ccd 1}
       {x44740ccd x4463d99a 1}
       {x4473f333 x44650ccd 1}
       {x4473f333 x44658ccd 1}
       {x44740ccd x4466f333 1}
       {x44742666 x4467b333 1}}}
     {tx x447a4000 x44740ef0 x44657110}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear9 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446e8ccd x4464f333 1}
       {x446e8ccd x44654ccd 1}
       {x446eb333 x44668000 1}
       {x446ecccd x44674ccd 1}
       {x446ef333 x4467f333 1}}}
     {tx x447a4000 x446eb5c2 x44666666}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear8 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4471599a x44628ccd 1}
       {x44714ccd x4463599a 1}
       {x44714ccd x44640ccd 1}
       {x4471599a x44658000 1}
       {x4471b333 x44670000 1}
       {x4471a666 x4467599a 1}}}
     {tx x447a4000 x44717111 x4464f777}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear7 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446ff333 x44637333 1}
       {x446ff333 x4463cccd 1}
       {x446fd99a x4464cccd 1}
       {x446fd99a x4465599a 1}
       {x446ff333 x4466cccd 1}
       {x44700000 x44677333 1}}}
     {tx x447a4000 x446feccc x44654667}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear6 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446fcccd x4463599a 1}
       {x446fcccd x4463d99a 1}
       {x446fcccd x4464a666 1}
       {x446ff333 x44658000 1}
       {x44700000 x44662666 1}}}
     {tx x447a4000 x446fdeba x4464b333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear5 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446b2666 x44648000 1}
       {x446b0000 x4464d99a 1}
       {x446af333 x44660000 1}
       {x446af333 x4466599a 1}
       {x446b2666 x44673333 1}}}
     {tx x447a4000 x446b0a3d x4465c7ad}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear4 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446cb333 x44643333 1}
       {x446c8000 x44650000 1}
       {x446c7333 x4465a666 1}
       {x446c7333 x4466d99a 1}
       {x446c7333 x44678ccd 1}
       {x446c7333 x4467f333 1}}}
     {tx x447a4000 x446c8000 x44663333}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear3 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446db333 x4462f333 1}
       {x446db333 x4463599a 1}
       {x446db333 x4463cccd 1}
       {x446dd99a x4464a666 1}
       {x446dd99a x44660000 1}
       {x446e0ccd x4467d99a 1}
       {x446e2666 x4468d99a 1}
       {x446e2666 x44693333 1}
       {x446e0000 x4468d99a 1}}}
     {tx x447a4000 x446de7d2 x44662aab}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear2 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x446bf333 x4462a666 1}
       {x446bd99a x44630000 1}
       {x446bcccd x4463599a 1}
       {x446ba666 x44642666 1}
       {x446b8ccd x44650000 1}
       {x446b7333 x44663333 1}
       {x446b7333 x44670ccd 1}
       {x446b7333 x44680000 1}
       {x446b8000 x4468a666 1}
       {x446b8ccd x44690ccd 1}
       {x446ba666 x4469599a 1}}}
     {tx x447a4000 x446b9f6a x44660a7a}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}
    {cubiccurve Smear1 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44698ccd x4460b333 1}
       {x44698ccd x44613333 1}
       {x44697333 x44620ccd 1}
       {x44693333 x44630ccd 1}
       {x44692666 x44638ccd 1}
       {x44692666 x44648000 1}
       {x44692666 x44653333 1}
       {x44692666 x44660000 1}
       {x44692666 x44668ccd 1}
       {x44692666 x44674ccd 1}
       {x44692666 x4467a666 1}
       {x44692666 x44680ccd 1}
       {x44693333 x44688ccd 1}
       {x44694ccd x44690000 1}
       {x44694ccd x4469599a 1}}}
     {tx x447a4000 x44693fff x4465836b}
     {a ro 0 go 0 bo 0 ao 0 bs x4221999a bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 x41700000 tt x41c80000}}}}}}
  toolbox {smear {
  { selectAll bs 28.2 src 1 str 1 ssx 1 ssy 1 sf 1 ep1 15 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear bs 28.2 src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 ltn 1001 ltm 1001 ep1 15 tt 25 }
} }
  toolbar_brush_size 28.20000076
  toolbar_brush_hardness 0.200000003
  toolbar_lifetime_type single
  toolbar_lifetime_start 1001
  toolbar_lifetime_end 1001
  toolbar_effect_parameter1 15
  toolbar_paint_source fg
  toolbar_source_transform_scale {1 1}
  toolbar_source_transform_center {960 540}
  colorOverlay {0 0 0 0}
  paint_source foreground
  lifetime_type "all frames"
  lifetime_start 1001
  lifetime_end 1001
  brush_type smear
  brush_size 40.40000153
  brush_spacing 0.05000000075
  brush_hardness 0.200000003
  effect_parameter1 15
  source_black_outside true
  name RotoPaint1
  xpos -4496
  ypos 320
 }
 Keymix {
  inputs 3
  name Keymix5
  xpos -4496
  ypos 403
 }
 Keymix {
  inputs 3
  name Keymix6
  xpos -4496
  ypos 468
  disable true
 }
 Merge2 {
  inputs 2
  operation mask
  name Merge29
  xpos -4496
  ypos 535
 }
 Reformat {
  inputs 0
  format "4550 2416 0 0 4550 2416 1 "
  name Reformat4
  xpos 3606
  ypos -847
 }
 Roto {
  output alpha
  curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44800000 x44428000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x447b4000
        {xc2200000 xc2100000}
        {xc32c0000 x429c0000}
        {x42200000 x42100000}
        {xc31c0000 xc2680000}
        {x43fa0000 x43a00000}
        {x431c0000 x42680000}
        {xc3300000 xc1e00000}
        {x448f8000 x440e8000}
        {x43300000 x41e00000}
        {xc3080000 x41800000}
        {x44b2c000 x44200000}
        {x43080000 xc1800000}
        {xc3180000 xc1d00000}
        {x44d54000 x44290000}
        {x43180000 x41d00000}
        {xc36e0000 xc2000000}
        {x453a0000 x445c8000}
        {x436e0000 x42000000}
        {xc3a60000 xc1d00000}
        {x4572a000 x447d0000}
        {x43a60000 x41d00000}
        {xc3970000 x42180000}
        {x45911000 x448d8000}
        {x43970000 xc2180000}
        {x44190000 x430c0000}
        {x4599a000 xc2d40000}
        {xc4190000 xc30c0000}
        {x41a00000 xc2940000}
        {xc3040000 xc3300000}
        {xc1a00000 x42940000}}}     idem}
     {tx x447b4000 x4502999a x43fb6666}
     {a osw x41200000 osf 0 str 1 spx x44800000 spy x44428000 sb 1 ltn x447b4000 ltm x447b4000 tt x40800000}}}}}}
  toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
  toolbar_brush_hardness 0.200000003
  toolbar_source_transform_scale {1 1}
  toolbar_source_transform_center {1024 778}
  colorOverlay {0 0 0 0}
  lifetime_type "all frames"
  lifetime_start 1005
  lifetime_end 1005
  motionblur_shutter_offset_type centred
  source_black_outside true
  name Roto3
  xpos 3606
  ypos -780
 }
 Dot {
  name Dot34
  xpos 3640
  ypos -657
 }
 Reformat {
  inputs 0
  format "4550 2416 0 0 4550 2416 1 "
  name Reformat2
  xpos 3322
  ypos -1110
 }
 Roto {
  output alpha
  curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44800000 x44428000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier2 512 bezier
     {{cc
       {f 8192}
       {px x447b4000
        {x43280000 x42ec0000}
        {x4560c000 x44d00000}
        {xc3280000 xc2ec0000}
        {xc3280000 x42dc0000}
        {x45584000 x4498c000}
        {x43280000 xc2dc0000}
        {xc38a0000 xc2940000}
        {x458b4000 x44790000}
        {x438a0000 x42940000}
        {x43480000 xc30a0000}
        {x459c9000 x44a9c000}
        {xc3480000 x430a0000}}}
      {cc
       {f 8192}
       {px x447b4000
        {x43280000 x42ec0000}
        {xc244cd00 x429bccd0}
        {xc3280000 xc2ec0000}
        {xc3280000 x42dc0000}
        {xc2833320 xc1c4cd00}
        {x43280000 xc2dc0000}
        {xc38a0000 xc2940000}
        {x42553300 xc2833310}
        {x438a0000 x42940000}
        {x43480000 xc30a0000}
        {x42d53340 x42a40000}
        {xc3480000 x430a0000}}}}
     {tx x447b4000 x45811400 x44a3c000}
     {a osw x41200000 osf 0 str 1 spx x44800000 spy x44428000 sb 1 ltn x447b4000 ltm x447b4000 tt x40800000}}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x447b4000
        {xc2200000 xc1a00000}
        {xc3200000 x44108000}
        {x42200000 x41a00000}
        {xc2fc0000 x430e0000}
        {x444f4cc8 x4451e668}
        {x42fc0000 xc30e0000}
        {x43b90000 x429c0000}
        {x445c9330 x43b40001}
        {xc3b90000 xc29c0000}
        {xc1b00000 xc2ac0000}
        {xc3a03328 x428d6664}
        {x41b00000 x42ac0000}
        {xc1cc0000 xc2c0fff8}
        {xc3ac4000 x43c53ffe}
        {x41895910 x4281f12c}}}
      {cc
       {f 8192}
       {px x447b4000
        {xc2200000 xc1a00000}
        {xc1c4cc80 x42553330}
        {x42200000 x41a00000}
        {xc2fc0000 x430e0000}
        {x4244cce0 x4244ccd0}
        {x42fc0000 xc30e0000}
        {x43b90000 x429c0000}
        {x42346660 xc244ccd0}
        {xc3b90000 xc29c0000}
        {xc1b00000 xc2ac0000}
        {xc2fe3320 xc28b665c}
        {x41b00000 x42ac0000}
        {xc1cc0000 xc2c0fff8}
        {xc2dd6680 x42760000}
        {x41895910 x4281f12c}}}}
     {tx x447b4000 x438f999a x43dd0000}
     {a osw x41200000 osf 0 str 1 spx x44800000 spy x44428000 sb 1 ltn x447b4000 ltm x447b4000 tt x40800000}}}}}}
  toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
  toolbar_brush_hardness 0.200000003
  toolbar_source_transform_scale {1 1}
  toolbar_source_transform_center {1024 778}
  colorOverlay {0 0 0 0}
  lifetime_type "all frames"
  lifetime_start 1005
  lifetime_end 1005
  motionblur_shutter_offset_type centred
  source_black_outside true
  name Roto1
  xpos 3322
  ypos -1050
 }
 Dot {
  name Dot32
  xpos 3356
  ypos -979
 }
 Read {
  inputs 0
  file_type exr
  file /data/jobs/TRN/sequences/compTraining/shots/TRN-compTraining-compShotA/.jabuka/assets/cine/fgRt/plate_matte_mg/versions/0001/TRN_compTraining_TRN-compTraining-compShotA_plate_matte_mg_v0001.%06d.exr
  first 1001
  last 1052
  colorspace default
  name TRN_compTraining_compShotA_fgRtPlate_matte_mg_v0001_1
  xpos 3734
  ypos -1113
  icon /software/apps/jabuka/7.195.1/tools/python/2.7/noarch/cortex/10.3/GafferJabukaUI/Resources/Icons/dynamic.png
  addUserKnob {20 ieAssetInfo l "Asset Information"}
  addUserKnob {20 Advanced t "\n<B>ieEntityType:</B> ImageSequence\n<B>ieEntityId:</B> 2081920\n<B>ieAssetId:</B> 2081911\n<B>ieNodeTag:</B> \n<B>ieLinkedEntities:</B> \[]\n<B>ieBundleId:</B> 2079433" n 2}
  addUserKnob {1 ieNodeType l "Node Type" +INVISIBLE}
  ieNodeType assetNode
  addUserKnob {1 ieEntityType l "Entity Type" +DISABLED}
  ieEntityType ImageSequence
  addUserKnob {3 ieEntityId l "Entity Id" +DISABLED}
  ieEntityId 2081920
  addUserKnob {3 ieAssetId l "Asset Id" +DISABLED}
  ieAssetId 2081911
  addUserKnob {1 ieCopyId l "Copy Id" +DISABLED}
  ieCopyId 1
  addUserKnob {1 ieNodeTag l "Node Tag" +DISABLED}
  addUserKnob {1 ieLinkedEntities l "Linked Entities" +DISABLED}
  ieLinkedEntities "\[]"
  addUserKnob {3 ieBundleId l "Bundle Id" +DISABLED}
  ieBundleId 2079433
  addUserKnob {20 AdvancedEG n -1}
  addUserKnob {3 ieBundleVersion l "Bundle Version" +DISABLED}
  ieBundleVersion 8
  addUserKnob {1 ieDisplayName l Name +DISABLED}
  ieDisplayName plate_matte_mg
  addUserKnob {4 ieEntityVersion l "Entity Version" M {1}}
  addUserKnob {32 ieUpdateVersions l "Update Versions" -STARTLINE}
  addUserKnob {1 ieVersionCreationDate l "Version Creation Date" +DISABLED}
  ieVersionCreationDate "02-10-2021 18:56:13"
  addUserKnob {1 ieVersionCreator l Artist -STARTLINE +DISABLED}
  ieVersionCreator murrays
  addUserKnob {4 ieUpdateMode l "Update Mode" M {locked latest latestApproved default}}
  ieUpdateMode default
  addUserKnob {6 ieRelativeToLocation l "Entity is Dynamic - Relative To Environment Location" +STARTLINE}
  ieRelativeToLocation true
  addUserKnob {6 ieDefaultCineAssetUpdate l "Default Cine Asset update" +STARTLINE}
  ieDefaultCineAssetUpdate true
  addUserKnob {1 iePurposeOverride l "Purpose override" +INVISIBLE}
  iePurposeOverride "matte_mg "
  addUserKnob {32 ieSourceScene l "Open Source Scene" +STARTLINE}
  addUserKnob {26 ieSeparator l "  "}
  addUserKnob {1 ieSequencePath l SequencePath}
  ieSequencePath /data/jobs/TRN/sequences/compTraining/shots/TRN-compTraining-compShotA/.jabuka/assets/cine/fgRt/plate_matte_mg/versions/0001/TRN_compTraining_TRN-compTraining-compShotA_plate_matte_mg_v0001.%06d.exr
  addUserKnob {32 ieDailyButton l "Create Daily" +STARTLINE}
 }
 Read {
  inputs 0
  file_type exr
  file /data/jobs/TRN/sequences/compTraining/shots/TRN-compTraining-compShotA/.jabuka/assets/cine/fgRt/plate_matte_bg/versions/0001/TRN_compTraining_TRN-compTraining-compShotA_plate_matte_bg_v0001.%06d.exr
  first 1001
  last 1052
  colorspace AcesCG
  name TRN_compTraining_compShotA_fgRtPlate_matte_bg_v0001_1
  xpos 3599
  ypos -1214
  icon /software/apps/jabuka/7.195.1/tools/python/2.7/noarch/cortex/10.3/GafferJabukaUI/Resources/Icons/dynamic.png
  addUserKnob {20 ieAssetInfo l "Asset Information"}
  addUserKnob {20 Advanced t "\n<B>ieEntityType:</B> ImageSequence\n<B>ieEntityId:</B> 2081918\n<B>ieAssetId:</B> 2081911\n<B>ieNodeTag:</B> \n<B>ieLinkedEntities:</B> \[]\n<B>ieBundleId:</B> 2079433" n 2}
  addUserKnob {1 ieNodeType l "Node Type" +INVISIBLE}
  ieNodeType assetNode
  addUserKnob {1 ieEntityType l "Entity Type" +DISABLED}
  ieEntityType ImageSequence
  addUserKnob {3 ieEntityId l "Entity Id" +DISABLED}
  ieEntityId 2081918
  addUserKnob {3 ieAssetId l "Asset Id" +DISABLED}
  ieAssetId 2081911
  addUserKnob {1 ieCopyId l "Copy Id" +DISABLED}
  ieCopyId 1
  addUserKnob {1 ieNodeTag l "Node Tag" +DISABLED}
  addUserKnob {1 ieLinkedEntities l "Linked Entities" +DISABLED}
  ieLinkedEntities "\[]"
  addUserKnob {3 ieBundleId l "Bundle Id" +DISABLED}
  ieBundleId 2079433
  addUserKnob {20 AdvancedEG n -1}
  addUserKnob {3 ieBundleVersion l "Bundle Version" +DISABLED}
  ieBundleVersion 8
  addUserKnob {1 ieDisplayName l Name +DISABLED}
  ieDisplayName plate_matte_bg
  addUserKnob {4 ieEntityVersion l "Entity Version" M {1}}
  addUserKnob {32 ieUpdateVersions l "Update Versions" -STARTLINE}
  addUserKnob {1 ieVersionCreationDate l "Version Creation Date" +DISABLED}
  ieVersionCreationDate "02-10-2021 18:56:04"
  addUserKnob {1 ieVersionCreator l Artist -STARTLINE +DISABLED}
  ieVersionCreator murrays
  addUserKnob {4 ieUpdateMode l "Update Mode" M {locked latest latestApproved default}}
  ieUpdateMode default
  addUserKnob {6 ieRelativeToLocation l "Entity is Dynamic - Relative To Environment Location" +STARTLINE}
  ieRelativeToLocation true
  addUserKnob {6 ieDefaultCineAssetUpdate l "Default Cine Asset update" +STARTLINE}
  ieDefaultCineAssetUpdate true
  addUserKnob {1 iePurposeOverride l "Purpose override" +INVISIBLE}
  iePurposeOverride "matte_bg "
  addUserKnob {32 ieSourceScene l "Open Source Scene" +STARTLINE}
  addUserKnob {26 ieSeparator l "  "}
  addUserKnob {1 ieSequencePath l SequencePath}
  ieSequencePath /data/jobs/TRN/sequences/compTraining/shots/TRN-compTraining-compShotA/.jabuka/assets/cine/fgRt/plate_matte_bg/versions/0001/TRN_compTraining_TRN-compTraining-compShotA_plate_matte_bg_v0001.%06d.exr
  addUserKnob {32 ieDailyButton l "Create Daily" +STARTLINE}
 }
 Merge2 {
  inputs 2
  name Merge2
  xpos 3599
  ypos -1078
 }
 Dot {
  name Dot33
  xpos 3633
  ypos -979
 }
 Reformat {
  inputs 0
  format "4550 2416 0 0 4550 2416 1 "
  name Reformat3
  xpos 3605
  ypos -1541
 }
 Roto {
  output alpha
  curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44800000 x44428000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x447b4000
        {xc1600000 xc1200000}
        {x43cc999c x43d34000}
        {x41600000 x41200000}
        {xc2c80000 xc2a00000}
        {x44360000 x44360000}
        {x42c80000 x42a00000}
        {xc2000000 xc3340000}
        {x44670000 x44820000}
        {x42000000 x43340000}
        {xc0800000 xc3180000}
        {x447be000 x44c14fff}
        {x40800000 x43180000}
        {xc3780000 xc2e00000}
        {x44a2d000 x4502a800}
        {x43780000 x42e00000}
        {xc2c80000 x42a00000}
        {x44d30000 x4509c000}
        {x42c80000 xc2a00000}
        {xc3440000 x41a00000}
        {x44fe0000 x44ec0000}
        {x43440000 xc1a00000}
        {xc3200000 0}
        {x451e0000 x44e38000}
        {x43200000 0}
        {xc2000000 x41800000}
        {x45376000 x44d38000}
        {x42000000 xc1800000}
        {xc2180000 0}
        {x453d2000 x44d1c000}
        {x42180000 0}
        {xc2600000 xc1900000}
        {x45422000 x44d3c000}
        {x42600000 x41900000}
        {xc1b00000 x41b00000}
        {x4547e000 x44d10000}
        {x41b00000 xc1b00000}
        {xc2580000 x41800000}
        {x454be000 x44cb8000}
        {x42580000 xc1800000}
        {xc1900000 x41400000}
        {x45546000 x44c1c000}
        {x41900000 xc1400000}
        {xc2280000 0}
        {x45586000 x44bc8000}
        {x42280000 0}
        {xc2000000 x41200000}
        {x45610000 x44b54000}
        {x42000000 xc1200000}
        {xc3120000 xc1000000}
        {x4572a000 x44b30000}
        {x43120000 x41000000}
        {xc2280000 x41e00000}
        {x4582c000 x449cc000}
        {x42280000 xc1e00000}
        {xc2400000 xc2500000}
        {x45964000 x44a50000}
        {x42400000 x42500000}
        {x43b00000 xc2500000}
        {x45993000 x45222000}
        {xc3b00000 x42500000}
        {x42f40000 x43780000}
        {xc3460000 x45222000}
        {xc2f40000 xc3780000}
        {xc3880000 x42d00000}
        {xc3dd0000 x43a70000}
        {x43880000 xc2d00000}}}     idem}
     {tx x447b4000 x451772e9 x44c18ba3}
     {a osw x41200000 osf 0 str 1 spx x44800000 spy x44428000 sb 1 ltn x447b4000 ltm x447b4000 tt x40800000}}}}}}
  toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
  toolbar_brush_hardness 0.200000003
  toolbar_source_transform_scale {1 1}
  toolbar_source_transform_center {1024 778}
  colorOverlay {0 0 0 0}
  lifetime_type "all frames"
  lifetime_start 1005
  lifetime_end 1005
  motionblur_shutter_offset_type centred
  source_black_outside true
  name Roto2
  xpos 3605
  ypos -1488
 }
 Dot {
  name Dot18
  xpos 3639
  ypos -1417
 }
push 0
push $N408a66d0
 OFXcom.absoft.neatvideo5_v5 {
  DNP 
  ProfileName "Unspecified device (4550x2416p).dnp"
  NFP NTBkAPotAAAAAAAAAAABAAAAAACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAgD8AAIA/AACAPwAAAAAAAIA/AACAPwAAgD+amRk/zcxMP83MTD8BAAAAAADAPwAAwD8AAIA/AACAPwAAgD8AAAAAAAAAP5qZmT4AAAAAAAAAAAAAgD8AAAAAAAAAAAAAgD8AAIA/AACAPwAAgD8AAQAAAACAPwAAAAAAAAAAAACAPwAAAAAAAAAAAQEBAQEBAQEBAQEAAQEBAQEBAQEBAQEBAQEBAQEBAQEBAQAAAgAAAAAAgD8AAAAAAAAAAAAAwD8AAAAAAAAAAAAAgD8BAQEBAQEBAQEBAQEBAQEBAQAAAAAAAAABAAAAAAAAAAAAQD8AAIA/AACAPwAAgD8BAQEBAQEBAQAAgD8AAIA/AAAAAAAAAAAAAAAAAAAAAAAAgD8AAIA/AACAPwAAgw
  PresetName "custom preset"
  ParamsHash1 1777902091
  ParamsHash2 264
  ParamsHash3 0
  name "Reduce Noise v5_1"
  selected true
  xpos 3234
  ypos -1753
 }
 Group {
  name TRN_compTraining_compShotA_fgRtNeutral_grade_v0001_2
  tile_color 0x4f009901
  xpos 3234
  ypos -1688
  icon /software/apps/jabuka/7.195.1/tools/python/2.7/noarch/cortex/10.3/GafferJabukaUI/Resources/Icons/dynamic.png
  addUserKnob {20 User}
  addUserKnob {6 Unpremult -STARTLINE}
  addUserKnob {41 slope T CDL.slope}
  addUserKnob {41 offset T CDL.offset}
  addUserKnob {41 power T CDL.power}
  addUserKnob {41 saturation T CDL.saturation}
  addUserKnob {41 direction +INVISIBLE T CDL.direction}
  addUserKnob {41 colorspace T LinToColorspace.out_colorspace}
  addUserKnob {20 ieAssetInfo l "Asset Information"}
  addUserKnob {20 Advanced t "\n<B>ieEntityType:</B> CDL\n<B>ieEntityId:</B> 2081914\n<B>ieAssetId:</B> 2081911\n<B>ieNodeTag:</B> \n<B>ieLinkedEntities:</B> \[]\n<B>ieBundleId:</B> 0" n 2}
  addUserKnob {1 ieNodeType l "Node Type" +INVISIBLE}
  ieNodeType assetNode
  addUserKnob {1 ieEntityType l "Entity Type" +DISABLED}
  ieEntityType CDL
  addUserKnob {3 ieEntityId l "Entity Id" +DISABLED}
  ieEntityId 2081914
  addUserKnob {3 ieAssetId l "Asset Id" +DISABLED}
  ieAssetId 2081911
  addUserKnob {1 ieCopyId l "Copy Id" +DISABLED}
  ieCopyId 2
  addUserKnob {1 ieNodeTag l "Node Tag" +DISABLED}
  addUserKnob {1 ieLinkedEntities l "Linked Entities" +DISABLED}
  ieLinkedEntities "\[]"
  addUserKnob {3 ieBundleId l "Bundle Id" +DISABLED}
  addUserKnob {20 AdvancedEG n -1}
  addUserKnob {3 ieBundleVersion l "<span style=\"color:Silver\">Bundle Version </span>" t "\nThis entity is not part\nof a bundle." +DISABLED}
  addUserKnob {1 ieDisplayName l Name +DISABLED}
  ieDisplayName neutral_grade
  addUserKnob {4 ieEntityVersion l "Entity Version" M {1}}
  addUserKnob {32 ieUpdateVersions l "Update Versions" -STARTLINE}
  addUserKnob {1 ieVersionCreationDate l "Version Creation Date" +DISABLED}
  ieVersionCreationDate "02-10-2021 18:51:31"
  addUserKnob {1 ieVersionCreator l Artist -STARTLINE +DISABLED}
  ieVersionCreator murrays
  addUserKnob {4 ieUpdateMode l "Update Mode" M {locked latest latestApproved default}}
  ieUpdateMode default
  addUserKnob {6 ieRelativeToLocation l "Entity is Dynamic - Relative To Environment Location" +STARTLINE}
  ieRelativeToLocation true
  addUserKnob {6 ieDefaultCineAssetUpdate l "Default Cine Asset update" +STARTLINE}
  ieDefaultCineAssetUpdate true
  addUserKnob {32 ieSourceScene l "Open Source Scene" +STARTLINE}
  addUserKnob {26 ieSeparator l "  "}
  addUserKnob {6 ieEditable -STARTLINE +HIDDEN}
 }
  Input {
   inputs 0
   name Input1
  }
  Unpremult {
   name Unpremult1
   disable {{!Unpremult}}
  }
  OCIOColorSpace {
   in_colorspace scene_linear
   out_colorspace REDWideGamut
   name LinToColorspace
  }
  OCIOCDLTransform {
   slope {0.629765451 0.6083145738 0.6460000277}
   offset {0 0 0}
   power {1 1 1}
   working_space scene_linear
   name CDL
  }
  OCIOColorSpace {
   in_colorspace {{LinToColorspace.out_colorspace}}
   out_colorspace scene_linear
   name ColorspaceToLin
  }
  Premult {
   name Premult1
   disable {{!Unpremult}}
  }
  Output {
   name Output1
  }
 end_group
 Dot {
  name Dot15
  xpos 3268
  ypos -1637
 }
set N2d73b520 [stack 0]
 Dot {
  name Dot17
  xpos 3493
  ypos -1637
 }
set N2d73fde0 [stack 0]
 OFXuk.co.thefoundry.keylight.keylight_v201 {
  inputs 3
  show "Final Result"
  unPreMultiply false
  screenColour {0.1460289061 0.276878804 0.06321252137}
  screenGain 1
  screenBalance 0.5
  alphaBias {0.5 0.5 0.5}
  despillBias {0.5 0.5 0.5}
  gangBiases true
  preBlur 0
  "Screen Matte" 1
  screenClipMin 0.03
  screenClipMax 0.89
  screenClipRollback 0
  screenGrowShrink 0
  screenSoftness 0
  screenDespotBlack 0
  screenDespotWhite 0
  screenReplaceMethod "Soft Colour"
  screenReplaceColour {0.5 0.5 0.5}
  Tuning 0
  midPoint 0.5
  lowGain 1
  midGain 1
  highGain 1
  "Inside Mask" 0
  sourceAlphaHandling Ignore
  insideReplaceMethod "Soft Colour"
  insideReplaceColour {0.5 0.5 0.5}
  Crops 0
  SourceXMethod Colour
  SourceYMethod Colour
  SourceEdgeColour 0
  SourceCropL 0
  SourceCropR 1
  SourceCropB 0
  SourceCropT 1
  balanceSet false
  insideComponent None
  outsideComponent Alpha
  cacheBreaker true
  name Keylight1
  xpos 3459
  ypos -1421
 }
 Keymix {
  inputs 3
  channels alpha
  name Keymix1
  xpos 3459
  ypos -989
 }
 ChannelMerge {
  inputs 2
  name ChannelMerge1
  xpos 3459
  ypos -673
 }
 Dot {
  name Dot16
  xpos 3493
  ypos -600
 }
push $N2d73b520
 Group {
  name DespillMadness
  note_font "Bitstream Vera Sans"
  xpos 3234
  ypos -681
  mapsize {0.15 0.15}
  addUserKnob {20 DespillMadness l "Despill Settings"}
  addUserKnob {41 screenType l "screen type" T GizmoControl.screenType}
  addUserKnob {41 algorithm l "despill algorithm" T GizmoControl.algorithm}
  addUserKnob {41 LimitPercentage l "fine tune" T RedLimitsGreen.LimitPercentage}
  addUserKnob {26 ""}
  addUserKnob {26 text_2 l "" +STARTLINE T "spill area correction"}
  addUserKnob {26 spacer l " " T " "}
  addUserKnob {6 sourceLuma l "restore source luminance" t "Restores luminance of original image." +STARTLINE}
  sourceLuma true
  addUserKnob {41 saturation T CC_SpillMap.saturation}
  addUserKnob {41 gamma T CC_SpillMap.gamma}
  addUserKnob {41 offset T CC_SpillMap.offset}
  addUserKnob {26 ""}
  addUserKnob {41 spillMatteOut l "output spill matte in alpha" T GizmoControl.spillMatteOut}
  addUserKnob {26 ""}
  addUserKnob {41 maskChannel l mask T KeymixMask.maskChannel}
  addUserKnob {6 invmsk l invert -STARTLINE}
  addUserKnob {41 which l mix T mix.which}
 }
  Input {
   inputs 0
   name img
   xpos 262
   ypos -342
  }
  Dot {
   name Dot6
   xpos 296
   ypos -186
  }
set N2d7da0b0 [stack 0]
  Dot {
   name Dot2
   xpos 296
   ypos -71
  }
set N2d7dea00 [stack 0]
  Dot {
   name Dot3
   xpos 626
   ypos -71
  }
set N2d7e3380 [stack 0]
  Expression {
   expr2 b>g*LimitPercentage?g*LimitPercentage:b
   expr3 b-g*LimitPercentage
   name GreenLimitsBlue1
   xpos 728
   ypos 44
   addUserKnob {20 User}
   addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
   LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
  }
push $N2d7e3380
  Expression {
   expr2 b>r*LimitPercentage?r*LimitPercentage:b
   expr3 b-r*LimitPercentage
   name RedLimitsBlue
   xpos 592
   ypos 44
   addUserKnob {20 User}
   addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
   LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
  }
push $N2d7e3380
  Expression {
   expr2 b>(g+2*r)/2*LimitPercentage?(g+2*r)/2*LimitPercentage:b
   expr3 b-(2*r+g)*LimitPercentage/2
   name DoubleRedAve2
   xpos 1125
   ypos 43
   addUserKnob {20 User}
   addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
   LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
  }
push $N2d7e3380
  Expression {
   expr2 b>(2*g+r)/2*LimitPercentage?(2*g+r)/2*LimitPercentage:b
   expr3 b-(r+2*g)*LimitPercentage/2
   name DoubleGreenAve
   xpos 998
   ypos 44
   addUserKnob {20 User}
   addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
   LimitPercentage {{RedLimitsGreen.LimitPercentage}}
  }
push $N2d7e3380
  Expression {
   expr2 b>(g+r)/2*LimitPercentage?(g+r)/2*LimitPercentage:b
   expr3 b-(r+g)*LimitPercentage/2
   name RedAndGreenLimitBlue
   xpos 862
   ypos 44
   addUserKnob {20 User}
   addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
   LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
  }
  Switch {
   inputs 5
   which {{GizmoControl.algorithm i}}
   name SwitchBlue
   xpos 728
   ypos 190
  }
  Dot {
   name Dot5
   xpos 762
   ypos 370
  }
push $N2d7dea00
  Dot {
   name Dot1
   xpos 164
   ypos -71
  }
set N2d638530 [stack 0]
  Expression {
   expr1 g>b*LimitPercentage?b*LimitPercentage:g
   expr3 g-b*LimitPercentage
   name BlueLimitsGreen
   xpos -15
   ypos 44
   addUserKnob {20 User}
   addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
   LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
  }
push $N2d638530
  Expression {
   expr1 g>r*LimitPercentage?r*LimitPercentage:g
   expr3 g-r*LimitPercentage
   name RedLimitsGreen
   xpos -160
   ypos 44
   addUserKnob {20 User}
   addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
   LimitPercentage 0.94
  }
push $N2d638530
  Expression {
   expr1 g>(b+2*r)/3*LimitPercentage?(b+2*r)/3*LimitPercentage:g
   expr3 g-(r+b)*LimitPercentage/2
   name DoubleRedAve
   xpos 370
   ypos 42
   addUserKnob {20 User}
   addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
   LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
  }
push $N2d638530
  Expression {
   expr1 g>(2*b+r)/3*LimitPercentage?(2*b+r)/3*LimitPercentage:g
   expr3 g-(r+b)*LimitPercentage/2
   name DoubleBlueAve
   xpos 257
   ypos 42
   addUserKnob {20 User}
   addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
   LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
  }
push $N2d638530
  Expression {
   expr1 g>(b+r)/2*LimitPercentage?(b+r)/2*LimitPercentage:g
   expr3 g-(r+b)*LimitPercentage/2
   name RedAveBlueLimitsGreen
   xpos 130
   ypos 44
   addUserKnob {20 User}
   addUserKnob {7 LimitPercentage l "fine tune" R 0.5 1.5}
   LimitPercentage {{RedLimitsGreen.LimitPercentage i}}
  }
  Switch {
   inputs 5
   which {{GizmoControl.algorithm i}}
   name SwitchGreen
   xpos -15
   ypos 199
  }
  Dot {
   name Dot4
   xpos 19
   ypos 370
  }
  Switch {
   inputs 2
   which {{GizmoControl.screenType i}}
   name SwitchMain
   xpos 257
   ypos 366
  }
  Clamp {
   channels alpha
   name Clamp1
   xpos 257
   ypos 408
  }
  ColorCorrect {
   maskChannelInput rgba.alpha
   name CC_SpillMap
   note_font Verdana
   xpos 257
   ypos 468
  }
set N2d6a2760 [stack 0]
  Dot {
   name Dot9
   xpos 440
   ypos 478
  }
  Dot {
   name Dot10
   xpos 440
   ypos 1389
  }
  Input {
   inputs 0
   name mask
   xpos -696
   ypos -348
   number 1
  }
  Expression {
   channel0 {-rgba.red -rgba.green -rgba.blue none}
   expr0 0
   channel1 {-rgba.red -rgba.green -rgba.blue none}
   expr1 0
   channel2 {-rgba.red -rgba.green -rgba.blue none}
   expr2 0
   channel3 {rgba.alpha none none rgba.alpha}
   expr3 a==0?0:a
   name AlphaFix1
   label "To avid Gizmo being in state of\nerror without something plugged in input."
   xpos -696
   ypos 861
  }
set N2d6c7280 [stack 0]
push $N2d6c7280
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name CopyMask
   xpos -296
   ypos 867
  }
  Invert {
   name Invert1
   xpos -296
   ypos 943
   disable {{parent.invmsk i}}
  }
push $N2d7da0b0
  Dot {
   name Dot7
   xpos -345
   ypos -186
  }
  Dot {
   name Dot8
   xpos -345
   ypos 551
  }
  Expression {
   channel0 {-rgba.red -rgba.green -rgba.blue none}
   expr0 0
   channel1 {-rgba.red -rgba.green -rgba.blue none}
   expr1 0
   channel2 {-rgba.red -rgba.green -rgba.blue none}
   expr2 0
   channel3 {rgba.alpha none none rgba.alpha}
   expr3 a==0?0:a
   name AlphaFix
   label "To avid Gizmo being in state of\nerror without something plugged in input."
   xpos -27
   ypos 534
  }
set N2d6f8df0 [stack 0]
  Dot {
   name Dot11
   xpos -113
   ypos 614
  }
  Dot {
   name Dot12
   xpos -113
   ypos 818
  }
set N2d50c140 [stack 0]
push $N2d6f8df0
push $N2d6f8df0
push $N2d6a2760
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   from3 rgba.alpha
   to3 rgba.alpha
   name CopyAlpha
   xpos 257
   ypos 534
  }
set N2d511270 [stack 0]
  Merge2 {
   inputs 2
   operation minus
   name Merge3
   xpos -27
   ypos 672
  }
  Clamp {
   name Clamp2
   xpos -27
   ypos 698
  }
  Saturation {
   saturation 0
   name Saturation2
   xpos -27
   ypos 736
  }
push $N2d511270
  Merge2 {
   inputs 2
   operation plus
   name RestoreLuma
   xpos 257
   ypos 736
   disable {{!parent.sourceLuma i}}
  }
  Keymix {
   inputs 3
   maskChannel -rgba.alpha
   name KeymixMask
   xpos 257
   ypos 943
  }
push $N2d50c140
  Dot {
   name Dot13
   xpos -113
   ypos 1087
  }
  Dissolve {
   inputs 2
   which 1
   name mix
   xpos 257
   ypos 1077
  }
  Switch {
   inputs 2
   which {{GizmoControl.spillMatteOut i}}
   name SwitchSpillMap
   xpos 257
   ypos 1385
  }
  Output {
   name Output1
   xpos 257
   ypos 1485
  }
  NoOp {
   inputs 0
   name GizmoControl
   selected true
   xpos 875
   ypos 414
   addUserKnob {20 User}
   addUserKnob {26 version l v1.0}
   addUserKnob {4 screenType l "screen type" M {green blue}}
   addUserKnob {4 algorithm l "despill algorithm" M {average "double green/blue average" "double red average" "red limit" "green/blue limit" ""}}
   addUserKnob {6 spillMatteOut l "output spill matte in alpha" +STARTLINE}
  }
 end_group
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos 3234
  ypos -610
 }
 Premult {
  name Premult1
  xpos 3234
  ypos -513
 }
 FrameHold {
  firstFrame 1005
  name FrameHold1
  xpos 3234
  ypos -469
 }
 Dot {
  name Dot1
  xpos 3268
  ypos -112
 }
set N2d5a8d10 [stack 0]
 CheckerBoard2 {
  inputs 0
  format "4550 2416 0 0 4550 2416 1 "
  color0 {0.1 0.1 0 1}
  color1 {0.1 0.1 0.1 1}
  color2 {0.1 0.1 0 1}
  color3 {0.1 0.1 0.1 1}
  centerlinewidth 0
  name CheckerBoard1
  xpos 2243
  ypos -1665
 }
 Dot {
  name Dot37
  xpos 2277
  ypos -1096
 }
set N2d5b9c20 [stack 0]
 Dot {
  name Dot14
  xpos 2277
  ypos -313
 }
 Merge2 {
  inputs 2
  name Merge7
  xpos 2243
  ypos -116
 }
 Text2 {
  inputs 0
  font_size_toolbar 80
  font_width_toolbar 100
  font_height_toolbar 100
  message "Questions ?"
  old_message {{81 117 101 115 116 105 111 110 115 32 63}
    }
  box {0 0 1920 1080}
  xjustify center
  yjustify center
  transforms {{0 2}
    }
  font_size_values {{0 80 1 80 2 80 3 80 4 80 5 80 6 80 7 80 8 80 9 80 10 80}
    }
  font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
  font_size 80
  center {960 540}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{0 1080}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 960 540 0 0 1 1 0 0 0 0}
    }
  name Text16
  xpos -7937
  ypos -179
 }
 Transform {
  translate {0 -210}
  center {960 1030}
  shutteroffset centred
  name Transform27
  xpos -7937
  ypos -120
 }
 Dot {
  name Dot123
  xpos -7903
  ypos -54
 }
push 0
 Text2 {
  inputs 0
  font_size_toolbar 180
  font_width_toolbar 100
  font_height_toolbar 100
  tracking_toolbar 0.6
  message "THANK YOU"
  old_message {{84 72 65 78 75 32 89 79 85}
    }
  box {0 0 1920 1080}
  xjustify center
  yjustify center
  transforms {{0 2}
    }
  font_size_values {{0 180 1 180 2 180 3 180 4 180 5 180 6 180 7 180 8 180}
    }
  tracking_values {{1 0.6 2 0.6 3 0.6 4 0.6 5 0.6 6 0.6 7 0.6 8 0.6}
    }
  font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
  font_size 180
  tracking 0.6
  center {960 540}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{0 1080}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 960 540 0 0 1 1 0 0 0 0}
    }
  name Text15
  xpos -7616
  ypos -194
 }
 Transform {
  center {960 1030}
  shutteroffset centred
  name Transform26
  xpos -7616
  ypos -152
 }
 Dot {
  name Dot121
  xpos -7582
  ypos -54
 }
 Text2 {
  inputs 0
  font_size_toolbar 100
  font_width_toolbar 100
  font_height_toolbar 100
  message "EDGE EXTEND"
  old_message {{69 68 71 69 32 69 88 84 69 78 68}
    }
  box {0 979 1920 1080}
  xjustify center
  yjustify center
  transforms {{0 2}
    }
  cursor_position 11
  font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
  center {960 540}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{0 1080}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 960 540 0 0 1 1 0 0 0 0}
    }
  name Text1
  xpos 1420
  ypos -1275
 }
 Transform {
  translate {0 -50}
  center {960 1030}
  shutteroffset centred
  name Transform2
  xpos 1420
  ypos -1217
 }
 Dot {
  name Dot4
  xpos 1454
  ypos -1103
 }
set N2d4721d0 [stack 0]
 Grid {
  inputs 0
  number 130
  size 0.02
  name Grid1
  xpos 1157
  ypos -1559
 }
 Transform {
  rotate -15
  scale 1.4
  center {960 540}
  shutteroffset centred
  name Transform1
  xpos 1157
  ypos -1533
 }
 Crop {
  box {0 0 1920 1080}
  name Crop1
  xpos 1157
  ypos -1507
 }
 Dot {
  name Dot2
  xpos 1191
  ypos -1460
 }
 Constant {
  inputs 0
  channels rgb
  color {0.01088789571 0.9155817628 0.9549999833 0}
  name Constant1
  xpos 1000
  ypos -1635
 }
 Ramp {
  p1 {1882 909}
  type smooth0
  color {0.9510459304 0.3290887475 1 1}
  name Ramp1
  xpos 1000
  ypos -1563
 }
 Grade {
  white 0.2
  gamma 0.7
  black_clamp false
  name Grade2
  xpos 1000
  ypos -1537
 }
 Saturation {
  saturation 0.45
  name Saturation1
  xpos 1000
  ypos -1511
 }
 Merge2 {
  inputs 2
  mix 0.325
  name Merge3
  xpos 1000
  ypos -1464
 }
 Shuffle2 {
  fromInput1 {{0} B}
  fromInput2 {{0} B}
  mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 white -1 -1 rgba.alpha 0 3"
  name Shuffle1
  xpos 1000
  ypos -1438
 }
 Dot {
  name Dot3
  xpos 1034
  ypos -1370
 }
set N2d4f13e0 [stack 0]
 Dot {
  name Dot5
  xpos 1278
  ypos -1370
 }
set N2d4f6130 [stack 0]
 Merge2 {
  inputs 2
  name Merge5
  xpos 1244
  ypos -1107
 }
 Dot {
  name Dot119
  xpos 1278
  ypos -710
 }
set N2d30ba60 [stack 0]
 Dot {
  name Dot120
  xpos -7759
  ypos -710
 }
 Merge2 {
  inputs 3+1
  name Merge33
  xpos -7793
  ypos -58
 }
 Dot {
  name Dot122
  xpos -7759
  ypos 2448
 }
 Text2 {
  inputs 0
  font_size_toolbar 50
  font_width_toolbar 100
  font_height_toolbar 100
  message "- try everything else first\n- which technique will work best ?\n- check if input needs to be (un)premulted\n- individual directional adjustments needed ?\n- spend some time on creating the core matte\n- keep it all inside 1 node vs. keymixing\n- try to preserve detail"
  old_message {{45 32 116 114 121 32 101 118 101 114 121 116 104 105 110 103 32 101 108 115 101 32 102 105 114 115 116 10 45 32 119 104 105 99 104 32 116 101 99 104 110 105 113 117 101 32 119 105 108 108 32 119 111 114 107 32 98 101 115 116 32 63 10 45 32 99 104 101 99 107 32 105 102 32 105 110 112 117 116 32 110 101 101 100 115 32 116 111 32 98 101 32 40 117 110 41 112 114 101 109 117 108 116 101 100 10 45 32 105 110 100 105 118 105 100 117 97 108 32 100 105 114 101 99 116 105 111 110 97 108 32 97 100 106 117 115 116 109 101 110 116 115 32 110 101 101 100 101 100 32 63 10 45 32 115 112 101 110 100 32 115 111 109 101 32 116 105 109 101 32 111 110 32 99 114 101 97 116 105 110 103 32 116 104 101 32 99 111 114 101 32 109 97 116 116 101 10 45 32 107 101 101 112 32 105 116 32 97 108 108 32 105 110 115 105 100 101 32 49 32 110 111 100 101 32 118 115 46 32 107 101 121 109 105 120 105 110 103 10 45 32 116 114 121 32 116 111 32 112 114 101 115 101 114 118 101 32 100 101 116 97 105 108}
    }
  box {0 0 1920 1080}
  xjustify center
  yjustify center
  transforms {{0 2}
    }
  font_size_values {{62 50 63 50 64 50 65 50 66 50 67 50 68 50 69 50 70 50 71 50 72 50 73 50 74 50 75 50 76 50 77 50 78 50 79 50 80 50 81 50 82 50 83 50 84 50 85 50 86 50 87 50 88 50 89 50 90 50 91 50 92 50 93 50 94 50 95 50 96 50 97 50 98 50 99 50 100 50 101 50 102 50 103 50 104 50 105 50 106 50 107 50 108 50 109 50 110 50 111 50 112 50 113 50 114 50 115 50 116 50 117 50 118 50 119 50 120 50 121 50 122 50 123 50 124 50 125 50 126 50 127 50 128 50 129 50 130 50 131 50 132 50 133 50 134 50 135 50 136 50 137 50 138 50 139 50 140 50 141 50 142 50 143 50 144 50 145 50 146 50 147 50 148 50 149 50 150 50 151 50 152 50 153 50 154 50 155 50 156 50 157 50 158 50 159 50 160 50 161 50 162 50 163 50 164 50 165 50 166 50 167 50 168 50 169 50 170 50 171 50 172 50 173 50 174 50 175 50 176 50 177 50 178 50 179 50 180 50 181 50 182 50 183 50 184 50 185 50 186 50 187 50 188 50 189 50 190 50 191 50 192 50 193 50 194 50 195 50 196 50 197 50 198 50 198 50 199 50 200 50 201 50 202 50 203 50 204 50 205 50 206 50 207 50 208 50 209 50 210 50 211 50 212 50 213 50 214 50 215 50 216 50 217 50 218 50 219 50 220 50 221 50 222 50 223 50 224 50 225 50 226 50 227 50 228 50 229 50 230 50 231 50 232 50 233 50 234 50 235 50 236 50 237 50 238 50 239 50 240 50 241 50 242 50 243 50 244 50 245 50 246 50 247 50 248 50 249 50 250 50 251 50 252 50 253 50 254 50 255 50 256 50 257 50 258 50 259 50 260 50 261 50 262 50 28 50 29 50 30 50 31 50 32 50 33 50 34 50 35 50 36 50 37 50 38 50 39 50 40 50 41 50 42 50 43 50 44 50 45 50 46 50 47 50 48 50 49 50 50 50 51 50 52 50 53 50 54 50 55 50 56 50 57 50 58 50 59 50 60 50 61 50 27 50 0 50 1 50 2 50 3 50 4 50 5 50 6 50 7 50 8 50 9 50 10 50 11 50 12 50 13 50 14 50 15 50 16 50 17 50 18 50 19 50 20 50 21 50 22 50 23 50 24 50 25 50 26 50}
    }
  font_height_values {{63 100 64 100 65 100 66 100 67 100 68 100 69 100 70 100 71 100 72 100 73 100 74 100 75 100 76 100 77 100 78 100 79 100 80 100 81 100 82 100 83 100 84 100 85 100 86 100 87 100 88 100 89 100 90 100 91 100 92 100 93 100 94 100 95 100 96 100 97 100 98 100 99 100 100 100 101 100 102 100 103 100 104 100 105 100 106 100 107 100 63 100 64 100 65 100 66 100 67 100 68 100 69 100 70 100 71 100 72 100 73 100 74 100 75 100 76 100 77 100 78 100 79 100 80 100 81 100 82 100 83 100 84 100 85 100 86 100 87 100 88 100 89 100 90 100 91 100 92 100 93 100 94 100 95 100 96 100 97 100 98 100 99 100 100 100 101 100 102 100 103 100 104 100 105 100 106 100 107 100}
    }
  tracking_values {{63 0 64 0 65 0 66 0 67 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 63 0 64 0 65 0 66 0 67 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0}
    }
  baseline_values {{63 0 64 0 65 0 66 0 67 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0 63 0 64 0 65 0 66 0 67 0 68 0 69 0 70 0 71 0 72 0 73 0 74 0 75 0 76 0 77 0 78 0 79 0 80 0 81 0 82 0 83 0 84 0 85 0 86 0 87 0 88 0 89 0 90 0 91 0 92 0 93 0 94 0 95 0 96 0 97 0 98 0 99 0 100 0 101 0 102 0 103 0 104 0 105 0 106 0 107 0}
    }
  cursor_position 22
  font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
  font_size 50
  leading 0.5
  center {960 540}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{0 1080}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 960 540 0 0 1 1 0 0 0 0}
    }
  name Text14
  xpos -6896
  ypos -159
 }
 Transform {
  translate {0 -80}
  center {960 1030}
  shutteroffset centred
  name Transform25
  xpos -6896
  ypos -106
 }
 Dot {
  name Dot118
  xpos -6862
  ypos -30
 }
 Text2 {
  inputs 0
  font_size_toolbar 60
  font_width_toolbar 100
  font_height_toolbar 100
  message SUMMARY
  old_message {{83 85 77 77 65 82 89}
    }
  box {0 979 1920 1080}
  xjustify center
  yjustify center
  transforms {{0 2}
    }
  font_size_values {{0 60 1 60 2 60 3 60 4 60 5 60 6 60}
    }
  cursor_position 7
  font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
  font_size 60
  center {960 540}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{0 1080}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 960 540 0 0 1 1 0 0 0 0}
    }
  name Text13
  xpos -6884
  ypos -425
 }
 Transform {
  translate {0 -160}
  center {960 1030}
  shutteroffset centred
  name Transform24
  xpos -6884
  ypos -372
 }
 Dot {
  name Dot113
  xpos -6850
  ypos -285
 }
push 0
push $N2d4721d0
 Multiply {
  value 0.05
  name Multiply1
  xpos 1420
  ypos -1064
 }
 Dot {
  name Dot8
  xpos 1454
  ypos -985
 }
set N2d3aac90 [stack 0]
 Dot {
  name Dot53
  xpos 1454
  ypos -887
 }
set N2d3afbe0 [stack 0]
 Dot {
  name Dot110
  xpos 1454
  ypos -773
 }
 Dot {
  name Dot116
  xpos -5347
  ypos -773
 }
set N2d3b9a80 [stack 0]
 Dot {
  name Dot117
  xpos -5347
  ypos -285
 }
push $N2d4f13e0
 Dot {
  name Dot46
  xpos 412
  ypos -1370
 }
set N2d3c3920 [stack 0]
 Dot {
  name Dot7
  xpos -12
  ypos -1370
 }
set N2d3c8870 [stack 0]
 Dot {
  name Dot109
  xpos -5622
  ypos -1370
 }
set N2d3cd7c0 [stack 0]
 Dot {
  name Dot114
  xpos -6640
  ypos -1370
 }
 Merge2 {
  inputs 3+1
  name Merge31
  xpos -6674
  ypos -289
 }
 Merge2 {
  inputs 2
  name Merge32
  xpos -6674
  ypos -34
 }
 Dot {
  name Dot115
  xpos -6640
  ypos 2191
 }
 Text2 {
  inputs 0
  font_size_toolbar 60
  font_width_toolbar 100
  font_height_toolbar 100
  message TOOLS
  old_message {{84 79 79 76 83}
    }
  box {0 979 1920 1080}
  xjustify center
  yjustify center
  transforms {{0 2}
    }
  font_size_values {{0 60 1 60 2 60 3 60 4 60 0 90}
    }
  cursor_position 5
  font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
  font_size 60
  center {960 540}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{0 1080}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 960 540 0 0 1 1 0 0 0 0}
    }
  name Text12
  xpos -5866
  ypos -960
 }
 Transform {
  translate {0 -160}
  center {960 1030}
  shutteroffset centred
  name Transform23
  xpos -5866
  ypos -888
 }
 Dot {
  name Dot111
  xpos -5832
  ypos -773
 }
push 0
push $N2d3b9a80
push $N2d3cd7c0
 Merge2 {
  inputs 3+1
  name Merge30
  xpos -5656
  ypos -777
 }
 Dot {
  name Dot112
  xpos -5622
  ypos 1939
 }
push $N680e3020
 Dot {
  name Dot107
  xpos -4983
  ypos 238
 }
 Dot {
  name Dot108
  xpos -4981
  ypos 857
 }
 Read {
  inputs 0
  file_type exr
  file /data/jobs/TRN/sequences/compTraining/shots/TRN-compTraining-compShotA/.jabuka/imageSequenceLibrary/preComp/ee_example_smear/versions/0001/TRN_compTraining_TRN-compTraining-compShotA_ee_example_smear_v0001.%06d.exr
  first 1001
  last 1001
  colorspace scene_linear
  in_colorspace scene_linear
  out_colorspace scene_linear
  name TRN_compTraining_compShotA_ee_example_smear_v0001_2
  xpos -4496
  ypos 591
  icon /software/apps/jabuka/7.196.0/tools/python/2.7/noarch/cortex/10.3/GafferJabukaUI/Resources/Icons/dynamic.png
  addUserKnob {20 ieAssetInfo l "Asset Information"}
  addUserKnob {20 Advanced t "\n<B>ieEntityType:</B> ImageSequence\n<B>ieEntityId:</B> 2932926\n<B>ieAssetId:</B> 0\n<B>ieNodeTag:</B> \n<B>ieLinkedEntities:</B> \[]\n<B>ieBundleId:</B> 0" n 2}
  addUserKnob {1 ieNodeType l "Node Type" +INVISIBLE}
  ieNodeType assetNode
  addUserKnob {1 ieEntityType l "Entity Type" +DISABLED}
  ieEntityType ImageSequence
  addUserKnob {3 ieEntityId l "Entity Id" +DISABLED}
  ieEntityId 2932926
  addUserKnob {3 ieAssetId l "Asset Id" +DISABLED}
  addUserKnob {1 ieCopyId l "Copy Id" +DISABLED}
  ieCopyId 2
  addUserKnob {1 ieNodeTag l "Node Tag" +DISABLED}
  addUserKnob {1 ieLinkedEntities l "Linked Entities" +DISABLED}
  ieLinkedEntities "\[]"
  addUserKnob {3 ieBundleId l "Bundle Id" +DISABLED}
  addUserKnob {20 AdvancedEG n -1}
  addUserKnob {3 ieBundleVersion l "Bundle Version" +DISABLED}
  addUserKnob {1 ieDisplayName l Name +DISABLED}
  ieDisplayName ee_example_smear
  addUserKnob {4 ieEntityVersion l "Entity Version" M {1}}
  addUserKnob {32 ieUpdateVersions l "Update Versions" -STARTLINE}
  addUserKnob {1 ieVersionCreationDate l "Version Creation Date" +DISABLED}
  ieVersionCreationDate "03-29-2022 10:11:48"
  addUserKnob {1 ieVersionCreator l Artist -STARTLINE +DISABLED}
  ieVersionCreator sebastians
  addUserKnob {4 ieUpdateMode l "Update Mode" M {locked latest latestApproved default}}
  ieUpdateMode default
  addUserKnob {6 ieRelativeToLocation l "Entity is Dynamic - Relative To Environment Location" +STARTLINE}
  ieRelativeToLocation true
  addUserKnob {32 ieSourceScene l "Open Source Scene" +STARTLINE}
  addUserKnob {26 ieSeparator l "  "}
  addUserKnob {1 ieSequencePath l SequencePath}
  ieSequencePath /data/jobs/TRN/sequences/compTraining/shots/TRN-compTraining-compShotA/.jabuka/imageSequenceLibrary/preComp/ee_example_smear/versions/0001/TRN_compTraining_TRN-compTraining-compShotA_ee_example_smear_v0001.%06d.exr
  addUserKnob {32 ieDailyButton l "Create Daily" +STARTLINE}
 }
 Dot {
  name Dot100
  xpos -4462
  ypos 773
 }
set N2d282870 [stack 0]
 Dot {
  name Dot101
  xpos -4837
  ypos 773
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy3
  xpos -4871
  ypos 847
 }
 Premult {
  name Premult5
  xpos -4871
  ypos 909
 }
 Transform {
  translate {0 -150}
  scale 0.8
  center {960 540}
  shutteroffset centred
  name Transform22
  xpos -4871
  ypos 1003
 }
 Dot {
  name Dot75
  xpos -4837
  ypos 1748
 }
 Text2 {
  inputs 0
  font_size_toolbar 40
  font_width_toolbar 100
  font_height_toolbar 100
  message premult
  old_message {{112 114 101 109 117 108 116}
    }
  box {0 979 1920 1080}
  xjustify center
  yjustify center
  transforms {{0 2}
    }
  font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40}
    }
  cursor_position 7
  font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
  font_size 40
  center {960 540}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{0 1080}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 960 540 0 0 1 1 0 0 0 0}
    }
  name Text11
  xpos -1525
  ypos 1533
 }
 Transform {
  translate {0 -280}
  center {960 1030}
  shutteroffset centred
  name Transform19
  xpos -1525
  ypos 1573
 }
 Dot {
  name Dot84
  xpos -1491
  ypos 1619
 }
 Text2 {
  inputs 0
  font_size_toolbar 60
  font_width_toolbar 100
  font_height_toolbar 100
  message HOW?
  old_message {{72 79 87 63}
    }
  box {0 979 1920 1080}
  xjustify center
  yjustify center
  transforms {{0 2}
    }
  font_size_values {{0 60 1 60 2 60 3 60 0 90}
    }
  cursor_position 4
  font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
  font_size 60
  center {960 540}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{0 1080}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 960 540 0 0 1 1 0 0 0 0}
    }
  name Text3
  xpos 234
  ypos -1198
 }
 Transform {
  translate {0 -160}
  center {960 1030}
  shutteroffset centred
  name Transform6
  xpos 234
  ypos -1140
 }
 Dot {
  name Dot48
  xpos 268
  ypos -985
 }
set N2d119980 [stack 0]
 Multiply {
  value 0.05
  name Multiply5
  xpos 111
  ypos -962
 }
push 0
push $N2d3aac90
 Dot {
  name Dot54
  xpos 603
  ypos -985
 }
set N2d12a750 [stack 0]
 Dot {
  name Dot55
  xpos 603
  ypos -893
 }
push $N2d3c8870
 Merge2 {
  inputs 3+1
  name Merge15
  xpos -46
  ypos -897
 }
 Dot {
  name Dot59
  xpos -12
  ypos 303
 }
set N2d144f70 [stack 0]
 Dot {
  name Dot60
  xpos -169
  ypos 303
 }
set N2d149f40 [stack 0]
 Dot {
  name Dot65
  xpos -425
  ypos 303
 }
set N2d14ee90 [stack 0]
 Dot {
  name Dot67
  xpos -789
  ypos 303
 }
set N2d153de0 [stack 0]
 Dot {
  name Dot74
  xpos -1041
  ypos 303
 }
set N2d158d30 [stack 0]
 Dot {
  name Dot80
  xpos -1319
  ypos 303
 }
set N2d15dc80 [stack 0]
 Dot {
  name Dot83
  xpos -1615
  ypos 303
 }
 Merge2 {
  inputs 2
  name Merge28
  xpos -1649
  ypos 1615
 }
 Merge2 {
  inputs 2
  name Merge27
  xpos -1649
  ypos 1744
 }
 Dot {
  name Dot86
  xpos -1615
  ypos 1828
 }
push $N2d282870
 Transform {
  translate {0 -150}
  scale 0.8
  center {960 540}
  shutteroffset centred
  name Transform21
  xpos -4496
  ypos 858
 }
 Dot {
  name Dot99
  xpos -4462
  ypos 1392
 }
 Text2 {
  inputs 0
  font_size_toolbar 40
  font_width_toolbar 100
  font_height_toolbar 100
  message "smear (RotoPaint, Inpaint)"
  old_message {{115 109 101 97 114 32 40 82 111 116 111 80 97 105 110 116 44 32 73 110 112 97 105 110 116 41}
    }
  box {0 979 1920 1080}
  xjustify center
  yjustify center
  transforms {{0 2}
    }
  font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 11 40 12 40 13 40 14 40 15 40 16 40 17 40 18 40 19 40 20 40 21 40 22 40 23 40 24 40 25 40}
    }
  cursor_position 26
  font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
  font_size 40
  center {960 540}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{0 1080}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 960 540 0 0 1 1 0 0 0 0}
    }
  name Text10
  xpos -1229
  ypos 1202
 }
 Transform {
  translate {0 -280}
  center {960 1030}
  shutteroffset centred
  name Transform18
  xpos -1229
  ypos 1245
 }
 Dot {
  name Dot82
  xpos -1195
  ypos 1291
 }
push $N2d15dc80
 Merge2 {
  inputs 2
  name Merge26
  xpos -1353
  ypos 1287
 }
 Merge2 {
  inputs 2
  name Merge24
  xpos -1353
  ypos 1388
 }
 Dot {
  name Dot85
  xpos -1319
  ypos 1463
 }
push $N680d4230
 Dot {
  name Dot88
  xpos -3865
  ypos 214
 }
set N2d1fbc70 [stack 0]
 Dot {
  name Dot89
  xpos -4014
  ypos 214
 }
 EdgeDetectWrapper {
  channels alpha
  name EdgeDetect2
  xpos -4048
  ypos 280
 }
 Erode {
  size -3
  name Erode7
  xpos -4048
  ypos 318
 }
 Blur {
  size 4
  name Blur9
  xpos -4048
  ypos 394
 }
 Dot {
  name Dot90
  xpos -4014
  ypos 530
 }
push $N2d1fbc70
 Dot {
  name Dot91
  xpos -3690
  ypos 214
 }
 FilterErode {
  channels rgba
  size {10 5}
  name FilterErode13
  xpos -3724
  ypos 261
 }
 FilterErode {
  channels rgba
  size {{-parent.FilterErode13.size} {-parent.FilterErode13.size}}
  name FilterErode14
  xpos -3724
  ypos 323
 }
 Blur {
  size 5
  name Blur8
  xpos -3724
  ypos 408
  disable true
 }
 Dot {
  name Dot92
  xpos -3690
  ypos 530
 }
push $N2d1fbc70
 Merge2 {
  inputs 2+1
  operation min
  name Min
  xpos -3899
  ypos 526
 }
 Grade {
  channels alpha
  whitepoint 0.09
  black_clamp false
  name Grade1
  xpos -3899
  ypos 607
 }
 Transform {
  translate {0 -150}
  scale 0.8
  center {960 540}
  shutteroffset centred
  name Transform20
  xpos -3899
  ypos 680
 }
 Dot {
  name Dot94
  xpos -3865
  ypos 1113
 }
 Text2 {
  inputs 0
  font_size_toolbar 40
  font_width_toolbar 100
  font_height_toolbar 100
  message "erode, dilate"
  old_message {{101 114 111 100 101 44 32 100 105 108 97 116 101}
    }
  box {0 979 1920 1080}
  xjustify center
  yjustify center
  transforms {{0 2}
    }
  font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 11 40 12 40}
    }
  cursor_position 13
  font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
  font_size 40
  center {960 540}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{0 1080}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 960 540 0 0 1 1 0 0 0 0}
    }
  name Text9
  xpos -951
  ypos 947
 }
 Transform {
  translate {0 -280}
  center {960 1030}
  shutteroffset centred
  name Transform17
  xpos -951
  ypos 990
 }
 Dot {
  name Dot81
  xpos -917
  ypos 1036
 }
push $N2d158d30
 Merge2 {
  inputs 2
  name Merge25
  xpos -1075
  ypos 1032
 }
 Merge2 {
  inputs 2
  name Merge20
  xpos -1075
  ypos 1109
 }
 Dot {
  name Dot76
  xpos -1041
  ypos 1193
 }
 Text2 {
  inputs 0
  font_size_toolbar 40
  font_width_toolbar 100
  font_height_toolbar 100
  message "vector extend / blur / distort / warp"
  old_message {{118 101 99 116 111 114 32 101 120 116 101 110 100 32 47 32 98 108 117 114 32 47 32 100 105 115 116 111 114 116 32 47 32 119 97 114 112}
    }
  box {0 979 1920 1080}
  xjustify center
  yjustify center
  transforms {{0 2}
    }
  font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 11 40 12 40 13 40 14 40 15 40 16 40 17 40 18 40 19 40 20 40 21 40 22 40 23 40 24 40 25 40 26 40 27 40 28 40 29 40 30 40 31 40 32 40 33 40 34 40 35 40 36 40}
    }
  cursor_position 37
  font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
  font_size 40
  center {960 540}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{0 1080}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 960 540 0 0 1 1 0 0 0 0}
    }
  name Text8
  xpos -699
  ypos 885
 }
 Transform {
  translate {0 -280}
  center {960 1030}
  shutteroffset centred
  name Transform16
  xpos -699
  ypos 928
 }
 Dot {
  name Dot79
  xpos -665
  ypos 974
 }
push $N680cf2e0
 Dot {
  name Dot61
  xpos -3295
  ypos 246
 }
set N2cf28060 [stack 0]
 Erode {
  channels alpha
  size {17.5 9.5}
  name Erode4
  xpos -3426
  ypos 301
 }
push $N2cf28060
 Group {
  inputs 2
  name VectorExtendEdge1
  help "Push rgb pixels outwards using vectors  generated perpedicular to a control matte edge."
  xpos -3329
  ypos 393
  addUserKnob {20 User}
  addUserKnob {4 premult l "input is" M {premultiplied unpremultiplied}}
  premult unpremultiplied
  addUserKnob {41 from0 l "control matte channel" T Copy4.from0}
  addUserKnob {7 preblur l "pre-blur control matte" t "Blurring the control matte by a moderate amount will increase the width of the extended edge border and help with blending together the slices." R 0 10}
  preblur 10
  addUserKnob {26 ""}
  addUserKnob {3 slices l "vector blur slices" t "The number of iterations of the vector blur operation, up to 10."}
  slices 12
  addUserKnob {7 preblur_vector l "preblur vector" t "Blur the vector a bit before it's used to extend the rgb pixels.  Can help with blending and will also extend the edge further." R 0 10}
  preblur_vector 2
  addUserKnob {7 vector_length l "vector length" t "The length of the vector blur operation per slice. Best to avoid making this too high because it can slow things down when multiplied by the number of slices." R 1 10}
  vector_length 7
  addUserKnob {26 ""}
  addUserKnob {4 output t "The default output is the rgb.  The vector output options are just for checking what's going on under the hood.  The \"-1 to 1\" range is the \"native\" format while the \"0 to 1\" range compresses the vectors so that negative values can be visualised." M {"extended rgb" "vectors (-1 to 1 range)" "vectors (0 to 1 range)" ""}}
 }
  Input {
   inputs 0
   name ctrl_matte
   xpos 1122
   ypos 457
   number 1
  }
  Input {
   inputs 0
   name img
   xpos 840
   ypos 457
  }
  Dot {
   name Dot2
   xpos 874
   ypos 570
  }
set N2cf50900 [stack 0]
  Unpremult {
   name Unpremult11
   xpos 965
   ypos 566
   disable {{parent.premult i}}
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy4
   xpos 1122
   ypos 559
   disable {{"!\[exists parent.input1]" i}}
  }
  Blur {
   channels alpha
   size {{parent.preblur i}}
   name Blur12
   label "pre-blur alpha"
   xpos 1122
   ypos 648
  }
set N2cf6c590 [stack 0]
push $N2cf6c590
push $N2cf6c590
push $N2cf6c590
  Group {
   inputs 2
   name ExtendEdge
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 1325
   ypos 662
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.preblur_vector i}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N2cf83e60 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N2cfb6490 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N2cfb6490
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N2cfb6490
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N2cfb6490
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N2ce05620 [stack 0]
push $N2ce05620
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N2cf83e60
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{vector_length i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix11
   xpos 1325
   ypos 751
  }
set N2ce76150 [stack 0]
push $N2ce76150
push $N2ce76150
push $N2ce76150
  Group {
   inputs 2
   name ExtendEdge1
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 1509
   ypos 743
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector i}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N2ce88d40 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N2cebb3e0 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N2cebb3e0
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N2cebb3e0
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N2cebb3e0
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N2cd0a580 [stack 0]
push $N2cd0a580
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N2ce88d40
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix12
   xpos 1509
   ypos 823
  }
set N2cd7b0d0 [stack 0]
push $N2cd7b0d0
push $N2cd7b0d0
push $N2cd7b0d0
  Group {
   inputs 2
   name ExtendEdge2
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 1695
   ypos 823
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N2cd8dcf0 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N2cdc0320 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N2cdc0320
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N2cdc0320
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N2cdc0320
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N2cc0f4b0 [stack 0]
push $N2cc0f4b0
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N2cd8dcf0
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix13
   xpos 1695
   ypos 895
  }
set N2cc7ffe0 [stack 0]
push $N2cc7ffe0
push $N2cc7ffe0
push $N2cc7ffe0
  Group {
   inputs 2
   name ExtendEdge3
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 1891
   ypos 895
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N2cc92c00 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N2ccc5230 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N2ccc5230
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N2ccc5230
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N2ccc5230
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N2cb143c0 [stack 0]
push $N2cb143c0
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N2cc92c00
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix14
   xpos 1891
   ypos 967
  }
set N2cb84ef0 [stack 0]
push $N2cb84ef0
push $N2cb84ef0
push $N2cb84ef0
  Group {
   inputs 2
   name ExtendEdge4
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 2077
   ypos 967
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N2cb97b10 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N2cbca140 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N2cbca140
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N2cbca140
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N2cbca140
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N2ca192c0 [stack 0]
push $N2ca192c0
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N2cb97b10
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix15
   xpos 2077
   ypos 1039
  }
set N2ca89df0 [stack 0]
push $N2ca89df0
push $N2ca89df0
push $N2ca89df0
  Group {
   inputs 2
   name ExtendEdge5
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 2263
   ypos 1039
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector i}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N2ca9ca90 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N2cacf0c0 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N2cacf0c0
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N2cacf0c0
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N2cacf0c0
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N2c91e260 [stack 0]
push $N2c91e260
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N2ca9ca90
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix16
   xpos 2263
   ypos 1111
  }
set N2c98ed90 [stack 0]
push $N2c98ed90
push $N2c98ed90
push $N2c98ed90
  Group {
   inputs 2
   name ExtendEdge6
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 2449
   ypos 1111
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N2c9a19b0 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N2c9d3fe0 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N2c9d3fe0
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N2c9d3fe0
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N2c9d3fe0
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N2c823170 [stack 0]
push $N2c823170
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N2c9a19b0
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix17
   xpos 2449
   ypos 1183
  }
set N2c893ca0 [stack 0]
push $N2c893ca0
push $N2c893ca0
push $N2c893ca0
  Group {
   inputs 2
   name ExtendEdge7
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 2635
   ypos 1183
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N2c8a68c0 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N2c8d8ef0 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N2c8d8ef0
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N2c8d8ef0
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N2c8d8ef0
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N2c728080 [stack 0]
push $N2c728080
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N2c8a68c0
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix18
   xpos 2635
   ypos 1255
  }
set N2c798bb0 [stack 0]
push $N2c798bb0
push $N2c798bb0
push $N2c798bb0
  Group {
   inputs 2
   name ExtendEdge8
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 2829
   ypos 1255
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N2c7ab7d0 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N2c7dde00 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N2c7dde00
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N2c7dde00
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N2c7dde00
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N2c62cf90 [stack 0]
push $N2c62cf90
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N2c7ab7d0
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix19
   xpos 2829
   ypos 1327
  }
set N2c69dac0 [stack 0]
push $N2c69dac0
push $N2c69dac0
push $N2c69dac0
  Group {
   inputs 2
   name ExtendEdge9
   help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
   xpos 3023
   ypos 1327
   addUserKnob {20 Controls}
   addUserKnob {7 preblurVector R 0 10}
   preblurVector {{parent.ExtendEdge.preblurVector i}}
   addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
  }
   Input {
    inputs 0
    name Input
    xpos 556
    ypos -426
   }
set N2c6b06e0 [stack 0]
   Dot {
    name Dot1
    xpos 707
    ypos -414
   }
   Dot {
    name Dot2
    xpos 707
    ypos -121
   }
   Input {
    inputs 0
    name matte
    xpos 440
    ypos -424
    number 1
   }
   Shuffle {
    red alpha
    green alpha
    blue alpha
    alpha black
    name Shuffle3
    xpos 440
    ypos -346
   }
   Group {
    name Edge2Vec2
    xpos 440
    ypos -322
   }
    Input {
     inputs 0
     name Input1
     xpos -172
     ypos -315
    }
    Clamp {
     channels rgb
     name Clamp1
     xpos -172
     ypos -250
    }
set N2c6e2d10 [stack 0]
    Position {
     translate {0 1}
     name Position2
     xpos -63
     ypos -106
    }
push $N2c6e2d10
    Merge2 {
     inputs 2
     operation minus
     name Merge2
     xpos -103
     ypos -28
    }
push $N2c6e2d10
    Position {
     translate {1 0}
     name Position1
     xpos -285
     ypos -98
    }
push $N2c6e2d10
    Merge2 {
     inputs 2
     operation minus
     name Merge1
     xpos -253
     ypos -29
    }
    Copy {
     inputs 2
     from0 rgba.green
     to0 rgba.green
     name Copy3
     xpos -179
     ypos 27
    }
    Grade {
     channels {rgba.red rgba.green -rgba.blue none}
     multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
     black_clamp false
     name Grade1
     xpos -179
     ypos 196
     addUserKnob {20 User}
     addUserKnob {7 height l Height}
     height 1
    }
set N2c531ec0 [stack 0]
push $N2c531ec0
    Expression {
     channel0 rgb
     expr0 sqrt((r*r)+(g*g)+(b*b))
     name VectorLength
     selected true
     xpos -260
     ypos 278
    }
    Merge2 {
     inputs 2
     operation divide
     name Merge4
     selected true
     xpos -179
     ypos 350
    }
    Output {
     name Output1
     xpos -179
     ypos 494
    }
   end_group
   Blur {
    channels rgb
    size {{parent.preblurVector i}}
    name Blur5
    label "pre blur vector"
    xpos 440
    ypos -296
   }
push $N2c6b06e0
   ShuffleCopy {
    inputs 2
    red red
    green green
    out forward
    name ShuffleCopy1
    label "rg to forward"
    xpos 556
    ypos -194
   }
   VectorBlur {
    channels rgba
    uv forward
    scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
    offset 0
    alpha -rgba.alpha
    maskChannelMask -rgba.alpha
    maskChannelInput -rgba.alpha
    name VectorBlur2
    xpos 556
    ypos -139
   }
   CopyBBox {
    inputs 2
    name CopyBBox1
    xpos 556
    ypos -92
   }
   Output {
    name Output1
    xpos 556
    ypos -8
   }
  end_group
  Keymix {
   inputs 3
   channels rgb
   name Keymix20
   xpos 3023
   ypos 1399
  }
push $N2c69dac0
push $N2c798bb0
push $N2c893ca0
push $N2c98ed90
push $N2ca89df0
push $N2cb84ef0
push $N2cc7ffe0
push $N2cd7b0d0
push $N2ce76150
push $N2cf50900
  Switch {
   inputs 11
   which {{parent.slices}}
   name Switch3
   xpos 2018
   ypos 2365
  }
set N2c5abb20 [stack 0]
  Shuffle {
   in forward
   blue black
   alpha black
   name Shuffle1
   xpos 2116
   ypos 2425
  }
set N2c5b4210 [stack 0]
  Expression {
   expr0 (r+1)/2
   expr1 (g+1)/2
   name Expression1
   xpos 2116
   ypos 2476
  }
push $N2c5b4210
push $N2c5abb20
  Switch {
   inputs 3
   which {{parent.output}}
   name Switch1
   xpos 2018
   ypos 2500
  }
set N2c5d3450 [stack 0]
push $N2cf50900
  Dot {
   name Dot22
   xpos 898
   ypos 2459
  }
  Copy {
   inputs 2
   from0 -rgba.alpha
   to0 -rgba.alpha
   channels rgb
   name Copy1
   xpos 1846
   ypos 2538
  }
push $N2c5d3450
  Output {
   name Output1
   xpos 2018
   ypos 2644
  }
 end_group
 Transform {
  translate {0 -150}
  scale 0.8
  center {960 540}
  shutteroffset centred
  name Transform9
  xpos -3329
  ypos 483
 }
 Dot {
  name Dot68
  xpos -3295
  ypos 814
 }
push $N2d153de0
 Merge2 {
  inputs 2
  name Merge19
  xpos -823
  ypos 810
 }
 Merge2 {
  inputs 2
  name Merge23
  xpos -823
  ypos 970
 }
 Dot {
  name Dot71
  xpos -789
  ypos 1033
 }
 Text2 {
  inputs 0
  font_size_toolbar 40
  font_width_toolbar 100
  font_height_toolbar 100
  message "blur, unpremult"
  old_message {{98 108 117 114 44 32 117 110 112 114 101 109 117 108 116}
    }
  box {0 979 1920 1080}
  xjustify center
  yjustify center
  transforms {{0 2}
    }
  font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 11 40 12 40 13 40 14 40}
    }
  cursor_position 15
  font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
  font_size 40
  center {960 540}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{0 1080}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 960 540 0 0 1 1 0 0 0 0}
    }
  name Text7
  xpos -335
  ypos 773
 }
 Transform {
  translate {0 -280}
  center {960 1030}
  shutteroffset centred
  name Transform15
  xpos -335
  ypos 816
 }
 Dot {
  name Dot78
  xpos -301
  ypos 862
 }
push $N680ca390
 Dot {
  name Dot45
  xpos -2889
  ypos 182
 }
set N2c461670 [stack 0]
 Erode {
  channels alpha
  size 8.5
  name Erode3
  xpos -3046
  ypos 234
 }
push $N2c461670
 Group {
  inputs 2
  name ColorDilate4
  knobChanged "\ntn = nuke.thisNode()\ntk = nuke.thisKnob()\n\nfullList =  tn\['fullList'].value().strip(\"\[']\").split(\"', '\")\nnodeList = fullList\[0], fullList\[1], fullList\[2], fullList\[3], fullList\[4], fullList\[5], fullList\[6]\npreviousLoopNum = tn\['previousLoopNum'].getValue()\n\ngrowTexture = tn\['growTexture'].getValue()\nqualityVal = int( tn\['quality'].getValue() )\n\n\n##### DEFINE VALUE CHANGES ##################\n\ndef valChange():\n    qualityBias = tn\['qualityBias'].getValue()\n    blurCenter = tn\['blurCenter'].getValue()\n    bcDistribution = tn\['bcDistribution'].getValue()\n    for i in range (0, qualityVal):\n        blurVal = nuke.toNode(fullList\[i*len(nodeList)])\n        erodeVal = nuke.toNode(fullList\[i*len(nodeList)+3])\n        blurCenterVal = nuke.toNode(fullList\[i*len(nodeList)+5])\n        if isinstance(growTexture, float) == True:\n            blurValSize = (growTexture/qualityVal*(i+1)*(1-qualityBias)) + (growTexture/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2)))\n            blurVal\['size'].setValue( blurValSize )\n            erodeVal\['size'].setValue(blurVal\['size'].getValue()/2)\n            blurCenterVal\['size'].setValue( ( blurValSize*(1-bcDistribution) +  (blurValSize*(bcDistribution*(pow(i+1, 2)/pow(qualityVal, 2)))) ) * blurCenter )\n        else:\n            blurVal\['size'].setValue(\[ (growTexture\[0]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[0]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) , (growTexture\[1]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[1]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) ])\n            erodeVal\['size'].setValue(\[blurVal\['size'].getValue()\[0]/2,blurVal\['size'].getValue()\[1]/2])\n            blurCenterVal\['size'].setValue(\[ (growTexture\[0]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[0]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) , (growTexture\[1]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[1]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) ])\n\ndef filterChange():\n    filters = int( tn\['filter'].getValue() )\n    filterQuality = int( tn\['filterQuality'].getValue() )\n    crop = int( tn\['crop'].getValue() )\n    for i in range (0, qualityVal):\n        blurVal = nuke.toNode(fullList\[i*len(nodeList)])\n        blurVal\['filter'].setValue( filters )\n        blurVal\['quality'].setValue( filterQuality )\n        blurVal\['crop'].setValue( crop )\n        blurCenterVal = nuke.toNode(fullList\[i*len(nodeList)])\n        blurCenterVal\['filter'].setValue( filters )\n        blurCenterVal\['quality'].setValue( filterQuality )\n        blurCenterVal\['crop'].setValue( crop )\n\n\n##### CREATE THE NODES ###################\n\nif tk.name()=='quality':\n    if qualityVal < 1:\n        qualityVal = 1\n    elif qualityVal >100:\n        qualityVal = 100\n    tn\['quality'].setValue( qualityVal )\n    \n\n    if qualityVal != previousLoopNum:\n\n\n        inputDep = nuke.dependencies(\[nuke.toNode('Unpremult1')], nuke.INPUTS)\n        resultOver = nuke.toNode( inputDep\[0].name() )\n\n        difference = qualityVal-previousLoopNum\n        if difference > 0:\n            for i in range (1, int(difference+1)):\n                \n                blur = nuke.nodes.Blur ()\n                blur\['channels'].setValue('rgba')\n                blur\['maskChannelInput'].setValue('none')\n                blur.setInput (0, nuke.toNode('Switch2'))\n                \n                unpremult = nuke.nodes.Unpremult ()\n                unpremult\['channels'].setValue('rgb')\n                unpremult\['alpha'].setValue('rgba.alpha')\n                unpremult\['invert'].setValue(0)\n                unpremult.setInput (0, blur)\n                \n                expression = nuke.nodes.Expression(expr3 = 'a==0?0:1')\n                expression.setInput (0, unpremult)\n                \n                erode = nuke.nodes.FilterErode ()\n                erode\['channels'].setValue( 'rgba.alpha' )\n                erode\['filter'].setValue( 'gaussian' )\n                erode.setInput (0, expression)\n                \n                premult = nuke.nodes.Premult ()\n                premult\['channels'].setValue( 'rgb' )\n                premult\['alpha'].setValue( 'rgba.alpha' )\n                premult.setInput (0, erode)\n\n                blurCenter = nuke.nodes.Blur ()\n                blurCenter\['channels'].setValue('rgba')\n                blurCenter\['maskChannelInput'].setValue('none')\n                blurCenter.setInput (0, premult)\n\n                mergeOver = nuke.nodes.Merge2 ()\n                mergeOver\['operation'].setValue( 'over' )\n                mergeOver\['sRGB'].setValue( 0 )\n                mergeOver\['screen_alpha'].setValue( 0 )\n                mergeOver\['bbox'].setValue( 'union' )\n                mergeOver\['Achannels'].setValue( 'rgba' )\n                mergeOver\['Bchannels'].setValue( 'rgba' )\n                mergeOver\['output'].setValue( 'rgba' )\n                mergeOver\['also_merge'].setValue( 'none' )\n                mergeOver.setInput (0, blurCenter)\n                mergeOver.setInput (1, resultOver)\n                \n                \n                resultOver = mergeOver\n                \n                \n                nodeList = blur.name(), unpremult.name(), expression.name(), erode.name(), premult.name(), blurCenter.name(), resultOver.name()\n                fullList.extend(nodeList)\n\n\n##### DELETE THE NODES ##################################\n\n        else:\n            fullList.reverse()\n            for i in range (int(qualityVal), int(previousLoopNum)):\n                for i in range (0, len(nodeList)):\n                    nuke.delete(nuke.toNode(fullList\[0]))\n                    del fullList\[0]\n                resultOver = nuke.toNode(fullList\[0])\n                resultExpression = nuke.toNode(fullList\[3])\n            fullList.reverse()\n\n        nuke.toNode('Unpremult1').setInput(0, resultOver)\n        valChange()\n        filterChange()\n                \n        previousLoopNum = qualityVal\n        \n        tn\['previousLoopNum'].setValue( int(previousLoopNum) )\n        tn\['fullList'].setValue( str(fullList) )\n\n\n\n##### CHANGE EXISTING VALUES #####################\n\nif tk.name()=='growTexture':\n    valChange()\n    \nif tk.name()=='qualityBias':\n    valChange()\n\nif tk.name()=='blurCenter':\n    valChange()\n\nif tk.name()=='bcDistribution':\n    valChange()\n    \nif tk.name()=='filter':\n    filterChange()\n    \nif tk.name()=='filterQuality':\n    filterChange()\n    \nif tk.name()=='crop':\n    filterChange()\n\n\n"
  note_font "Bitstream Vera Sans"
  xpos -2923
  ypos 349
  addUserKnob {20 User l fColourDilate}
  addUserKnob {14 growTexture l "Grow Texture" R 0 100}
  growTexture 19
  addUserKnob {14 erodeMatte l "Erode Matte" t "Dilate or erode the matte to adjust the grow start paint" R -100 100}
  addUserKnob {7 expandMatte l "Expand Matte" t "Expand or compress the matte to adjust the grow start point" R -0.99999 0.99999}
  addUserKnob {7 quality l Iterations t "The number of iterations Colour Dilate will go through.  More is slower.  Max steps is 100" R 1 20}
  quality 12
  addUserKnob {7 qualityBias l Distribution t "0 is a linear distribution.  1 is exponential distribution.\nExponential is smoother with low quality.\nLinear is better with high quality."}
  qualityBias 1
  addUserKnob {26 ""}
  addUserKnob {7 blurCenter l "Blur Center" t "Soften central area where opposite dilates meet creating a hard line.  Is a multiple of Grow Texture." R 0 5}
  blurCenter 0.14
  addUserKnob {7 bcDistribution l "BC Distribution" t "0 blurs a direct multiple of Grow Texture. 1 blurs exponentially more towards the center."}
  addUserKnob {26 ""}
  addUserKnob {4 filter l Filter t "filter\n" M {box triangle quadratic gaussian ""}}
  filter gaussian
  addUserKnob {3 filterQuality l " " -STARTLINE}
  filterQuality 15
  addUserKnob {6 crop l "crop to format" -STARTLINE}
  crop true
  addUserKnob {4 matteOutput l "Matte Output" M {rgb.alpha matte "dilated matte" "dilated area" "grain matte" ""}}
  matteOutput "dilated matte"
  addUserKnob {26 blank l "" -STARTLINE T "      "}
  addUserKnob {6 invertMatte l "invert Matte" -STARTLINE}
  invertMatte true
  addUserKnob {26 blank2 l "" -STARTLINE T "      "}
  addUserKnob {6 rgbIsPremult l "RGB is Premult?" -STARTLINE}
  rgbIsPremult true
  addUserKnob {1 colorDilate l INVISIBLE t "Keep me hidden" +INVISIBLE}
  addUserKnob {3 previousLoopNum l INVISIBLE +INVISIBLE}
  previousLoopNum 12
  addUserKnob {1 fullList l INVISIBLE +INVISIBLE}
  fullList "\['Blur1', 'Unpremult2', 'Expression1', 'FilterErode2', 'Premult1', 'BlurCenter', 'Merge2', 'Blur2', 'Unpremult3', 'Expression2', 'FilterErode3', 'Premult2', 'Blur3', 'Merge5', 'Blur4', 'Unpremult4', 'Expression3', 'FilterErode4', 'Premult3', 'Blur5', 'Merge6', 'Blur6', 'Unpremult5', 'Expression4', 'FilterErode5', 'Premult4', 'Blur7', 'Merge7', 'Blur8', 'Unpremult6', 'Expression5', 'FilterErode6', 'Premult5', 'Blur9', 'Merge8', 'Blur10', 'Unpremult7', 'Expression6', 'FilterErode7', 'Premult6', 'Blur11', 'Merge9', 'Blur12', 'Unpremult8', 'Expression7', 'FilterErode8', 'Premult7', 'Blur13', 'Merge10', 'Blur14', 'Unpremult9', 'Expression9', 'FilterErode9', 'Premult8', 'Blur15', 'Merge11', 'Blur16', 'Unpremult10', 'Expression10', 'FilterErode10', 'Premult9', 'Blur17', 'Merge12', 'Blur18', 'Unpremult11', 'Expression11', 'FilterErode11', 'Premult10', 'Blur19', 'Merge13', 'Blur20', 'Unpremult12', 'Expression13', 'FilterErode12', 'Premult11', 'Blur21', 'Merge16', 'Blur22', 'Unpremult13', 'Expression14', 'FilterErode13', 'Premult12', 'Blur23', 'Merge17']"
 }
  Input {
   inputs 0
   name InputMask
   note_font "Bitstream Vera Sans"
   xpos 803
   ypos -665
   number 1
  }
set N2c484390 [stack 0]
  AddChannels {
   channels alpha
   name AddChannels2
   note_font "Bitstream Vera Sans"
   xpos 365
   ypos 1125
  }
  Dot {
   name Dot3
   note_font "Bitstream Vera Sans"
   xpos 399
   ypos 1183
  }
  Input {
   inputs 0
   name InputRGB
   note_font "Bitstream Vera Sans"
   xpos 1013
   ypos -531
  }
set N2c497060 [stack 0]
  AddChannels {
   channels alpha
   name AddChannels1
   note_font "Bitstream Vera Sans"
   xpos 348
   ypos 949
  }
  Dot {
   name Dot2
   note_font "Bitstream Vera Sans"
   xpos 382
   ypos 1078
  }
push $N2c484390
  FilterErode {
   channels alpha
   size {{invertMatte==0?erodeMatte.w:-erodeMatte.w i} {invertMatte==0?erodeMatte.h:-erodeMatte.h i}}
   name FilterErode1
   note_font "Bitstream Vera Sans"
   xpos 803
   ypos -621
  }
  Invert {
   channels alpha
   mix {{invertMatte i}}
   name Invert2
   note_font "Bitstream Vera Sans"
   xpos 803
   ypos -563
  }
  Grade {
   channels alpha
   blackpoint {{"clamp(expandMatte, 0, 1)" i}}
   whitepoint {{"clamp(1+expandMatte, 0, 1)" i}}
   white_clamp true
   name Grade1
   note_font "Bitstream Vera Sans"
   xpos 803
   ypos -505
  }
  Grade {
   channels alpha
   whitepoint 0.5
   black_clamp false
   white_clamp true
   name Grade6
   note_font "Bitstream Vera Sans"
   xpos 803
   ypos -345
  }
  Dot {
   name Dot1
   note_font "Bitstream Vera Sans"
   xpos 837
   ypos -287
  }
set N2c4e4980 [stack 0]
push $N2c497060
  AddChannels {
   channels alpha
   name AddChannels3
   note_font "Bitstream Vera Sans"
   xpos 1120
   ypos -444
  }
push $N2c497060
  Shuffle {
   alpha white
   name Shuffle1
   note_font "Bitstream Vera Sans"
   xpos 1013
   ypos -458
  }
  Crop {
   box {{InputRGB.bbox.x i x1001 542} {InputRGB.bbox.y i} {InputRGB.bbox.r i} {InputRGB.bbox.t i}}
   name Crop3
   note_font "Bitstream Vera Sans"
   xpos 1013
   ypos -414
  }
  Switch {
   inputs 2
   which {{rgbIsPremult i}}
   name Switch1
   note_font "Bitstream Vera Sans"
   xpos 1013
   ypos -370
  }
  Dot {
   name Dot5
   note_font "Bitstream Vera Sans"
   xpos 1047
   ypos -326
  }
set N2c317000 [stack 0]
  Merge2 {
   inputs 2
   operation stencil
   bbox intersection
   name Merge1
   note_font "Bitstream Vera Sans"
   xpos 1013
   ypos -292
  }
push $N2c4e4980
  Dot {
   name Dot4
   note_font "Bitstream Vera Sans"
   xpos 837
   ypos -253
  }
push $N2c317000
  Dot {
   name Dot6
   note_font "Bitstream Vera Sans"
   xpos 946
   ypos -326
  }
  Merge2 {
   inputs 2
   operation stencil
   bbox B
   name Merge3
   note_font "Bitstream Vera Sans"
   xpos 912
   ypos -258
  }
  Dot {
   name Dot7
   note_font "Bitstream Vera Sans"
   xpos 946
   ypos -192
  }
  Switch {
   inputs 2
   which {{invertMatte i}}
   name Switch2
   note_font "Bitstream Vera Sans"
   xpos 1002
   ypos -196
  }
set N2c34c580 [stack 0]
push $N2c34c580
  Blur {
   channels rgba
   size 0.01099537037
   name Blur1
   note_font "Bitstream Vera Sans"
   xpos 1336
   ypos -26
  }
  Unpremult {
   name Unpremult2
   note_font "Bitstream Vera Sans"
   xpos 1336
   ypos 18
  }
  Expression {
   expr3 a==0?0:1
   name Expression1
   note_font "Bitstream Vera Sans"
   xpos 1336
   ypos 62
  }
  FilterErode {
   channels alpha
   size 0.005497685185
   filter gaussian
   name FilterErode2
   note_font "Bitstream Vera Sans"
   xpos 1336
   ypos 106
  }
  Premult {
   name Premult1
   note_font "Bitstream Vera Sans"
   xpos 1336
   ypos 164
  }
  Blur {
   channels rgba
   size 0.001539351852
   name BlurCenter
   note_font "Bitstream Vera Sans"
   xpos 1336
   ypos 222
  }
  Merge2 {
   inputs 2
   name Merge2
   note_font "Bitstream Vera Sans"
   xpos 1336
   ypos 280
  }
push $N2c34c580
  Blur {
   channels rgba
   size 0.08796296296
   name Blur2
  }
  Unpremult {
   name Unpremult3
  }
  Expression {
   expr3 a==0?0:1
   name Expression2
  }
  FilterErode {
   channels alpha
   size 0.04398148148
   filter gaussian
   name FilterErode3
  }
  Premult {
   name Premult2
  }
  Blur {
   channels rgba
   size 0.01231481481
   name Blur3
  }
  Merge2 {
   inputs 2
   name Merge5
  }
push $N2c34c580
  Blur {
   channels rgba
   size 0.296875
   name Blur4
  }
  Unpremult {
   name Unpremult4
  }
  Expression {
   expr3 a==0?0:1
   name Expression3
  }
  FilterErode {
   channels alpha
   size 0.1484375
   filter gaussian
   name FilterErode4
  }
  Premult {
   name Premult3
  }
  Blur {
   channels rgba
   size 0.0415625
   name Blur5
  }
  Merge2 {
   inputs 2
   name Merge6
  }
push $N2c34c580
  Blur {
   channels rgba
   size 0.7037037037
   name Blur6
  }
  Unpremult {
   name Unpremult5
  }
  Expression {
   expr3 a==0?0:1
   name Expression4
  }
  FilterErode {
   channels alpha
   size 0.3518518519
   filter gaussian
   name FilterErode5
  }
  Premult {
   name Premult4
  }
  Blur {
   channels rgba
   size 0.09851851852
   name Blur7
  }
  Merge2 {
   inputs 2
   name Merge7
  }
push $N2c34c580
  Blur {
   channels rgba
   size 1.374421296
   name Blur8
  }
  Unpremult {
   name Unpremult6
  }
  Expression {
   expr3 a==0?0:1
   name Expression5
  }
  FilterErode {
   channels alpha
   size 0.6872106481
   filter gaussian
   name FilterErode6
  }
  Premult {
   name Premult5
  }
  Blur {
   channels rgba
   size 0.1924189815
   name Blur9
  }
  Merge2 {
   inputs 2
   name Merge8
  }
push $N2c34c580
  Blur {
   channels rgba
   size 2.375
   name Blur10
  }
  Unpremult {
   name Unpremult7
  }
  Expression {
   expr3 a==0?0:1
   name Expression6
  }
  FilterErode {
   channels alpha
   size 1.1875
   filter gaussian
   name FilterErode7
  }
  Premult {
   name Premult6
  }
  Blur {
   channels rgba
   size 0.3325
   name Blur11
  }
  Merge2 {
   inputs 2
   name Merge9
  }
push $N2c34c580
  Blur {
   channels rgba
   size 3.771412037
   name Blur12
  }
  Unpremult {
   name Unpremult8
  }
  Expression {
   expr3 a==0?0:1
   name Expression7
  }
  FilterErode {
   channels alpha
   size 1.885706019
   filter gaussian
   name FilterErode8
  }
  Premult {
   name Premult7
  }
  Blur {
   channels rgba
   size 0.5279976852
   name Blur13
  }
  Merge2 {
   inputs 2
   name Merge10
  }
push $N2c34c580
  Blur {
   channels rgba
   size 5.62962963
   name Blur14
  }
  Unpremult {
   name Unpremult9
  }
  Expression {
   expr3 a==0?0:1
   name Expression9
  }
  FilterErode {
   channels alpha
   size 2.814814815
   filter gaussian
   name FilterErode9
  }
  Premult {
   name Premult8
  }
  Blur {
   channels rgba
   size 0.7881481481
   name Blur15
  }
  Merge2 {
   inputs 2
   name Merge11
  }
push $N2c34c580
  Blur {
   channels rgba
   size 8.015625
   name Blur16
  }
  Unpremult {
   name Unpremult10
  }
  Expression {
   expr3 a==0?0:1
   name Expression10
  }
  FilterErode {
   channels alpha
   size 4.0078125
   filter gaussian
   name FilterErode10
  }
  Premult {
   name Premult9
  }
  Blur {
   channels rgba
   size 1.1221875
   name Blur17
  }
  Merge2 {
   inputs 2
   name Merge12
  }
push $N2c34c580
  Blur {
   channels rgba
   size 10.99537037
   name Blur18
  }
  Unpremult {
   name Unpremult11
  }
  Expression {
   expr3 a==0?0:1
   name Expression11
  }
  FilterErode {
   channels alpha
   size 5.497685185
   filter gaussian
   name FilterErode11
  }
  Premult {
   name Premult10
  }
  Blur {
   channels rgba
   size 1.539351852
   name Blur19
  }
  Merge2 {
   inputs 2
   name Merge13
  }
push $N2c34c580
  Blur {
   channels rgba
   size 14.63483796
   name Blur20
  }
  Unpremult {
   name Unpremult12
  }
  Expression {
   expr3 a==0?0:1
   name Expression13
  }
  FilterErode {
   channels alpha
   size 7.317418981
   filter gaussian
   name FilterErode12
  }
  Premult {
   name Premult11
  }
  Blur {
   channels rgba
   size 2.048877315
   name Blur21
  }
  Merge2 {
   inputs 2
   name Merge16
  }
push $N2c34c580
  Blur {
   channels rgba
   size 19
   name Blur22
  }
  Unpremult {
   name Unpremult13
  }
  Expression {
   expr3 a==0?0:1
   name Expression14
  }
  FilterErode {
   channels alpha
   size 9.5
   filter gaussian
   name FilterErode13
  }
  Premult {
   name Premult12
  }
  Blur {
   channels rgba
   size 2.66
   name Blur23
  }
  Merge2 {
   inputs 2
   name Merge17
  }
  Unpremult {
   name Unpremult1
   note_font "Bitstream Vera Sans"
   xpos 224
   ypos 966
  }
  Dot {
   name Dot11
   xpos 258
   ypos 1020
  }
set N25e747a0 [stack 0]
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   mix {{matteOutput==0?1:0 i}}
   name Copy2
   note_font "Bitstream Vera Sans"
   xpos 224
   ypos 1068
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   mix {{matteOutput==1?1:0}}
   name Copy1
   note_font "Bitstream Vera Sans"
   xpos 224
   ypos 1173
  }
  Dot {
   name Dot8
   xpos 258
   ypos 1227
  }
set N25e96520 [stack 0]
  Dot {
   name Dot9
   xpos 453
   ypos 1227
  }
  Expression {
   expr3 a<=0.000001?0:1
   name Expression12
   note_font "Bitstream Vera Sans"
   xpos 419
   ypos 1261
  }
  Dot {
   name Dot10
   xpos 453
   ypos 1303
  }
push $N25e747a0
  Dot {
   name Dot13
   xpos 521
   ypos 1020
  }
  Dot {
   name Dot12
   xpos 521
   ypos 1205
  }
push $N2c497060
  Merge2 {
   inputs 2
   operation difference
   bbox B
   name Merge14
   xpos 563
   ypos 1201
  }
  Keyer {
   operation "luminance key"
   range {0 1e-05 1 1}
   name Keyer1
   xpos 563
   ypos 1243
  }
  Merge2 {
   inputs 2
   operation mask
   bbox B
   name Merge15
   xpos 563
   ypos 1299
  }
  Dot {
   name Dot14
   xpos 597
   ypos 1341
  }
push $N25e96520
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   mix {{matteOutput==4?1:0 i}}
   name Copy3
   note_font "Bitstream Vera Sans"
   xpos 224
   ypos 1331
  }
set N25eedfa0 [stack 0]
  Expression {
   expr3 a<=0.000001?0:1
   mix {{matteOutput==3?1:0}}
   name Expression8
   note_font "Bitstream Vera Sans"
   xpos 224
   ypos 1418
  }
push $N2c497060
  Merge2 {
   inputs 2
   operation copy
   bbox B
   name Merge4
   xpos 932
   ypos 1418
  }
  Output {
   name Output1
   note_font "Bitstream Vera Sans"
   xpos 932
   ypos 1579
  }
push $N2c497060
push $N25eedfa0
  Viewer {
   inputs 2
   input_process false
   name Viewer1
   xpos 336
   ypos 1225
  }
 end_group
 Transform {
  translate {0 -150}
  scale 0.8
  center {960 540}
  shutteroffset centred
  name Transform11
  xpos -2923
  ypos 438
 }
 Dot {
  name Dot66
  xpos -2889
  ypos 720
 }
push $N2d14ee90
 Merge2 {
  inputs 2
  name Merge18
  xpos -459
  ypos 716
 }
 Merge2 {
  inputs 2
  name Merge22
  xpos -459
  ypos 858
 }
 Dot {
  name Dot70
  xpos -425
  ypos 917
 }
 Text2 {
  inputs 0
  font_size_toolbar 40
  font_width_toolbar 100
  font_height_toolbar 100
  message "erode to create core matte"
  old_message {{101 114 111 100 101 32 116 111 32 99 114 101 97 116 101 32 99 111 114 101 32 109 97 116 116 101}
    }
  box {0 979 1920 1080}
  xjustify center
  yjustify center
  transforms {{0 2}
    }
  font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 11 40 12 40 13 40 14 40 15 40 16 40 17 40 18 40 19 40 20 40 21 40 22 40 23 40 24 40 25 40}
    }
  cursor_position 26
  font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
  font_size 40
  center {960 540}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{0 1080}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 960 540 0 0 1 1 0 0 0 0}
    }
  name Text6
  xpos -79
  ypos 634
 }
 Transform {
  translate {0 -280}
  center {960 1030}
  shutteroffset centred
  name Transform14
  xpos -79
  ypos 677
 }
 Dot {
  name Dot77
  xpos -45
  ypos 726
 }
push $N680c5440
 Erode {
  channels alpha
  size 8.5
  name Erode5
  xpos -2566
  ypos 177
 }
 Premult {
  name Premult2
  xpos -2566
  ypos 255
 }
 Transform {
  translate {0 -150}
  scale 0.8
  center {960 540}
  shutteroffset centred
  name Transform13
  xpos -2566
  ypos 370
 }
 Dot {
  name Dot64
  xpos -2532
  ypos 597
 }
push $N2d149f40
 Merge2 {
  inputs 2
  name Merge17
  xpos -203
  ypos 593
 }
 Merge2 {
  inputs 2
  name Merge21
  xpos -203
  ypos 722
 }
 Dot {
  name Dot69
  xpos -169
  ypos 773
 }
push $N680c0490
 Transform {
  translate {0 -150}
  scale 0.8
  center {960 540}
  shutteroffset centred
  name Transform10
  xpos -2268
  ypos 165
 }
 Dot {
  name Dot57
  xpos -2234
  ypos 423
 }
push $N2d144f70
 Merge2 {
  inputs 2
  name Merge16
  xpos -46
  ypos 419
 }
 Dot {
  name Dot56
  xpos -12
  ypos 515
 }
push $N2d119980
push 0
push $N2d12a750
push $N2d3c3920
 Merge2 {
  inputs 3+1
  name Merge11
  xpos 378
  ypos -989
 }
 Dot {
  name Dot49
  xpos 412
  ypos 303
 }
 Text2 {
  inputs 0
  font_size_toolbar 40
  font_width_toolbar 100
  font_height_toolbar 100
  message after
  old_message {{97 102 116 101 114}
    }
  box {0 979 1920 1080}
  xjustify center
  yjustify center
  transforms {{0 2}
    }
  font_size_values {{0 40 1 40 2 40 3 40 4 40 0 90}
    }
  cursor_position 5
  font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
  font_size 40
  center {960 540}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{0 1080}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 960 540 0 0 1 1 0 0 0 0}
    }
  name Text5
  xpos 2239
  ypos 785
 }
 Transform {
  translate {0 -330}
  center {960 1030}
  shutteroffset centred
  name Transform8
  xpos 2239
  ypos 820
 }
 Multiply {
  value 0.2
  name Multiply3
  xpos 2239
  ypos 857
  disable true
 }
 Dot {
  name Dot51
  xpos 2273
  ypos 919
 }
 Read {
  inputs 0
  file_type exr
  file /data/jobs/TRN/sequences/compTraining/shots/TRN-compTraining-compShotA/.jabuka/imageSequenceLibrary/preComp/ee_example_after/versions/0002/TRN_compTraining_TRN-compTraining-compShotA_ee_example_after_v0002.%06d.exr
  first 1001
  last 1010
  colorspace scene_linear
  in_colorspace scene_linear
  out_colorspace scene_linear
  name TRN_compTraining_compShotA_ee_example_after_v0002_4
  xpos 2556
  ypos 455
  icon /software/apps/jabuka/7.196.0/tools/python/2.7/noarch/cortex/10.3/GafferJabukaUI/Resources/Icons/dynamic.png
  addUserKnob {20 ieAssetInfo l "Asset Information"}
  addUserKnob {20 Advanced t "\n<B>ieEntityType:</B> ImageSequence\n<B>ieEntityId:</B> 2932924\n<B>ieAssetId:</B> 0\n<B>ieNodeTag:</B> \n<B>ieLinkedEntities:</B> \[]\n<B>ieBundleId:</B> 0" n 2}
  addUserKnob {1 ieNodeType l "Node Type" +INVISIBLE}
  ieNodeType assetNode
  addUserKnob {1 ieEntityType l "Entity Type" +DISABLED}
  ieEntityType ImageSequence
  addUserKnob {3 ieEntityId l "Entity Id" +DISABLED}
  ieEntityId 2932924
  addUserKnob {3 ieAssetId l "Asset Id" +DISABLED}
  addUserKnob {1 ieCopyId l "Copy Id" +DISABLED}
  ieCopyId 4
  addUserKnob {1 ieNodeTag l "Node Tag" +DISABLED}
  addUserKnob {1 ieLinkedEntities l "Linked Entities" +DISABLED}
  ieLinkedEntities "\[]"
  addUserKnob {3 ieBundleId l "Bundle Id" +DISABLED}
  addUserKnob {20 AdvancedEG n -1}
  addUserKnob {3 ieBundleVersion l "Bundle Version" +DISABLED}
  addUserKnob {1 ieDisplayName l Name +DISABLED}
  ieDisplayName ee_example_after
  addUserKnob {4 ieEntityVersion l "Entity Version" M {2}}
  addUserKnob {32 ieUpdateVersions l "Update Versions" -STARTLINE}
  addUserKnob {1 ieVersionCreationDate l "Version Creation Date" +DISABLED}
  ieVersionCreationDate "03-30-2022 21:13:31"
  addUserKnob {1 ieVersionCreator l Artist -STARTLINE +DISABLED}
  ieVersionCreator sebastians
  addUserKnob {4 ieUpdateMode l "Update Mode" M {locked latest latestApproved default}}
  ieUpdateMode default
  addUserKnob {6 ieRelativeToLocation l "Entity is Dynamic - Relative To Environment Location" +STARTLINE}
  ieRelativeToLocation true
  addUserKnob {32 ieSourceScene l "Open Source Scene" +STARTLINE}
  addUserKnob {26 ieSeparator l "  "}
  addUserKnob {1 ieSequencePath l SequencePath}
  ieSequencePath /data/jobs/TRN/sequences/compTraining/shots/TRN-compTraining-compShotA/.jabuka/imageSequenceLibrary/preComp/ee_example_after/versions/0002/TRN_compTraining_TRN-compTraining-compShotA_ee_example_after_v0002.%06d.exr
  addUserKnob {32 ieDailyButton l "Create Daily" +STARTLINE}
 }
 Reformat {
  resize height
  name Reformat6
  xpos 2556
  ypos 613
 }
 Transform {
  translate {0 -120}
  scale 0.6
  center {960 540}
  shutteroffset centred
  name Transform4
  xpos 2556
  ypos 687
 }
 Dot {
  name Dot31
  xpos 2590
  ypos 792
 }
 Text2 {
  inputs 0
  font_size_toolbar 60
  font_width_toolbar 100
  font_height_toolbar 100
  message "WHAT & WHEN?"
  old_message {{87 72 65 84 32 38 32 87 72 69 78 63}
    }
  box {0 979 1920 1080}
  xjustify center
  yjustify center
  transforms {{0 2}
    }
  font_size_values {{0 60 1 60 2 60 3 60 4 60 5 60 6 60 7 60 8 60 9 60 10 60 11 60 0 90}
    }
  cursor_position 12
  font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
  font_size 60
  center {960 540}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{0 1080}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 960 540 0 0 1 1 0 0 0 0}
    }
  name Text2
  xpos 1752
  ypos -1198
 }
 Transform {
  translate {0 -160}
  center {960 1030}
  shutteroffset centred
  name Transform3
  xpos 1752
  ypos -1140
 }
 Dot {
  name Dot47
  xpos 1786
  ypos -985
 }
set N25b58420 [stack 0]
 Multiply {
  value 0.05
  name Multiply4
  xpos 1827
  ypos -954
 }
push 0
push $N2d3afbe0
push $N2d4f6130
 Dot {
  name Dot6
  xpos 1635
  ypos -1370
 }
set N25b691f0 [stack 0]
 Dot {
  name Dot52
  xpos 1979
  ypos -1370
 }
 Merge2 {
  inputs 3+1
  name Merge14
  xpos 1945
  ypos -891
 }
 Dot {
  name Dot10
  xpos 1979
  ypos 610
 }
set N25b83a20 [stack 0]
 Dot {
  name Dot12
  xpos 2435
  ypos 610
 }
 Merge2 {
  inputs 2
  name Merge8
  xpos 2401
  ypos 788
 }
 Merge2 {
  inputs 2
  name Merge13
  xpos 2401
  ypos 915
 }
 Dot {
  name Dot35
  xpos 2435
  ypos 965
 }
 Text2 {
  inputs 0
  font_size_toolbar 40
  font_width_toolbar 100
  font_height_toolbar 100
  message before
  old_message {{98 101 102 111 114 101}
    }
  box {0 979 1920 1080}
  xjustify center
  yjustify center
  transforms {{0 2}
    }
  font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 0 90}
    }
  font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
  font_size 40
  center {960 540}
  cursor_initialised true
  autofit_bbox false
  initial_cursor_position {{0 1080}
    }
  group_animations {{0} imported: 0 selected: items: "root transform/"}
  animation_layers {{1 11 960 540 0 0 1 1 0 0 0 0}
    }
  name Text4
  xpos 1783
  ypos 688
 }
 Transform {
  translate {0 -330}
  center {960 1030}
  shutteroffset centred
  name Transform7
  xpos 1783
  ypos 723
 }
 Multiply {
  value 0.2
  name Multiply2
  xpos 1783
  ypos 760
  disable true
 }
 Dot {
  name Dot50
  xpos 1817
  ypos 822
 }
 Read {
  inputs 0
  file_type exr
  file /data/jobs/TRN/sequences/compTraining/shots/TRN-compTraining-compShotA/.jabuka/imageSequenceLibrary/preComp/ee_example_before/versions/0001/TRN_compTraining_TRN-compTraining-compShotA_ee_example_before_v0001.%06d.exr
  first 1001
  last 1001
  colorspace scene_linear
  in_colorspace scene_linear
  out_colorspace scene_linear
  name TRN_compTraining_compShotA_ee_example_before_v0001_2
  xpos 2243
  ypos -48
  icon /software/apps/jabuka/7.196.0/tools/python/2.7/noarch/cortex/10.3/GafferJabukaUI/Resources/Icons/dynamic.png
  addUserKnob {20 ieAssetInfo l "Asset Information"}
  addUserKnob {20 Advanced t "\n<B>ieEntityType:</B> ImageSequence\n<B>ieEntityId:</B> 2932925\n<B>ieAssetId:</B> 0\n<B>ieNodeTag:</B> \n<B>ieLinkedEntities:</B> \[]\n<B>ieBundleId:</B> 0" n 2}
  addUserKnob {1 ieNodeType l "Node Type" +INVISIBLE}
  ieNodeType assetNode
  addUserKnob {1 ieEntityType l "Entity Type" +DISABLED}
  ieEntityType ImageSequence
  addUserKnob {3 ieEntityId l "Entity Id" +DISABLED}
  ieEntityId 2932925
  addUserKnob {3 ieAssetId l "Asset Id" +DISABLED}
  addUserKnob {1 ieCopyId l "Copy Id" +DISABLED}
  ieCopyId 2
  addUserKnob {1 ieNodeTag l "Node Tag" +DISABLED}
  addUserKnob {1 ieLinkedEntities l "Linked Entities" +DISABLED}
  ieLinkedEntities "\[]"
  addUserKnob {3 ieBundleId l "Bundle Id" +DISABLED}
  addUserKnob {20 AdvancedEG n -1}
  addUserKnob {3 ieBundleVersion l "Bundle Version" +DISABLED}
  addUserKnob {1 ieDisplayName l Name +DISABLED}
  ieDisplayName ee_example_before
  addUserKnob {4 ieEntityVersion l "Entity Version" M {1}}
  addUserKnob {32 ieUpdateVersions l "Update Versions" -STARTLINE}
  addUserKnob {1 ieVersionCreationDate l "Version Creation Date" +DISABLED}
  ieVersionCreationDate "03-29-2022 10:11:47"
  addUserKnob {1 ieVersionCreator l Artist -STARTLINE +DISABLED}
  ieVersionCreator sebastians
  addUserKnob {4 ieUpdateMode l "Update Mode" M {locked latest latestApproved default}}
  ieUpdateMode default
  addUserKnob {6 ieRelativeToLocation l "Entity is Dynamic - Relative To Environment Location" +STARTLINE}
  ieRelativeToLocation true
  addUserKnob {32 ieSourceScene l "Open Source Scene" +STARTLINE}
  addUserKnob {26 ieSeparator l "  "}
  addUserKnob {1 ieSequencePath l SequencePath}
  ieSequencePath /data/jobs/TRN/sequences/compTraining/shots/TRN-compTraining-compShotA/.jabuka/imageSequenceLibrary/preComp/ee_example_before/versions/0001/TRN_compTraining_TRN-compTraining-compShotA_ee_example_before_v0001.%06d.exr
  addUserKnob {32 ieDailyButton l "Create Daily" +STARTLINE}
 }
 Reformat {
  resize height
  name Reformat7
  xpos 2243
  ypos 99
 }
 Transform {
  translate {0 -120}
  scale 0.6
  center {960 540}
  shutteroffset centred
  name Transform5
  xpos 2243
  ypos 151
 }
 Dot {
  name Dot13
  xpos 2277
  ypos 710
 }
push $N25b83a20
 Merge2 {
  inputs 2
  name Merge6
  xpos 1945
  ypos 706
 }
 Merge2 {
  inputs 2
  name Merge12
  xpos 1945
  ypos 818
 }
 Dot {
  name Dot11
  xpos 1979
  ypos 864
 }
push $N25b58420
push 0
push $N2d3aac90
push $N25b691f0
 Merge2 {
  inputs 3+1
  name Merge4
  xpos 1601
  ypos -989
 }
 Dot {
  name Dot36
  xpos 1635
  ypos 662
 }
push $N2d30ba60
 Dot {
  name Dot9
  xpos 1278
  ypos 609
 }
push $N2d4f13e0
 Switch {
  inputs 16
  which {{parent.page}}
  name Switch1
  xpos 1000
  ypos 2990
 }
 Output {
  name Output1
  xpos 1000
  ypos 3463
 }
 Reformat {
  inputs 0
  format "4550 2416 0 0 4550 2416 1 "
  name Reformat5
  xpos 3046
  ypos 168
 }
 Roto {
  output alpha
  curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x450e3000 x44970000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier2 512 bezier
     {{cc
       {f 8192}
       {px x447b4000
        {xc0c00000 xc1400000}
        {x452e6000 x44cf8000}
        {x40c00000 x41400000}
        {xc2980000 xc1100000}
        {x45395800 x44d68000}
        {x42980000 x41100000}
        {xc2a80000 x41e80000}
        {x4544b000 x44d86000}
        {x42a80000 xc1e80000}
        {xc2f80000 x42800000}
        {x45762000 x44c2c000}
        {x42f80000 xc2800000}
        {xc1c00000 x429e0000}
        {x4582c000 x44a5b000}
        {x41c00000 xc29e0000}
        {x42540000 x41100000}
        {x45820c01 x44901cce}
        {xc2540000 xc1100000}
        {x42c00000 xc1a00000}
        {x45631000 x449a0000}
        {xc2c00000 x41a00000}
        {x42880000 xc2000000}
        {x4533e000 x44bbc000}
        {xc2880000 x42000000}}}
      {cc
       {f 8192}
       {px x447b4000
        {xc0c00000 xc1400000}
        {xc2040000 x419c0000}
        {x40c00000 x41400000}
        {xc2980000 xc1100000}
        {xc0f00000 x423a0000}
        {x42980000 x41100000}
        {xc2a80000 x41e80000}
        {x427c0000 x42220000}
        {x42a80000 xc1e80000}
        {xc2f80000 x42800000}
        {x42340000 x42220000}
        {x42f80000 xc2800000}
        {xc1c00000 x429e0000}
        {x42810000 x41580000}
        {x41c00000 xc29e0000}
        {x42540000 x41100000}
        {xc0c00000 xc1840000}
        {xc2540000 xc1100000}
        {x42c00000 xc1a00000}
        {xc1900000 xc1840000}
        {xc2c00000 x41a00000}
        {x42880000 xc2000000}
        {xc21c0000 xc1580000}
        {xc2880000 x42000000}}}}
     {tx x447b4000 x45566a00 x44b9a400}
     {a osw x41200000 osf 0 str 1 spx x450e3000 spy x44970000 sb 1 ltn x447b4000 ltm x447b4000 tt x40800000}}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x447b4000
        {x40400000 xc1200000}
        {x45031000 x44bf4000}
        {xc0400000 x41200000}
        {xc2b20000 xc2400000}
        {x4508c000 x44d08000}
        {x42b20000 x42400000}
        {xc2780000 xbf800000}
        {x4517f000 x44d7a000}
        {x42780000 1}
        {xc1d80000 x41f00000}
        {x45254000 x44d3e000}
        {x41d80000 xc1f00000}
        {x42580000 x41980000}
        {x4524e000 x44ca4000}
        {xc2580000 xc1980000}
        {x41f80000 xc0e00000}
        {x45068000 x44bbe000}
        {xc1f80000 x40e00000}}}     idem}
     {tx x447b4000 x45136555 x44cae555}
     {a osw x41200000 osf 0 str 1 spx x450e3000 spy x44970000 sb 1 ltn x447b4000 ltm x447b4000 tt x40800000}}}}}}
  toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
  toolbar_brush_hardness 0.200000003
  toolbar_source_transform_scale {1 1}
  toolbar_source_transform_center {2275 1208}
  colorOverlay {0 0 0 0}
  lifetime_type "all frames"
  lifetime_start 1005
  lifetime_end 1005
  motionblur_shutter_offset_type centred
  source_black_outside true
  name Roto4
  xpos 3046
  ypos 224
 }
 Dot {
  name Dot24
  xpos 3080
  ypos 293
 }
push $N2d5a8d10
 Dot {
  name Dot27
  xpos 3401
  ypos -112
 }
set N25ab1690 [stack 0]
 Erode {
  size 12
  name Erode1
  xpos 3367
  ypos -60
 }
 Dot {
  name Dot26
  xpos 3401
  ypos 23
 }
push $N25ab1690
 Dot {
  name Dot25
  xpos 3530
  ypos -112
 }
 Group {
  inputs 2
  name ColorDilate2
  knobChanged "\ntn = nuke.thisNode()\ntk = nuke.thisKnob()\n\nfullList =  tn\['fullList'].value().strip(\"\[']\").split(\"', '\")\nnodeList = fullList\[0], fullList\[1], fullList\[2], fullList\[3], fullList\[4], fullList\[5], fullList\[6]\npreviousLoopNum = tn\['previousLoopNum'].getValue()\n\ngrowTexture = tn\['growTexture'].getValue()\nqualityVal = int( tn\['quality'].getValue() )\n\n\n##### DEFINE VALUE CHANGES ##################\n\ndef valChange():\n    qualityBias = tn\['qualityBias'].getValue()\n    blurCenter = tn\['blurCenter'].getValue()\n    bcDistribution = tn\['bcDistribution'].getValue()\n    for i in range (0, qualityVal):\n        blurVal = nuke.toNode(fullList\[i*len(nodeList)])\n        erodeVal = nuke.toNode(fullList\[i*len(nodeList)+3])\n        blurCenterVal = nuke.toNode(fullList\[i*len(nodeList)+5])\n        if isinstance(growTexture, float) == True:\n            blurValSize = (growTexture/qualityVal*(i+1)*(1-qualityBias)) + (growTexture/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2)))\n            blurVal\['size'].setValue( blurValSize )\n            erodeVal\['size'].setValue(blurVal\['size'].getValue()/2)\n            blurCenterVal\['size'].setValue( ( blurValSize*(1-bcDistribution) +  (blurValSize*(bcDistribution*(pow(i+1, 2)/pow(qualityVal, 2)))) ) * blurCenter )\n        else:\n            blurVal\['size'].setValue(\[ (growTexture\[0]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[0]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) , (growTexture\[1]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[1]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) ])\n            erodeVal\['size'].setValue(\[blurVal\['size'].getValue()\[0]/2,blurVal\['size'].getValue()\[1]/2])\n            blurCenterVal\['size'].setValue(\[ (growTexture\[0]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[0]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) , (growTexture\[1]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[1]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) ])\n\ndef filterChange():\n    filters = int( tn\['filter'].getValue() )\n    filterQuality = int( tn\['filterQuality'].getValue() )\n    crop = int( tn\['crop'].getValue() )\n    for i in range (0, qualityVal):\n        blurVal = nuke.toNode(fullList\[i*len(nodeList)])\n        blurVal\['filter'].setValue( filters )\n        blurVal\['quality'].setValue( filterQuality )\n        blurVal\['crop'].setValue( crop )\n        blurCenterVal = nuke.toNode(fullList\[i*len(nodeList)])\n        blurCenterVal\['filter'].setValue( filters )\n        blurCenterVal\['quality'].setValue( filterQuality )\n        blurCenterVal\['crop'].setValue( crop )\n\n\n##### CREATE THE NODES ###################\n\nif tk.name()=='quality':\n    if qualityVal < 1:\n        qualityVal = 1\n    elif qualityVal >100:\n        qualityVal = 100\n    tn\['quality'].setValue( qualityVal )\n    \n\n    if qualityVal != previousLoopNum:\n\n\n        inputDep = nuke.dependencies(\[nuke.toNode('Unpremult1')], nuke.INPUTS)\n        resultOver = nuke.toNode( inputDep\[0].name() )\n\n        difference = qualityVal-previousLoopNum\n        if difference > 0:\n            for i in range (1, int(difference+1)):\n                \n                blur = nuke.nodes.Blur ()\n                blur\['channels'].setValue('rgba')\n                blur\['maskChannelInput'].setValue('none')\n                blur.setInput (0, nuke.toNode('Switch2'))\n                \n                unpremult = nuke.nodes.Unpremult ()\n                unpremult\['channels'].setValue('rgb')\n                unpremult\['alpha'].setValue('rgba.alpha')\n                unpremult\['invert'].setValue(0)\n                unpremult.setInput (0, blur)\n                \n                expression = nuke.nodes.Expression(expr3 = 'a==0?0:1')\n                expression.setInput (0, unpremult)\n                \n                erode = nuke.nodes.FilterErode ()\n                erode\['channels'].setValue( 'rgba.alpha' )\n                erode\['filter'].setValue( 'gaussian' )\n                erode.setInput (0, expression)\n                \n                premult = nuke.nodes.Premult ()\n                premult\['channels'].setValue( 'rgb' )\n                premult\['alpha'].setValue( 'rgba.alpha' )\n                premult.setInput (0, erode)\n\n                blurCenter = nuke.nodes.Blur ()\n                blurCenter\['channels'].setValue('rgba')\n                blurCenter\['maskChannelInput'].setValue('none')\n                blurCenter.setInput (0, premult)\n\n                mergeOver = nuke.nodes.Merge2 ()\n                mergeOver\['operation'].setValue( 'over' )\n                mergeOver\['sRGB'].setValue( 0 )\n                mergeOver\['screen_alpha'].setValue( 0 )\n                mergeOver\['bbox'].setValue( 'union' )\n                mergeOver\['Achannels'].setValue( 'rgba' )\n                mergeOver\['Bchannels'].setValue( 'rgba' )\n                mergeOver\['output'].setValue( 'rgba' )\n                mergeOver\['also_merge'].setValue( 'none' )\n                mergeOver.setInput (0, blurCenter)\n                mergeOver.setInput (1, resultOver)\n                \n                \n                resultOver = mergeOver\n                \n                \n                nodeList = blur.name(), unpremult.name(), expression.name(), erode.name(), premult.name(), blurCenter.name(), resultOver.name()\n                fullList.extend(nodeList)\n\n\n##### DELETE THE NODES ##################################\n\n        else:\n            fullList.reverse()\n            for i in range (int(qualityVal), int(previousLoopNum)):\n                for i in range (0, len(nodeList)):\n                    nuke.delete(nuke.toNode(fullList\[0]))\n                    del fullList\[0]\n                resultOver = nuke.toNode(fullList\[0])\n                resultExpression = nuke.toNode(fullList\[3])\n            fullList.reverse()\n\n        nuke.toNode('Unpremult1').setInput(0, resultOver)\n        valChange()\n        filterChange()\n                \n        previousLoopNum = qualityVal\n        \n        tn\['previousLoopNum'].setValue( int(previousLoopNum) )\n        tn\['fullList'].setValue( str(fullList) )\n\n\n\n##### CHANGE EXISTING VALUES #####################\n\nif tk.name()=='growTexture':\n    valChange()\n    \nif tk.name()=='qualityBias':\n    valChange()\n\nif tk.name()=='blurCenter':\n    valChange()\n\nif tk.name()=='bcDistribution':\n    valChange()\n    \nif tk.name()=='filter':\n    filterChange()\n    \nif tk.name()=='filterQuality':\n    filterChange()\n    \nif tk.name()=='crop':\n    filterChange()\n\n\n"
  note_font "Bitstream Vera Sans"
  xpos 3496
  ypos 19
  addUserKnob {20 User l fColourDilate}
  addUserKnob {14 growTexture l "Grow Texture" R 0 100}
  growTexture 20.5
  addUserKnob {14 erodeMatte l "Erode Matte" t "Dilate or erode the matte to adjust the grow start paint" R -100 100}
  addUserKnob {7 expandMatte l "Expand Matte" t "Expand or compress the matte to adjust the grow start point" R -0.99999 0.99999}
  addUserKnob {7 quality l Iterations t "The number of iterations Colour Dilate will go through.  More is slower.  Max steps is 100" R 1 20}
  quality 7
  addUserKnob {7 qualityBias l Distribution t "0 is a linear distribution.  1 is exponential distribution.\nExponential is smoother with low quality.\nLinear is better with high quality."}
  qualityBias 1
  addUserKnob {26 ""}
  addUserKnob {7 blurCenter l "Blur Center" t "Soften central area where opposite dilates meet creating a hard line.  Is a multiple of Grow Texture." R 0 5}
  addUserKnob {7 bcDistribution l "BC Distribution" t "0 blurs a direct multiple of Grow Texture. 1 blurs exponentially more towards the center."}
  addUserKnob {26 ""}
  addUserKnob {4 filter l Filter t "filter\n" M {box triangle quadratic gaussian ""}}
  filter gaussian
  addUserKnob {3 filterQuality l " " -STARTLINE}
  filterQuality 15
  addUserKnob {6 crop l "crop to format" -STARTLINE}
  crop true
  addUserKnob {4 matteOutput l "Matte Output" M {rgb.alpha matte "dilated matte" "dilated area" "grain matte" ""}}
  addUserKnob {26 blank l "" -STARTLINE T "      "}
  addUserKnob {6 invertMatte l "invert Matte" -STARTLINE}
  invertMatte true
  addUserKnob {26 blank2 l "" -STARTLINE T "      "}
  addUserKnob {6 rgbIsPremult l "RGB is Premult?" -STARTLINE}
  rgbIsPremult true
  addUserKnob {1 colorDilate l INVISIBLE t "Keep me hidden" +INVISIBLE}
  addUserKnob {3 previousLoopNum l INVISIBLE +INVISIBLE}
  previousLoopNum 7
  addUserKnob {1 fullList l INVISIBLE +INVISIBLE}
  fullList "\['Blur1', 'Unpremult2', 'Expression1', 'FilterErode2', 'Premult1', 'BlurCenter', 'Merge2', 'Blur2', 'Unpremult3', 'Expression2', 'FilterErode3', 'Premult2', 'Blur3', 'Merge5', 'Blur4', 'Unpremult4', 'Expression3', 'FilterErode4', 'Premult3', 'Blur5', 'Merge6', 'Blur6', 'Unpremult5', 'Expression4', 'FilterErode5', 'Premult4', 'Blur7', 'Merge7', 'Blur8', 'Unpremult6', 'Expression5', 'FilterErode6', 'Premult5', 'Blur9', 'Merge8', 'Blur10', 'Unpremult7', 'Expression6', 'FilterErode7', 'Premult6', 'Blur11', 'Merge9', 'Blur12', 'Unpremult8', 'Expression7', 'FilterErode8', 'Premult7', 'Blur13', 'Merge10']"
 }
  Input {
   inputs 0
   name InputMask
   note_font "Bitstream Vera Sans"
   xpos 803
   ypos -665
   number 1
  }
set N259834f0 [stack 0]
  AddChannels {
   channels alpha
   name AddChannels2
   note_font "Bitstream Vera Sans"
   xpos 365
   ypos 1125
  }
  Dot {
   name Dot3
   note_font "Bitstream Vera Sans"
   xpos 399
   ypos 1183
  }
  Input {
   inputs 0
   name InputRGB
   note_font "Bitstream Vera Sans"
   xpos 1013
   ypos -531
  }
set N259962d0 [stack 0]
  AddChannels {
   channels alpha
   name AddChannels1
   note_font "Bitstream Vera Sans"
   xpos 348
   ypos 949
  }
  Dot {
   name Dot2
   note_font "Bitstream Vera Sans"
   xpos 382
   ypos 1078
  }
push $N259834f0
  FilterErode {
   channels alpha
   size {{invertMatte==0?erodeMatte.w:-erodeMatte.w i} {invertMatte==0?erodeMatte.h:-erodeMatte.h i}}
   name FilterErode1
   note_font "Bitstream Vera Sans"
   xpos 803
   ypos -621
  }
  Invert {
   channels alpha
   mix {{invertMatte i}}
   name Invert2
   note_font "Bitstream Vera Sans"
   xpos 803
   ypos -563
  }
  Grade {
   channels alpha
   blackpoint {{"clamp(expandMatte, 0, 1)" i}}
   whitepoint {{"clamp(1+expandMatte, 0, 1)" i}}
   white_clamp true
   name Grade1
   note_font "Bitstream Vera Sans"
   xpos 803
   ypos -505
  }
  Grade {
   channels alpha
   whitepoint 0.5
   black_clamp false
   white_clamp true
   name Grade6
   note_font "Bitstream Vera Sans"
   xpos 803
   ypos -345
  }
  Dot {
   name Dot1
   note_font "Bitstream Vera Sans"
   xpos 837
   ypos -287
  }
set N259e3bf0 [stack 0]
push $N259962d0
  AddChannels {
   channels alpha
   name AddChannels3
   note_font "Bitstream Vera Sans"
   xpos 1120
   ypos -444
  }
push $N259962d0
  Shuffle {
   alpha white
   name Shuffle1
   note_font "Bitstream Vera Sans"
   xpos 1013
   ypos -458
  }
  Crop {
   box {{InputRGB.bbox.x i x1001 542} {InputRGB.bbox.y i} {InputRGB.bbox.r i} {InputRGB.bbox.t i}}
   name Crop3
   note_font "Bitstream Vera Sans"
   xpos 1013
   ypos -414
  }
  Switch {
   inputs 2
   which {{rgbIsPremult i}}
   name Switch1
   note_font "Bitstream Vera Sans"
   xpos 1013
   ypos -370
  }
  Dot {
   name Dot5
   note_font "Bitstream Vera Sans"
   xpos 1047
   ypos -326
  }
set N25816260 [stack 0]
  Merge2 {
   inputs 2
   operation stencil
   bbox intersection
   name Merge1
   note_font "Bitstream Vera Sans"
   xpos 1013
   ypos -292
  }
push $N259e3bf0
  Dot {
   name Dot4
   note_font "Bitstream Vera Sans"
   xpos 837
   ypos -253
  }
push $N25816260
  Dot {
   name Dot6
   note_font "Bitstream Vera Sans"
   xpos 946
   ypos -326
  }
  Merge2 {
   inputs 2
   operation stencil
   bbox B
   name Merge3
   note_font "Bitstream Vera Sans"
   xpos 912
   ypos -258
  }
  Dot {
   name Dot7
   note_font "Bitstream Vera Sans"
   xpos 946
   ypos -192
  }
  Switch {
   inputs 2
   which {{invertMatte i}}
   name Switch2
   note_font "Bitstream Vera Sans"
   xpos 1002
   ypos -196
  }
set N2584b7e0 [stack 0]
push $N2584b7e0
  Blur {
   channels rgba
   size 0.05976676385
   name Blur1
   note_font "Bitstream Vera Sans"
   xpos 1336
   ypos -26
  }
  Unpremult {
   name Unpremult2
   note_font "Bitstream Vera Sans"
   xpos 1336
   ypos 18
  }
  Expression {
   expr3 a==0?0:1
   name Expression1
   note_font "Bitstream Vera Sans"
   xpos 1336
   ypos 62
  }
  FilterErode {
   channels alpha
   size 0.02988338192
   filter gaussian
   name FilterErode2
   note_font "Bitstream Vera Sans"
   xpos 1336
   ypos 106
  }
  Premult {
   name Premult1
   note_font "Bitstream Vera Sans"
   xpos 1336
   ypos 164
  }
  Blur {
   channels rgba
   name BlurCenter
   note_font "Bitstream Vera Sans"
   xpos 1336
   ypos 222
  }
  Merge2 {
   inputs 2
   name Merge2
   note_font "Bitstream Vera Sans"
   xpos 1336
   ypos 280
  }
push $N2584b7e0
  Blur {
   channels rgba
   size 0.4781341108
   name Blur2
  }
  Unpremult {
   name Unpremult3
  }
  Expression {
   expr3 a==0?0:1
   name Expression2
  }
  FilterErode {
   channels alpha
   size 0.2390670554
   filter gaussian
   name FilterErode3
  }
  Premult {
   name Premult2
  }
  Blur {
   channels rgba
   name Blur3
  }
  Merge2 {
   inputs 2
   name Merge5
  }
push $N2584b7e0
  Blur {
   channels rgba
   size 1.613702624
   name Blur4
  }
  Unpremult {
   name Unpremult4
  }
  Expression {
   expr3 a==0?0:1
   name Expression3
  }
  FilterErode {
   channels alpha
   size 0.806851312
   filter gaussian
   name FilterErode4
  }
  Premult {
   name Premult3
  }
  Blur {
   channels rgba
   name Blur5
  }
  Merge2 {
   inputs 2
   name Merge6
  }
push $N2584b7e0
  Blur {
   channels rgba
   size 3.825072886
   name Blur6
  }
  Unpremult {
   name Unpremult5
  }
  Expression {
   expr3 a==0?0:1
   name Expression4
  }
  FilterErode {
   channels alpha
   size 1.912536443
   filter gaussian
   name FilterErode5
  }
  Premult {
   name Premult4
  }
  Blur {
   channels rgba
   name Blur7
  }
  Merge2 {
   inputs 2
   name Merge7
  }
push $N2584b7e0
  Blur {
   channels rgba
   size 7.470845481
   name Blur8
  }
  Unpremult {
   name Unpremult6
  }
  Expression {
   expr3 a==0?0:1
   name Expression5
  }
  FilterErode {
   channels alpha
   size 3.735422741
   filter gaussian
   name FilterErode6
  }
  Premult {
   name Premult5
  }
  Blur {
   channels rgba
   name Blur9
  }
  Merge2 {
   inputs 2
   name Merge8
  }
push $N2584b7e0
  Blur {
   channels rgba
   size 12.90962099
   name Blur10
  }
  Unpremult {
   name Unpremult7
  }
  Expression {
   expr3 a==0?0:1
   name Expression6
  }
  FilterErode {
   channels alpha
   size 6.454810496
   filter gaussian
   name FilterErode7
  }
  Premult {
   name Premult6
  }
  Blur {
   channels rgba
   name Blur11
  }
  Merge2 {
   inputs 2
   name Merge9
  }
push $N2584b7e0
  Blur {
   channels rgba
   size 20.5
   name Blur12
  }
  Unpremult {
   name Unpremult8
  }
  Expression {
   expr3 a==0?0:1
   name Expression7
  }
  FilterErode {
   channels alpha
   size 10.25
   filter gaussian
   name FilterErode8
  }
  Premult {
   name Premult7
  }
  Blur {
   channels rgba
   name Blur13
  }
  Merge2 {
   inputs 2
   name Merge10
  }
  Unpremult {
   name Unpremult1
   note_font "Bitstream Vera Sans"
   xpos 224
   ypos 966
  }
  Dot {
   name Dot11
   xpos 258
   ypos 1020
  }
set N256bdfb0 [stack 0]
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   mix {{matteOutput==0?1:0 i}}
   name Copy2
   note_font "Bitstream Vera Sans"
   xpos 224
   ypos 1068
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   mix {{matteOutput==1?1:0}}
   name Copy1
   note_font "Bitstream Vera Sans"
   xpos 224
   ypos 1173
  }
  Dot {
   name Dot8
   xpos 258
   ypos 1227
  }
set N256dfd30 [stack 0]
  Dot {
   name Dot9
   xpos 453
   ypos 1227
  }
  Expression {
   expr3 a<=0.000001?0:1
   name Expression12
   note_font "Bitstream Vera Sans"
   xpos 419
   ypos 1261
  }
  Dot {
   name Dot10
   xpos 453
   ypos 1303
  }
push $N256bdfb0
  Dot {
   name Dot13
   xpos 521
   ypos 1020
  }
  Dot {
   name Dot12
   xpos 521
   ypos 1205
  }
push $N259962d0
  Merge2 {
   inputs 2
   operation difference
   bbox B
   name Merge14
   xpos 563
   ypos 1201
  }
  Keyer {
   operation "luminance key"
   range {0 1e-05 1 1}
   name Keyer1
   xpos 563
   ypos 1243
  }
  Merge2 {
   inputs 2
   operation mask
   bbox B
   name Merge15
   xpos 563
   ypos 1299
  }
  Dot {
   name Dot14
   xpos 597
   ypos 1341
  }
push $N256dfd30
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   mix {{matteOutput==4?1:0 i}}
   name Copy3
   note_font "Bitstream Vera Sans"
   xpos 224
   ypos 1331
  }
set N255377e0 [stack 0]
  Expression {
   expr3 a<=0.000001?0:1
   mix {{matteOutput==3?1:0}}
   name Expression8
   note_font "Bitstream Vera Sans"
   xpos 224
   ypos 1418
  }
push $N259962d0
  Merge2 {
   inputs 2
   operation copy
   bbox B
   name Merge4
   xpos 932
   ypos 1418
  }
  Output {
   name Output1
   note_font "Bitstream Vera Sans"
   xpos 932
   ypos 1579
  }
push $N259962d0
push $N255377e0
  Viewer {
   inputs 2
   input_process false
   name Viewer1
   xpos 336
   ypos 1225
  }
 end_group
 Premult {
  name Premult3
  xpos 3496
  ypos 193
 }
 Dot {
  name Dot28
  xpos 3530
  ypos 293
 }
push $N2d5a8d10
 Dot {
  name Dot20
  xpos 3268
  ypos -70
 }
set N255f0970 [stack 0]
 Dot {
  name Dot21
  xpos 3104
  ypos -70
 }
 EdgeDetectWrapper {
  channels alpha
  name EdgeDetect1
  xpos 3070
  ypos -44
 }
 Erode {
  size -3.6
  name Erode2
  xpos 3070
  ypos -1
 }
 Blur {
  size 7
  name Blur1
  xpos 3070
  ypos 44
 }
 Dot {
  name Dot22
  xpos 3104
  ypos 90
 }
push $N2d73fde0
 Dot {
  name Dot19
  xpos 3897
  ypos -1637
 }
 OFXuk.co.thefoundry.keylight.keylight_v201 {
  show "Final Result"
  unPreMultiply false
  screenColour {0.1444831192 0.2813364565 0.06893000752}
  screenGain 1
  screenBalance 0.5
  alphaBias {0.5 0.5 0.5}
  despillBias {0.5 0.5 0.5}
  gangBiases true
  preBlur 0
  "Screen Matte" 0
  screenClipMin 0
  screenClipMax 1
  screenClipRollback 0
  screenGrowShrink 0
  screenSoftness 0
  screenDespotBlack 0
  screenDespotWhite 0
  screenReplaceMethod "Soft Colour"
  screenReplaceColour {0.5 0.5 0.5}
  Tuning 0
  midPoint 0.5
  lowGain 1
  midGain 1
  highGain 1
  "Inside Mask" 0
  sourceAlphaHandling Ignore
  insideReplaceMethod "Soft Colour"
  insideReplaceColour {0.5 0.5 0.5}
  Crops 0
  SourceXMethod Colour
  SourceYMethod Colour
  SourceEdgeColour 0
  SourceCropL 0
  SourceCropR 1
  SourceCropB 0
  SourceCropT 1
  balanceSet false
  insideComponent None
  outsideComponent None
  cacheBreaker true
  name Keylight2
  xpos 3863
  ypos -1438
 }
 FrameHold {
  firstFrame 1005
  name FrameHold2
  xpos 3863
  ypos -1384
 }
 Dot {
  name Dot23
  xpos 3897
  ypos 90
 }
push $N255f0970
 Keymix {
  inputs 3
  name Keymix2
  xpos 3234
  ypos 80
 }
 Keymix {
  inputs 3
  name Keymix3
  xpos 3234
  ypos 283
 }
 Dot {
  name Dot30
  xpos 3268
  ypos 401
 }
 Reformat {
  inputs 0
  format "4550 2416 0 0 4550 2416 1 "
  name Reformat1
  xpos 2412
  ypos -875
 }
 Roto {
  output alpha
  curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44700000 x44070000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {curvegroup Bezier1 512 bezier
     {{cc
       {f 8192}
       {px x447a4000
        {x40c00000 xc1000000}
        {x44930000 x44a20000}
        {xc0c00000 x41000000}
        {x41d00000 xc2a60000}
        {x4481a000 x44bde000}
        {xc1d00000 x42a60000}
        {xc1880000 xc29a0000}
        {x447a4000 x44d98000}
        {x41880000 x429a0000}
        {xc29c0000 xc2960000}
        {x448c6000 x44fa6000}
        {x429c0000 x42960000}
        {xc3140000 x41900000}
        {x44bde000 x45050000}
        {x43140000 xc1900000}
        {xc2ae0000 x42b00000}
        {x44efe000 x44f5e000}
        {x42ae0000 xc2b00000}
        {xc1100000 x42920000}
        {x4504a000 x44d6e000}
        {x41100000 xc2920000}
        {x42ba0000 x42580000}
        {x4501b000 x44bee000}
        {xc2ba0000 xc2580000}
        {x42c40000 x41b80000}
        {x44d84000 x44ab0000}
        {xc2c40000 xc1b80000}}}     idem}
     {tx x447a4000 x44be4e39 x44d40aab}
     {a osw x41200000 osf 0 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 tt x40800000}}}}}}
  toolbox {selectAll {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 tt 4 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
  toolbar_brush_hardness 0.200000003
  toolbar_source_transform_scale {1 1}
  toolbar_source_transform_center {960 540}
  colorOverlay {0 0 0 0}
  lifetime_type "all frames"
  lifetime_start 1001
  lifetime_end 1001
  motionblur_shutter_offset_type centred
  source_black_outside true
  name Roto5
  xpos 2412
  ypos -812
 }
 Dot {
  name Dot29
  xpos 2446
  ypos -741
 }
push $N2d73b520
 Dot {
  name Dot38
  xpos 2917
  ypos -1637
 }
 FrameHold {
  firstFrame 1005
  name FrameHold4
  xpos 2883
  ypos -1343
 }
 Log2Lin {
  operation lin2log
  name Log2Lin1
  xpos 2883
  ypos -1190
 }
 Constant {
  inputs 0
  channels rgb
  color {0.1502224058 0.2809792757 0.07593431324 1}
  name Constant2
  xpos 3015
  ypos -1200
 }
 Log2Lin {
  operation lin2log
  name Log2Lin2
  xpos 3015
  ypos -1100
 }
push $N2d5b9c20
 Dot {
  name Dot39
  xpos 2590
  ypos -1096
 }
set N253ba9b0 [stack 0]
 Log2Lin {
  operation lin2log
  name Log2Lin3
  xpos 2763
  ypos -1100
 }
 Group {
  inputs 3
  name AdditiveKeyer1
  help "Additive Keyer enhanced functionality. \n (foreground-reference)+background\nhttp://intranet/depts/Compositing:Nuke:Gizmos:AdditiveKeyer_FS"
  tile_color 0xa400ff
  note_font "Bitstream Vera Sans"
  xpos 2883
  ypos -1100
  mapsize {0.15 0.15}
  addUserKnob {20 User l AdditiveKeyer}
  addUserKnob {7 DarkValue R 0 2}
  DarkValue 1.22
  addUserKnob {7 ConstrainDarks}
  ConstrainDarks 0.535
  addUserKnob {7 LightValue R 0 2}
  addUserKnob {7 ConstrainLights}
  ConstrainLights 1
  addUserKnob {26 ""}
  addUserKnob {7 Saturation}
  Saturation 0.275
  addUserKnob {18 DarkTint}
  DarkTint {1 1 1}
  addUserKnob {6 DarkTint_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {18 LightTint}
  LightTint {1 1 1}
  addUserKnob {6 LightTint_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 }
  Input {
   inputs 0
   name fg
   xpos -123
   ypos 46
   number 2
  }
  Shuffle {
   alpha black
   name Shuffle2
   xpos -123
   ypos 243
  }
  Input {
   inputs 0
   name ref
   xpos 90
   ypos 40
   number 1
  }
  Shuffle {
   alpha black
   name Shuffle3
   xpos 90
   ypos 242
  }
set N253f4800 [stack 0]
  Merge2 {
   inputs 2
   operation minus
   maskChannelMask -rgba.alpha
   name Merge1
   xpos 7
   ypos 384
  }
set N25205560 [stack 0]
push $N253f4800
  Merge2 {
   inputs 2
   operation difference
   maskChannelMask -rgba.alpha
   name Merge2
   xpos -312
   ypos 384
  }
  Saturation {
   saturation 0
   maskChannelMask -rgba.alpha
   name Saturation2
   xpos -312
   ypos 413
  }
  Shuffle {
   red black
   green black
   blue black
   alpha red
   name Shuffle1
   xpos -312
   ypos 928
  }
  Input {
   inputs 0
   name bg
   xpos 320
   ypos 47
  }
  Shuffle {
   alpha black
   name Shuffle4
   xpos 301
   ypos 237
  }
set N25248910 [stack 0]
  Saturation {
   saturation 0
   maskChannelMask -rgba.alpha
   name Saturation3
   xpos 156
   ypos 418
  }
  Dot {
   name Dot1
   xpos 190
   ypos 625
  }
set N252659e0 [stack 0]
push $N25205560
  Saturation {
   saturation {{Saturation i}}
   maskChannelMask -rgba.alpha
   name Saturation1
   xpos 7
   ypos 412
  }
set N2526a8f0 [stack 0]
  Clamp {
   minimum -15
   maximum 0
   name Clamp1
   xpos -60
   ypos 484
  }
  Grade {
   multiply {{DarkValue i}}
   black_clamp false
   name Grade3
   xpos -60
   ypos 526
  }
  Grade {
   multiply {{DarkTint.r} {DarkTint.g} {DarkTint.b} 1}
   black_clamp false
   name Grade2
   xpos -60
   ypos 554
  }
  Merge2 {
   inputs 2
   operation multiply
   Achannels {rgba.red rgba.green rgba.blue -rgba.alpha}
   Bchannels {rgba.red rgba.green rgba.blue -rgba.alpha}
   output {rgba.red rgba.green rgba.blue -rgba.alpha}
   maskChannelMask -rgba.alpha
   maskChannelInput -rgba.alpha
   mix {{ConstrainDarks i}}
   name Multiply
   xpos -60
   ypos 620
  }
push $N252659e0
push $N2526a8f0
  Clamp {
   maximum 15
   name Clamp2
   xpos 69
   ypos 483
  }
  Grade {
   multiply {{LightValue i}}
   name Grade4
   xpos 69
   ypos 526
  }
  Grade {
   multiply {{LightTint.r} {LightTint.g} {LightTint.b} 1}
   name Grade5
   xpos 69
   ypos 554
  }
  Merge2 {
   inputs 2
   operation multiply
   Achannels {rgba.red rgba.green rgba.blue -rgba.alpha}
   Bchannels {rgba.red rgba.green rgba.blue -rgba.alpha}
   output {rgba.red rgba.green rgba.blue -rgba.alpha}
   maskChannelMask -rgba.alpha
   maskChannelInput -rgba.alpha
   mix {{ConstrainLights i}}
   name Multiply1
   xpos 69
   ypos 660
  }
  Merge2 {
   inputs 2
   operation plus
   name Merge4
   xpos 7
   ypos 718
  }
push $N25248910
  Dot {
   name Dot4
   xpos 335
   ypos 812
  }
  Merge2 {
   inputs 2
   operation plus
   maskChannelMask -rgba.alpha
   name Merge3
   xpos 7
   ypos 807
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   xpos 7
   ypos 921
  }
  Output {
   name Output1
   xpos 7
   ypos 1053
  }
 end_group
 Log2Lin {
  name Log2Lin4
  xpos 2883
  ypos -1027
 }
 Dot {
  name Dot40
  xpos 2917
  ypos -741
 }
push $N253ba9b0
 Keymix {
  inputs 3
  channels rgb
  name Keymix4
  xpos 2556
  ypos -745
 }
 Merge2 {
  inputs 2
  name Merge1
  xpos 2556
  ypos 397
 }
end_group
Group {
 inputs 0
 name Test_Shape1
 tile_color 0xffff
 note_font "Bitstream Vera Sans Bold"
 selected true
 xpos -312
 ypos 7359
 postage_stamp true
 addUserKnob {20 User}
 addUserKnob {7 thickness l Thickness R 0 5}
 thickness 2
}
 Radial {
  inputs 0
  area {180 150 1740 920}
  softness {{parent.thickness/100}}
  name Radial2
  selected true
  xpos -584
  ypos 503
 }
 Dot {
  name Dot9
  xpos -550
  ypos 573
 }
set N1d462ef0 [stack 0]
 Dot {
  name Dot10
  xpos -550
  ypos 645
 }
push $N1d462ef0
 Invert {
  name Invert4
  xpos -730
  ypos 564
 }
 Constant {
  inputs 0
  channels rgb
  color 0.6
  format "1920 1080 0 0 1920 1080 1 HD_1080"
  name Constant3
  xpos -1053
  ypos 405
 }
 Shuffle2 {
  fromInput1 {{0} B}
  fromInput2 {{0} B}
  mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 white -1 -1 rgba.alpha 0 3"
  name Shuffle6
  xpos -1053
  ypos 515
 }
 Dot {
  name Dot11
  xpos -1019
  ypos 573
 }
 CheckerBoard2 {
  inputs 0
  format "1920 1080 0 0 1920 1080 1 HD_1080"
  boxsize 32
  centerlinewidth 0
  name CheckerBoard2
  xpos -742
  ypos 303
 }
 ColorBars {
  inputs 0
  format "1920 1080 0 0 1920 1080 1 HD_1080"
  PAL true
  name ColorBars3
  xpos -888
  ypos 197
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge3
  xpos -888
  ypos 327
 }
 Shuffle2 {
  fromInput1 {{0} B}
  fromInput2 {{0} B}
  mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 white -1 -1 rgba.alpha 0 3"
  name Shuffle10
  xpos -888
  ypos 388
 }
 Merge2 {
  inputs 2+1
  name Merge11
  xpos -888
  ypos 570
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy2
  xpos -888
  ypos 636
 }
 Premult {
  name Premult9
  xpos -888
  ypos 713
 }
 Output {
  name Output1
  xpos -888
  ypos 813
 }
end_group
Dot {
 name Dot162
 selected true
 xpos -278
 ypos 7450
}
set N1d4eb310 [stack 0]
Dot {
 name Dot163
 selected true
 xpos -23
 ypos 7450
}
Dot {
 name Dot161
 selected true
 xpos -23
 ypos 7790
}
push $N1d4eb310
FilterErode {
 channels alpha
 size 8.5
 name FilterErode7
 selected true
 xpos -312
 ypos 7482
}
Premult {
 name Premult22
 selected true
 xpos -312
 ypos 7520
}
Dot {
 name Dot159
 selected true
 xpos -278
 ypos 7557
}
set N1d30eec0 [stack 0]
Dot {
 name Dot160
 selected true
 xpos -146
 ypos 7557
}
Dot {
 name Dot158
 selected true
 xpos -146
 ypos 7713
}
push $N1d30eec0
Blur {
 channels rgba
 size 46.5
 mix 0.135
 name Blur3
 selected true
 xpos -312
 ypos 7601
}
Unpremult {
 name Unpremult7
 selected true
 xpos -312
 ypos 7638
}
Merge2 {
 inputs 2
 name Merge12
 selected true
 xpos -312
 ypos 7709
}
Copy {
 inputs 2
 from0 rgba.alpha
 to0 rgba.alpha
 name Copy5
 selected true
 xpos -312
 ypos 7780
}
Premult {
 name Premult23
 selected true
 xpos -312
 ypos 7829
}
push $N3e832db0
push $N369ad740
Dot {
 name Dot112
 selected true
 xpos 10
 ypos 9269
}
set N1d35b790 [stack 0]
Dot {
 name Dot156
 selected true
 xpos -167
 ypos 9269
}
FilterErode {
 size 24
 name FilterErode6
 selected true
 xpos -201
 ypos 9577
}
Dot {
 name Dot157
 selected true
 xpos -167
 ypos 9857
}
push $N1d35b790
Dot {
 name Dot48
 selected true
 xpos 10
 ypos 9475
}
set N1d376c20 [stack 0]
Dot {
 name Dot49
 selected true
 xpos 96
 ypos 9475
}
Dot {
 name Dot46
 selected true
 xpos 96
 ypos 9548
}
set N1d380c20 [stack 0]
Dot {
 name Dot47
 selected true
 xpos 196
 ypos 9548
}
Dot {
 name Dot45
 selected true
 xpos 196
 ypos 9617
}
push $N1d380c20
Merge2 {
 inputs 2
 operation xor
 name Merge24
 selected true
 xpos 62
 ypos 9613
}
Grade {
 channels alpha
 whitepoint 0
 white_clamp true
 name Grade6
 selected true
 xpos 62
 ypos 9678
}
Dot {
 name Dot50
 selected true
 xpos 96
 ypos 9790
}
push $N1d376c20
Merge2 {
 inputs 2
 operation stencil
 name Merge25
 selected true
 xpos -24
 ypos 9786
}
Switch {
 inputs 2
 which 1
 name Switch4
 selected true
 xpos -24
 ypos 9853
 disable true
}
Dot {
 name Dot51
 selected true
 xpos 10
 ypos 9915
}
push 0
push $N369ad740
Group {
 inputs 4
 name Edge6
 help "Edge allows you to extend the proper color out over transparent edges or areas with a lot of motionblur without eroding away the nice detail. This edge extend has some more advanced features like splitting the core matte and final key which allows you to work on motion blur without effecting small details like hair or a swinging rope for example. There is also more control over how you blend the core detail to the extended edge color. This was shown to me years ago by an old comp sup I had and is the same as the edge extend by Frank Reuter. This is my version of it that has evolved a little bit over the years.\n\nInputs\nThere are multiple inputs to Edge but you can just plug in your FG with alpha if you want to use it simplified. Separating Core and Softer keys or using roto with and without motionblur has advantages in certain situations. ie: If you have a thin object this will help maintain solid alpha where you need it.\n\nFG – Foreground plate with Spill suppression applied\nCore – This is like a core matte, it helps identify the leading edge and where the edge tool should start from. It is important to add this core so that small details are not lost like a thin rope or hair.\nKey – This is your Key with fine hair details and transparent motion blurred edges. For Roto you want to have motion blur turned on.\nBG – This is where your Background goes if you are using the node as Final Result\nMask - Currently this only works if you are using Edge in Final result."
 tile_color 0x990000
 label "\[value iterations]"
 selected true
 xpos 378
 ypos 9905
 addUserKnob {20 User l Extend}
 addUserKnob {6 xxx_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {41 in l channels T Shuffle2.in}
 addUserKnob {4 operation t "Here you can choose if you want to use the Edge Tool to merge together your foreground and background giving you the Final Result or if you would like the Intermediate Result which is unpremultiplied and not merged over the background. The Intermediate Result can be helpful when tweaking parameters like the edgegrow start and edgegrow size." M {Final Intermediate "" ""}}
 addUserKnob {6 previewedgematte l "preview edge matte" t "This allows you to preview your edge matte that you can use via the channels created in the edge node or by creating a shuffle using the button at the bottom." -STARTLINE}
 previewedgematte true
 addUserKnob {6 extendChromaOnly l "extend chroma only" t "This selection will extend only Chroma information by swapping back in the original luminance information." +STARTLINE}
 addUserKnob {41 exp -STARTLINE T EdgeExpansion.exp}
 addUserKnob {6 premultiplied t "Select this if your footage is already premultiplied to remove dark edges in the extension." -STARTLINE}
 premultiplied true
 addUserKnob {6 clamped l "clamp alpha" t "Select this if your alpha has values below 0 or above 1." -STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {14 edgeStart l "slice start" t "Determines where you would like to start bleeding out the color from the inside of your key. It does this with a series of unpremult, blur, premult operations instead of a standard erode." R 0 100}
 edgeStart 1
 addUserKnob {41 iterations l "slice iterations" t "Sets how large the edge with the color bleeding will be from the edge grow start or core matte and how many times this will be duplicated." T EdgeExpansion.iterations}
 addUserKnob {41 sliceWidth l "slice width" t "The slice width is the amount of blur being applied per slice." T EdgeExpansion.sliceWidth}
 addUserKnob {41 sliceBlur l INVISIBLE +INVISIBLE T EdgeExpansion.sliceBlur}
 addUserKnob {26 ""}
 addUserKnob {7 blurEdgeBlend l "edge blend" t "Helps to soften the transition from the original to the new edge. It tends to erode the bleeding color back inwards if you use high values." R 0 10}
 blurEdgeBlend 3.35
 addUserKnob {7 blurEdgeBlur l "edge blur" t "This helps soften the transition bringing back original detail. This can sometimes bring back some lighting information instead of having it completely replaced." R 0 10}
 addUserKnob {7 filterErodeEdgeSmooth l "edge smooth" t "This one will help with extremely large motionblur and completely takes away detail. This should not be used in most cases but if you do use it sparingly." R -10 10}
 addUserKnob {26 ""}
 addUserKnob {41 maskChannelMask l mask -STARTLINE T Merge3.maskChannelMask}
 addUserKnob {41 inject -STARTLINE T Merge3.inject}
 addUserKnob {41 invert_mask l invert -STARTLINE T Merge3.invert_mask}
 addUserKnob {41 fringe -STARTLINE T Merge3.fringe}
 addUserKnob {26 ""}
 addUserKnob {22 edgeShuffleButton l "create edge matte" t "This will generate a shuffle node that isolates the areas of extension which you can use to regrain your edges." T "nuke.root().begin()\nEdgeShuffle = nuke.createNode('Shuffle', inpanel = False)\nEdgeShuffle\['label'].setValue( 'Regrain this edge' )\nEdgeShuffle\['in'].setValue( 'edge' )\nEdgeShuffle\['in2'].setValue( 'none' )\nEdgeShuffle\['red'].setValue('alpha')\nEdgeShuffle\['green'].setValue('alpha')\nEdgeShuffle\['blue'].setValue('alpha')\nEdgeShuffle\['alpha'].setValue('alpha')" +STARTLINE}
 addUserKnob {26 reminder l "" -STARTLINE T "*** use edge.matte to regrain your edges. ***"}
 addUserKnob {20 color l Blending}
 addUserKnob {6 enablecolor l enable t "This tab will help you blending your foreground edges with the background color. it is based off the edge extension in the first tab but you can modify the edge properties to get your desired look." +STARTLINE}
 enablecolor true
 addUserKnob {6 colorpreview l preview t "Preview the edge being used for blending with the BG. This helps if you want to modify it further." -STARTLINE}
 addUserKnob {41 operation_1 l operation t "This is the merge operation you want to use for blending. It is set to average by default but you can use anything you like ie: plus, max, min." T ColorMerge.operation}
 addUserKnob {7 erodeExpandEdge l "expand edge" t "You can expand or contract the edge created in the extend tab." R -100 100}
 erodeExpandEdge 5
 addUserKnob {7 blurSoftenEdge l "soften edge" t "This blur will help soften the transition of the inside blending edge." R 0 100}
 blurSoftenEdge 9.5
 addUserKnob {41 mix_1 l "mix fg luma" t "At a value of 1 this will only blend the chroma information but you can mix this back to include the luma info as well." T Copy5.mix}
 addUserKnob {7 mergeBlendingMix l mix t "Mix Edge Blending result"}
 mergeBlendingMix 0.745
 addUserKnob {26 ""}
 addUserKnob {7 BlurBG l "blur bg" t "Blur the details in the background when you blend them so your foreground doesnt look transparent." R 0 100}
 addUserKnob {26 ""}
 addUserKnob {20 AdjustBGColor l "adjust bg color" t "Here you can modify the color and saturation of the bg being used for blending. This will anly affect the blending not the actual bg." n 1}
 AdjustBGColor 0
 addUserKnob {41 white l gain T GradeEdgeColor.white}
 addUserKnob {41 gamma T GradeEdgeColor.gamma}
 addUserKnob {41 black l lift T GradeEdgeColor.black}
 addUserKnob {41 saturation T EdgeSat.saturation}
 addUserKnob {41 mix l INVISIBLE +INVISIBLE T ColorMerge.mix}
 addUserKnob {20 endGroup n -1}
 addUserKnob {20 MaskBGLuma l "mask bg luma" t "This section will allow you to preview and isolate the bright areas of the bg to wrap around your foreground. Think of this as a way to have lights wrap arpound your foreground in car comps." n 1}
 MaskBGLuma 0
 addUserKnob {26 maskBgLuma l "mask bg luma"}
 addUserKnob {6 enableBGMask l "enable bg mask" +STARTLINE}
 addUserKnob {6 PreviewBG l "preview bg input" -STARTLINE}
 addUserKnob {41 range l INVISIBLE +INVISIBLE T Keyer1.range}
 addUserKnob {41 out l "Luma Range" T controler.out}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {20 info l Info}
 addUserKnob {26 ""}
 addUserKnob {26 info_1 l "" +STARTLINE T "\nEdge Version 6.9\nCreated by Rob Bannister\nwww.bannisterpost.com"}
 addUserKnob {26 help_1 l "" +STARTLINE T "<a href=\"http://www.bannisterpost.com/downloads/edge/\" style=\"color:white\">HELP</a>"}
}
 Histogram {
  inputs 0
  name controler
  xpos -982
  ypos 561
 }
 Input {
  inputs 0
  name FG
  xpos 376
  ypos -343
 }
 Unpremult {
  name Unpremult3
  xpos 376
  ypos -288
  disable {{!parent.premultiplied}}
 }
 Dot {
  name Dot14
  xpos 410
  ypos -224
 }
set N1d200630 [stack 0]
 Input {
  inputs 0
  name Key
  xpos -215
  ypos -318
  number 1
 }
 Clamp {
  name Clamp1
  xpos -215
  ypos -180
  disable {{parent.clamped==0?1:0}}
 }
 Switch {
  inputs 2
  which {{"!\[exists parent.input1]"}}
  name Switch1
  xpos -215
  ypos -61
 }
set N1d2191e0 [stack 0]
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle1
  xpos -215
  ypos 237
 }
set N1d2215d0 [stack 0]
 Dot {
  name Dot6
  xpos -181
  ypos 477
 }
set N1d232390 [stack 0]
push $N1d2191e0
 Input {
  inputs 0
  name Core
  xpos 791
  ypos -331
  number 2
 }
 Clamp {
  name Clamp2
  xpos 787
  ypos -157
  disable {{parent.clamped==0?1:0}}
 }
 Switch {
  inputs 2
  which {{"!\[exists parent.input2]"}}
  name Switch5
  xpos 787
  ypos -61
 }
 Erode {
  size {{parent.edgeStart}}
  name Erode1
  label "\[value size]"
  xpos 787
  ypos 22
 }
 Blur {
  channels alpha
  size {{parent.blurEdgeBlur}}
  name Blur_edgeBur
  label "\[value size]"
  xpos 787
  ypos 126
 }
set N1d2607b0 [stack 0]
 Blur {
  channels alpha
  size {{parent.blurEdgeBlend}}
  name blue_edgeBlend
  label "\[value size]"
  xpos 591
  ypos 126
 }
 FilterErode {
  size {{parent.filterErodeEdgeSmooth}}
  filter gaussian
  name FilterErode_edgeSmooth
  label "\[value size]"
  xpos 591
  ypos 224
 }
set N1d27c490 [stack 0]
push $N1d2215d0
 ChannelMerge {
  inputs 2
  operation stencil
  name ChannelMerge1
  xpos -64
  ypos 224
 }
 ChannelMerge {
  inputs 2
  operation multiply
  name ChannelMerge2
  xpos -64
  ypos 460
 }
 Dot {
  name Dot17
  xpos -30
  ypos 691
 }
set N1d2a2a90 [stack 0]
 Dot {
  name Dot11
  xpos -30
  ypos 1133
 }
 Input {
  inputs 0
  name BG
  xpos -1081
  ypos -343
  number 3
 }
 Dot {
  name Dot5
  xpos -1047
  ypos 293
 }
set N1d2b1560 [stack 0]
 Dot {
  name Dot12
  xpos -1047
  ypos 644
 }
set N1d2b6490 [stack 0]
 Keyer {
  operation "luminance key"
  range {{parent.controler.out.0} {parent.controler.out.1} 1 1}
  name Keyer1
  xpos -979
  ypos 634
 }
 Blur {
  channels rgba
  size {{parent.BlurBG}}
  name Blur2
  label "\[value size]"
  xpos -717
  ypos 634
 }
set N1d2c64e0 [stack 0]
push $N1d27c490
 Dot {
  name Dot7
  xpos 625
  ypos 344
 }
set N1d2d3e70 [stack 0]
 Dilate {
  channels alpha
  size {{parent.erodeExpandEdge}}
  name DilateColorEdge
  label "\[value size]"
  xpos -388
  ypos 327
 }
 Blur {
  channels alpha
  size {{parent.blurSoftenEdge}}
  name BlurColorEdge
  label "\[value size]"
  xpos -498
  ypos 327
 }
push $N1d2607b0
push $N1d200630
 Shuffle {
  name Shuffle2
  xpos 376
  ypos -174
 }
 Remove {
  channels alpha
  name Remove1
  xpos 376
  ypos -113
 }
 Dot {
  name Dot16
  xpos 410
  ypos 459
 }
set N1d10be00 [stack 0]
 Group {
  inputs 2
  name EdgeExpansion
  knobChanged "\n\nn = nuke.thisNode()\nk = nuke.thisKnob()\n\nif 'iterations' in k.name(): \n    #print int(k.value())\n    k.setValue(int(k.value()))\n    if k.value()<1:\n        k.setValue(1)\n    n.begin()\n\n    for node in nuke.allNodes():\n        if 'static' not in node\['label'].value():\n            nuke.delete(node)\n\n    slices = int(n\['iterations'].value())-1\n    step = 1\n    blur_count = 5\n    merge_count = 2\n    unpremult_count = 4\n    num = 1\n    for x in range(1,slices+step,step):\n        \n        a = nuke.createNode('Blur', inpanel=False)\n        new_knob = nuke.Int_Knob('exp_value')\n        a.addKnob(new_knob)\n        a\['exp_value'].setValue(num)\n        a.setInput(0, nuke.toNode('Unpremult' + str(unpremult_count)))\n        a\['size'].setExpression('parent.sliceWidth*(parent.exp==0?1:exp_value)')\n        a\['channels'].setValue('red green blue depth.Z')\n\n        b = nuke.createNode('Shuffle', inpanel=False)\n        b\['in'].setValue( 'rgba' )\n        b\['in2'].setValue( 'depth' )\n        b\['out2'].setValue( 'depth' )\n        b\['alpha'].setValue('red2')\n\n        c = nuke.createNode('Unpremult', inpanel=False)\n        c\['channels'].setValue('red green blue alpha')\n        c\['alpha'].setValue('depth.Z')\n\n        d = nuke.createNode('Blur', inpanel=False)\n        new_knob = nuke.Int_Knob('exp_value')\n        d.addKnob(new_knob)\n        d\['exp_value'].setValue(num)\n        d\['size'].setExpression('parent.sliceWidth*(parent.exp==0?1:exp_value)')\n        d\['channels'].setValue('rgba')\n\n        e = nuke.createNode('Merge2', inpanel=False)\n        e\['Achannels'].setValue('red green blue depth.Z')\n        e.setInput(1, nuke.toNode('Merge' + str(merge_count)))\n        e.setInput(0, nuke.toNode('Blur' + str(blur_count+2)))\n\n        merge_count += 1\n        blur_count += 2\n        unpremult_count += 1\n\n        f = nuke.createNode('Blur', inpanel=False)\n        new_knob = nuke.Int_Knob('exp_value')\n        f.addKnob(new_knob)\n        f\['exp_value'].setValue(num)\n        f.setInput(0, nuke.toNode('Unpremult' + str(unpremult_count)))\n        f\['size'].setExpression('parent.sliceWidth*(parent.exp==0?1:exp_value)')\n        f\['channels'].setValue('rgba')\n\n        g = nuke.createNode('Shuffle', inpanel=False)\n        g\['in'].setValue( 'rgba' )\n        g\['in2'].setValue( 'depth' )\n        g\['out2'].setValue( 'depth' )\n        g\['black'].setValue('alpha')\n\n        h = nuke.createNode('Unpremult', inpanel=False)\n        h\['channels'].setValue('red green blue depth.Z')\n\n        j = nuke.createNode('Blur', inpanel=False)\n        new_knob = nuke.Int_Knob('exp_value')\n        j.addKnob(new_knob)\n        j\['exp_value'].setValue(num)\n        j\['size'].setExpression('parent.sliceWidth*(parent.exp==0?1:exp_value)')\n        j\['channels'].setValue('red green blue depth.Z')\n\n        k = nuke.createNode('Merge2', inpanel=False)\n        k.setInput(1, nuke.toNode('Merge' + str(merge_count)))\n        k.setInput(0, nuke.toNode('Blur' + str(blur_count+2)))\n\n        merge_count += 1\n        blur_count += 2\n        unpremult_count += 1\n        num += 1\n        nuke.toNode('Output1').setInput(0, k)\n\n    try:\n        nuke.toNode('Blur5').setInput(0, nuke.toNode('Unpremult4'))\n    except:\n        nuke.toNode('Output1').setInput(0, nuke.toNode('Merge2'))\n\n    n.end()\n    \n\n"
  note_font_size 25
  xpos 787
  ypos 449
  addUserKnob {20 User}
  addUserKnob {6 firstrun l "Disable before input" +STARTLINE}
  firstrun {{"!\[exists parent.input0]"}}
  addUserKnob {6 exp t "The exponential check box will add a variable to the duplicated blurs that increases as they move outwards from the original edge. This might help if you have a large distance to extend." +STARTLINE}
  addUserKnob {7 iterations t "Sets how large the edge with the color bleeding will be from the edge grow start or core matte and how many times this will be duplicated. The smaller the width the more detail is preserved.This should be just big enough to reach the edge of the largest areas of motionblur." R 1 25}
  iterations 30
  addUserKnob {7 sliceWidth l "slice width" t "The slice width is the amount of blur being applied per slice." R 1 10}
  sliceWidth 5.15
  addUserKnob {7 sliceBlur l "slice blur" t "The slice width is the amount of blur being applied per slice." R 1 10}
  sliceBlur 1
 }
  Input {
   inputs 0
   name Alpha
   label static
   xpos -218
   ypos -646
   number 1
  }
  Input {
   inputs 0
   name RGB
   label static
   xpos -64
   ypos -772
  }
  Unpremult {
   name Unpremult1
   label static
   xpos -64
   ypos -689
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   label static
   xpos -64
   ypos -653
   disable {{parent.firstrun}}
  }
  Premult {
   name Premult1
   label static
   xpos -64
   ypos -599
  }
  Shuffle {
   black alpha
   out2 depth
   name Shuffle1
   label static
   xpos -64
   ypos -561
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult2
   label static
   xpos -64
   ypos -523
  }
set N1d155f40 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth}}
   name Blur1
   label static
   xpos -64
   ypos -428
  }
  Dot {
   name Dot2
   label static
   xpos -30
   ypos -336
  }
push $N1d155f40
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth}}
   name Blur2
   label static
   xpos 46
   ypos -523
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle2
   label static
   xpos 46
   ypos -471
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult3
   label static
   xpos 46
   ypos -435
  }
set N1d18fea0 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth}}
   name Blur3
   label static
   xpos 46
   ypos -381
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge1
   label static
   xpos 46
   ypos -343
  }
  Dot {
   name Dot3
   label static
   xpos 80
   ypos -237
  }
push $N1d18fea0
  Blur {
   channels rgba
   size {{parent.sliceWidth}}
   name Blur4
   label static
   xpos 156
   ypos -428
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle3
   label static
   xpos 156
   ypos -390
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult4
   label static
   xpos 156
   ypos -350
  }
set N1d1da7e0 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth}}
   name Blur5
   label static
   xpos 156
   ypos -299
  }
  Merge2 {
   inputs 2
   name Merge2
   label static
   xpos 156
   ypos -247
  }
push $N1d1da7e0
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur6
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 1
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle4
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult5
  }
set N1d020800 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur7
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 1
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge3
  }
push $N1d020800
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur8
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 1
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle5
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult6
  }
set N1d066d90 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur9
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 1
  }
  Merge2 {
   inputs 2
   name Merge4
  }
push $N1d066d90
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur10
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 2
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle6
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult7
  }
set N1d0ad340 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur11
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 2
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge5
  }
push $N1d0ad340
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur12
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 2
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle7
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult8
  }
set N1d0f39f0 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur13
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 2
  }
  Merge2 {
   inputs 2
   name Merge6
  }
push $N1d0f39f0
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur14
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 3
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle8
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult9
  }
set N1cf39fd0 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur15
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 3
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge7
  }
push $N1cf39fd0
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur16
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 3
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle9
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult10
  }
set N1cf80560 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur17
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 3
  }
  Merge2 {
   inputs 2
   name Merge8
  }
push $N1cf80560
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur18
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 4
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle10
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult11
  }
set N1cfc6b10 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur19
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 4
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge9
  }
push $N1cfc6b10
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur20
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 4
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle11
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult12
  }
set N1ce0d4c0 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur21
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 4
  }
  Merge2 {
   inputs 2
   name Merge10
  }
push $N1ce0d4c0
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur22
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 5
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle12
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult13
  }
set N1ce53a70 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur23
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 5
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge11
  }
push $N1ce53a70
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur24
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 5
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle13
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult14
  }
set N1ce9a200 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur25
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 5
  }
  Merge2 {
   inputs 2
   name Merge12
  }
push $N1ce9a200
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur26
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 6
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle14
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult15
  }
set N1cee07b0 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur27
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 6
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge13
  }
push $N1cee07b0
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur28
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 6
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle15
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult16
  }
set N1cd26d60 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur29
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 6
  }
  Merge2 {
   inputs 2
   name Merge14
  }
push $N1cd26d60
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur30
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 7
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle16
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult17
  }
set N1cd6d310 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur31
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 7
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge15
  }
push $N1cd6d310
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur32
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 7
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle17
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult18
  }
set N1cdb38a0 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur33
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 7
  }
  Merge2 {
   inputs 2
   name Merge16
  }
push $N1cdb38a0
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur34
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 8
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle18
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult19
  }
set N1cdf9e50 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur35
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 8
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge17
  }
push $N1cdf9e50
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur36
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 8
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle19
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult20
  }
set N1cc40410 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur37
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 8
  }
  Merge2 {
   inputs 2
   name Merge18
  }
push $N1cc40410
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur38
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 9
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle20
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult21
  }
set N1cc872d0 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur39
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 9
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge19
  }
push $N1cc872d0
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur40
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 9
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle21
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult22
  }
set N1cccd860 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur41
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 9
  }
  Merge2 {
   inputs 2
   name Merge20
  }
push $N1cccd860
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur42
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 10
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle22
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult23
  }
set N1cb13e30 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur43
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 10
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge21
  }
push $N1cb13e30
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur44
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 10
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle23
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult24
  }
set N1cb5a3c0 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur45
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 10
  }
  Merge2 {
   inputs 2
   name Merge22
  }
push $N1cb5a3c0
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur46
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 11
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle24
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult25
  }
set N1cba0970 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur47
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 11
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge23
  }
push $N1cba0970
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur48
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 11
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle25
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult26
  }
set N1cbe6f00 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur49
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 11
  }
  Merge2 {
   inputs 2
   name Merge24
  }
push $N1cbe6f00
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur50
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 12
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle26
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult27
  }
set N1ca2d8e0 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur51
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 12
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge25
  }
push $N1ca2d8e0
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur52
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 12
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle27
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult28
  }
set N1ca73e70 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur53
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 12
  }
  Merge2 {
   inputs 2
   name Merge26
  }
push $N1ca73e70
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur54
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 13
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle28
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult29
  }
set N1caba420 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur55
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 13
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge27
  }
push $N1caba420
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur56
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 13
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle29
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult30
  }
set N1c9009e0 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur57
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 13
  }
  Merge2 {
   inputs 2
   name Merge28
  }
push $N1c9009e0
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur58
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 14
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle30
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult31
  }
set N1c946f90 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur59
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 14
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge29
  }
push $N1c946f90
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur60
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 14
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle31
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult32
  }
set N1c98d520 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur61
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 14
  }
  Merge2 {
   inputs 2
   name Merge30
  }
push $N1c98d520
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur62
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 15
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle32
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult33
  }
set N1c9d3ad0 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur63
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 15
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge31
  }
push $N1c9d3ad0
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur64
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 15
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle33
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult34
  }
set N1c81a080 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur65
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 15
  }
  Merge2 {
   inputs 2
   name Merge32
  }
push $N1c81a080
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur66
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 16
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle34
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult35
  }
set N1c860630 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur67
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 16
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge33
  }
push $N1c860630
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur68
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 16
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle35
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult36
  }
set N1c8a6bc0 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur69
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 16
  }
  Merge2 {
   inputs 2
   name Merge34
  }
push $N1c8a6bc0
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur70
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 17
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle36
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult37
  }
set N1c8ed170 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur71
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 17
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge35
  }
push $N1c8ed170
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur72
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 17
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle37
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult38
  }
set N1c733720 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur73
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 17
  }
  Merge2 {
   inputs 2
   name Merge36
  }
push $N1c733720
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur74
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 18
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle38
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult39
  }
set N1c779cd0 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur75
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 18
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge37
  }
push $N1c779cd0
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur76
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 18
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle39
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult40
  }
set N1c7c14c0 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur77
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 18
  }
  Merge2 {
   inputs 2
   name Merge38
  }
push $N1c7c14c0
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur78
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 19
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle40
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult41
  }
set N1c607a90 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur79
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 19
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge39
  }
push $N1c607a90
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur80
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 19
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle41
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult42
  }
set N1c64e020 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur81
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 19
  }
  Merge2 {
   inputs 2
   name Merge40
  }
push $N1c64e020
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur82
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 20
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle42
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult43
  }
set N1c6945d0 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur83
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 20
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge41
  }
push $N1c6945d0
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur84
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 20
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle43
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult44
  }
set N1c6dab60 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur85
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 20
  }
  Merge2 {
   inputs 2
   name Merge42
  }
push $N1c6dab60
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur86
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 21
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle44
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult45
  }
set N1c521130 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur87
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 21
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge43
  }
push $N1c521130
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur88
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 21
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle45
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult46
  }
set N1c5676c0 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur89
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 21
  }
  Merge2 {
   inputs 2
   name Merge44
  }
push $N1c5676c0
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur90
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 22
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle46
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult47
  }
set N1c5adc70 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur91
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 22
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge45
  }
push $N1c5adc70
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur92
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 22
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle47
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult48
  }
set N1c5f4200 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur93
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 22
  }
  Merge2 {
   inputs 2
   name Merge46
  }
push $N1c5f4200
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur94
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 23
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle48
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult49
  }
set N1c43a7e0 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur95
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 23
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge47
  }
push $N1c43a7e0
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur96
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 23
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle49
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult50
  }
set N1c480d70 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur97
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 23
  }
  Merge2 {
   inputs 2
   name Merge48
  }
push $N1c480d70
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur98
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 24
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle50
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult51
  }
set N1c4c7320 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur99
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 24
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge49
  }
push $N1c4c7320
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur100
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 24
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle51
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult52
  }
set N1cbfcf70 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur101
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 24
  }
  Merge2 {
   inputs 2
   name Merge50
  }
push $N1cbfcf70
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur102
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 25
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle52
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult53
  }
set N1c354690 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur103
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 25
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge51
  }
push $N1c354690
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur104
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 25
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle53
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult54
  }
set N1c39ac20 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur105
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 25
  }
  Merge2 {
   inputs 2
   name Merge52
  }
push $N1c39ac20
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur106
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 26
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle54
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult55
  }
set N1c3e11d0 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur107
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 26
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge53
  }
push $N1c3e11d0
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur108
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 26
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle55
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult56
  }
set N1c227780 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur109
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 26
  }
  Merge2 {
   inputs 2
   name Merge54
  }
push $N1c227780
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur110
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 27
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle56
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult57
  }
set N1c26dd30 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur111
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 27
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge55
  }
push $N1c26dd30
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur112
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 27
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle57
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult58
  }
set N1c2b42c0 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur113
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 27
  }
  Merge2 {
   inputs 2
   name Merge56
  }
push $N1c2b42c0
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur114
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 28
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle58
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult59
  }
set N1c2fa870 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur115
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 28
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge57
  }
push $N1c2fa870
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur116
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 28
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle59
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult60
  }
set N1c140e40 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur117
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 28
  }
  Merge2 {
   inputs 2
   name Merge58
  }
push $N1c140e40
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur118
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 29
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle60
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult61
  }
set N1c1873f0 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur119
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 29
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge59
  }
push $N1c1873f0
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur120
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 29
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle61
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult62
  }
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur121
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 29
  }
  Merge2 {
   inputs 2
   name Merge60
   selected true
  }
  Output {
   name Output1
   label static
   xpos 156
   ypos 4217
  }
 end_group
set N1d110d50 [stack 0]
push $N1d2215d0
 Switch {
  inputs 2
  which {{parent.FinalSwitch.which}}
  name Switch2
  xpos -418
  ypos 237
 }
 Dilate {
  size 50
  name Dilate1
  label "\[value size]"
  xpos -608
  ypos 224
  disable true
 }
 ChannelMerge {
  inputs 2
  operation stencil
  name ChannelMerge3
  xpos -608
  ypos 327
 }
 ChannelMerge {
  inputs 2
  operation multiply
  name ChannelMerge_colormask
  xpos -608
  ypos 628
  disable {{!parent.enableBGMask}}
 }
 Dot {
  name Dot4
  xpos -574
  ypos 702
 }
set N15f27810 [stack 0]
 Dot {
  name Dot10
  xpos -573
  ypos 1057
 }
push $N1d2c64e0
 Dot {
  name Dot13
  xpos -683
  ypos 993
 }
 Premult {
  name Premult1
  xpos -971
  ypos 990
 }
push $N15f27810
push $N1d232390
push $N1d2a2a90
push $N1d10be00
 Dot {
  name Dot1
  xpos 410
  ypos 565
 }
set N15f3e8d0 [stack 0]
 Dot {
  name Dot18
  xpos 190
  ypos 565
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace2
  xpos 156
  ypos 596
 }
push $N1d2d3e70
 Dot {
  name Dot8
  xpos 625
  ypos 602
 }
push $N15f3e8d0
push $N1d110d50
 Dot {
  name Dot15
  xpos 821
  ypos 531
 }
 Dot {
  name Dot3
  xpos 821
  ypos 733
 }
 Keymix {
  inputs 3
  name Keymix1
  xpos 376
  ypos 723
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace1
  xpos 266
  ypos 729
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 rgba.red
  name Copy1
  xpos 156
  ypos 723
  disable {{!parent.extendChromaOnly}}
 }
 Colorspace {
  colorspace_in YCbCr
  name Colorspace3
  xpos 46
  ypos 729
 }
add_layer {edge edge.red edge.green edge.blue edge.alpha edge.matte}
 ShuffleCopy {
  inputs 2
  red alpha
  green alpha
  blue alpha
  out edge
  name ShuffleCopy1
  xpos -64
  ypos 729
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy2
  xpos -215
  ypos 723
 }
set N15fcc2e0 [stack 0]
 Dot {
  name Dot9
  xpos -472
  ypos 733
 }
set N15fda860 [stack 0]
 Colorspace {
  colorspace_out YCbCr
  name Colorspace4
  xpos -506
  ypos 434
 }
push $N1d2b1560
 Colorspace {
  colorspace_out YCbCr
  name Colorspace6
  xpos -790
  ypos 290
 }
 Blur {
  channels rgb
  size {{parent.BlurBG}}
  name Blur1
  label "\[value size]"
  xpos -790
  ypos 341
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 rgba.red
  from1 rgba.alpha
  to1 rgba.alpha
  name Copy5
  xpos -790
  ypos 421
 }
 Colorspace {
  colorspace_in YCbCr
  name Colorspace5
  xpos -790
  ypos 487
 }
 Grade {
  black_clamp false
  name GradeEdgeColor
  xpos -790
  ypos 525
 }
 Saturation {
  name EdgeSat
  xpos -790
  ypos 563
 }
push $N15fda860
 Merge2 {
  inputs 2+1
  operation average
  Achannels rgb
  output rgb
  mix {{parent.mergeBlendingMix}}
  name ColorMerge
  xpos -791
  ypos 730
  disable {{!parent.enablecolor}}
 }
set N15e65210 [stack 0]
 Dot {
  name Dot2
  xpos -757
  ypos 911
 }
 Input {
  inputs 0
  name Mask
  xpos -1288
  ypos 730
  number 4
 }
push $N15e65210
 Premult {
  name Premult3
  xpos -955
  ypos 730
 }
push $N1d2b6490
 Merge2 {
  inputs 2+1
  also_merge edge
  name Merge3
  xpos -1081
  ypos 730
 }
 Switch {
  inputs 2
  which {{operation}}
  name FinalSwitch
  xpos -1081
  ypos 908
 }
 Switch {
  inputs 2
  which {{parent.PreviewBG}}
  name BGPreview
  xpos -1081
  ypos 990
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.red
  name Copy3
  xpos -1081
  ypos 1050
  disable {{parent.colorpreview*-1+1}}
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.red
  name Copy4
  xpos -1081
  ypos 1123
  disable {{!parent.previewedgematte}}
 }
 Shuffle {
  out {{{parent.Shuffle2.in}}}
  name Shuffle3
  xpos -1081
  ypos 1237
 }
 Output {
  name Output1
  xpos -1081
  ypos 1947
 }
push $N15fcc2e0
 Viewer {
  frame_range 0-835
  name Viewer1
  xpos -215
  ypos 759
 }
end_group
push $N35f94ff0
push $N35f94ff0
Group {
 inputs 2
 name ColorDilate9
 knobChanged "\ntn = nuke.thisNode()\ntk = nuke.thisKnob()\n\nfullList =  tn\['fullList'].value().strip(\"\[']\").split(\"', '\")\nnodeList = fullList\[0], fullList\[1], fullList\[2], fullList\[3], fullList\[4], fullList\[5], fullList\[6]\npreviousLoopNum = tn\['previousLoopNum'].getValue()\n\ngrowTexture = tn\['growTexture'].getValue()\nqualityVal = int( tn\['quality'].getValue() )\n\n\n##### DEFINE VALUE CHANGES ##################\n\ndef valChange():\n    qualityBias = tn\['qualityBias'].getValue()\n    blurCenter = tn\['blurCenter'].getValue()\n    bcDistribution = tn\['bcDistribution'].getValue()\n    for i in range (0, qualityVal):\n        blurVal = nuke.toNode(fullList\[i*len(nodeList)])\n        erodeVal = nuke.toNode(fullList\[i*len(nodeList)+3])\n        blurCenterVal = nuke.toNode(fullList\[i*len(nodeList)+5])\n        if isinstance(growTexture, float) == True:\n            blurValSize = (growTexture/qualityVal*(i+1)*(1-qualityBias)) + (growTexture/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2)))\n            blurVal\['size'].setValue( blurValSize )\n            erodeVal\['size'].setValue(blurVal\['size'].getValue()/2)\n            blurCenterVal\['size'].setValue( ( blurValSize*(1-bcDistribution) +  (blurValSize*(bcDistribution*(pow(i+1, 2)/pow(qualityVal, 2)))) ) * blurCenter )\n        else:\n            blurVal\['size'].setValue(\[ (growTexture\[0]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[0]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) , (growTexture\[1]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[1]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) ])\n            erodeVal\['size'].setValue(\[blurVal\['size'].getValue()\[0]/2,blurVal\['size'].getValue()\[1]/2])\n            blurCenterVal\['size'].setValue(\[ (growTexture\[0]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[0]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) , (growTexture\[1]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[1]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) ])\n\ndef filterChange():\n    filters = int( tn\['filter'].getValue() )\n    filterQuality = int( tn\['filterQuality'].getValue() )\n    crop = int( tn\['crop'].getValue() )\n    for i in range (0, qualityVal):\n        blurVal = nuke.toNode(fullList\[i*len(nodeList)])\n        blurVal\['filter'].setValue( filters )\n        blurVal\['quality'].setValue( filterQuality )\n        blurVal\['crop'].setValue( crop )\n        blurCenterVal = nuke.toNode(fullList\[i*len(nodeList)])\n        blurCenterVal\['filter'].setValue( filters )\n        blurCenterVal\['quality'].setValue( filterQuality )\n        blurCenterVal\['crop'].setValue( crop )\n\n\n##### CREATE THE NODES ###################\n\nif tk.name()=='quality':\n    if qualityVal < 1:\n        qualityVal = 1\n    elif qualityVal >100:\n        qualityVal = 100\n    tn\['quality'].setValue( qualityVal )\n    \n\n    if qualityVal != previousLoopNum:\n\n\n        inputDep = nuke.dependencies(\[nuke.toNode('Unpremult1')], nuke.INPUTS)\n        resultOver = nuke.toNode( inputDep\[0].name() )\n\n        difference = qualityVal-previousLoopNum\n        if difference > 0:\n            for i in range (1, int(difference+1)):\n                \n                blur = nuke.nodes.Blur ()\n                blur\['channels'].setValue('rgba')\n                blur\['maskChannelInput'].setValue('none')\n                blur.setInput (0, nuke.toNode('Switch2'))\n                \n                unpremult = nuke.nodes.Unpremult ()\n                unpremult\['channels'].setValue('rgb')\n                unpremult\['alpha'].setValue('rgba.alpha')\n                unpremult\['invert'].setValue(0)\n                unpremult.setInput (0, blur)\n                \n                expression = nuke.nodes.Expression(expr3 = 'a==0?0:1')\n                expression.setInput (0, unpremult)\n                \n                erode = nuke.nodes.FilterErode ()\n                erode\['channels'].setValue( 'rgba.alpha' )\n                erode\['filter'].setValue( 'gaussian' )\n                erode.setInput (0, expression)\n                \n                premult = nuke.nodes.Premult ()\n                premult\['channels'].setValue( 'rgb' )\n                premult\['alpha'].setValue( 'rgba.alpha' )\n                premult.setInput (0, erode)\n\n                blurCenter = nuke.nodes.Blur ()\n                blurCenter\['channels'].setValue('rgba')\n                blurCenter\['maskChannelInput'].setValue('none')\n                blurCenter.setInput (0, premult)\n\n                mergeOver = nuke.nodes.Merge2 ()\n                mergeOver\['operation'].setValue( 'over' )\n                mergeOver\['sRGB'].setValue( 0 )\n                mergeOver\['screen_alpha'].setValue( 0 )\n                mergeOver\['bbox'].setValue( 'union' )\n                mergeOver\['Achannels'].setValue( 'rgba' )\n                mergeOver\['Bchannels'].setValue( 'rgba' )\n                mergeOver\['output'].setValue( 'rgba' )\n                mergeOver\['also_merge'].setValue( 'none' )\n                mergeOver.setInput (0, blurCenter)\n                mergeOver.setInput (1, resultOver)\n                \n                \n                resultOver = mergeOver\n                \n                \n                nodeList = blur.name(), unpremult.name(), expression.name(), erode.name(), premult.name(), blurCenter.name(), resultOver.name()\n                fullList.extend(nodeList)\n\n\n##### DELETE THE NODES ##################################\n\n        else:\n            fullList.reverse()\n            for i in range (int(qualityVal), int(previousLoopNum)):\n                for i in range (0, len(nodeList)):\n                    nuke.delete(nuke.toNode(fullList\[0]))\n                    del fullList\[0]\n                resultOver = nuke.toNode(fullList\[0])\n                resultExpression = nuke.toNode(fullList\[3])\n            fullList.reverse()\n\n        nuke.toNode('Unpremult1').setInput(0, resultOver)\n        valChange()\n        filterChange()\n                \n        previousLoopNum = qualityVal\n        \n        tn\['previousLoopNum'].setValue( int(previousLoopNum) )\n        tn\['fullList'].setValue( str(fullList) )\n\n\n\n##### CHANGE EXISTING VALUES #####################\n\nif tk.name()=='growTexture':\n    valChange()\n    \nif tk.name()=='qualityBias':\n    valChange()\n\nif tk.name()=='blurCenter':\n    valChange()\n\nif tk.name()=='bcDistribution':\n    valChange()\n    \nif tk.name()=='filter':\n    filterChange()\n    \nif tk.name()=='filterQuality':\n    filterChange()\n    \nif tk.name()=='crop':\n    filterChange()\n\n\n"
 note_font "Bitstream Vera Sans"
 selected true
 xpos 1836
 ypos 9426
 addUserKnob {20 User l fColourDilate}
 addUserKnob {14 growTexture l "Grow Texture" R 0 100}
 growTexture 85
 addUserKnob {14 erodeMatte l "Erode Matte" t "Dilate or erode the matte to adjust the grow start paint" R -100 100}
 erodeMatte -62
 addUserKnob {7 expandMatte l "Expand Matte" t "Expand or compress the matte to adjust the grow start point" R -0.99999 0.99999}
 addUserKnob {7 quality l Iterations t "The number of iterations Colour Dilate will go through.  More is slower.  Max steps is 100" R 1 20}
 quality 7
 addUserKnob {7 qualityBias l Distribution t "0 is a linear distribution.  1 is exponential distribution.\nExponential is smoother with low quality.\nLinear is better with high quality."}
 qualityBias 1
 addUserKnob {26 ""}
 addUserKnob {7 blurCenter l "Blur Center" t "Soften central area where opposite dilates meet creating a hard line.  Is a multiple of Grow Texture." R 0 5}
 addUserKnob {7 bcDistribution l "BC Distribution" t "0 blurs a direct multiple of Grow Texture. 1 blurs exponentially more towards the center."}
 addUserKnob {26 ""}
 addUserKnob {4 filter l Filter t "filter\n" M {box triangle quadratic gaussian ""}}
 filter gaussian
 addUserKnob {3 filterQuality l " " -STARTLINE}
 filterQuality 15
 addUserKnob {6 crop l "crop to format" -STARTLINE}
 crop true
 addUserKnob {4 matteOutput l "Matte Output" M {rgb.alpha matte "dilated matte" "dilated area" "grain matte" ""}}
 addUserKnob {26 blank l "" -STARTLINE T "      "}
 addUserKnob {6 invertMatte l "invert Matte" -STARTLINE}
 invertMatte true
 addUserKnob {26 blank2 l "" -STARTLINE T "      "}
 addUserKnob {6 rgbIsPremult l "RGB is Premult?" -STARTLINE}
 rgbIsPremult true
 addUserKnob {1 colorDilate l INVISIBLE t "Keep me hidden" +INVISIBLE}
 addUserKnob {3 previousLoopNum l INVISIBLE +INVISIBLE}
 previousLoopNum 7
 addUserKnob {1 fullList l INVISIBLE +INVISIBLE}
 fullList "\['Blur1', 'Unpremult2', 'Expression1', 'FilterErode2', 'Premult1', 'BlurCenter', 'Merge2', 'Blur2', 'Unpremult3', 'Expression2', 'FilterErode3', 'Premult2', 'Blur3', 'Merge5', 'Blur4', 'Unpremult4', 'Expression3', 'FilterErode4', 'Premult3', 'Blur5', 'Merge6', 'Blur6', 'Unpremult5', 'Expression4', 'FilterErode5', 'Premult4', 'Blur7', 'Merge7', 'Blur8', 'Unpremult6', 'Expression5', 'FilterErode6', 'Premult5', 'Blur9', 'Merge8', 'Blur10', 'Unpremult7', 'Expression6', 'FilterErode7', 'Premult6', 'Blur11', 'Merge9', 'Blur12', 'Unpremult8', 'Expression7', 'FilterErode8', 'Premult7', 'Blur13', 'Merge10']"
}
 Input {
  inputs 0
  name InputMask
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -665
  number 1
 }
set N15d7eef0 [stack 0]
 AddChannels {
  channels alpha
  name AddChannels2
  note_font "Bitstream Vera Sans"
  xpos 365
  ypos 1125
 }
 Dot {
  name Dot3
  note_font "Bitstream Vera Sans"
  xpos 399
  ypos 1183
 }
 Input {
  inputs 0
  name InputRGB
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -531
 }
set N15d91d20 [stack 0]
 AddChannels {
  channels alpha
  name AddChannels1
  note_font "Bitstream Vera Sans"
  xpos 348
  ypos 949
 }
 Dot {
  name Dot2
  note_font "Bitstream Vera Sans"
  xpos 382
  ypos 1078
 }
push $N15d7eef0
 FilterErode {
  channels alpha
  size {{invertMatte==0?erodeMatte.w:-erodeMatte.w i} {invertMatte==0?erodeMatte.h:-erodeMatte.h i}}
  name FilterErode1
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -621
 }
 Invert {
  channels alpha
  mix {{invertMatte i}}
  name Invert2
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -563
 }
 Grade {
  channels alpha
  blackpoint {{"clamp(expandMatte, 0, 1)" i}}
  whitepoint {{"clamp(1+expandMatte, 0, 1)" i}}
  white_clamp true
  name Grade1
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -505
 }
 Grade {
  channels alpha
  whitepoint 0.5
  black_clamp false
  white_clamp true
  name Grade6
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -345
 }
 Dot {
  name Dot1
  note_font "Bitstream Vera Sans"
  xpos 837
  ypos -287
 }
set N15ddf640 [stack 0]
push $N15d91d20
 AddChannels {
  channels alpha
  name AddChannels3
  note_font "Bitstream Vera Sans"
  xpos 1120
  ypos -444
 }
push $N15d91d20
 Shuffle {
  alpha white
  name Shuffle1
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -458
 }
 Crop {
  box {{InputRGB.bbox.x i x1001 542} {InputRGB.bbox.y i} {InputRGB.bbox.r i} {InputRGB.bbox.t i}}
  name Crop3
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -414
 }
 Switch {
  inputs 2
  which {{rgbIsPremult i}}
  name Switch1
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -370
 }
 Dot {
  name Dot5
  note_font "Bitstream Vera Sans"
  xpos 1047
  ypos -326
 }
set N15c11ca0 [stack 0]
 Merge2 {
  inputs 2
  operation stencil
  bbox intersection
  name Merge1
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -292
 }
push $N15ddf640
 Dot {
  name Dot4
  note_font "Bitstream Vera Sans"
  xpos 837
  ypos -253
 }
push $N15c11ca0
 Dot {
  name Dot6
  note_font "Bitstream Vera Sans"
  xpos 946
  ypos -326
 }
 Merge2 {
  inputs 2
  operation stencil
  bbox B
  name Merge3
  note_font "Bitstream Vera Sans"
  xpos 912
  ypos -258
 }
 Dot {
  name Dot7
  note_font "Bitstream Vera Sans"
  xpos 946
  ypos -192
 }
 Switch {
  inputs 2
  which {{invertMatte i}}
  name Switch2
  note_font "Bitstream Vera Sans"
  xpos 1002
  ypos -196
 }
set N15c50830 [stack 0]
push $N15c50830
 Blur {
  channels rgba
  size 0.2478134111
  name Blur1
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos -26
 }
 Unpremult {
  name Unpremult2
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 18
 }
 Expression {
  expr3 a==0?0:1
  name Expression1
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 62
 }
 FilterErode {
  channels alpha
  size 0.1239067055
  filter gaussian
  name FilterErode2
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 106
 }
 Premult {
  name Premult1
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 164
 }
 Blur {
  channels rgba
  name BlurCenter
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 222
 }
 Merge2 {
  inputs 2
  name Merge2
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 280
 }
push $N15c50830
 Blur {
  channels rgba
  size 1.982507289
  name Blur2
 }
 Unpremult {
  name Unpremult3
 }
 Expression {
  expr3 a==0?0:1
  name Expression2
 }
 FilterErode {
  channels alpha
  size 0.9912536443
  filter gaussian
  name FilterErode3
 }
 Premult {
  name Premult2
 }
 Blur {
  channels rgba
  name Blur3
 }
 Merge2 {
  inputs 2
  name Merge5
 }
push $N15c50830
 Blur {
  channels rgba
  size 6.690962099
  name Blur4
 }
 Unpremult {
  name Unpremult4
 }
 Expression {
  expr3 a==0?0:1
  name Expression3
 }
 FilterErode {
  channels alpha
  size 3.34548105
  filter gaussian
  name FilterErode4
 }
 Premult {
  name Premult3
 }
 Blur {
  channels rgba
  name Blur5
 }
 Merge2 {
  inputs 2
  name Merge6
 }
push $N15c50830
 Blur {
  channels rgba
  size 15.86005831
  name Blur6
 }
 Unpremult {
  name Unpremult5
 }
 Expression {
  expr3 a==0?0:1
  name Expression4
 }
 FilterErode {
  channels alpha
  size 7.930029155
  filter gaussian
  name FilterErode5
 }
 Premult {
  name Premult4
 }
 Blur {
  channels rgba
  name Blur7
 }
 Merge2 {
  inputs 2
  name Merge7
 }
push $N15c50830
 Blur {
  channels rgba
  size 30.97667638
  name Blur8
 }
 Unpremult {
  name Unpremult6
 }
 Expression {
  expr3 a==0?0:1
  name Expression5
 }
 FilterErode {
  channels alpha
  size 15.48833819
  filter gaussian
  name FilterErode6
 }
 Premult {
  name Premult5
 }
 Blur {
  channels rgba
  name Blur9
 }
 Merge2 {
  inputs 2
  name Merge8
 }
push $N15c50830
 Blur {
  channels rgba
  size 53.52769679
  name Blur10
 }
 Unpremult {
  name Unpremult7
 }
 Expression {
  expr3 a==0?0:1
  name Expression6
 }
 FilterErode {
  channels alpha
  size 26.7638484
  filter gaussian
  name FilterErode7
 }
 Premult {
  name Premult6
 }
 Blur {
  channels rgba
  name Blur11
 }
 Merge2 {
  inputs 2
  name Merge9
 }
push $N15c50830
 Blur {
  channels rgba
  size 85
  name Blur12
 }
 Unpremult {
  name Unpremult8
 }
 Expression {
  expr3 a==0?0:1
  name Expression7
 }
 FilterErode {
  channels alpha
  size 42.5
  filter gaussian
  name FilterErode8
 }
 Premult {
  name Premult7
 }
 Blur {
  channels rgba
  name Blur13
 }
 Merge2 {
  inputs 2
  name Merge10
 }
 Unpremult {
  name Unpremult1
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 966
 }
 Dot {
  name Dot11
  xpos 258
  ypos 1020
 }
set N15ac3020 [stack 0]
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  mix {{matteOutput==0?1:0 i}}
  name Copy2
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1068
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  mix {{matteOutput==1?1:0}}
  name Copy1
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1173
 }
 Dot {
  name Dot8
  xpos 258
  ypos 1227
 }
set N15ae4da0 [stack 0]
 Dot {
  name Dot9
  xpos 453
  ypos 1227
 }
 Expression {
  expr3 a<=0.000001?0:1
  name Expression12
  note_font "Bitstream Vera Sans"
  xpos 419
  ypos 1261
 }
 Dot {
  name Dot10
  xpos 453
  ypos 1303
 }
push $N15ac3020
 Dot {
  name Dot13
  xpos 521
  ypos 1020
 }
 Dot {
  name Dot12
  xpos 521
  ypos 1205
 }
push $N15d91d20
 Merge2 {
  inputs 2
  operation difference
  bbox B
  name Merge14
  xpos 563
  ypos 1201
 }
 Keyer {
  operation "luminance key"
  range {0 1e-05 1 1}
  name Keyer1
  xpos 563
  ypos 1243
 }
 Merge2 {
  inputs 2
  operation mask
  bbox B
  name Merge15
  xpos 563
  ypos 1299
 }
 Dot {
  name Dot14
  xpos 597
  ypos 1341
 }
push $N15ae4da0
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  mix {{matteOutput==4?1:0 i}}
  name Copy3
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1331
 }
set N1593c840 [stack 0]
 Expression {
  expr3 a<=0.000001?0:1
  mix {{matteOutput==3?1:0}}
  name Expression8
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1418
 }
push $N15d91d20
 Merge2 {
  inputs 2
  operation copy
  bbox B
  name Merge4
  xpos 932
  ypos 1418
 }
 Output {
  name Output1
  note_font "Bitstream Vera Sans"
  xpos 932
  ypos 1579
 }
push $N15d91d20
push $N1593c840
 Viewer {
  inputs 2
  input_process false
  name Viewer1
  xpos 336
  ypos 1225
 }
end_group
StickyNote {
 inputs 0
 name StickyNote19
 label "overall erode vs properly determining core area"
 note_font_size 20
 selected true
 xpos -203
 ypos 9944
}
StickyNote {
 inputs 0
 name StickyNote21
 label "alternative method to determine core matte"
 note_font_size 20
 selected true
 xpos 1049
 ypos 9700
}
StickyNote {
 inputs 0
 name StickyNote20
 label "overall erode vs properly determining core area"
 note_font_size 20
 selected true
 xpos 1798
 ypos 9464
}
push $cut_paste_input
RotoPaint {
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44700000 x44070000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {cubiccurve Brush2 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448fa000 x446a6000 1}
       {x448e6000 x44698000 1}
       {x448d9000 x4468c000 1}
       {x448cc000 x44682000 1}
       {x448bb000 x44674000 1}
       {x448b9000 x44670000 1}
       {x448bd000 x4466a000 1}
       {x448bd000 x44666000 1}
       {x448c0000 x44666000 1}
       {x448cc000 x44666000 1}
       {x448de000 x44664000 1}
       {x448e1000 x44664000 1}
       {x448ef000 x44660000 1}
       {x448fe000 x44660000 1}
       {x44904000 x44660000 1}}}
     {tx x447a4000 x448d8777 x44672666}
     {a r 0 b 0 ro 0 go 0 bo 0 ao 0 bs x41200000 h 1 bu 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 tt x41880000}}
    {cubiccurve Brush1 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a17000 x446ec000 1}
       {x449e5000 x446de000 1}
       {x449a4000 x446c8000 1}
       {x4492e000 x4469c000 1}
       {x448e3000 x4467e000 1}
       {x448d9000 x4467a000 1}}}
     {tx x447a4000 x4496c555 x446b1000}
     {a r 0 b 0 ro 0 go 0 bo 0 ao 0 bs x41200000 h 1 bu 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 tt x41880000}}}}}}
 toolbox {brush {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush r 0 b 0 bs 10 h 1 str 1 ssx 1 ssy 1 sf 1 sb 1 ltn 1001 ltm 1001 tt 17 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_paint_color {0 1 0 1}
 toolbar_brush_size 10
 toolbar_brush_hardness 1
 toolbar_lifetime_type single
 toolbar_lifetime_start 1001
 toolbar_lifetime_end 1001
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {960 540}
 color {0 1 0 1}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1001
 lifetime_end 1001
 motionblur_on true
 brush_size 10
 brush_spacing 0.05000000075
 brush_hardness 1
 source_black_outside true
 name RotoPaint2
 selected true
 xpos -4297
 ypos 7686
}
Group {
 inputs 0
 name Test_Shape
 tile_color 0xffff
 note_font "Bitstream Vera Sans Bold"
 selected true
 xpos -33743
 ypos 6404
 postage_stamp true
 addUserKnob {20 User}
 addUserKnob {7 thickness l Thickness R 0 5}
 thickness 2
}
 Radial {
  inputs 0
  area {180 150 1740 920}
  softness {{parent.thickness/100}}
  name Radial2
  selected true
  xpos -584
  ypos 503
 }
 Dot {
  name Dot9
  xpos -550
  ypos 573
 }
set N158aacb0 [stack 0]
 Dot {
  name Dot10
  xpos -550
  ypos 645
 }
push $N158aacb0
 Invert {
  name Invert4
  xpos -730
  ypos 564
 }
 Constant {
  inputs 0
  channels rgb
  color 0.6
  format "1920 1080 0 0 1920 1080 1 HD_1080"
  name Constant3
  xpos -1053
  ypos 405
 }
 Shuffle2 {
  fromInput1 {{0} B}
  fromInput2 {{0} B}
  mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 white -1 -1 rgba.alpha 0 3"
  name Shuffle6
  xpos -1053
  ypos 515
 }
 Dot {
  name Dot11
  xpos -1019
  ypos 573
 }
 CheckerBoard2 {
  inputs 0
  format "1920 1080 0 0 1920 1080 1 HD_1080"
  boxsize 32
  centerlinewidth 0
  name CheckerBoard2
  xpos -742
  ypos 303
 }
 ColorBars {
  inputs 0
  format "1920 1080 0 0 1920 1080 1 HD_1080"
  PAL true
  name ColorBars3
  xpos -888
  ypos 197
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge3
  xpos -888
  ypos 327
 }
 Shuffle2 {
  fromInput1 {{0} B}
  fromInput2 {{0} B}
  mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 white -1 -1 rgba.alpha 0 3"
  name Shuffle10
  xpos -888
  ypos 388
 }
 Merge2 {
  inputs 2+1
  name Merge11
  xpos -888
  ypos 570
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy2
  xpos -888
  ypos 636
 }
 Premult {
  name Premult9
  xpos -888
  ypos 713
 }
 Output {
  name Output1
  xpos -888
  ypos 813
 }
end_group
Dot {
 name Dot18
 selected true
 xpos -33709
 ypos 6540
}
set N157330f0 [stack 0]
Dot {
 name Dot20
 selected true
 xpos -33473
 ypos 6540
}
set N15737f10 [stack 0]
Dot {
 name Dot25
 selected true
 xpos -31403
 ypos 6540
}
set N1573cf10 [stack 0]
Dot {
 name Dot33
 selected true
 xpos -29618
 ypos 6540
}
set N15741f10 [stack 0]
Dot {
 name Dot11
 selected true
 xpos -26886
 ypos 6540
}
set N15746f10 [stack 0]
Dot {
 name Dot58
 selected true
 xpos -24873
 ypos 6540
}
set N1574bf10 [stack 0]
Dot {
 name Dot17
 selected true
 xpos -23089
 ypos 6540
}
set N15750f10 [stack 0]
Dot {
 name Dot40
 selected true
 xpos -21290
 ypos 6540
}
set N15755f10 [stack 0]
Dot {
 name Dot78
 selected true
 xpos -19245
 ypos 6540
}
set N1575af10 [stack 0]
Dot {
 name Dot77
 selected true
 xpos -16890
 ypos 6540
}
set N1575ff10 [stack 0]
Dot {
 name Dot61
 selected true
 xpos -14574
 ypos 6540
}
set N15764f10 [stack 0]
Dot {
 name Dot73
 selected true
 xpos -12435
 ypos 6537
}
set N15769f10 [stack 0]
Dot {
 name Dot9
 selected true
 xpos -10508
 ypos 6537
}
set N1576ef10 [stack 0]
Dot {
 name Dot86
 selected true
 xpos -8084
 ypos 6537
}
set N15773f10 [stack 0]
Dot {
 name Dot67
 selected true
 xpos -6279
 ypos 6537
}
set N15778f10 [stack 0]
Dot {
 name Dot92
 selected true
 xpos -4126
 ypos 6537
}
Unpremult {
 name Unpremult9
 selected true
 xpos -4160
 ypos 6734
}
RotoPaint {
 output rgb
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44700000 x44070000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {cubiccurve Smear31 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44845333 x4463e666 1}
       {x44845333 x4465e666 1}
       {x44841333 x4466d99a 1}}}
     {tx x447a4000 x44843ddd x44658ccd}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear30 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4484599a x4463599a 1}
       {x44848000 x4465599a 1}
       {x44849333 x44670000 1}
       {x4484799a x4467599a 1}
       {x4484599a x4466a666 1}}}
     {tx x447a4000 x44847333 x4465f0a5}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear29 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44849333 x4462cccd 1}
       {x44847333 x44644000 1}
       {x44847333 x44664000 1}
       {x44846ccd x4467199a 1}
       {x44844ccd x44664ccd 1}}}
     {tx x447a4000 x448470a3 x4465570b}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear28 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4484f99a x44633333 1}
       {x44850666 x4464599a 1}
       {x4484f99a x44668000 1}
       {x4484b333 x4467c000 1}
       {x4484a000 x4466f333 1}}}
     {tx x447a4000 x4484dc29 x4465c000}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear27 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4484e666 x44638000 1}
       {x44851333 x44653333 1}
       {x4485199a x4466cccd 1}
       {x44850000 x44680000 1}
       {x4484f99a x44670ccd 1}}}
     {tx x447a4000 x4485028e x44661c2a}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear26 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44858ccd x44633333 1}
       {x44858ccd x4463999a 1}
       {x44858ccd x4466c000 1}
       {x44855333 x44686666 1}
       {x44852ccd x44672666 1}}}
     {tx x447a4000 x44856e15 x4465d1eb}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear25 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4486199a x44630ccd 1}
       {x44860ccd x44644ccd 1}
       {x44862ccd x44660ccd 1}
       {x4486199a x4468199a 1}
       {x4485f333 x44677333 1}
       {x4485e000 x4466a666 1}}}
     {tx x447a4000 x44860aab x4465eeef}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear24 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4486599a x4462cccd 1}
       {x44869333 x44648ccd 1}
       {x4486a666 x44670000 1}
       {x44866ccd x44682666 1}
       {x44864000 x4466d99a 1}}}
     {tx x447a4000 x44867333 x4465deb8}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear23 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4486599a x4462c000 1}
       {x44868000 x4463c000 1}
       {x4486accd x44656666 1}
       {x4486d99a x44670ccd 1}
       {x4486d99a x4467e666 1}
       {x4486a666 x4466999a 1}}}
     {tx x447a4000 x4486a555 x44659333}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear22 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44870666 x44627333 1}
       {x44872000 x44652666 1}
       {x44872ccd x4466b333 1}
       {x44870ccd x44674ccd 1}
       {x4486e000 x44668000 1}}}
     {tx x447a4000 x44870ccd x44659eb8}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear21 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44878666 x44620000 1}
       {x44878666 x4462cccd 1}
       {x44878666 x4464599a 1}
       {x44879333 x44660ccd 1}
       {x44878000 x44668000 1}
       {x44875333 x4465999a 1}}}
     {tx x447a4000 x44877eef x44648ccc}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear20 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4487f333 x4461999a 1}
       {x4487d99a x4463999a 1}
       {x4487d99a x4465599a 1}
       {x4487b99a x4466a666 1}
       {x44878ccd x4466199a 1}}}
     {tx x447a4000 x4487c8f6 x4464a8f6}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear19 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44886000 x44622666 1}
       {x44885333 x4462d99a 1}
       {x44885333 x44644000 1}
       {x44885333 x44660000 1}
       {x44884666 x44666666 1}
       {x44882000 x44667333 1}}}
     {tx x447a4000 x44884aab x4464aeef}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear18 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44887333 x44618000 1}
       {x44886ccd x44634000 1}
       {x44886ccd x4464b333 1}
       {x44884ccd x4465a666 1}
       {x44884000 x4465599a 1}}}
     {tx x447a4000 x44885eb8 x4464170a}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear17 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4488e666 x4461b333 1}
       {x4488cccd x4462a666 1}
       {x4488d99a x4464599a 1}
       {x4488cccd x4465d99a 1}
       {x44888000 x44650000 1}}}
     {tx x447a4000 x4488c51f x4463e8f5}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear16 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44895333 x4461b333 1}
       {x44894000 x44620000 1}
       {x44892ccd x4463a666 1}
       {x44894000 x44653333 1}
       {x44892ccd x44660ccd 1}
       {x4489199a x4465c000 1}}}
     {tx x447a4000 x44893667 x44640eef}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear15 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44899333 x44623333 1}
       {x4489accd x4463e666 1}
       {x4489cccd x4465599a 1}
       {x4489b99a x44666666 1}
       {x44898666 x44658000 1}}}
     {tx x447a4000 x4489a8f6 x4464ab85}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear14 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4489eccd x4461c000 1}
       {x4489eccd x44620ccd 1}
       {x448a1333 x44643333 1}
       {x448a1333 x44656666 1}
       {x4489f99a x44660000 1}
       {x4489cccd x44654ccd 1}}}
     {tx x447a4000 x4489f666 x44641ddf}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear13 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448a6666 x4461c000 1}
       {x448a6000 x4462cccd 1}
       {x448a8000 x44640000 1}
       {x448a8ccd x44656666 1}
       {x448a6000 x44654000 1}
       {x448a4000 x4464b333 1}}}
     {tx x447a4000 x448a6889 x4463fbbb}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear12 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448ab99a x44618000 1}
       {x448aaccd x44624ccd 1}
       {x448ab333 x44632666 1}
       {x448ab99a x4464a666 1}
       {x448ab99a x44650ccd 1}}}
     {tx x447a4000 x448ab5c3 x4463547b}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear11 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448ab99a x4461599a 1}
       {x448ab99a x4461a666 1}
       {x448ab99a x4461f333 1}
       {x448acccd x4462c000 1}
       {x448aeccd x44640000 1}
       {x448ae000 x44653333 1}
       {x448ac666 x44656666 1}
       {x448a8ccd x4464cccd 1}}}
     {tx x447a4000 x448ac334 x44636333}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear10 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448f6ccd x44610000 1}
       {x448fa666 x44617333 1}
       {x4490a000 x4462c000 1}
       {x44912ccd x4463b333 1}
       {x44916666 x44646666 1}
       {x44918666 x44646666 1}}}
     {tx x447a4000 x4490a223 x4462f334}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear9 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448f3333 x4460d99a 1}
       {x448f599a x44617333 1}
       {x448fc000 x44626666 1}
       {x44907333 x44634ccd 1}
       {x44911333 x44642666 1}}}
     {tx x447a4000 x448ff70a x44626e13}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear8 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448cd99a x4460d99a 1}
       {x448cc666 x44610ccd 1}
       {x448c6000 x4461f333 1}
       {x448bb333 x4463599a 1}
       {x448b6000 x44642666 1}
       {x448b399a x44646666 1}}}
     {tx x447a4000 x448c0ccd x4462a001}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear7 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448ca000 x4461e666 1}
       {x448c8ccd x4462199a 1}
       {x448c4ccd x44628ccd 1}
       {x448c0666 x44630000 1}
       {x448bd333 x44637333 1}
       {x448b8666 x4463cccd 1}
       {x448b6000 x4463f333 1}
       {x448b3333 x4464199a 1}}}
     {tx x447a4000 x448bed99 x44631b33}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear6 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448fd333 x445fe666 1}
       {x448fd333 x4460599a 1}
       {x448fd333 x4460f333 1}
       {x448fc666 x4461c000 1}
       {x448fc666 x4462c000 1}
       {x448fc666 x44638000 1}
       {x448fc666 x44646666 1}
       {x448fc666 x4464b333 1}}}
     {tx x447a4000 x448fcb34 x44624999}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear5 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448ef333 x44600ccd 1}
       {x448ef333 x4460a666 1}
       {x448ef333 x44613333 1}
       {x448ef333 x44624ccd 1}
       {x448ee666 x44632666 1}}}
     {tx x447a4000 x448ef0a3 x44617852}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear4 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448e599a x4460599a 1}
       {x448e5333 x4461cccd 1}
       {x448e4000 x44628ccd 1}
       {x448e3333 x44632666 1}
       {x448e3333 x44640000 1}}}
     {tx x447a4000 x448e43d7 x44625eb8}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear3 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448db333 x44608000 1}
       {x448db333 x44610ccd 1}
       {x448db333 x4461cccd 1}
       {x448db333 x44623333 1}
       {x448da000 x44633333 1}
       {x448d9333 x4463a666 1}
       {x448d9333 x4463f333 1}}}
     {tx x447a4000 x448da751 x446255f1}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear2 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448ceccd x4460cccd 1}
       {x448ceccd x44610ccd 1}
       {x448cf333 x44624000 1}
       {x448cf333 x4463599a 1}
       {x448cf333 x44648ccd 1}
       {x448cf333 x4464cccd 1}}}
     {tx x447a4000 x448cf111 x4462cccd}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear1 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448c6666 x44604000 1}
       {x448c6000 x44608000 1}
       {x448c6000 x4460d99a 1}
       {x448c6000 x44613333 1}
       {x448c6000 x4461a666 1}
       {x448c6000 x4462199a 1}
       {x448c6000 x4462b333 1}
       {x448c5333 x44632666 1}
       {x448c4ccd x4463cccd 1}
       {x448c4ccd x44646666 1}
       {x448c5333 x4464b333 1}}}
     {tx x447a4000 x448c5ac4 x44624ccc}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}}}}}
 toolbox {smear {
  { selectAll bm 4 src 1 str 1 ssx 1 ssy 1 sf 1 ep1 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear bm 4 src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 ltn 1001 ltm 1001 tt 25 }
} }
 toolbar_blending_mode min
 toolbar_brush_hardness 0.200000003
 toolbar_lifetime_type single
 toolbar_lifetime_start 1001
 toolbar_lifetime_end 1001
 toolbar_effect_parameter1 1
 toolbar_paint_source fg
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {960 540}
 colorOverlay {0 0 0 0}
 paint_source foreground
 blending_mode min
 lifetime_type "all frames"
 lifetime_start 1001
 lifetime_end 1001
 motionblur_on true
 brush_type smear
 brush_spacing 0.05000000075
 brush_hardness 0.200000003
 effect_parameter1 1
 source_black_outside true
 name RotoPaint1
 selected true
 xpos -4160
 ypos 6793
}
Premult {
 name Premult29
 selected true
 xpos -4160
 ypos 6858
}
Merge2 {
 inputs 2
 name Merge1
 selected true
 xpos -4160
 ypos 7686
}
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message "Smear (RotoPaint / Inpaint)"
 old_message {{83 109 101 97 114 32 40 82 111 116 111 80 97 105 110 116 32 47 32 73 110 112 97 105 110 116 41}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 11 40 12 40 13 40 14 40 15 40 16 40 17 40 18 40 19 40 20 40 21 40 22 40 23 40 24 40 25 40 26 40}
   }
 cursor_position 1
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text16
 selected true
 xpos -4160
 ypos 7753
}
Dot {
 name Dot93
 selected true
 xpos -4126
 ypos 7836
}
push $N15778f10
Dot {
 name Dot176
 tile_color 0xff0000ff
 label "Expects an Alpha input to drive the expand"
 note_font "Bitstream Vera Sans Bold"
 note_font_color 0xff0000ff
 selected true
 xpos -6279
 ypos 6612
}
Dot {
 name Dot95
 selected true
 xpos -6279
 ypos 6676
}
set N15487870 [stack 0]
Dot {
 name Dot96
 selected true
 xpos -6102
 ypos 6676
}
Dot {
 name Dot94
 selected true
 xpos -6102
 ypos 6950
}
push $N15487870
FilterErode {
 size {8 4}
 name FilterErode4
 selected true
 xpos -6313
 ypos 6730
 disable true
}
Group {
 name Edge_Expand3
 help "Expand edges to fix fringing on keys.\nUse after a premult is preferred, but can also help on some other inputs."
 knobChanged "\nnode = nuke.thisNode()\nknob = nuke.thisKnob()\n\nif knob.name() in \['method']:\n    if knob.value() == 'Dilate':\n        node\['size_extend'].clearFlag(nuke.INVISIBLE)\n        node\['samples'].clearFlag(nuke.INVISIBLE)\n        node\['size_warp'].setFlag(nuke.INVISIBLE)\n        node\['warp_amount'].setFlag(nuke.INVISIBLE)\n        node\['warp_normal'].setFlag(nuke.INVISIBLE)\n        node\['size_distort'].setFlag(nuke.INVISIBLE)\n        node\['distort_amount'].setFlag(nuke.INVISIBLE)\n        node\['blur'].clearFlag(nuke.INVISIBLE)\n    elif knob.value() == 'Extend':\n        node\['size_extend'].clearFlag(nuke.INVISIBLE)\n        node\['samples'].clearFlag(nuke.INVISIBLE)\n        node\['size_warp'].setFlag(nuke.INVISIBLE)\n        node\['warp_amount'].setFlag(nuke.INVISIBLE)\n        node\['warp_normal'].setFlag(nuke.INVISIBLE)\n        node\['size_distort'].setFlag(nuke.INVISIBLE)\n        node\['distort_amount'].setFlag(nuke.INVISIBLE)\n        node\['blur'].clearFlag(nuke.INVISIBLE)\n    elif knob.value() == 'Warp':\n        node\['size_extend'].setFlag(nuke.INVISIBLE)\n        node\['samples'].setFlag(nuke.INVISIBLE)\n        node\['size_warp'].clearFlag(nuke.INVISIBLE)\n        node\['warp_amount'].clearFlag(nuke.INVISIBLE)\n        node\['warp_normal'].clearFlag(nuke.INVISIBLE)\n        node\['size_distort'].setFlag(nuke.INVISIBLE)\n        node\['distort_amount'].setFlag(nuke.INVISIBLE)\n        node\['blur'].clearFlag(nuke.INVISIBLE)\n    elif knob.value() == 'Distort':\n        node\['size_extend'].setFlag(nuke.INVISIBLE)\n        node\['samples'].setFlag(nuke.INVISIBLE)\n        node\['size_warp'].setFlag(nuke.INVISIBLE)\n        node\['warp_amount'].setFlag(nuke.INVISIBLE)\n        node\['warp_normal'].setFlag(nuke.INVISIBLE)\n        node\['size_distort'].clearFlag(nuke.INVISIBLE)\n        node\['distort_amount'].clearFlag(nuke.INVISIBLE)\n        node\['blur'].setFlag(nuke.INVISIBLE)\n\nelif knob.name() in \['samples']:\n    if knob.value() > 10:\n        knob.setValue(10)\n    elif knob.value() < 1:\n        knob.setValue(1)\n"
 tile_color 0xef7033ff
 label "(\[value method])"
 selected true
 xpos -6313
 ypos 6847
 addUserKnob {20 User}
 addUserKnob {4 method l Method t "Dilate: Multiple iterations of Blur and Unpremult of the same input.\nExtend: Recursive iterations of Blur and Unpremult.\nWarp: A vector based method to stretch the edges.\nDistort: A wide distortion which \"grows\" the subject into its matte." M {Dilate Extend Warp Distort}}
 addUserKnob {6 in_premult l "Input is Premultiplied" -STARTLINE}
 in_premult true
 addUserKnob {26 ""}
 addUserKnob {7 erode t "Erodes the original alpha to get rid of edges." R 0 15}
 erode 6
 addUserKnob {14 edgeblur l "edge blur" t "Use this to soften the transition between the extended area and the core." R 0 100}
 addUserKnob {26 ""}
 addUserKnob {14 size_extend l size t "Controls the size of the expansion." R 0 100}
 size_extend 10
 addUserKnob {3 samples t "Controls the amount of samples for the Dilate or Extend Methods. (min:1 max:10)"}
 samples 10
 addUserKnob {14 size_warp l size t "Controls the size of the Warp" +INVISIBLE R 0 100}
 size_warp 7.5
 addUserKnob {7 warp_amount l "warp amount" +INVISIBLE R 0.5 1}
 warp_amount 1
 addUserKnob {7 warp_normal l "warp normal" t "Rotates the angle of the vector extension." +INVISIBLE R -90 90}
 warp_normal 18
 addUserKnob {14 size_distort l size t "Controls the size of the distort." +INVISIBLE R 0 100}
 size_distort 4.6
 addUserKnob {7 distort_amount l "distort amount" +INVISIBLE R 0.5 1}
 distort_amount 1
 addUserKnob {14 blur l "blur expansion" R 0 100}
 blur 2.8
 addUserKnob {26 ""}
 addUserKnob {7 mix_luma l "mix luma"}
 mix_luma 1
 addUserKnob {7 mix_chroma l "mix chroma"}
 mix_chroma 1
 addUserKnob {22 shuffle_edge l "shuffle edge matte" T "node = nuke.thisNode()\nfullName = 'root.' + node.fullName()\nparent_group = fullName.rsplit('.', 1)\[0]\nwith nuke.toNode(parent_group):\n    shuffle = nuke.createNode(\"Shuffle\", 'in edge red alpha green alpha blue alpha label \"Edge Matte\"', inpanel=False)\n    shuffle.setXpos(node.xpos() + 100)\n    shuffle.setYpos(node.ypos())\n    shuffle.setInput(0, node)\n\n" +STARTLINE}
 addUserKnob {6 premult l "premult output" t "Check this box to get the final result of the expension with the original matte.\nUncheck this box to see the result of the expension with a new expended alpha." -STARTLINE}
 premult true
 addUserKnob {26 spin_copyright_div l "" +STARTLINE}
 addUserKnob {26 spin_copyright l "" t "© <b>SPIN<span style=\"color:#b32026\">VFX</span></b>\nEdge_Expand\nVersion 1.0\n2018" +STARTLINE T "<span style=\"color:#aaa;font-family:sans-serif;font-size:8pt\"><b>SPIN<span style=\"color:#b32026\">VFX</span></b> - Version 1.0 - 2018 - <a href=\"https://github.com/SpinVFX/spin_nuke_gizmos/\" style=\"color:#aaa\">Github Page</a></span>"}
 addUserKnob {1 Scriplet_Info +DISABLED +INVISIBLE}
 Scriplet_Info "user Toolsets edgeExpand"
}
 Input {
  inputs 0
  name Inputmask
  xpos -3
  ypos 1325
  number 1
 }
 Input {
  inputs 0
  name Input
  xpos -175
  ypos -347
 }
 Dot {
  name Dot13
  tile_color 0xcccccc00
  xpos -141
  ypos -279
 }
set N154bb310 [stack 0]
 Unpremult {
  name Unpremult2
  xpos -175
  ypos -226
  disable {{!parent.in_premult}}
 }
set N154c0250 [stack 0]
 Erode {
  size {{parent.erode}}
  name Erode1
  xpos -175
  ypos -136
 }
set N154c8980 [stack 0]
 Dot {
  name Dot1
  tile_color 0xcc804e00
  xpos -259
  ypos -127
 }
 Erode {
  size {{parent.edgeblur} {parent.edgeblur}}
  blur 1
  name Erode2
  xpos -293
  ypos -94
 }
push $N154c8980
 ChannelMerge {
  inputs 2
  operation min
  name ChannelMerge1
  xpos -175
  ypos -100
 }
 Dot {
  name Dot16
  tile_color 0x4b5ec600
  xpos -141
  ypos -22
 }
set N154f5610 [stack 0]
push $N154bb310
 Dot {
  name Dot15
  tile_color 0xcccccc00
  xpos -438
  ypos -279
 }
set N154fa340 [stack 0]
 ChannelMerge {
  inputs 2
  operation from
  name ChannelMerge2
  xpos -472
  ypos -37
 }
push $N154fa340
 Dot {
  name Dot7
  tile_color 0xcccccc00
  xpos -605
  ypos -279
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 edge.alpha
  bbox B
  name Copy5
  xpos -639
  ypos -32
 }
 Dot {
  name Dot20
  tile_color 0x9e3c6300
  xpos -605
  ypos 641
 }
set N1531f5f0 [stack 0]
 Dot {
  name Dot23
  tile_color 0x9e3c6300
  xpos -612
  ypos 1151
 }
set N15324340 [stack 0]
 Dot {
  name Dot24
  tile_color 0x9e3c6300
  xpos -612
  ypos 1329
 }
set N153292e0 [stack 0]
push $N15324340
push $N154f5610
 Premult {
  name Premult2
  xpos -175
  ypos 51
 }
 Dot {
  name Dot2
  tile_color 0xcccccc00
  xpos -141
  ypos 108
 }
set N15336730 [stack 0]
 Dot {
  name Dot11
  tile_color 0xcccccc00
  xpos -302
  ypos 108
 }
 Dot {
  name Dot12
  tile_color 0xcccccc00
  xpos -302
  ypos 561
 }
push $N154f5610
 Dot {
  name Dot14
  tile_color 0x4b5ec600
  xpos 253
  ypos -22
 }
 Dot {
  name Dot6
  tile_color 0x4b5ec600
  xpos 253
  ypos 92
 }
set N1534a4e0 [stack 0]
push $N154c0250
 Dot {
  name Dot8
  tile_color 0xcccccc00
  xpos 121
  ypos -222
 }
set N1534f430 [stack 0]
 Dot {
  name Dot5
  tile_color 0xcccccc00
  xpos 367
  ypos -222
 }
 Group {
  inputs 2
  name Distort
  xpos 333
  ypos 153
  addUserKnob {20 User}
  addUserKnob {14 size R 0 100}
  size {{parent.size_distort} {parent.size_distort}}
  addUserKnob {7 distort}
  distort {{parent.distort_amount}}
 }
  Input {
   inputs 0
   name Inputcontrol_mask
   xpos 236
   ypos -303
   number 1
  }
  Shuffle {
   red alpha
   green alpha
   blue alpha
   name Shuffle1
   label "in \[value in]-->out \[value out]"
   xpos 235
   ypos -248
  }
set N153680e0 [stack 0]
  Blur {
   size {{parent.size*10} {parent.size*10}}
   quality {{int(parent.size*8)}}
   name Blur2
   label "size \[value size]"
   xpos 360
   ypos -121
  }
push $N153680e0
  Blur {
   size {{parent.size} {parent.size}}
   quality 50
   name Blur1
   xpos 235
   ypos -117
  }
  Merge2 {
   inputs 2
   operation multiply
   bbox B
   name Merge2
   xpos 234
   ypos 5
  }
  Grade {
   gamma 0.415
   name Grade5
   xpos 234
   ypos 57
  }
set N153a5b70 [stack 0]
  Invert {
   name Invert1
   xpos 61
   ypos 51
  }
  Multiply {
   value {{parent.size*2}}
   name Multiply1
   xpos 61
   ypos 178
  }
  Dot {
   name Dot1
   tile_color 0x7aa9ff00
   xpos 95
   ypos 441
  }
push $N153a5b70
  Dot {
   name Dot2
   tile_color 0x7aa9ff00
   xpos 269
   ypos 123
  }
set N153d3540 [stack 0]
  Matrix {
   matrix {
       {1 0 -1}
       {2 0 -2}
       {1 0 -1}
     }
   name Matrix1
   xpos 235
   ypos 204
  }
push $N153d3540
  Dot {
   name Dot3
   tile_color 0x7aa9ff00
   xpos 379
   ypos 123
  }
  Matrix {
   channels rgb
   matrix {
       {-1 -2 -1}
       {0 0 0}
       {1 2 1}
     }
   name Matrix2
   xpos 345
   ypos 205
  }
  Dot {
   name Dot4
   xpos 379
   ypos 260
  }
  ShuffleCopy {
   inputs 2
   red red
   blue black
   alpha black
   name ShuffleCopy1
   xpos 236
   ypos 256
  }
  Expression {
   temp_name0 mag
   temp_expr0 sqrt(pow(r,2)+pow(g,2)+pow(b,2))
   expr0 mag!=0?r/mag:0
   expr1 mag!=0?g/mag:0
   expr2 mag!=0?b/mag:0
   name Normalize
   xpos 236
   ypos 321
  }
  Multiply {
   value -1
   name Multiply2
   xpos 236
   ypos 358
  }
  Merge2 {
   inputs 2
   operation multiply
   bbox B
   name Merge1
   xpos 236
   ypos 437
  }
  Input {
   inputs 0
   name Input
   xpos 536
   ypos -112
  }
  Copy {
   inputs 2
   from0 rgba.red
   to0 forward.u
   from1 rgba.green
   to1 forward.v
   name Copy1
   selected true
   xpos 536
   ypos 425
  }
  IDistort {
   uv forward
   uv_scale {{parent.distort}}
   name IDistort1
   xpos 536
   ypos 497
  }
  Output {
   name Output1
   xpos 536
   ypos 566
  }
 end_group
 Dot {
  name Dot4
  tile_color 0xcccccc00
  xpos 367
  ypos 217
 }
push $N1534a4e0
push $N1534f430
 Group {
  inputs 2
  name Warp
  xpos 87
  ypos 154
  addUserKnob {20 User}
  addUserKnob {14 size R 0 100}
  size {{parent.size_warp} {parent.size_warp}}
  addUserKnob {7 distort}
  distort {{parent.warp_amount}}
  addUserKnob {7 normal R -90 90}
  normal {{parent.warp_normal}}
 }
  Input {
   inputs 0
   name Inputcontrol_mask
   xpos 235
   ypos -176
   number 1
  }
  Shuffle {
   red alpha
   green alpha
   blue alpha
   name Shuffle1
   xpos 235
   ypos -150
  }
  Clamp {
   name Clamp1
   xpos 235
   ypos -78
  }
  Blur {
   size {{parent.size/parent.distort} {parent.size/parent.distort}}
   quality 50
   name Blur1
   label "size \[value size]"
   xpos 235
   ypos -27
  }
  Grade {
   whitepoint 0.5
   white_clamp true
   name Grade2
   xpos 235
   ypos 81
  }
set N1529b290 [stack 0]
  Invert {
   name Invert1
   xpos 61
   ypos 75
  }
  Multiply {
   value {{parent.size}}
   name Multiply1
   xpos 61
   ypos 113
  }
  Dot {
   name Dot1
   tile_color 0x7aa9ff00
   xpos 95
   ypos 441
  }
push $N1529b290
  Dot {
   name Dot2
   tile_color 0x7aa9ff00
   xpos 269
   ypos 123
  }
set N152c8c10 [stack 0]
  Matrix {
   matrix {
       {1 0 -1}
       {2 0 -2}
       {1 0 -1}
     }
   name Matrix1
   xpos 235
   ypos 206
  }
push $N152c8c10
  Dot {
   name Dot3
   tile_color 0x7aa9ff00
   xpos 379
   ypos 123
  }
  Matrix {
   matrix {
       {-1 -2 -1}
       {0 0 0}
       {1 2 1}
     }
   name Matrix2
   xpos 345
   ypos 205
  }
  Dot {
   name Dot4
   xpos 379
   ypos 260
  }
  ShuffleCopy {
   inputs 2
   red red
   blue black
   alpha black
   name ShuffleCopy1
   xpos 236
   ypos 256
  }
  Expression {
   temp_name0 mag
   temp_expr0 sqrt(pow(r,2)+pow(g,2)+pow(b,2))
   expr0 mag!=0?r/mag:0
   expr1 mag!=0?g/mag:0
   expr2 mag!=0?b/mag:0
   name Normalize
   selected true
   xpos 236
   ypos 301
  }
  Multiply {
   value -1
   name Multiply2
   xpos 236
   ypos 336
  }
  Group {
   name Vectors_Rotation
   help "Edit the direction of motion vectors"
   xpos 236
   ypos 386
   addUserKnob {20 VecRot l "Vectors Rotation"}
   addUserKnob {7 rotation t "Rotates the vectors direction" R -90 90}
   rotation {{parent.normal}}
  }
   Input {
    inputs 0
    name Input
    xpos -303
    ypos 144
   }
   Expression {
    temp_name0 angleRad
    temp_expr0 radians(parent.rotation)
    expr0 "r * cos(angleRad) - g * sin(angleRad)"
    expr1 "r * sin(angleRad) + g * cos(angleRad)"
    name Direction
    selected true
    xpos -303
    ypos 217
   }
   Output {
    name Output1
    xpos -303
    ypos 291
   }
  end_group
  Merge2 {
   inputs 2
   operation multiply
   bbox B
   name Merge1
   xpos 236
   ypos 437
  }
set N1513b870 [stack 0]
  Input {
   inputs 0
   name Input
   xpos 536
   ypos -176
  }
  Copy {
   inputs 2
   from0 rgba.red
   to0 forward.u
   from1 rgba.green
   to1 forward.v
   name Copy1
   xpos 536
   ypos 425
  }
  IDistort {
   uv forward
   uv_scale {{parent.distort}}
   name IDistort1
   xpos 536
   ypos 497
  }
  Output {
   name Output1
   xpos 536
   ypos 607
  }
push $N1513b870
  Viewer {
   frame_range 1001-1264
   viewerProcess "Show_LUT_CDL (rec709)"
   name Viewer1
   xpos 395
   ypos 294
  }
 end_group
 Dot {
  name Dot9
  tile_color 0xcccccc00
  xpos 121
  ypos 220
 }
push $N15336730
 Dot {
  name Dot3
  tile_color 0xcccccc00
  xpos -9
  ypos 108
 }
 Group {
  name Recursive_Extend
  xpos -43
  ypos 156
  addUserKnob {20 User}
  addUserKnob {14 size R 0 100}
  size {{parent.size_extend} {parent.size_extend}}
  addUserKnob {3 samples}
  samples {{parent.samples}}
  addUserKnob {26 ""}
  addUserKnob {7 threshold t "Used to eliminate ugly edges due to small precision error." R 0 0.001}
  threshold 0.0002
 }
  Input {
   inputs 0
   name Input1
   xpos 185
   ypos -5
  }
  Clamp {
   channels alpha
   name Clamp1
   xpos 185
   ypos 46
  }
  Dot {
   name Dot1
   tile_color 0x7aa9ff00
   xpos 219
   ypos 123
  }
set N15011b90 [stack 0]
  Dot {
   name Dot2
   tile_color 0x7aa9ff00
   xpos 396
   ypos 123
  }
  Blur {
   size {{parent.size/parent.samples} {parent.size/parent.samples}}
   name Blur1
   xpos 362
   ypos 189
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult1
   xpos 362
   ypos 225
  }
push $N15011b90
  Merge2 {
   inputs 2
   operation under
   name Merge1
   xpos 185
   ypos 225
  }
  Dot {
   name Dot4
   tile_color 0x4b5ec600
   xpos 219
   ypos 325
  }
set N15048670 [stack 0]
  Dot {
   name Dot5
   tile_color 0x4b5ec600
   xpos 396
   ypos 325
  }
  Blur {
   size {{parent.size/parent.samples} {parent.size/parent.samples}}
   name Blur2
   xpos 362
   ypos 386
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult2
   xpos 362
   ypos 422
  }
push $N15048670
  Merge2 {
   inputs 2
   operation under
   name Merge2
   xpos 185
   ypos 422
   disable {{parent.samples<2}}
  }
  Dot {
   name Dot6
   tile_color 0x4b5ec600
   xpos 219
   ypos 527
  }
set N1507f370 [stack 0]
  Dot {
   name Dot7
   tile_color 0x4b5ec600
   xpos 396
   ypos 527
  }
  Blur {
   size {{parent.size/parent.samples} {parent.size/parent.samples}}
   name Blur3
   xpos 362
   ypos 588
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult3
   xpos 362
   ypos 624
  }
push $N1507f370
  Merge2 {
   inputs 2
   operation under
   name Merge3
   xpos 185
   ypos 624
   disable {{parent.samples<3}}
  }
  Dot {
   name Dot8
   tile_color 0x4b5ec600
   xpos 219
   ypos 729
  }
set N150b6290 [stack 0]
  Dot {
   name Dot9
   tile_color 0x4b5ec600
   xpos 396
   ypos 729
  }
  Blur {
   size {{parent.size/parent.samples} {parent.size/parent.samples}}
   name Blur4
   xpos 362
   ypos 790
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult4
   xpos 362
   ypos 826
  }
push $N150b6290
  Merge2 {
   inputs 2
   operation under
   name Merge4
   xpos 185
   ypos 826
   disable {{parent.samples<4}}
  }
  Dot {
   name Dot10
   tile_color 0x4b5ec600
   xpos 219
   ypos 931
  }
set N150ed230 [stack 0]
  Dot {
   name Dot11
   tile_color 0x4b5ec600
   xpos 396
   ypos 931
  }
  Blur {
   size {{parent.size/parent.samples} {parent.size/parent.samples}}
   name Blur5
   xpos 362
   ypos 992
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult5
   xpos 362
   ypos 1028
  }
push $N150ed230
  Merge2 {
   inputs 2
   operation under
   name Merge5
   xpos 185
   ypos 1028
   disable {{parent.samples<5}}
  }
  Dot {
   name Dot12
   tile_color 0x4b5ec600
   xpos 219
   ypos 1133
  }
set N14f24180 [stack 0]
  Dot {
   name Dot13
   tile_color 0x4b5ec600
   xpos 396
   ypos 1133
  }
  Blur {
   size {{parent.size/parent.samples} {parent.size/parent.samples}}
   name Blur6
   xpos 362
   ypos 1194
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult6
   xpos 362
   ypos 1230
  }
push $N14f24180
  Merge2 {
   inputs 2
   operation under
   bbox B
   name Merge6
   xpos 185
   ypos 1230
   disable {{parent.samples<6}}
  }
  Dot {
   name Dot14
   tile_color 0x4b5ec600
   xpos 219
   ypos 1335
  }
set N14f5b070 [stack 0]
  Dot {
   name Dot15
   tile_color 0x4b5ec600
   xpos 396
   ypos 1335
  }
  Blur {
   size {{parent.size/parent.samples} {parent.size/parent.samples}}
   name Blur7
   xpos 362
   ypos 1396
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult7
   xpos 362
   ypos 1432
  }
push $N14f5b070
  Merge2 {
   inputs 2
   operation under
   name Merge7
   xpos 185
   ypos 1432
   disable {{parent.samples<7}}
  }
  Dot {
   name Dot16
   tile_color 0x4b5ec600
   xpos 219
   ypos 1537
  }
set N14f920e0 [stack 0]
  Dot {
   name Dot17
   tile_color 0x4b5ec600
   xpos 396
   ypos 1537
  }
  Blur {
   size {{parent.size/parent.samples} {parent.size/parent.samples}}
   name Blur8
   xpos 362
   ypos 1596
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult8
   xpos 362
   ypos 1634
  }
push $N14f920e0
  Merge2 {
   inputs 2
   operation under
   name Merge8
   xpos 185
   ypos 1634
   disable {{parent.samples<8}}
  }
  Dot {
   name Dot18
   tile_color 0x4b5ec600
   xpos 219
   ypos 1739
  }
set N14fc9000 [stack 0]
  Dot {
   name Dot19
   tile_color 0x4b5ec600
   xpos 396
   ypos 1739
  }
  Blur {
   size {{parent.size/parent.samples} {parent.size/parent.samples}}
   name Blur9
   xpos 362
   ypos 1798
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult9
   xpos 362
   ypos 1836
  }
push $N14fc9000
  Merge2 {
   inputs 2
   operation under
   name Merge9
   xpos 185
   ypos 1836
   disable {{parent.samples<9}}
  }
  Dot {
   name Dot20
   tile_color 0x4b5ec600
   xpos 219
   ypos 1946
  }
set N14dfff40 [stack 0]
  Dot {
   name Dot21
   tile_color 0x4b5ec600
   xpos 396
   ypos 1948
  }
  Blur {
   size {{parent.size/parent.samples} {parent.size/parent.samples}}
   name Blur10
   xpos 362
   ypos 2007
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult10
   xpos 362
   ypos 2043
  }
push $N14dfff40
  Merge2 {
   inputs 2
   operation under
   name Merge10
   xpos 185
   ypos 2043
   disable {{parent.samples<10 x1054 1}}
  }
set N14e265c0 [stack 0]
  Viewer {
   frame_range 1001-1264
   viewerProcess "Show_LUT_CDL (rec709)"
   name Viewer1
   xpos 472
   ypos 225
  }
push $N14e265c0
  Output {
   name Output1
   xpos 185
   ypos 2281
  }
 end_group
 Dot {
  name Dot10
  tile_color 0xcccccc00
  xpos -9
  ypos 216
 }
push $N15336730
 Group {
  name Dilate
  selected true
  xpos -175
  ypos 152
  addUserKnob {20 User}
  addUserKnob {14 size R 0 100}
  size {{parent.size_extend} {parent.size_extend}}
  addUserKnob {3 samples}
  samples {{parent.samples}}
  addUserKnob {7 blending}
  blending 1
  addUserKnob {26 ""}
  addUserKnob {7 threshold t "Used to eliminate ugly edges due to small precision error." R 0 0.001}
  threshold 0.0001
 }
  Input {
   inputs 0
   name Input1
   xpos 0
   ypos -3
  }
  Clamp {
   channels alpha
   name Clamp1
   xpos 0
   ypos 48
  }
  Dot {
   name Dot3
   tile_color 0x7aa9ff00
   xpos 34
   ypos 123
  }
set N14ed8ee0 [stack 0]
  Dot {
   name Dot22
   tile_color 0x7aa9ff00
   xpos 34
   ypos 323
  }
set N14eddc30 [stack 0]
  Dot {
   name Dot23
   tile_color 0x7aa9ff00
   xpos 34
   ypos 525
  }
set N14ee2b90 [stack 0]
  Dot {
   name Dot24
   tile_color 0x7aa9ff00
   xpos 34
   ypos 727
  }
set N14ee7ac0 [stack 0]
  Dot {
   name Dot10
   tile_color 0x7aa9ff00
   xpos 34
   ypos 931
  }
set N14eeca60 [stack 0]
  Dot {
   name Dot12
   tile_color 0x7aa9ff00
   xpos 34
   ypos 1133
  }
set N14ef19b0 [stack 0]
  Dot {
   name Dot14
   tile_color 0x7aa9ff00
   xpos 34
   ypos 1333
  }
set N14ef6900 [stack 0]
  Dot {
   name Dot16
   tile_color 0x7aa9ff00
   xpos 34
   ypos 1535
  }
set N14efb8e0 [stack 0]
  Dot {
   name Dot18
   tile_color 0x7aa9ff00
   xpos 34
   ypos 1737
  }
set N14d00780 [stack 0]
  Dot {
   name Dot20
   tile_color 0x7aa9ff00
   xpos 34
   ypos 1941
  }
  Dot {
   name Dot21
   tile_color 0x7aa9ff00
   xpos 243
   ypos 1941
  }
  Blur {
   size {{parent.size/parent.samples*10} {parent.size/parent.samples*10}}
   name Blur10
   xpos 209
   ypos 1998
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult10
   xpos 209
   ypos 2036
  }
push $N14d00780
  Dot {
   name Dot19
   tile_color 0x7aa9ff00
   xpos 243
   ypos 1737
  }
  Blur {
   size {{parent.size/parent.samples*9} {parent.size/parent.samples*9}}
   name Blur9
   xpos 209
   ypos 1796
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult9
   xpos 209
   ypos 1834
  }
  FilterErode {
   size {{(parent.size/parent.samples)*parent.blending} {(parent.size/parent.samples)*parent.blending}}
   filter gaussian
   name FilterErode3
   xpos 209
   ypos 1860
  }
  Premult {
   name Premult9
   xpos 209
   ypos 1898
  }
push $N14efb8e0
  Dot {
   name Dot17
   tile_color 0x7aa9ff00
   xpos 243
   ypos 1535
  }
  Blur {
   size {{parent.size/parent.samples*8} {parent.size/parent.samples*8}}
   name Blur8
   xpos 209
   ypos 1594
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult8
   xpos 209
   ypos 1632
  }
  FilterErode {
   size {{(parent.size/parent.samples)*parent.blending} {(parent.size/parent.samples)*parent.blending}}
   filter gaussian
   name FilterErode4
   xpos 209
   ypos 1658
  }
  Premult {
   name Premult8
   xpos 209
   ypos 1696
  }
push $N14ef6900
  Dot {
   name Dot15
   tile_color 0x7aa9ff00
   xpos 243
   ypos 1333
  }
  Blur {
   size {{parent.size/parent.samples*7} {parent.size/parent.samples*7}}
   name Blur7
   xpos 209
   ypos 1392
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult7
   xpos 209
   ypos 1430
  }
  FilterErode {
   size {{(parent.size/parent.samples)*parent.blending} {(parent.size/parent.samples)*parent.blending}}
   filter gaussian
   name FilterErode5
   xpos 209
   ypos 1456
  }
  Premult {
   name Premult7
   xpos 209
   ypos 1494
  }
push $N14ef19b0
  Dot {
   name Dot13
   tile_color 0x7aa9ff00
   xpos 243
   ypos 1133
  }
  Blur {
   size {{parent.size/parent.samples*6} {parent.size/parent.samples*6}}
   name Blur6
   xpos 209
   ypos 1190
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult6
   xpos 209
   ypos 1228
  }
  FilterErode {
   size {{(parent.size/parent.samples)*parent.blending} {(parent.size/parent.samples)*parent.blending}}
   filter gaussian
   name FilterErode6
   xpos 209
   ypos 1254
  }
  Premult {
   name Premult6
   xpos 209
   ypos 1292
  }
push $N14eeca60
  Dot {
   name Dot11
   tile_color 0x7aa9ff00
   xpos 243
   ypos 931
  }
  Blur {
   size {{parent.size/parent.samples*5} {parent.size/parent.samples*5}}
   name Blur5
   xpos 209
   ypos 988
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult5
   xpos 209
   ypos 1026
  }
  FilterErode {
   size {{(parent.size/parent.samples)*parent.blending} {(parent.size/parent.samples)*parent.blending}}
   filter gaussian
   name FilterErode7
   xpos 209
   ypos 1052
  }
  Premult {
   name Premult5
   xpos 209
   ypos 1090
  }
push $N14ee7ac0
  Dot {
   name Dot9
   tile_color 0x7aa9ff00
   xpos 243
   ypos 729
  }
  Blur {
   size {{parent.size/parent.samples*4} {parent.size/parent.samples*4}}
   name Blur4
   xpos 209
   ypos 788
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult4
   xpos 209
   ypos 826
  }
  FilterErode {
   size {{(parent.size/parent.samples)*parent.blending} {(parent.size/parent.samples)*parent.blending}}
   filter gaussian
   name FilterErode8
   xpos 209
   ypos 852
  }
  Premult {
   name Premult4
   xpos 209
   ypos 890
  }
push $N14ee2b90
  Dot {
   name Dot7
   tile_color 0x7aa9ff00
   xpos 243
   ypos 527
  }
  Blur {
   size {{parent.size/parent.samples*3} {parent.size/parent.samples*3}}
   name Blur3
   xpos 209
   ypos 586
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult3
   xpos 209
   ypos 624
  }
  FilterErode {
   size {{(parent.size/parent.samples)*parent.blending} {(parent.size/parent.samples)*parent.blending}}
   filter gaussian
   name FilterErode9
   xpos 209
   ypos 650
  }
  Premult {
   name Premult3
   xpos 209
   ypos 688
  }
push $N14eddc30
  Dot {
   name Dot5
   tile_color 0x7aa9ff00
   xpos 243
   ypos 325
  }
  Blur {
   size {{parent.size/parent.samples*2} {parent.size/parent.samples*2}}
   name Blur2
   xpos 209
   ypos 384
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult2
   xpos 209
   ypos 422
  }
  FilterErode {
   size {{(parent.size/parent.samples)*parent.blending} {(parent.size/parent.samples)*parent.blending}}
   filter gaussian
   name FilterErode10
   xpos 209
   ypos 448
  }
  Premult {
   name Premult2
   xpos 209
   ypos 486
  }
push $N14ed8ee0
  Dot {
   name Dot25
   tile_color 0x7aa9ff00
   xpos 243
   ypos 123
  }
set N14cdc180 [stack 0]
  Blur {
   size {{parent.size/parent.samples} {parent.size/parent.samples}}
   name Blur1
   xpos 209
   ypos 187
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult1
   xpos 209
   ypos 225
  }
  FilterErode {
   size {{(parent.size/parent.samples)*parent.blending} {(parent.size/parent.samples)*parent.blending}}
   filter gaussian
   name FilterErode1
   xpos 209
   ypos 251
  }
  Premult {
   name Premult1
   xpos 209
   ypos 289
  }
push $N14cdc180
  Dot {
   name Dot1
   tile_color 0x7aa9ff00
   xpos 434
   ypos 123
  }
  Merge2 {
   inputs 2
   operation under
   name Merge1
   xpos 400
   ypos 289
  }
  Merge2 {
   inputs 2
   operation under
   name Merge2
   xpos 400
   ypos 486
   disable {{parent.samples<2}}
  }
  Merge2 {
   inputs 2
   operation under
   name Merge3
   xpos 400
   ypos 688
   disable {{parent.samples<3}}
  }
  Merge2 {
   inputs 2
   operation under
   name Merge4
   xpos 400
   ypos 890
   disable {{parent.samples<4}}
  }
  Merge2 {
   inputs 2
   operation under
   name Merge5
   xpos 400
   ypos 1090
   disable {{parent.samples<5}}
  }
  Merge2 {
   inputs 2
   operation under
   name Merge6
   xpos 400
   ypos 1292
   disable {{parent.samples<6}}
  }
  Merge2 {
   inputs 2
   operation under
   name Merge7
   xpos 400
   ypos 1494
   disable {{parent.samples<7}}
  }
  Merge2 {
   inputs 2
   operation under
   name Merge8
   xpos 400
   ypos 1696
   disable {{parent.samples<8}}
  }
  Merge2 {
   inputs 2
   operation under
   name Merge9
   xpos 400
   ypos 1898
   disable {{parent.samples<9}}
  }
  Merge2 {
   inputs 2
   operation under
   name Merge10
   xpos 400
   ypos 2036
   disable {{parent.samples<10}}
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult11
   selected true
   xpos 400
   ypos 2062
  }
  Output {
   name Output1
   xpos 400
   ypos 2120
  }
 end_group
set N14ebaaf0 [stack 0]
 Switch {
  inputs 4
  which {{parent.method}}
  name Switch1
  xpos -175
  ypos 296
 }
 Blur {
  size {{parent.blur} {parent.blur}}
  name Blur1
  xpos -175
  ypos 410
  disable {{parent.method==3}}
 }
 Merge2 {
  inputs 2
  bbox B
  name Merge1
  xpos -175
  ypos 557
  disable {{parent.method==3}}
 }
 Dot {
  name Dot26
  tile_color 0x4b5ec600
  xpos -141
  ypos 747
 }
set N14bf91c0 [stack 0]
push $N1531f5f0
 Dot {
  name Dot19
  tile_color 0x9e3c6300
  xpos -489
  ypos 641
 }
 Unpremult {
  name Unpremult1
  xpos -523
  ypos 666
  disable {{!parent.in_premult}}
 }
 CopyBBox {
  inputs 2
  name CopyBBox1
  xpos -523
  ypos 743
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace1
  label "input \[value colorspace_in]\noutput \[value colorspace_out]"
  xpos -523
  ypos 814
 }
 Dot {
  name Dot21
  tile_color 0xcccccc00
  xpos -489
  ypos 884
 }
set N14a2cf90 [stack 0]
 Dot {
  name Dot22
  tile_color 0xcccccc00
  xpos -489
  ypos 953
 }
push $N14a2cf90
push $N14bf91c0
 Colorspace {
  colorspace_out YCbCr
  name Colorspace3
  label "input \[value colorspace_in]\noutput \[value colorspace_out]"
  xpos -175
  ypos 795
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 rgba.red
  bbox B
  mix {{1-parent.mix_luma}}
  name Copy2
  xpos -175
  ypos 875
 }
 Copy {
  inputs 2
  from0 rgba.green
  to0 rgba.green
  from1 rgba.blue
  to1 rgba.blue
  bbox B
  mix {{1-parent.mix_chroma}}
  name Copy3
  xpos -175
  ypos 938
 }
 Colorspace {
  colorspace_in YCbCr
  name Colorspace2
  label "input \[value colorspace_in]\noutput \[value colorspace_out]"
  xpos -175
  ypos 1025
 }
 Dot {
  name Dot17
  tile_color 0xcccccc00
  xpos -141
  ypos 1151
 }
set N14a869f0 [stack 0]
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  bbox A
  name Copy1
  xpos -327
  ypos 1142
 }
 Premult {
  name Premult1
  xpos -327
  ypos 1178
 }
 Dot {
  name Dot18
  tile_color 0xcccccc00
  xpos -293
  ypos 1249
 }
push $N14a869f0
 Switch {
  inputs 2
  which {{parent.premult}}
  name Switch2
  xpos -175
  ypos 1245
 }
set N14aa6f80 [stack 0]
 Keymix {
  inputs 3
  channels rgba
  invertMask true
  name Keymix1
  xpos -175
  ypos 1325
  disable {{"!\[exists parent.input1] "}}
 }
 Dot {
  name Dot25
  tile_color 0x4b5ec600
  xpos -141
  ypos 1421
 }
push $N14aa6f80
push $N153292e0
 Copy {
  inputs 2
  from0 rgba.red
  to0 rgba.red
  from1 rgba.green
  to1 rgba.green
  from2 rgba.blue
  to2 rgba.blue
  from3 rgba.alpha
  to3 rgba.alpha
  bbox A
  name Copy4
  xpos -646
  ypos 1407
  disable {{"!\[exists parent.input0] "}}
 }
 Output {
  name Output1
  xpos -646
  ypos 1525
 }
push $N14ebaaf0
 Viewer {
  frame_range 1001-1052
  channels {rgba.red rgba.green rgba.blue edge.alpha}
  viewerProcess "Show_LUT_CDL (rec709)"
  name Viewer1
  xpos 9
  ypos 763
 }
end_group
Copy {
 inputs 2
 from0 rgba.alpha
 to0 rgba.alpha
 name Copy3
 selected true
 xpos -6313
 ypos 6940
 disable true
}
Premult {
 name Premult19
 selected true
 xpos -6313
 ypos 7014
 disable true
}
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message Edge_Expand
 old_message {{69 100 103 101 95 69 120 112 97 110 100}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 0 70}
   }
 cursor_position 11
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text14
 selected true
 xpos -6313
 ypos 7753
}
Dot {
 name Dot85
 selected true
 xpos -6279
 ypos 7836
}
push $N15773f10
Unpremult {
 name Unpremult1
 selected true
 xpos -8118
 ypos 6631
}
Dot {
 name Dot137
 selected true
 xpos -8084
 ypos 6699
}
set N149a32b0 [stack 0]
Dot {
 name Dot89
 selected true
 xpos -7937
 ypos 6699
}
EdgeDetectWrapper {
 channels alpha
 name EdgeDetect1
 selected true
 xpos -7971
 ypos 6742
}
Blur {
 size 3
 name Blur9
 selected true
 xpos -7971
 ypos 6828
}
Dot {
 name Dot90
 selected true
 xpos -7937
 ypos 6949
}
push $N149a32b0
Dot {
 name Dot87
 selected true
 xpos -8227
 ypos 6699
}
FilterErode {
 channels rgba
 size {8 4}
 name FilterErode13
 selected true
 xpos -8262
 ypos 6747
}
FilterErode {
 channels rgb
 size {{-parent.FilterErode13.size} {-parent.FilterErode13.size}}
 name FilterErode14
 selected true
 xpos -8262
 ypos 6810
}
Blur {
 name Blur1
 selected true
 xpos -8262
 ypos 6871
}
Dot {
 name Dot88
 selected true
 xpos -8228
 ypos 6949
}
push $N149a32b0
Merge2 {
 inputs 2+1
 operation min
 output {rgba.red rgba.green rgba.blue -rgba.alpha}
 name Min
 selected true
 xpos -8118
 ypos 6945
}
Premult {
 name Premult18
 selected true
 xpos -8118
 ypos 7018
}
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message "Erode / Dilate"
 old_message {{69 114 111 100 101 32 47 32 68 105 108 97 116 101}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 11 40 12 40 13 40 0 70}
   }
 cursor_position 14
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text15
 selected true
 xpos -8118
 ypos 7753
}
Dot {
 name Dot91
 selected true
 xpos -8084
 ypos 7836
}
push $N1576ef10
Dot {
 name Dot10
 selected true
 xpos -10508
 ypos 6697
}
set N1483b8d0 [stack 0]
Dot {
 name Dot14
 selected true
 xpos -10390
 ypos 6697
}
Dot {
 name Dot15
 selected true
 xpos -10390
 ypos 6999
}
push $N1483b8d0
Dot {
 name Dot12
 selected true
 xpos -10680
 ypos 6697
}
FilterErode {
 channels alpha
 size {11 4}
 name FilterErode2
 selected true
 xpos -10714
 ypos 6749
}
Dot {
 name Dot13
 selected true
 xpos -10680
 ypos 6879
}
push $N1483b8d0
Group {
 inputs 2
 name VectorExtendEdge3
 help "Push rgb pixels outwards using vectors  generated perpedicular to a control matte edge."
 selected true
 xpos -10542
 ypos 6869
 addUserKnob {20 User}
 addUserKnob {4 premult l "input is" M {premultiplied unpremultiplied}}
 addUserKnob {41 from0 l "control matte channel" T Copy4.from0}
 addUserKnob {7 preblur l "pre-blur control matte" t "Blurring the control matte by a moderate amount will increase the width of the extended edge border and help with blending together the slices." R 0 10}
 preblur 6
 addUserKnob {26 ""}
 addUserKnob {3 slices l "vector blur slices" t "The number of iterations of the vector blur operation, up to 10."}
 slices 5
 addUserKnob {7 preblur_vector l "preblur vector" t "Blur the vector a bit before it's used to extend the rgb pixels.  Can help with blending and will also extend the edge further." R 0 10}
 addUserKnob {7 vector_length l "vector length" t "The length of the vector blur operation per slice. Best to avoid making this too high because it can slow things down when multiplied by the number of slices." R 1 10}
 vector_length 6
 addUserKnob {26 ""}
 addUserKnob {4 output t "The default output is the rgb.  The vector output options are just for checking what's going on under the hood.  The \"-1 to 1\" range is the \"native\" format while the \"0 to 1\" range compresses the vectors so that negative values can be visualised." M {"extended rgb" "vectors (-1 to 1 range)" "vectors (0 to 1 range)" ""}}
}
 Input {
  inputs 0
  name ctrl_matte
  xpos 1122
  ypos 457
  number 1
 }
 Input {
  inputs 0
  name img
  xpos 840
  ypos 457
 }
 Dot {
  name Dot2
  xpos 874
  ypos 570
 }
set N148791d0 [stack 0]
 Unpremult {
  name Unpremult11
  xpos 965
  ypos 566
  disable {{parent.premult i}}
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy4
  xpos 1122
  ypos 559
  disable {{"!\[exists parent.input1]" i}}
 }
 Blur {
  channels alpha
  size {{parent.preblur}}
  name Blur12
  label "pre-blur alpha"
  xpos 1122
  ypos 648
 }
set N14894e60 [stack 0]
push $N14894e60
push $N14894e60
push $N14894e60
 Group {
  inputs 2
  name ExtendEdge
  help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
  selected true
  xpos 1325
  ypos 662
  addUserKnob {20 Controls}
  addUserKnob {7 preblurVector R 0 10}
  preblurVector {{parent.preblur_vector}}
  addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
 }
  Input {
   inputs 0
   name Input
   xpos 556
   ypos -426
  }
set N148ac750 [stack 0]
  Dot {
   name Dot1
   xpos 707
   ypos -414
  }
  Dot {
   name Dot2
   xpos 707
   ypos -121
  }
  Input {
   inputs 0
   name matte
   xpos 440
   ypos -424
   number 1
  }
  Shuffle {
   red alpha
   green alpha
   blue alpha
   alpha black
   name Shuffle3
   xpos 440
   ypos -346
  }
  Group {
   name Edge2Vec2
   selected true
   xpos 440
   ypos -322
  }
   Input {
    inputs 0
    name Input1
    xpos -172
    ypos -315
   }
   Clamp {
    channels rgb
    name Clamp1
    xpos -172
    ypos -250
   }
set N148dedc0 [stack 0]
   Position {
    translate {0 1}
    name Position2
    xpos -63
    ypos -106
   }
push $N148dedc0
   Merge2 {
    inputs 2
    operation minus
    name Merge2
    xpos -103
    ypos -28
   }
push $N148dedc0
   Position {
    translate {1 0}
    name Position1
    xpos -285
    ypos -98
   }
push $N148dedc0
   Merge2 {
    inputs 2
    operation minus
    name Merge1
    xpos -253
    ypos -29
   }
   Copy {
    inputs 2
    from0 rgba.green
    to0 rgba.green
    name Copy3
    xpos -179
    ypos 27
   }
   Grade {
    channels {rgba.red rgba.green -rgba.blue none}
    multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
    black_clamp false
    name Grade1
    xpos -179
    ypos 196
    addUserKnob {20 User}
    addUserKnob {7 height l Height}
    height 1
   }
set N1472df50 [stack 0]
push $N1472df50
   Expression {
    channel0 rgb
    expr0 sqrt((r*r)+(g*g)+(b*b))
    name VectorLength
    selected true
    xpos -260
    ypos 278
   }
   Merge2 {
    inputs 2
    operation divide
    name Merge4
    xpos -179
    ypos 350
   }
   Output {
    name Output1
    xpos -179
    ypos 494
   }
  end_group
  Blur {
   channels rgb
   size {{parent.preblurVector i}}
   name Blur5
   label "pre blur vector"
   xpos 440
   ypos -296
  }
push $N148ac750
  ShuffleCopy {
   inputs 2
   red red
   green green
   out forward
   name ShuffleCopy1
   label "rg to forward"
   xpos 556
   ypos -194
  }
  VectorBlur {
   channels rgba
   uv forward
   scale {{vector_length}}
   offset 0
   alpha -rgba.alpha
   maskChannelMask -rgba.alpha
   maskChannelInput -rgba.alpha
   name VectorBlur2
   xpos 556
   ypos -139
  }
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos 556
   ypos -92
  }
  Output {
   name Output1
   xpos 556
   ypos -8
  }
 end_group
 Keymix {
  inputs 3
  channels rgb
  name Keymix11
  xpos 1325
  ypos 751
 }
set N1479ea40 [stack 0]
push $N1479ea40
push $N1479ea40
push $N1479ea40
 Group {
  inputs 2
  name ExtendEdge1
  help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
  xpos 1509
  ypos 743
  addUserKnob {20 Controls}
  addUserKnob {7 preblurVector R 0 10}
  preblurVector {{parent.ExtendEdge.preblurVector i}}
  addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
 }
  Input {
   inputs 0
   name Input
   xpos 556
   ypos -426
  }
set N147b1630 [stack 0]
  Dot {
   name Dot1
   xpos 707
   ypos -414
  }
  Dot {
   name Dot2
   xpos 707
   ypos -121
  }
  Input {
   inputs 0
   name matte
   xpos 440
   ypos -424
   number 1
  }
  Shuffle {
   red alpha
   green alpha
   blue alpha
   alpha black
   name Shuffle3
   xpos 440
   ypos -346
  }
  Group {
   name Edge2Vec2
   xpos 440
   ypos -322
  }
   Input {
    inputs 0
    name Input1
    xpos -172
    ypos -315
   }
   Clamp {
    channels rgb
    name Clamp1
    xpos -172
    ypos -250
   }
set N147e3cd0 [stack 0]
   Position {
    translate {0 1}
    name Position2
    xpos -63
    ypos -106
   }
push $N147e3cd0
   Merge2 {
    inputs 2
    operation minus
    name Merge2
    xpos -103
    ypos -28
   }
push $N147e3cd0
   Position {
    translate {1 0}
    name Position1
    xpos -285
    ypos -98
   }
push $N147e3cd0
   Merge2 {
    inputs 2
    operation minus
    name Merge1
    xpos -253
    ypos -29
   }
   Copy {
    inputs 2
    from0 rgba.green
    to0 rgba.green
    name Copy3
    xpos -179
    ypos 27
   }
   Grade {
    channels {rgba.red rgba.green -rgba.blue none}
    multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
    black_clamp false
    name Grade1
    xpos -179
    ypos 196
    addUserKnob {20 User}
    addUserKnob {7 height l Height}
    height 1
   }
set N14632e80 [stack 0]
push $N14632e80
   Expression {
    channel0 rgb
    expr0 sqrt((r*r)+(g*g)+(b*b))
    name VectorLength
    selected true
    xpos -260
    ypos 278
   }
   Merge2 {
    inputs 2
    operation divide
    name Merge4
    selected true
    xpos -179
    ypos 350
   }
   Output {
    name Output1
    xpos -179
    ypos 494
   }
  end_group
  Blur {
   channels rgb
   size {{parent.preblurVector i}}
   name Blur5
   label "pre blur vector"
   xpos 440
   ypos -296
  }
push $N147b1630
  ShuffleCopy {
   inputs 2
   red red
   green green
   out forward
   name ShuffleCopy1
   label "rg to forward"
   xpos 556
   ypos -194
  }
  VectorBlur {
   channels rgba
   uv forward
   scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
   offset 0
   alpha -rgba.alpha
   maskChannelMask -rgba.alpha
   maskChannelInput -rgba.alpha
   name VectorBlur2
   xpos 556
   ypos -139
  }
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos 556
   ypos -92
  }
  Output {
   name Output1
   xpos 556
   ypos -8
  }
 end_group
 Keymix {
  inputs 3
  channels rgb
  name Keymix12
  xpos 1509
  ypos 823
 }
set N146a39b0 [stack 0]
push $N146a39b0
push $N146a39b0
push $N146a39b0
 Group {
  inputs 2
  name ExtendEdge2
  help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
  xpos 1695
  ypos 823
  addUserKnob {20 Controls}
  addUserKnob {7 preblurVector R 0 10}
  preblurVector {{parent.ExtendEdge.preblurVector}}
  addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
 }
  Input {
   inputs 0
   name Input
   xpos 556
   ypos -426
  }
set N146b65d0 [stack 0]
  Dot {
   name Dot1
   xpos 707
   ypos -414
  }
  Dot {
   name Dot2
   xpos 707
   ypos -121
  }
  Input {
   inputs 0
   name matte
   xpos 440
   ypos -424
   number 1
  }
  Shuffle {
   red alpha
   green alpha
   blue alpha
   alpha black
   name Shuffle3
   xpos 440
   ypos -346
  }
  Group {
   name Edge2Vec2
   xpos 440
   ypos -322
  }
   Input {
    inputs 0
    name Input1
    xpos -172
    ypos -315
   }
   Clamp {
    channels rgb
    name Clamp1
    xpos -172
    ypos -250
   }
set N146e8c00 [stack 0]
   Position {
    translate {0 1}
    name Position2
    xpos -63
    ypos -106
   }
push $N146e8c00
   Merge2 {
    inputs 2
    operation minus
    name Merge2
    xpos -103
    ypos -28
   }
push $N146e8c00
   Position {
    translate {1 0}
    name Position1
    xpos -285
    ypos -98
   }
push $N146e8c00
   Merge2 {
    inputs 2
    operation minus
    name Merge1
    xpos -253
    ypos -29
   }
   Copy {
    inputs 2
    from0 rgba.green
    to0 rgba.green
    name Copy3
    xpos -179
    ypos 27
   }
   Grade {
    channels {rgba.red rgba.green -rgba.blue none}
    multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
    black_clamp false
    name Grade1
    xpos -179
    ypos 196
    addUserKnob {20 User}
    addUserKnob {7 height l Height}
    height 1
   }
set N14537da0 [stack 0]
push $N14537da0
   Expression {
    channel0 rgb
    expr0 sqrt((r*r)+(g*g)+(b*b))
    name VectorLength
    selected true
    xpos -260
    ypos 278
   }
   Merge2 {
    inputs 2
    operation divide
    name Merge4
    selected true
    xpos -179
    ypos 350
   }
   Output {
    name Output1
    xpos -179
    ypos 494
   }
  end_group
  Blur {
   channels rgb
   size {{parent.preblurVector i}}
   name Blur5
   label "pre blur vector"
   xpos 440
   ypos -296
  }
push $N146b65d0
  ShuffleCopy {
   inputs 2
   red red
   green green
   out forward
   name ShuffleCopy1
   label "rg to forward"
   xpos 556
   ypos -194
  }
  VectorBlur {
   channels rgba
   uv forward
   scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
   offset 0
   alpha -rgba.alpha
   maskChannelMask -rgba.alpha
   maskChannelInput -rgba.alpha
   name VectorBlur2
   xpos 556
   ypos -139
  }
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos 556
   ypos -92
  }
  Output {
   name Output1
   xpos 556
   ypos -8
  }
 end_group
 Keymix {
  inputs 3
  channels rgb
  name Keymix13
  xpos 1695
  ypos 895
 }
set N145a88e0 [stack 0]
push $N145a88e0
push $N145a88e0
push $N145a88e0
 Group {
  inputs 2
  name ExtendEdge3
  help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
  xpos 1891
  ypos 895
  addUserKnob {20 Controls}
  addUserKnob {7 preblurVector R 0 10}
  preblurVector {{parent.ExtendEdge.preblurVector}}
  addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
 }
  Input {
   inputs 0
   name Input
   xpos 556
   ypos -426
  }
set N145bb500 [stack 0]
  Dot {
   name Dot1
   xpos 707
   ypos -414
  }
  Dot {
   name Dot2
   xpos 707
   ypos -121
  }
  Input {
   inputs 0
   name matte
   xpos 440
   ypos -424
   number 1
  }
  Shuffle {
   red alpha
   green alpha
   blue alpha
   alpha black
   name Shuffle3
   xpos 440
   ypos -346
  }
  Group {
   name Edge2Vec2
   xpos 440
   ypos -322
  }
   Input {
    inputs 0
    name Input1
    xpos -172
    ypos -315
   }
   Clamp {
    channels rgb
    name Clamp1
    xpos -172
    ypos -250
   }
set N145edb30 [stack 0]
   Position {
    translate {0 1}
    name Position2
    xpos -63
    ypos -106
   }
push $N145edb30
   Merge2 {
    inputs 2
    operation minus
    name Merge2
    xpos -103
    ypos -28
   }
push $N145edb30
   Position {
    translate {1 0}
    name Position1
    xpos -285
    ypos -98
   }
push $N145edb30
   Merge2 {
    inputs 2
    operation minus
    name Merge1
    xpos -253
    ypos -29
   }
   Copy {
    inputs 2
    from0 rgba.green
    to0 rgba.green
    name Copy3
    xpos -179
    ypos 27
   }
   Grade {
    channels {rgba.red rgba.green -rgba.blue none}
    multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
    black_clamp false
    name Grade1
    xpos -179
    ypos 196
    addUserKnob {20 User}
    addUserKnob {7 height l Height}
    height 1
   }
set N1443cce0 [stack 0]
push $N1443cce0
   Expression {
    channel0 rgb
    expr0 sqrt((r*r)+(g*g)+(b*b))
    name VectorLength
    selected true
    xpos -260
    ypos 278
   }
   Merge2 {
    inputs 2
    operation divide
    name Merge4
    selected true
    xpos -179
    ypos 350
   }
   Output {
    name Output1
    xpos -179
    ypos 494
   }
  end_group
  Blur {
   channels rgb
   size {{parent.preblurVector i}}
   name Blur5
   label "pre blur vector"
   xpos 440
   ypos -296
  }
push $N145bb500
  ShuffleCopy {
   inputs 2
   red red
   green green
   out forward
   name ShuffleCopy1
   label "rg to forward"
   xpos 556
   ypos -194
  }
  VectorBlur {
   channels rgba
   uv forward
   scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
   offset 0
   alpha -rgba.alpha
   maskChannelMask -rgba.alpha
   maskChannelInput -rgba.alpha
   name VectorBlur2
   xpos 556
   ypos -139
  }
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos 556
   ypos -92
  }
  Output {
   name Output1
   xpos 556
   ypos -8
  }
 end_group
 Keymix {
  inputs 3
  channels rgb
  name Keymix14
  xpos 1891
  ypos 967
 }
set N144ad820 [stack 0]
push $N144ad820
push $N144ad820
push $N144ad820
 Group {
  inputs 2
  name ExtendEdge4
  help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
  xpos 2077
  ypos 967
  addUserKnob {20 Controls}
  addUserKnob {7 preblurVector R 0 10}
  preblurVector {{parent.ExtendEdge.preblurVector}}
  addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
 }
  Input {
   inputs 0
   name Input
   xpos 556
   ypos -426
  }
set N144c0440 [stack 0]
  Dot {
   name Dot1
   xpos 707
   ypos -414
  }
  Dot {
   name Dot2
   xpos 707
   ypos -121
  }
  Input {
   inputs 0
   name matte
   xpos 440
   ypos -424
   number 1
  }
  Shuffle {
   red alpha
   green alpha
   blue alpha
   alpha black
   name Shuffle3
   xpos 440
   ypos -346
  }
  Group {
   name Edge2Vec2
   xpos 440
   ypos -322
  }
   Input {
    inputs 0
    name Input1
    xpos -172
    ypos -315
   }
   Clamp {
    channels rgb
    name Clamp1
    xpos -172
    ypos -250
   }
set N144f2a70 [stack 0]
   Position {
    translate {0 1}
    name Position2
    xpos -63
    ypos -106
   }
push $N144f2a70
   Merge2 {
    inputs 2
    operation minus
    name Merge2
    xpos -103
    ypos -28
   }
push $N144f2a70
   Position {
    translate {1 0}
    name Position1
    xpos -285
    ypos -98
   }
push $N144f2a70
   Merge2 {
    inputs 2
    operation minus
    name Merge1
    xpos -253
    ypos -29
   }
   Copy {
    inputs 2
    from0 rgba.green
    to0 rgba.green
    name Copy3
    xpos -179
    ypos 27
   }
   Grade {
    channels {rgba.red rgba.green -rgba.blue none}
    multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
    black_clamp false
    name Grade1
    xpos -179
    ypos 196
    addUserKnob {20 User}
    addUserKnob {7 height l Height}
    height 1
   }
set N14341c00 [stack 0]
push $N14341c00
   Expression {
    channel0 rgb
    expr0 sqrt((r*r)+(g*g)+(b*b))
    name VectorLength
    selected true
    xpos -260
    ypos 278
   }
   Merge2 {
    inputs 2
    operation divide
    name Merge4
    selected true
    xpos -179
    ypos 350
   }
   Output {
    name Output1
    xpos -179
    ypos 494
   }
  end_group
  Blur {
   channels rgb
   size {{parent.preblurVector i}}
   name Blur5
   label "pre blur vector"
   xpos 440
   ypos -296
  }
push $N144c0440
  ShuffleCopy {
   inputs 2
   red red
   green green
   out forward
   name ShuffleCopy1
   label "rg to forward"
   xpos 556
   ypos -194
  }
  VectorBlur {
   channels rgba
   uv forward
   scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
   offset 0
   alpha -rgba.alpha
   maskChannelMask -rgba.alpha
   maskChannelInput -rgba.alpha
   name VectorBlur2
   xpos 556
   ypos -139
  }
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos 556
   ypos -92
  }
  Output {
   name Output1
   xpos 556
   ypos -8
  }
 end_group
 Keymix {
  inputs 3
  channels rgb
  name Keymix15
  xpos 2077
  ypos 1039
 }
set N143b2730 [stack 0]
push $N143b2730
push $N143b2730
push $N143b2730
 Group {
  inputs 2
  name ExtendEdge5
  help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
  xpos 2263
  ypos 1039
  addUserKnob {20 Controls}
  addUserKnob {7 preblurVector R 0 10}
  preblurVector {{parent.ExtendEdge.preblurVector i}}
  addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
 }
  Input {
   inputs 0
   name Input
   xpos 556
   ypos -426
  }
set N143c53d0 [stack 0]
  Dot {
   name Dot1
   xpos 707
   ypos -414
  }
  Dot {
   name Dot2
   xpos 707
   ypos -121
  }
  Input {
   inputs 0
   name matte
   xpos 440
   ypos -424
   number 1
  }
  Shuffle {
   red alpha
   green alpha
   blue alpha
   alpha black
   name Shuffle3
   xpos 440
   ypos -346
  }
  Group {
   name Edge2Vec2
   xpos 440
   ypos -322
  }
   Input {
    inputs 0
    name Input1
    xpos -172
    ypos -315
   }
   Clamp {
    channels rgb
    name Clamp1
    xpos -172
    ypos -250
   }
set N143f7a00 [stack 0]
   Position {
    translate {0 1}
    name Position2
    xpos -63
    ypos -106
   }
push $N143f7a00
   Merge2 {
    inputs 2
    operation minus
    name Merge2
    xpos -103
    ypos -28
   }
push $N143f7a00
   Position {
    translate {1 0}
    name Position1
    xpos -285
    ypos -98
   }
push $N143f7a00
   Merge2 {
    inputs 2
    operation minus
    name Merge1
    xpos -253
    ypos -29
   }
   Copy {
    inputs 2
    from0 rgba.green
    to0 rgba.green
    name Copy3
    xpos -179
    ypos 27
   }
   Grade {
    channels {rgba.red rgba.green -rgba.blue none}
    multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
    black_clamp false
    name Grade1
    xpos -179
    ypos 196
    addUserKnob {20 User}
    addUserKnob {7 height l Height}
    height 1
   }
set N14246ba0 [stack 0]
push $N14246ba0
   Expression {
    channel0 rgb
    expr0 sqrt((r*r)+(g*g)+(b*b))
    name VectorLength
    selected true
    xpos -260
    ypos 278
   }
   Merge2 {
    inputs 2
    operation divide
    name Merge4
    selected true
    xpos -179
    ypos 350
   }
   Output {
    name Output1
    xpos -179
    ypos 494
   }
  end_group
  Blur {
   channels rgb
   size {{parent.preblurVector i}}
   name Blur5
   label "pre blur vector"
   xpos 440
   ypos -296
  }
push $N143c53d0
  ShuffleCopy {
   inputs 2
   red red
   green green
   out forward
   name ShuffleCopy1
   label "rg to forward"
   xpos 556
   ypos -194
  }
  VectorBlur {
   channels rgba
   uv forward
   scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
   offset 0
   alpha -rgba.alpha
   maskChannelMask -rgba.alpha
   maskChannelInput -rgba.alpha
   name VectorBlur2
   xpos 556
   ypos -139
  }
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos 556
   ypos -92
  }
  Output {
   name Output1
   xpos 556
   ypos -8
  }
 end_group
 Keymix {
  inputs 3
  channels rgb
  name Keymix16
  xpos 2263
  ypos 1111
 }
set N142b76d0 [stack 0]
push $N142b76d0
push $N142b76d0
push $N142b76d0
 Group {
  inputs 2
  name ExtendEdge6
  help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
  xpos 2449
  ypos 1111
  addUserKnob {20 Controls}
  addUserKnob {7 preblurVector R 0 10}
  preblurVector {{parent.ExtendEdge.preblurVector}}
  addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
 }
  Input {
   inputs 0
   name Input
   xpos 556
   ypos -426
  }
set N142ca2f0 [stack 0]
  Dot {
   name Dot1
   xpos 707
   ypos -414
  }
  Dot {
   name Dot2
   xpos 707
   ypos -121
  }
  Input {
   inputs 0
   name matte
   xpos 440
   ypos -424
   number 1
  }
  Shuffle {
   red alpha
   green alpha
   blue alpha
   alpha black
   name Shuffle3
   xpos 440
   ypos -346
  }
  Group {
   name Edge2Vec2
   xpos 440
   ypos -322
  }
   Input {
    inputs 0
    name Input1
    xpos -172
    ypos -315
   }
   Clamp {
    channels rgb
    name Clamp1
    xpos -172
    ypos -250
   }
set N142fc920 [stack 0]
   Position {
    translate {0 1}
    name Position2
    xpos -63
    ypos -106
   }
push $N142fc920
   Merge2 {
    inputs 2
    operation minus
    name Merge2
    xpos -103
    ypos -28
   }
push $N142fc920
   Position {
    translate {1 0}
    name Position1
    xpos -285
    ypos -98
   }
push $N142fc920
   Merge2 {
    inputs 2
    operation minus
    name Merge1
    xpos -253
    ypos -29
   }
   Copy {
    inputs 2
    from0 rgba.green
    to0 rgba.green
    name Copy3
    xpos -179
    ypos 27
   }
   Grade {
    channels {rgba.red rgba.green -rgba.blue none}
    multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
    black_clamp false
    name Grade1
    xpos -179
    ypos 196
    addUserKnob {20 User}
    addUserKnob {7 height l Height}
    height 1
   }
set N1414bab0 [stack 0]
push $N1414bab0
   Expression {
    channel0 rgb
    expr0 sqrt((r*r)+(g*g)+(b*b))
    name VectorLength
    selected true
    xpos -260
    ypos 278
   }
   Merge2 {
    inputs 2
    operation divide
    name Merge4
    selected true
    xpos -179
    ypos 350
   }
   Output {
    name Output1
    xpos -179
    ypos 494
   }
  end_group
  Blur {
   channels rgb
   size {{parent.preblurVector i}}
   name Blur5
   label "pre blur vector"
   xpos 440
   ypos -296
  }
push $N142ca2f0
  ShuffleCopy {
   inputs 2
   red red
   green green
   out forward
   name ShuffleCopy1
   label "rg to forward"
   xpos 556
   ypos -194
  }
  VectorBlur {
   channels rgba
   uv forward
   scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
   offset 0
   alpha -rgba.alpha
   maskChannelMask -rgba.alpha
   maskChannelInput -rgba.alpha
   name VectorBlur2
   xpos 556
   ypos -139
  }
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos 556
   ypos -92
  }
  Output {
   name Output1
   xpos 556
   ypos -8
  }
 end_group
 Keymix {
  inputs 3
  channels rgb
  name Keymix17
  xpos 2449
  ypos 1183
 }
set N141bc5e0 [stack 0]
push $N141bc5e0
push $N141bc5e0
push $N141bc5e0
 Group {
  inputs 2
  name ExtendEdge7
  help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
  xpos 2635
  ypos 1183
  addUserKnob {20 Controls}
  addUserKnob {7 preblurVector R 0 10}
  preblurVector {{parent.ExtendEdge.preblurVector}}
  addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
 }
  Input {
   inputs 0
   name Input
   xpos 556
   ypos -426
  }
set N141cf200 [stack 0]
  Dot {
   name Dot1
   xpos 707
   ypos -414
  }
  Dot {
   name Dot2
   xpos 707
   ypos -121
  }
  Input {
   inputs 0
   name matte
   xpos 440
   ypos -424
   number 1
  }
  Shuffle {
   red alpha
   green alpha
   blue alpha
   alpha black
   name Shuffle3
   xpos 440
   ypos -346
  }
  Group {
   name Edge2Vec2
   xpos 440
   ypos -322
  }
   Input {
    inputs 0
    name Input1
    xpos -172
    ypos -315
   }
   Clamp {
    channels rgb
    name Clamp1
    xpos -172
    ypos -250
   }
set Ndf017c0 [stack 0]
   Position {
    translate {0 1}
    name Position2
    xpos -63
    ypos -106
   }
push $Ndf017c0
   Merge2 {
    inputs 2
    operation minus
    name Merge2
    xpos -103
    ypos -28
   }
push $Ndf017c0
   Position {
    translate {1 0}
    name Position1
    xpos -285
    ypos -98
   }
push $Ndf017c0
   Merge2 {
    inputs 2
    operation minus
    name Merge1
    xpos -253
    ypos -29
   }
   Copy {
    inputs 2
    from0 rgba.green
    to0 rgba.green
    name Copy3
    xpos -179
    ypos 27
   }
   Grade {
    channels {rgba.red rgba.green -rgba.blue none}
    multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
    black_clamp false
    name Grade1
    xpos -179
    ypos 196
    addUserKnob {20 User}
    addUserKnob {7 height l Height}
    height 1
   }
set Ndf509e0 [stack 0]
push $Ndf509e0
   Expression {
    channel0 rgb
    expr0 sqrt((r*r)+(g*g)+(b*b))
    name VectorLength
    selected true
    xpos -260
    ypos 278
   }
   Merge2 {
    inputs 2
    operation divide
    name Merge4
    selected true
    xpos -179
    ypos 350
   }
   Output {
    name Output1
    xpos -179
    ypos 494
   }
  end_group
  Blur {
   channels rgb
   size {{parent.preblurVector i}}
   name Blur5
   label "pre blur vector"
   xpos 440
   ypos -296
  }
push $N141cf200
  ShuffleCopy {
   inputs 2
   red red
   green green
   out forward
   name ShuffleCopy1
   label "rg to forward"
   xpos 556
   ypos -194
  }
  VectorBlur {
   channels rgba
   uv forward
   scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
   offset 0
   alpha -rgba.alpha
   maskChannelMask -rgba.alpha
   maskChannelInput -rgba.alpha
   name VectorBlur2
   xpos 556
   ypos -139
  }
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos 556
   ypos -92
  }
  Output {
   name Output1
   xpos 556
   ypos -8
  }
 end_group
 Keymix {
  inputs 3
  channels rgb
  name Keymix18
  xpos 2635
  ypos 1255
 }
set Ndfc1510 [stack 0]
push $Ndfc1510
push $Ndfc1510
push $Ndfc1510
 Group {
  inputs 2
  name ExtendEdge8
  help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
  xpos 2829
  ypos 1255
  addUserKnob {20 Controls}
  addUserKnob {7 preblurVector R 0 10}
  preblurVector {{parent.ExtendEdge.preblurVector}}
  addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
 }
  Input {
   inputs 0
   name Input
   xpos 556
   ypos -426
  }
set Ndfd4130 [stack 0]
  Dot {
   name Dot1
   xpos 707
   ypos -414
  }
  Dot {
   name Dot2
   xpos 707
   ypos -121
  }
  Input {
   inputs 0
   name matte
   xpos 440
   ypos -424
   number 1
  }
  Shuffle {
   red alpha
   green alpha
   blue alpha
   alpha black
   name Shuffle3
   xpos 440
   ypos -346
  }
  Group {
   name Edge2Vec2
   xpos 440
   ypos -322
  }
   Input {
    inputs 0
    name Input1
    xpos -172
    ypos -315
   }
   Clamp {
    channels rgb
    name Clamp1
    xpos -172
    ypos -250
   }
set Nde06790 [stack 0]
   Position {
    translate {0 1}
    name Position2
    xpos -63
    ypos -106
   }
push $Nde06790
   Merge2 {
    inputs 2
    operation minus
    name Merge2
    xpos -103
    ypos -28
   }
push $Nde06790
   Position {
    translate {1 0}
    name Position1
    xpos -285
    ypos -98
   }
push $Nde06790
   Merge2 {
    inputs 2
    operation minus
    name Merge1
    xpos -253
    ypos -29
   }
   Copy {
    inputs 2
    from0 rgba.green
    to0 rgba.green
    name Copy3
    xpos -179
    ypos 27
   }
   Grade {
    channels {rgba.red rgba.green -rgba.blue none}
    multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
    black_clamp false
    name Grade1
    xpos -179
    ypos 196
    addUserKnob {20 User}
    addUserKnob {7 height l Height}
    height 1
   }
set Nde55900 [stack 0]
push $Nde55900
   Expression {
    channel0 rgb
    expr0 sqrt((r*r)+(g*g)+(b*b))
    name VectorLength
    selected true
    xpos -260
    ypos 278
   }
   Merge2 {
    inputs 2
    operation divide
    name Merge4
    selected true
    xpos -179
    ypos 350
   }
   Output {
    name Output1
    xpos -179
    ypos 494
   }
  end_group
  Blur {
   channels rgb
   size {{parent.preblurVector i}}
   name Blur5
   label "pre blur vector"
   xpos 440
   ypos -296
  }
push $Ndfd4130
  ShuffleCopy {
   inputs 2
   red red
   green green
   out forward
   name ShuffleCopy1
   label "rg to forward"
   xpos 556
   ypos -194
  }
  VectorBlur {
   channels rgba
   uv forward
   scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
   offset 0
   alpha -rgba.alpha
   maskChannelMask -rgba.alpha
   maskChannelInput -rgba.alpha
   name VectorBlur2
   xpos 556
   ypos -139
  }
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos 556
   ypos -92
  }
  Output {
   name Output1
   xpos 556
   ypos -8
  }
 end_group
 Keymix {
  inputs 3
  channels rgb
  name Keymix19
  xpos 2829
  ypos 1327
 }
set Ndec6440 [stack 0]
push $Ndec6440
push $Ndec6440
push $Ndec6440
 Group {
  inputs 2
  name ExtendEdge9
  help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
  xpos 3023
  ypos 1327
  addUserKnob {20 Controls}
  addUserKnob {7 preblurVector R 0 10}
  preblurVector {{parent.ExtendEdge.preblurVector i}}
  addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
 }
  Input {
   inputs 0
   name Input
   xpos 556
   ypos -426
  }
set Nded9060 [stack 0]
  Dot {
   name Dot1
   xpos 707
   ypos -414
  }
  Dot {
   name Dot2
   xpos 707
   ypos -121
  }
  Input {
   inputs 0
   name matte
   xpos 440
   ypos -424
   number 1
  }
  Shuffle {
   red alpha
   green alpha
   blue alpha
   alpha black
   name Shuffle3
   xpos 440
   ypos -346
  }
  Group {
   name Edge2Vec2
   xpos 440
   ypos -322
  }
   Input {
    inputs 0
    name Input1
    xpos -172
    ypos -315
   }
   Clamp {
    channels rgb
    name Clamp1
    xpos -172
    ypos -250
   }
set Ndd0b6d0 [stack 0]
   Position {
    translate {0 1}
    name Position2
    xpos -63
    ypos -106
   }
push $Ndd0b6d0
   Merge2 {
    inputs 2
    operation minus
    name Merge2
    xpos -103
    ypos -28
   }
push $Ndd0b6d0
   Position {
    translate {1 0}
    name Position1
    xpos -285
    ypos -98
   }
push $Ndd0b6d0
   Merge2 {
    inputs 2
    operation minus
    name Merge1
    xpos -253
    ypos -29
   }
   Copy {
    inputs 2
    from0 rgba.green
    to0 rgba.green
    name Copy3
    xpos -179
    ypos 27
   }
   Grade {
    channels {rgba.red rgba.green -rgba.blue none}
    multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
    black_clamp false
    name Grade1
    xpos -179
    ypos 196
    addUserKnob {20 User}
    addUserKnob {7 height l Height}
    height 1
   }
set Ndd5a840 [stack 0]
push $Ndd5a840
   Expression {
    channel0 rgb
    expr0 sqrt((r*r)+(g*g)+(b*b))
    name VectorLength
    selected true
    xpos -260
    ypos 278
   }
   Merge2 {
    inputs 2
    operation divide
    name Merge4
    selected true
    xpos -179
    ypos 350
   }
   Output {
    name Output1
    xpos -179
    ypos 494
   }
  end_group
  Blur {
   channels rgb
   size {{parent.preblurVector i}}
   name Blur5
   label "pre blur vector"
   xpos 440
   ypos -296
  }
push $Nded9060
  ShuffleCopy {
   inputs 2
   red red
   green green
   out forward
   name ShuffleCopy1
   label "rg to forward"
   xpos 556
   ypos -194
  }
  VectorBlur {
   channels rgba
   uv forward
   scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
   offset 0
   alpha -rgba.alpha
   maskChannelMask -rgba.alpha
   maskChannelInput -rgba.alpha
   name VectorBlur2
   xpos 556
   ypos -139
  }
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos 556
   ypos -92
  }
  Output {
   name Output1
   xpos 556
   ypos -8
  }
 end_group
 Keymix {
  inputs 3
  channels rgb
  name Keymix20
  xpos 3023
  ypos 1399
 }
push $Ndec6440
push $Ndfc1510
push $N141bc5e0
push $N142b76d0
push $N143b2730
push $N144ad820
push $N145a88e0
push $N146a39b0
push $N1479ea40
push $N148791d0
 Switch {
  inputs 11
  which {{parent.slices}}
  name Switch3
  xpos 2018
  ypos 2366
 }
set Nddd44b0 [stack 0]
 Shuffle {
  in forward
  blue black
  alpha black
  name Shuffle1
  xpos 2116
  ypos 2425
 }
set Ndddcba0 [stack 0]
 Expression {
  expr0 (r+1)/2
  expr1 (g+1)/2
  name Expression1
  xpos 2116
  ypos 2476
 }
push $Ndddcba0
push $Nddd44b0
 Switch {
  inputs 3
  which {{parent.output}}
  name Switch1
  xpos 2018
  ypos 2501
 }
push $N148791d0
 Dot {
  name Dot22
  xpos 898
  ypos 2459
 }
 Copy {
  inputs 2
  from0 -rgba.alpha
  to0 -rgba.alpha
  channels rgb
  name Copy1
  xpos 2018
  ypos 2544
 }
 Output {
  name Output1
  xpos 2018
  ypos 2644
 }
end_group
Copy {
 inputs 2
 from0 rgba.alpha
 to0 rgba.alpha
 name Copy6
 selected true
 xpos -10542
 ypos 6990
}
Premult {
 name Premult9
 selected true
 xpos -10542
 ypos 7094
}
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message VectorExtendEdge
 old_message {{86 101 99 116 111 114 69 120 116 101 110 100 69 100 103 101}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 11 40 12 40 13 40 14 40 15 40 0 70}
   }
 cursor_position 6
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text11
 selected true
 xpos -10542
 ypos 7753
}
Dot {
 name Dot16
 selected true
 xpos -10508
 ypos 7836
}
push $N15769f10
Unpremult {
 name Unpremult3
 selected true
 xpos -12469
 ypos 6599
}
Dot {
 name Dot72
 selected true
 xpos -12435
 ypos 6652
}
set Ndc6ec10 [stack 0]
Dot {
 name Dot74
 selected true
 xpos -12533
 ypos 6652
}
FilterErode {
 name FilterErode1
 selected true
 xpos -12567
 ypos 6713
}
Dot {
 name Dot75
 selected true
 xpos -12533
 ypos 6810
}
push $Ndc6ec10
Group {
 inputs 2
 name PxF_Distort2
 tile_color 0x733520ff
 selected true
 xpos -12469
 ypos 6806
 addUserKnob {20 User}
 addUserKnob {41 channels T IDistort1.channels}
 addUserKnob {7 amount R -2 2}
 amount 0.08
 addUserKnob {6 fine +STARTLINE}
 fine true
 addUserKnob {14 blurLens R 0 100}
 blurLens 2
 addUserKnob {6 wrap +STARTLINE}
 addUserKnob {4 lensChannel M {Red Green Blue Alpha ""}}
 lensChannel Alpha
 addUserKnob {41 filter T IDistort1.filter}
 addUserKnob {26 ""}
 addUserKnob {26 t l "" +STARTLINE T "PxF_Distort 2.0 - (c) 2009 - Xavier Bourque - www.pixelfudger.com"}
}
 Input {
  inputs 0
  name lens
  xpos -214
  ypos -227
  number 1
 }
 Dot {
  name Dot4
  xpos -180
  ypos -175
 }
set Ndc99d30 [stack 0]
 Shuffle {
  red black
  green black
  blue black
  name Shuffle4
  label alpha
  xpos -77
  ypos -38
 }
push $Ndc99d30
 Shuffle {
  red black
  green black
  blue black
  alpha blue
  name Shuffle3
  label blue
  xpos -170
  ypos -36
 }
push $Ndc99d30
 Shuffle {
  red black
  green black
  blue black
  alpha green
  name Shuffle2
  label green
  xpos -259
  ypos -38
 }
push $Ndc99d30
 Shuffle {
  red black
  green black
  blue black
  alpha red
  name Shuffle1
  label red
  xpos -352
  ypos -40
 }
 Switch {
  inputs 4
  which {{lensChannel i}}
  name Switch1
  xpos -216
  ypos 29
 }
 Dot {
  name Dot1
  xpos -188
  ypos 118
 }
set Ndcea7c0 [stack 0]
push $Ndcea7c0
 Position {
  translate {1 0}
  name Position1
  xpos -291
  ypos 159
 }
 Merge2 {
  inputs 2
  operation minus
  name Merge15
  xpos -253
  ypos 206
 }
push $Ndcea7c0
push $Ndcea7c0
 Position {
  translate {0 1}
  name Position2
  xpos -96
  ypos 166
 }
 Merge2 {
  inputs 2
  operation minus
  name Merge21
  xpos -149
  ypos 208
 }
 ShuffleCopy {
  inputs 2
  red alpha
  green alpha2
  blue blue
  name ShuffleCopy3
  xpos -206
  ypos 247
 }
 Blur {
  size {{"blurLens * width / 2048 * 2.75" x1 30}}
  name Blur13
  xpos -52
  ypos 260
 }
 Multiply {
  value {{"fine ? pow(blurLens,0.395) * amount * width * 3.597 / 10 : pow(blurLens,0.395) * amount * width * 3.597"}}
  name Multiply5
  xpos -206
  ypos 310
 }
set Ndb404b0 [stack 0]
 Expression {
  channel3 {-rgba.red -rgba.green -rgba.blue rgba.alpha}
  expr3 "r == 0 && g == 0 ? 1 : 0"
  name Expression1
  xpos -169
  ypos 461
 }
 Input {
  inputs 0
  name img
  xpos -451
  ypos -225
 }
 Dot {
  name Dot3
  xpos -409
  ypos -140
 }
set Ndb5fa30 [stack 0]
 Dot {
  name Dot2
  xpos -757
  ypos 242
 }
push $Ndb404b0
push $Ndb5fa30
 Mirror {
  Horizontal true
  Vertical true
  name Mirror2
  xpos -435
  ypos 113
  disable {{"1 - wrap" i}}
 }
 Reformat {
  type scale
  scale 3
  filter impulse
  name Reformat2
  xpos -435
  ypos 137
  disable {{"1 - wrap" i}}
 }
 Tile {
  rows 3
  mirrorRows true
  columns 3
  mirrorCols true
  filter impulse
  name Tile1
  xpos -435
  ypos 161
  disable {{"1 - wrap" i}}
 }
 Reformat {
  type scale
  scale 0.333333
  resize none
  filter impulse
  name Reformat3
  xpos -435
  ypos 185
  disable {{"1 - wrap" i}}
 }
 Transform {
  translate {-1 -1}
  center {3072 2334}
  black_outside false
  name Transform1
  xpos -435
  ypos 219
  disable {{"1 - wrap" i}}
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 forward.u
  from1 rgba.green
  to1 forward.v
  name Copy1
  xpos -396
  ypos 304
 }
 IDistort {
  channels rgb
  uv forward
  blur -depth.Z
  filter notch
  name IDistort1
  xpos -396
  ypos 469
 }
 Remove {
  channels forward
  name Remove1
  xpos -396
  ypos 502
 }
 Keymix {
  inputs 3
  name Keymix1
  xpos -416
  ypos 668
 }
 Output {
  name Output1
  xpos -425
  ypos 739
 }
 Viewer {
  inputs 0
  frame_range 1001-1052
  name Viewer1
  selected true
  xpos -572
  ypos 747
 }
end_group
Premult {
 name Premult20
 selected true
 xpos -12469
 ypos 6864
}
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message PxF_Distort
 old_message {{80 120 70 95 68 105 115 116 111 114 116}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 0 70}
   }
 cursor_position 11
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text9
 selected true
 xpos -12469
 ypos 7753
}
Dot {
 name Dot71
 selected true
 xpos -12435
 ypos 7836
}
push $N15764f10
Dot {
 name Dot83
 selected true
 xpos -14574
 ypos 6607
}
set Nda81a00 [stack 0]
Dot {
 name Dot84
 selected true
 xpos -14454
 ypos 6607
}
Dot {
 name Dot63
 selected true
 xpos -14454
 ypos 6865
}
push $Nda81a00
Erode {
 size 1.8
 name Erode7
 selected true
 xpos -14608
 ypos 6669
 disable true
}
Group {
 name EdgeWarp3
 selected true
 xpos -14608
 ypos 6767
 addUserKnob {20 EdgeWarp}
 addUserKnob {7 area l "warp area" R 0 250}
 area 3
 addUserKnob {7 intensity l "warp intensity"}
 intensity 3
 addUserKnob {6 preserve_alpha l "preserve input alpha" +STARTLINE}
 preserve_alpha true
 addUserKnob {1 Scriplet_Info +DISABLED +INVISIBLE}
 Scriplet_Info central
}
 Input {
  inputs 0
  name Input
  xpos -305
  ypos -118
 }
set Ndaaadb0 [stack 0]
 Dot {
  name Dot3
  xpos -271
  ypos -166
 }
 Dot {
  name Dot4
  xpos -665
  ypos -166
 }
push $Ndaaadb0
 Dot {
  name Dot2
  xpos -402
  ypos -114
 }
set Ndab9b50 [stack 0]
 Matrix {
  channels alpha
  matrix {
      {3 0 -3}
      {10 0 -10}
      {3 0 -3}
    }
  name Scharr_operator_x
  xpos -436
  ypos 1
 }
push $Ndaaadb0
 Matrix {
  channels alpha
  matrix {
      {3 10 3}
      {0 0 0}
      {-3 -10 -3}
    }
  name Scharr_operator_y
  xpos -305
  ypos -66
 }
 ShuffleCopy {
  inputs 2
  red alpha
  green alpha2
  blue black
  alpha black
  name ShuffleCopy2
  xpos -305
  ypos 7
 }
set Ndad5d10 [stack 0]
 Blur {
  size {{"\[value parent.area]" i}}
  filter quadratic
  name Blur
  xpos -305
  ypos 83
 }
 Crop {
  box {0 0 {format.w} {format.h}}
  name Crop1
  xpos -305
  ypos 121
 }
 Multiply {
  value {{"\[python -execlocal blur\\ =\\ nuke.toNode(\\\"Blur\\\")\\\[\\\"size\\\"\\].value()\\nmult\\ =\\ nuke.thisParent()\\\[\\\"intensity\\\"\\].value()\\nif\\ blur\\ <=\\ 50:\\n\\ ret\\ =\\ mult\\ *\\ blur\\ /\\ 2\\nelse:\\ #blur\\ <=\\ 100:\\n\\ ret\\ =\\ mult\\ *\\ blur\\ *\\ ((blur\\ -\\ 25)\\ /\\ 50)\\n]" i}}
  name Multiply
  xpos -305
  ypos 160
 }
push $Ndab9b50
 Dot {
  name Dot1
  xpos -512
  ypos -114
 }
 Group {
  inputs 2
  name DisplaceXV
  note_font "Bitstream Vera Sans"
  xpos -546
  ypos 167
  mapsize {0.15 0.15}
  addUserKnob {20 DisplaceX}
  addUserKnob {41 expr0 l "X displacement" T Displacement.expr0}
  addUserKnob {41 expr1 l "Y displacement" T Displacement.expr1}
 }
  Input {
   inputs 0
   name ctrl
   xpos 442
   ypos -372
   number 1
  }
  Input {
   inputs 0
   name src
   xpos 237
   ypos -275
  }
set Nd91eb50 [stack 0]
  Merge2 {
   inputs 2
   operation copy
   name Merge1
   xpos 442
   ypos -275
  }
set Nd9239e0 [stack 0]
  Expression {
   expr0 x-r
   expr1 y+g
   expr2 0
   name Displacement
   xpos 442
   ypos -238
  }
push $Nd9239e0
  Dot {
   name Dot1
   xpos 585
   ypos -270
  }
  Expression {
   expr0 0.5
   expr1 0.5
   name Expression1
   xpos 551
   ypos -204
  }
  Merge2 {
   inputs 2
   operation plus
   name Merge2
   xpos 442
   ypos -204
  }
  Multiply {
   value {{1.0/width} {"1.0 / height"} 1 1}
   name Multiply1
   xpos 442
   ypos -119
  }
push $Nd91eb50
  STMap {
   inputs 2
   uv rgb
   name STMap2
   xpos 237
   ypos -119
  }
  Output {
   name Output1
   xpos 237
   ypos -57
  }
 end_group
set Nd910710 [stack 0]
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos -699
  ypos 160
 }
 Dot {
  name Dot5
  xpos -665
  ypos 247
 }
push $Nd910710
 Switch {
  inputs 2
  which {{parent.preserve_alpha}}
  name Switch1
  xpos -546
  ypos 243
 }
 Output {
  name Output1
  xpos -546
  ypos 300
 }
push $Ndad5d10
 Viewer {
  frame_range 1001-1052
  viewerProcess "Show_LUT_CDL (rec709)"
  name Viewer1
  selected true
  xpos -110
  ypos 63
 }
end_group
Copy {
 inputs 2
 from0 rgba.alpha
 to0 rgba.alpha
 name Copy2
 selected true
 xpos -14608
 ypos 6855
 disable true
}
Premult {
 name Premult11
 selected true
 xpos -14608
 ypos 6945
}
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message EdgeWarp
 old_message {{69 100 103 101 87 97 114 112}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 0 70}
   }
 cursor_position 8
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text7
 selected true
 xpos -14608
 ypos 7753
}
Dot {
 name Dot62
 selected true
 xpos -14574
 ypos 7836
}
push $N1575ff10
Dot {
 name Dot53
 selected true
 xpos -16890
 ypos 6674
}
set Nd857ef0 [stack 0]
Dot {
 name Dot65
 selected true
 xpos -17048
 ypos 6674
}
Erode {
 size {2 1}
 name Erode5
 selected true
 xpos -17082
 ypos 6747
}
Dot {
 name Dot76
 selected true
 xpos -17048
 ypos 6845
}
push $Nd857ef0
EdgeExtend {
 inputs 2
 sourceIsPremultiplied true
 detailAmount 0
 name EdgeExtend1
 selected true
 xpos -16924
 ypos 6841
}
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message "Nuke's EdgeExtend"
 old_message {{78 117 107 101 39 115 32 69 100 103 101 69 120 116 101 110 100}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 11 40 12 40 13 40 14 40 15 40 16 40 7 70}
   }
 cursor_position 17
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text13
 selected true
 xpos -16924
 ypos 7753
}
Dot {
 name Dot64
 selected true
 xpos -16890
 ypos 7836
}
push $N1575af10
Group {
 name KillOutline2
 help "KillOutline reduces unwanted outlines from keyed footage.\n\nerode controls: erode the alpha in for the amount of the visible outline.\n\nexpand controls: expand outer pixels of eroded image out again until it reaches the edge of the original alpha.\n\ntransition treatment: if needed, blur the transition between original image and extension."
 selected true
 xpos -19279
 ypos 6720
 addUserKnob {20 Settings}
 addUserKnob {26 title l "" +STARTLINE T "KillOutline by Andreas Frickinger"}
 addUserKnob {26 expectation l "" +STARTLINE T "expects premultiplied input."}
 addUserKnob {26 ""}
 addUserKnob {20 erodeControls l "erode controls" n 1}
 addUserKnob {41 erodeSize l "erode size" t "alpha gets eroded in by this amount." T GizmoControl.erodeSize}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {20 extendControls l "expand controls" n 1}
 addUserKnob {41 slices T EdgeExtend2.slices}
 addUserKnob {41 slice_width l "slice width" T EdgeExtend2.slice_width}
 addUserKnob {41 expandSize l "expand size" t "outer pixels of eroded image gets dilated out by this amount. " T EdgeExtend2.blurResult}
 addUserKnob {26 ""}
 addUserKnob {20 transitionTreatment l "transition treatment" n 1}
 addUserKnob {41 transitionTreatmentSwitch l on/off T GizmoControl.transitionTreatmentSwitch}
 addUserKnob {41 edgeSize l "edge size" t "size of transition edge." T GizmoControl.edgeSize}
 addUserKnob {41 edgeBlur l "edge blur" t "blur size of transition edge." T GizmoControl.edgeBlur}
 addUserKnob {41 size l "image blur" t "blur size of image, masked out by transition edge." T TransitionBlur.size}
 addUserKnob {20 endGroup_2 l endGroup n -1}
}
 Input {
  inputs 0
  name mask
  xpos 1465
  ypos 803
  number 1
 }
 Invert {
  name Invert1
  xpos 1465
  ypos 829
 }
 Input {
  inputs 0
  name img
  xpos 833
  ypos -395
 }
 Dot {
  name Dot5
  xpos 867
  ypos -311
 }
set Nd8c9e40 [stack 0]
 Dot {
  name Dot6
  xpos 585
  ypos -311
 }
 Dot {
  name Dot7
  xpos 585
  ypos 839
 }
 Dot {
  name Dot8
  xpos 1057
  ypos 839
 }
push $Nd8c9e40
 Unpremult {
  name UnpremultInput
  xpos 833
  ypos -241
 }
 Dot {
  name Dot3
  xpos 867
  ypos -144
 }
set Nd8e6070 [stack 0]
 Dot {
  name Dot4
  xpos 867
  ypos 434
 }
 Dot {
  name Dot1
  xpos 1054
  ypos 434
 }
set Nd8eff60 [stack 0]
 Dot {
  name Dot2
  xpos 1054
  ypos 672
 }
 Expression {
  expr3 a==0?0:a
  name Expression1
  xpos 1118
  ypos 668
 }
push $Nd8e6070
 Shuffle {
  red black
  green black
  blue black
  name AlphaOnly
  xpos 1250
  ypos -148
 }
 Erode {
  size {{GizmoControl.erodeSize i}}
  name ErodeShrink
  xpos 1250
  ypos 37
 }
set Nd718ea0 [stack 0]
 Dot {
  name Dot10
  xpos 1657
  ypos 47
 }
 EdgeDetectWrapper {
  channels alpha
  erodesize {{GizmoControl.edgeSize*-1 i}}
  name EdgeDetectWrapper1
  xpos 1623
  ypos 252
 }
 Blur {
  size {{GizmoControl.edgeBlur i}}
  name EdgeBlur
  xpos 1623
  ypos 290
 }
 Dot {
  name Dot9
  xpos 1657
  ypos 605
 }
push $Nd718ea0
push $Nd8eff60
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos 1250
  ypos 424
 }
 Premult {
  name Premult2
  xpos 1250
  ypos 462
 }
set Nd75b120 [stack 0]
push $Nd75b120
 Group {
  inputs 2
  name EdgeExtend2
  help "EdgeExtend repeatedly blurs and unpremuliplies the image to extend edges outward while trying to preserve the original source colour"
  xpos 1250
  ypos 533
  addUserKnob {20 "" l User}
  addUserKnob {4 premult l "input is" M {premultiplied unpremultiplied}}
  addUserKnob {3 slices t "How many times the edges are blurred and unpremuliplied.\nThis is the fine control for slightly better quality. The current maximum is 10."}
  slices 4
  addUserKnob {3 slice_width l "slice width" t "Blur amount that is applied before unpremultiplying the result per slice.\nThis is the brute force control and should be kept at 1 if possible.\nOnly increase this if the maximum amount of slices (10) doesn't cover the area you need."}
  slice_width 1
  addUserKnob {7 blurResult l "blur slices" R 0 10}
  blurResult 5
 }
  Input {
   inputs 0
   name img
   xpos -590
   ypos -509
  }
set Nd76d9b0 [stack 0]
  Dot {
   name Dot1
   xpos -556
   ypos 978
  }
  Input {
   inputs 0
   name matte
   xpos -358
   ypos -653
   number 1
  }
push $Nd76d9b0
  Unpremult {
   name Unpremult11
   xpos -468
   ypos -509
   disable {{parent.premult}}
  }
  Copy {
   inputs 2
   from0 -rgba.alpha
   to0 -rgba.alpha
   channels alpha
   name Copy2
   xpos -358
   ypos -516
  }
  Premult {
   name Premult1
   xpos -358
   ypos -450
  }
  Shuffle {
   black alpha
   out2 depth
   name Shuffle1
   label alpha>depth
   xpos -223
   ypos -413
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult1
   xpos -223
   ypos -373
  }
set Nd7ac3c0 [stack 0]
  Dot {
   name Dot2
   xpos -189
   ypos -214
  }
set Nd7b48e0 [stack 0]
push $Nd7ac3c0
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.slice_width}}
   name Blur1
   xpos -25
   ypos -373
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle3
   label depth>alpha
   xpos -25
   ypos -333
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult3
   xpos -25
   ypos -293
  }
  Blur {
   channels rgba
   size {{parent.blurResult}}
   name Blur10
   xpos -25
   ypos -241
  }
  set Cd7e0940 [stack 0]
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge1
   xpos -25
   ypos -218
  }
set Nd7ee700 [stack 0]
  Dot {
   name Dot3
   xpos 9
   ypos -73
  }
set Nd5ff210 [stack 0]
push $Nd7ee700
  Blur {
   channels rgba
   size {{parent.slice_width}}
   name Blur2
   xpos 159
   ypos -218
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle5
   label alpha>depth
   xpos 159
   ypos -180
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult2
   xpos 159
   ypos -140
  }
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.blurResult}}
   name Blur3
   xpos 159
   ypos -101
  }
  set Cd62b1e0 [stack 0]
  Merge2 {
   inputs 2
   name Merge2
   xpos 159
   ypos -73
  }
set Nd638fa0 [stack 0]
  Dot {
   name Dot4
   xpos 193
   ypos 103
  }
set Nd649970 [stack 0]
push $Nd638fa0
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle2
   label depth>alpha
   xpos 342
   ypos -24
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult4
   xpos 342
   ypos 16
  }
set Nd65f690 [stack 0]
clone $Cd7e0940 {
   xpos 342
   ypos 68
   selected false
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge3
   xpos 342
   ypos 103
  }
  Dot {
   name Dot5
   xpos 373
   ypos 226
  }
set Nd6862d0 [stack 0]
push $Nd65f690
  Blur {
   channels rgba
   size {{parent.slice_width}}
   name Blur4
   xpos 503
   ypos 23
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle4
   label alpha>depth
   xpos 503
   ypos 65
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult5
   xpos 503
   ypos 105
  }
set Nd6a9e20 [stack 0]
clone $Cd62b1e0 {
   xpos 503
   ypos 174
   selected false
  }
  Merge2 {
   inputs 2
   name Merge4
   xpos 503
   ypos 226
  }
  Dot {
   name Dot6
   xpos 537
   ypos 321
  }
set Nd6d0a60 [stack 0]
push $Nd6a9e20
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.slice_width}}
   name Blur5
   xpos 689
   ypos 105
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle6
   label depth>alpha
   xpos 689
   ypos 145
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult6
   xpos 689
   ypos 185
  }
set Nd6f46b0 [stack 0]
clone $Cd7e0940 {
   xpos 684
   ypos 272
   selected false
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge5
   xpos 689
   ypos 321
  }
  Dot {
   name Dot7
   xpos 723
   ypos 448
  }
set Nd51b310 [stack 0]
push $Nd6f46b0
  Blur {
   channels rgba
   size {{parent.slice_width}}
   name Blur6
   xpos 856
   ypos 200
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle7
   label alpha>depth
   xpos 856
   ypos 280
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult7
   xpos 856
   ypos 320
  }
set Nd53ee60 [stack 0]
clone $Cd62b1e0 {
   xpos 852
   ypos 405
   selected false
  }
  Merge2 {
   inputs 2
   name Merge6
   xpos 856
   ypos 448
  }
  Dot {
   name Dot8
   xpos 890
   ypos 514
  }
set Nd565aa0 [stack 0]
push $Nd53ee60
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.slice_width}}
   name Blur7
   xpos 1042
   ypos 320
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle8
   label depth>alpha
   xpos 1042
   ypos 393
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult8
   xpos 1042
   ypos 433
  }
set Nd5895f0 [stack 0]
clone $Cd7e0940 {
   xpos 1046
   ypos 484
   selected false
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge7
   xpos 1042
   ypos 514
  }
  Dot {
   name Dot9
   xpos 1076
   ypos 579
  }
set Nd5b0230 [stack 0]
push $Nd5895f0
  Blur {
   channels rgba
   size {{parent.slice_width}}
   name Blur8
   xpos 1205
   ypos 440
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle9
   label alpha>depth
   xpos 1205
   ypos 466
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult9
   xpos 1205
   ypos 506
  }
set Nd5d3d80 [stack 0]
clone $Cd62b1e0 {
   xpos 1206
   ypos 551
   selected false
  }
  Merge2 {
   inputs 2
   name Merge8
   xpos 1205
   ypos 579
  }
  Dot {
   name Dot10
   xpos 1239
   ypos 664
  }
set Nd5fadb0 [stack 0]
push $Nd5d3d80
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.slice_width}}
   name Blur9
   xpos 1421
   ypos 506
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle11
   label depth>alpha
   xpos 1421
   ypos 546
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult10
   xpos 1421
   ypos 586
  }
clone $Cd7e0940 {
   xpos 1421
   ypos 638
   selected true
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge9
   xpos 1421
   ypos 664
  }
push $Nd5fadb0
push $Nd5b0230
push $Nd565aa0
push $Nd51b310
push $Nd6d0a60
push $Nd6862d0
push $Nd649970
push $Nd5ff210
push $Nd7b48e0
push $Nd76d9b0
  Switch {
   inputs 11
   which {{parent.slices}}
   name Switch1
   xpos 689
   ypos 827
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle10
   label depth>alpha
   xpos 689
   ypos 865
  }
  Remove {
   channels depth
   name Remove1
   xpos 689
   ypos 905
  }
  Copy {
   inputs 2
   from0 -rgba.alpha
   to0 -rgba.alpha
   channels depth
   name Copy1
   xpos 689
   ypos 960
  }
  Output {
   name Output1
   xpos 689
   ypos 1290
  }
  Blur {
   inputs 0
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size 8.5
   name Blur11
   xpos 299
   ypos -61
  }
 end_group
set Nd763460 [stack 0]
 Blur {
  inputs 1+1
  size 3
  name TransitionBlur
  xpos 1250
  ypos 595
  disable {{(GizmoControl.transitionTreatmentSwitch-1)*-1 i}}
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy2
  xpos 1250
  ypos 662
 }
 Premult {
  name Premult3
  xpos 1250
  ypos 777
 }
 Keymix {
  inputs 3
  name Keymix1
  xpos 1250
  ypos 829
 }
 Output {
  name Output1
  xpos 1250
  ypos 915
 }
 NoOp {
  inputs 0
  name GizmoControl
  xpos 1428
  ypos 254
  addUserKnob {20 User}
  addUserKnob {6 transitionTreatmentSwitch l on/off +STARTLINE}
  transitionTreatmentSwitch true
  addUserKnob {7 edgeBlur l "edge blur" R 0 100}
  edgeBlur 3
  addUserKnob {7 edgeSize l "edge size" R -1 10}
  edgeSize 1
  addUserKnob {7 erodeSize l "erode size" R 0 10}
  erodeSize 4.25
 }
push $Nd763460
 Viewer {
  frame_range 1001-1052
  viewerProcess "Show_LUT_CDL (rec709)"
  name Viewer1
  xpos 1054
  ypos 192
 }
end_group
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message KillOutline
 old_message {{75 105 108 108 79 117 116 108 105 110 101}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 0 70}
   }
 cursor_position 11
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text8
 selected true
 xpos -19279
 ypos 7753
}
Dot {
 name Dot70
 selected true
 xpos -19245
 ypos 7836
}
push $N15755f10
Dot {
 name Dot39
 selected true
 xpos -21290
 ypos 6688
}
set Nd3623c0 [stack 0]
Dot {
 name Dot43
 selected true
 xpos -21488
 ypos 6688
}
Erode {
 size {8 6}
 name Erode3
 selected true
 xpos -21522
 ypos 6759
}
Dot {
 name Dot42
 selected true
 xpos -21488
 ypos 6868
}
push $Nd3623c0
Group {
 inputs 2
 name Edge_Extrude_Directional1
 help "Gaussian in-fill. Useful to remove markers and create clean plates."
 knobChanged "m = nuke.thisNode()\nkc = nuke.thisKnob()\n\nif kc.name() in \[\"iterations\"]:\n    i = nuke.toNode('Merge1')\n    i2 = nuke.toNode('Invert1')\n    o = nuke.toNode('Transform3')\n    \n    for n in nuke.allNodes():\n      if \"static\" not in n\['label'].getValue():\n          ###print \"i would delete\" + n\['name'].value()\n          nuke.delete(n)\n    \n    \n    slices = int(m\['iterations'].value())\n    step = int(1)\n    for x in range(1,slices+step,step):\n\n      b1 = nuke.nodes.Blur()\n      b1.setInput(0, i)\n      b1\['size'].setSingleValue(False)\n      b1\['size'].setExpression(\"parent.size.w\", 0)\n      b1\['size'].setExpression(\"parent.size.h\", 1)\n\n      b2 = nuke.nodes.Blur()\n      b2.setInput(0, i2)\n      b2\['size'].setSingleValue(False)\n      b2\['size'].setExpression(\"parent.size.w\", 0)\n      b2\['size'].setExpression(\"parent.size.h\", 1)\n\n      g1 = nuke.nodes.Grade()\n      g1.setInput(0, b2)\n      g1\['channels'].setValue('rgba')\n      g1\['blackpoint'].setValue(-0.0001)\n      g1\['disable'].setExpression(\"parent.softEdges ? 0 : 1\")\n\n      m1 = nuke.nodes.Merge()\n      m1.setInput(1, b1)\n      m1.setInput(0, g1)\n      m1\['operation'].setValue(\"divide\")\n      \n      if x < slices:\n         m2 = nuke.nodes.Merge()\n         m2.setInput(1, b2)\n         m2.setInput(0, g1)\n         m2\['operation'].setValue(\"divide\")\n    \n      i = m1\n      i2 = m2\n    \n    o.setInput(0, i)\n\n"
 tile_color 0x9db2ff
 selected true
 xpos -21324
 ypos 6864
 addUserKnob {20 User}
 addUserKnob {14 size t "Amount of 'in-fill' for one iteration. " R 0 100}
 size {4 1}
 addUserKnob {3 iterations l INVISIBLE t "How many times the blur/divide operation is repeated." +INVISIBLE}
 iterations 10
 addUserKnob {6 softEdges l INVISIBLE t "Smoother transition between iterations." -STARTLINE +INVISIBLE}
 softEdges true
 addUserKnob {14 edge_blr_size l "Seam Blur" t "Blurs the seam inbetween for blending." R 0 100}
 edge_blr_size 3.8
 addUserKnob {14 extend_blur_size l "extrude blur" t "Blurs the extended edges for blending." R 0 100}
 addUserKnob {7 angle l "Extrude Angle" t "Adjust the direction of the 'in-fill'. (Has no effect if size.w and size.h are the same value)." R -180 180}
 angle -28
 addUserKnob {6 blackOutside t "Clamp to format before the 'in-fill'." +STARTLINE}
 addUserKnob {4 maskChannel t "Which channel from the 'hole_mask' input is used to define the area to be 'in-filled'." M {Red Green Blue Alpha "" ""}}
 maskChannel Alpha
 addUserKnob {6 ignoreAlpha l "Don't process Alpha" t "Only process RGB channels and do not 'in-fill' the alpha channel." -STARTLINE}
 ignoreAlpha true
 addUserKnob {7 mix t "Dissolve between the effect and the original image."}
 mix 1
 addUserKnob {26 ""}
 addUserKnob {1 Scriplet_Info +DISABLED +INVISIBLE}
 Scriplet_Info central
}
 Input {
  inputs 0
  name mask
  label static
  xpos 184
  ypos 2059
  number 2
 }
 Input {
  inputs 0
  name img
  label static
  xpos -1271
  ypos 233
  addUserKnob {20 User}
  addUserKnob {7 blur R 0 500}
  addUserKnob {3 iterations}
 }
set Nd3991b0 [stack 0]
push $Nd3991b0
 Input {
  inputs 0
  name matte
  label static
  xpos 335
  ypos -919
  number 1
 }
set Nd39eac0 [stack 0]
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle4
  label static
  xpos 470
  ypos -755
 }
push $Nd39eac0
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle3
  label static
  xpos 374
  ypos -757
 }
push $Nd39eac0
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle2
  label static
  xpos 287
  ypos -758
 }
push $Nd39eac0
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle1
  label static
  xpos 172
  ypos -769
 }
 Switch {
  inputs 4
  which {{parent.maskChannel}}
  name Switch2
  label static
  xpos 342
  ypos -673
 }
 Invert {
  name Invert2
  xpos 342
  ypos -635
 }
set Nd3ef410 [stack 0]
 Dot {
  name Dot1
  xpos 288
  ypos 1666
 }
 Blur {
  channels alpha
  size {{parent.edge_blr_size.w} {parent.edge_blr_size.h}}
  name edge_blr
  xpos 64
  ypos 1656
 }
push $Nd3ef410
 Transform {
  rotate {{parent.angle}}
  center {2048 1463}
  black_outside false
  name Transform2
  label static
  xpos 342
  ypos -594
 }
set Nd20e090 [stack 0]
push $Nd3991b0
 Transform {
  rotate {{parent.angle}}
  center {2048 1463}
  black_outside {{parent.blackOutside}}
  name Transform1
  label static
  xpos 137
  ypos -629
 }
 CopyBBox {
  inputs 2
  name CopyBBox1
  label static
  xpos 137
  ypos -594
 }
push $Nd20e090
 Merge2 {
  inputs 2
  operation out
  name Merge1
  label static
  xpos 137
  ypos -455
 }
set Nd2330e0 [stack 0]
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur1
  xpos 137
  ypos -239
 }
push $Nd20e090
 Clamp {
  name Clamp1
  label static
  xpos 342
  ypos -532
 }
 Invert {
  name Invert1
  label static
  xpos 342
  ypos -473
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur2
  xpos 342
  ypos -404
 }
set Nd26c410 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade1
  xpos 310
  ypos -319
  disable {{"parent.softEdges ? 0 : 1"}}
 }
set Nd27a460 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge2
  xpos 310
  ypos -233
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur3
  xpos 310
  ypos -79
 }
push $Nd26c410
push $Nd27a460
 Merge {
  inputs 2
  operation divide
  name Merge3
  xpos 470
  ypos -319
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur4
  xpos 470
  ypos -239
 }
set Nd2b8880 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade2
  xpos 470
  ypos -159
  disable {{"parent.softEdges ? 0 : 1"}}
 }
set Nd2c6920 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge4
  xpos 470
  ypos -73
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur5
  xpos 470
  ypos 81
 }
push $Nd2b8880
push $Nd2c6920
 Merge {
  inputs 2
  operation divide
  name Merge5
  xpos 630
  ypos -159
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur6
  xpos 630
  ypos -79
 }
set Nd104d60 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade3
  xpos 630
  ypos 1
  disable {{"parent.softEdges ? 0 : 1"}}
 }
set Nd112e00 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge6
  xpos 630
  ypos 87
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur7
  xpos 630
  ypos 241
 }
push $Nd104d60
push $Nd112e00
 Merge {
  inputs 2
  operation divide
  name Merge7
  xpos 790
  ypos 1
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur8
  xpos 790
  ypos 81
 }
set Nd151460 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade4
  xpos 790
  ypos 161
  disable {{"parent.softEdges ? 0 : 1"}}
 }
set Nd15f3a0 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge8
  xpos 790
  ypos 241
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur9
  xpos 790
  ypos 401
 }
push $Nd151460
push $Nd15f3a0
 Merge {
  inputs 2
  operation divide
  name Merge9
  xpos 950
  ypos 161
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur10
  xpos 950
  ypos 241
 }
set Nd19d7c0 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade5
  xpos 950
  ypos 321
  disable {{"parent.softEdges ? 0 : 1"}}
 }
set Nd1ab860 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge10
  xpos 950
  ypos 401
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur11
  xpos 950
  ypos 561
 }
push $Nd19d7c0
push $Nd1ab860
 Merge {
  inputs 2
  operation divide
  name Merge11
  xpos 1110
  ypos 321
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur12
  xpos 1110
  ypos 401
 }
set Nd1e9c80 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade6
  xpos 1110
  ypos 481
  disable {{"parent.softEdges ? 0 : 1"}}
 }
set Nd1f7d20 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge12
  xpos 1110
  ypos 561
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur13
  xpos 1110
  ypos 721
 }
push $Nd1e9c80
push $Nd1f7d20
 Merge {
  inputs 2
  operation divide
  name Merge13
  xpos 1270
  ypos 481
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur14
  xpos 1270
  ypos 561
 }
set Nd036160 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade7
  xpos 1270
  ypos 641
  disable {{"parent.softEdges ? 0 : 1"}}
 }
set Nd044200 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge14
  xpos 1270
  ypos 721
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur15
  xpos 1270
  ypos 881
 }
push $Nd036160
push $Nd044200
 Merge {
  inputs 2
  operation divide
  name Merge15
  xpos 1430
  ypos 641
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur16
  xpos 1430
  ypos 721
 }
set Nd082620 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade8
  xpos 1430
  ypos 801
  disable {{"parent.softEdges ? 0 : 1"}}
 }
set Nd090ae0 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge16
  xpos 1430
  ypos 881
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur17
  xpos 1430
  ypos 1041
 }
push $Nd082620
push $Nd090ae0
 Merge {
  inputs 2
  operation divide
  name Merge17
  xpos 1590
  ypos 801
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur18
  xpos 1590
  ypos 881
 }
set Nd0cef10 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade9
  xpos 1590
  ypos 961
  disable {{"parent.softEdges ? 0 : 1"}}
 }
set Nd0dcfb0 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge18
  xpos 1590
  ypos 1041
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur19
  xpos 1590
  ypos 1201
 }
push $Nd0cef10
push $Nd0dcfb0
 Merge {
  inputs 2
  operation divide
  name Merge19
  xpos 1750
  ypos 961
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur20
  xpos 1750
  ypos 1041
 }
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade10
  xpos 1750
  ypos 1121
  disable {{"parent.softEdges ? 0 : 1"}}
 }
 Merge {
  inputs 2
  operation divide
  name Merge20
  xpos 1750
  ypos 1217
 }
 Transform {
  rotate {{parent.angle*-1}}
  center {2048 1463}
  name Transform3
  label static
  xpos -163
  ypos 1431
 }
 Blur {
  size {{parent.extend_blur_size.w} {parent.extend_blur_size.h}}
  name extend_blur
  xpos -163
  ypos 1525
 }
push $Nd3991b0
 Keymix {
  inputs 3
  bbox B
  name Keymix1
  label static
  xpos -163
  ypos 1650
 }
set Ncf667f0 [stack 0]
 ShuffleCopy {
  inputs 2
  name ShuffleCopy1
  label static
  xpos -163
  ypos 1763
  disable {{"parent.ignoreAlpha ? 0 : 1"}}
 }
push $Nd3991b0
 Dissolve {
  inputs 2
  which {{parent.mix}}
  name Dissolve1
  label static
  xpos -163
  ypos 1924
 }
 Keymix {
  inputs 3
  invertMask true
  bbox B
  name Keymix2
  label static
  xpos -163
  ypos 2053
  disable {{"\[exists parent.input2] ? 0 : 1" x1 0}}
 }
 Output {
  name Output1
  label static
  xpos -163
  ypos 2155
 }
push $Ncf667f0
push 0
push $Nd2330e0
 Viewer {
  inputs 3
  frame_range 1001-1052
  viewerProcess "Show_LUT_CDL (rec709)"
  name Viewer1
  selected true
  xpos 1750
  ypos 1243
 }
end_group
Premult {
 name Premult16
 selected true
 xpos -21324
 ypos 6949
}
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message Edge_Extrude_Directional
 old_message {{69 100 103 101 95 69 120 116 114 117 100 101 95 68 105 114 101 99 116 105 111 110 97 108}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 11 40 12 40 13 40 14 40 15 40 16 40 17 40 18 40 19 40 20 40 21 40 22 40 23 40 0 70}
   }
 cursor_position 24
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text12
 selected true
 xpos -21324
 ypos 7753
}
Dot {
 name Dot44
 selected true
 xpos -21290
 ypos 7836
}
push $N15750f10
Dot {
 name Dot66
 selected true
 xpos -23089
 ypos 6731
}
set Nce45960 [stack 0]
Dot {
 name Dot68
 selected true
 xpos -23241
 ypos 6731
}
Invert {
 name Invert4
 selected true
 xpos -23275
 ypos 6781
}
FilterErode {
 size {-12 -6}
 name FilterErode3
 selected true
 xpos -23275
 ypos 6853
}
Dot {
 name Dot69
 selected true
 xpos -23241
 ypos 6927
}
push $Nce45960
Group {
 inputs 2
 name PxF_Filler2
 help "Gaussian in-fill. Useful to remove markers and create clean plates."
 knobChanged "m = nuke.thisNode()\nkc = nuke.thisKnob()\n\nif kc.name() in \[\"iterations\"]:\n    i = nuke.toNode('Merge1')\n    i2 = nuke.toNode('Invert1')\n    o = nuke.toNode('Transform3')\n    \n    for n in nuke.allNodes():\n      if \"static\" not in n\['label'].getValue():\n          ###print \"i would delete\" + n\['name'].value()\n          nuke.delete(n)\n    \n    \n    slices = int(m\['iterations'].value())\n    step = int(1)\n    for x in range(1,slices+step,step):\n\n      b1 = nuke.nodes.Blur()\n      b1.setInput(0, i)\n      b1\['size'].setSingleValue(False)\n      b1\['size'].setExpression(\"parent.size.w\", 0)\n      b1\['size'].setExpression(\"parent.size.h\", 1)\n\n      b2 = nuke.nodes.Blur()\n      b2.setInput(0, i2)\n      b2\['size'].setSingleValue(False)\n      b2\['size'].setExpression(\"parent.size.w\", 0)\n      b2\['size'].setExpression(\"parent.size.h\", 1)\n\n      g1 = nuke.nodes.Grade()\n      g1.setInput(0, b2)\n      g1\['channels'].setValue('rgba')\n      g1\['blackpoint'].setValue(-0.0001)\n      g1\['disable'].setExpression(\"parent.softEdges ? 0 : 1\")\n\n      m1 = nuke.nodes.Merge()\n      m1.setInput(1, b1)\n      m1.setInput(0, g1)\n      m1\['operation'].setValue(\"divide\")\n      \n      if x < slices:\n         m2 = nuke.nodes.Merge()\n         m2.setInput(1, b2)\n         m2.setInput(0, g1)\n         m2\['operation'].setValue(\"divide\")\n    \n      i = m1\n      i2 = m2\n    \n    o.setInput(0, i)\n\n"
 tile_color 0x733520ff
 selected true
 xpos -23123
 ypos 6923
 addUserKnob {20 User}
 addUserKnob {14 size t "Amount of 'in-fill' for one iteration. " R 0 100}
 size {5 4}
 addUserKnob {3 iterations t "How many times the blur/divide operation is repeated."}
 iterations 3
 addUserKnob {6 softEdges t "Smoother transition between iterations." -STARTLINE}
 softEdges true
 addUserKnob {7 angle t "Adjust the direction of the 'in-fill'. (Has no effect if size.w and size.h are the same value)." R -180 180}
 angle -20
 addUserKnob {6 blackOutside t "Clamp to format before the 'in-fill'." +STARTLINE}
 addUserKnob {4 maskChannel t "Which channel from the 'hole_mask' input is used to define the area to be 'in-filled'." M {Red Green Blue Alpha "" ""}}
 maskChannel Alpha
 addUserKnob {6 ignoreAlpha l "Don't process Alpha" t "Only process RGB channels and do not 'in-fill' the alpha channel." -STARTLINE}
 ignoreAlpha true
 addUserKnob {7 mix t "Dissolve between the effect and the original image."}
 mix 1
 addUserKnob {26 ""}
 addUserKnob {26 t l "" -STARTLINE T "PxF_Filler 3.0.4 - (c) 2015 - Xavier Bourque - www.pixelfudger.com"}
}
 Input {
  inputs 0
  name mask
  label static
  xpos 183
  ypos 1950
  number 2
 }
 Input {
  inputs 0
  name img
  label static
  xpos -1073
  ypos -113
  addUserKnob {20 User}
  addUserKnob {7 blur R 0 500}
  addUserKnob {3 iterations}
 }
set Nce81010 [stack 0]
push $Nce81010
 Input {
  inputs 0
  name hole_mask
  label static
  xpos 337
  ypos -851
  number 1
 }
set Nce86920 [stack 0]
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle4
  label static
  xpos 457
  ypos -762
 }
push $Nce86920
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle3
  label static
  xpos 373
  ypos -762
 }
push $Nce86920
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle2
  label static
  xpos 290
  ypos -762
 }
push $Nce86920
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle1
  label static
  xpos 207
  ypos -762
 }
 Switch {
  inputs 4
  which {{parent.maskChannel i}}
  name Switch2
  label static
  xpos 342
  ypos -668
 }
set Ncecee00 [stack 0]
push $Ncecee00
 Transform {
  rotate {{parent.angle i}}
  center {2048 1463}
  name Transform2
  label static
  xpos 342
  ypos -587
 }
set Nced7280 [stack 0]
push $Nce81010
 Transform {
  rotate {{parent.angle i}}
  center {2048 1463}
  black_outside {{parent.blackOutside i}}
  name Transform1
  label static
  xpos 137
  ypos -594
 }
 CopyBBox {
  inputs 2
  name CopyBBox1
  label static
  xpos 137
  ypos -519
 }
push $Nced7280
 Merge2 {
  inputs 2
  operation out
  name Merge1
  label static
  xpos 137
  ypos -432
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur1
  xpos 137
  ypos -359
 }
push $Nced7280
 Clamp {
  name Clamp1
  label static
  xpos 342
  ypos -532
 }
 Invert {
  name Invert1
  label static
  xpos 342
  ypos -473
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur2
  xpos 342
  ypos -423
 }
set Ncd355c0 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade1
  xpos 342
  ypos -379
  disable {{"parent.softEdges ? 0 : 1"}}
 }
set Ncd43610 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge2
  xpos 342
  ypos -353
 }
set Ncd543c0 [stack 0]
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur3
  xpos 342
  ypos -289
 }
push $Ncd355c0
push $Ncd43610
 Merge {
  inputs 2
  operation divide
  name Merge3
  xpos 452
  ypos -379
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur4
  xpos 452
  ypos -353
 }
set Ncd81ab0 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade2
  xpos 452
  ypos -309
  disable {{"parent.softEdges ? 0 : 1"}}
 }
set Ncd8fb50 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge4
  xpos 452
  ypos -283
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur5
  xpos 452
  ypos -225
 }
push $Ncd81ab0
push $Ncd8fb50
 Merge {
  inputs 2
  operation divide
  name Merge5
  xpos 562
  ypos -309
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur6
  xpos 562
  ypos -283
 }
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade3
  xpos 562
  ypos -245
  disable {{"parent.softEdges ? 0 : 1"}}
 }
 Merge {
  inputs 2
  operation divide
  name Merge6
  xpos 562
  ypos -219
 }
 Transform {
  rotate {{parent.angle*-1}}
  center {2048 1463}
  name Transform3
  label static
  xpos -163
  ypos 1431
 }
push $Nce81010
 Keymix {
  inputs 3
  name Keymix1
  label static
  xpos -163
  ypos 1650
 }
 ShuffleCopy {
  inputs 2
  name ShuffleCopy1
  label static
  xpos -163
  ypos 1763
  disable {{"parent.ignoreAlpha ? 0 : 1" i}}
 }
push $Nce81010
 Dissolve {
  inputs 2
  which {{parent.mix i}}
  name Dissolve1
  label static
  xpos -163
  ypos 1923
 }
 Keymix {
  inputs 3
  invertMask true
  bbox B
  name Keymix2
  label static
  xpos -163
  ypos 2053
  disable {{"\[exists parent.input2] ? 0 : 1" x1 0}}
 }
 Output {
  name Output1
  label static
  xpos -163
  ypos 2155
 }
push $Ncd543c0
 Viewer {
  frame_range 1001-1052
  viewerProcess "Show_LUT_CDL (rec709)"
  name Viewer1
  xpos 452
  ypos -187
 }
end_group
Premult {
 name Premult10
 selected true
 xpos -23123
 ypos 6999
}
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message PxF_Filler
 old_message {{80 120 70 95 70 105 108 108 101 114}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 0 70}
   }
 cursor_position 10
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text10
 selected true
 xpos -23123
 ypos 7753
}
Dot {
 name Dot41
 selected true
 xpos -23089
 ypos 7836
}
push $N1574bf10
Group {
 name EdgeSpread2
 help "spreads out/grows edges based on the alpha channel"
 selected true
 xpos -24907
 ypos 6693
 addUserKnob {20 EdgeSpread}
 addUserKnob {6 inpremult l "Input is premult'd" +STARTLINE}
 inpremult true
 addUserKnob {41 spread T Blur13.size}
 addUserKnob {7 erode_size l erode t "erodes to remove unwanted edge color" R 0 20}
 erode_size 3
 addUserKnob {41 presize l preblursize T preblur.size}
 addUserKnob {6 PremultOut l "Premult Output" +STARTLINE}
 PremultOut true
}
 Input {
  inputs 0
  name Input1
  xpos -647
  ypos 125
 }
 Unpremult {
  name Unpremult1
  xpos -647
  ypos 171
  disable {{!parent.inpremult i}}
 }
 Dot {
  name Dot18
  xpos -614
  ypos 199
 }
set Ncb06e70 [stack 0]
push $Ncb06e70
 Blur {
  channels alpha
  name preblur
  selected true
  xpos -596
  ypos 222
 }
 Erode {
  size {{parent.erode_size}}
  name Erode1
  xpos -596
  ypos 264
 }
 Premult {
  name Premult24
  xpos -596
  ypos 306
 }
 Blur {
  size {8 6}
  maskChannelInput rgba.alpha
  invert_mask true
  name Blur13
  xpos -596
  ypos 334
 }
 Unpremult {
  name Unpremult10
  xpos -596
  ypos 376
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy13
  xpos -647
  ypos 417
 }
 Premult {
  name Premult1
  xpos -647
  ypos 473
  disable {{!parent.PremultOut i}}
 }
set Ncb539d0 [stack 0]
 Output {
  name Output1
  xpos -647
  ypos 518
 }
push $Ncb539d0
 Viewer {
  input_process false
  name Viewer1
  xpos -1024
  ypos 484
 }
end_group
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message EdgeSpread
 old_message {{69 100 103 101 83 112 114 101 97 100}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 0 70}
   }
 cursor_position 10
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text6
 selected true
 xpos -24907
 ypos 7753
}
Dot {
 name Dot60
 selected true
 xpos -24873
 ypos 7836
}
push $N15746f10
Unpremult {
 name Unpremult4
 selected true
 xpos -26920
 ypos 6590
}
Dot {
 name Dot19
 selected true
 xpos -26886
 ypos 6639
}
set Nca09750 [stack 0]
Dot {
 name Dot57
 selected true
 xpos -26716
 ypos 6639
}
Dot {
 name Dot56
 selected true
 xpos -26716
 ypos 6889
}
push $Nca09750
Dot {
 name Dot54
 selected true
 xpos -27032
 ypos 6639
}
Dot {
 name Dot55
 selected true
 xpos -27032
 ypos 6791
}
push $Nca09750
Group {
 inputs 2
 name EdgeExtendV2_1
 help "EdgeExtend repeatedly blurs and unpremuliplies the image to extend edges outward while trying to preserve the original source colour"
 tile_color 0xff822dff
 selected true
 xpos -26920
 ypos 6787
 addUserKnob {20 edgeExtendTab l "Edge Extend"}
 addUserKnob {7 erodeAlpha l "Erode Alpha" t "Erodes the alpha before the edge extend." R 0 10}
 erodeAlpha 9
 addUserKnob {3 slices l Slices t "How many times the edges are blurred and unpremuliplied.\nThis is the fine control for slightly better quality. The current maximum is 10."}
 slices 4
 addUserKnob {7 slice_width l "Slice Width" t "controls how much each slice is extended. This multiplied by the number of slices give you your total edge extend" R 0 50}
 slice_width 15.4
 addUserKnob {7 blurResult l "Blur Slices" t "How much each slice is blurred after its been extended. Increase this will reduce stepping between the slices but decrease detail" R 0 50}
 blurResult 2
 addUserKnob {7 edgeMix l "Edge Mix" t "adjusts how the edge extend mixes on top of the plate" R 0 10}
 edgeMix 3
 addUserKnob {6 addOrigPlate l "merge original plate" t "uncheck this to only get the edge extend pass. this way you can merge the source plate on top yourself." +STARTLINE}
 addOrigPlate true
}
 Input {
  inputs 0
  name Matte
  xpos -228
  ypos -636
  number 1
 }
 Dilate {
  channels alpha
  size {{-parent.erodeAlpha}}
  name Dilate1
  xpos -228
  ypos -559
 }
set Nca32340 [stack 0]
 Input {
  inputs 0
  name Plate
  xpos -460
  ypos -461
 }
set Nca3d9a0 [stack 0]
 Copy {
  inputs 2
  from0 -rgba.alpha
  to0 -rgba.alpha
  channels alpha
  name Copy2
  xpos -228
  ypos -473
 }
 Premult {
  name Premult1
  xpos -228
  ypos -407
 }
set Nca50df0 [stack 0]
 Dot {
  name Dot2
  xpos -194
  ypos 1329
 }
set Nca59110 [stack 0]
 FilterErode {
  size {{parent.edgeMix}}
  filter gaussian
  name FilterErode1
  xpos 540
  ypos 1319
 }
push $Nca50df0
 Blur {
  channels rgba
  size {{parent.slice_width}}
  name Blur1
  xpos -25
  ypos -407
 }
 Shuffle {
  black alpha
  out2 depth
  name Shuffle1
  xpos -25
  ypos -369
 }
 Unpremult {
  channels rgba
  alpha depth.Z
  name Unpremult3
  xpos -25
  ypos -338
 }
 Blur {
  channels rgba
  size {{parent.blurResult}}
  name Blur11
  xpos -25
  ypos -218
 }
set Nca91630 [stack 0]
 Dot {
  name Dot3
  xpos 9
  ypos -43
 }
set Nca9f3f0 [stack 0]
push $Nca91630
 Blur {
  channels rgba
  size {{parent.slice_width}}
  name Blur13
  xpos 159
  ypos -218
 }
 Shuffle {
  black alpha
  out2 depth
  name Shuffle3
  xpos 159
  ypos -181
 }
 Unpremult {
  channels rgba
  alpha depth.Z
  name Unpremult2
  xpos 159
  ypos -150
 }
 Blur {
  channels rgba
  size {{parent.blurResult}}
  name Blur14
  xpos 159
  ypos -100
 }
 Merge2 {
  inputs 2
  name Merge2
  xpos 159
  ypos -47
 }
set Ncad9210 [stack 0]
 Dot {
  name Dot4
  xpos 193
  ypos 103
 }
set Ncae9c20 [stack 0]
push $Ncad9210
 Blur {
  channels rgba
  size {{parent.slice_width}}
  name Blur2
  xpos 342
  ypos -47
 }
 Shuffle {
  black alpha
  out2 depth
  name Shuffle5
  xpos 342
  ypos -10
 }
 Unpremult {
  channels rgba
  alpha depth.Z
  name Unpremult1
  xpos 342
  ypos 21
 }
 Blur {
  channels rgba
  size {{parent.blurResult}}
  name Blur15
  xpos 342
  ypos 71
 }
 Merge2 {
  inputs 2
  name Merge1
  xpos 339
  ypos 99
 }
set Nc923a60 [stack 0]
 Dot {
  name Dot5
  xpos 373
  ypos 247
 }
set Nc934430 [stack 0]
push $Nc923a60
 Blur {
  channels rgba
  size {{parent.slice_width}}
  name Blur12
  xpos 506
  ypos 99
 }
 Shuffle {
  black alpha
  out2 depth
  name Shuffle2
  xpos 506
  ypos 136
 }
 Unpremult {
  channels rgba
  alpha depth.Z
  name Unpremult4
  xpos 506
  ypos 167
 }
 Blur {
  channels rgba
  size {{parent.blurResult}}
  name Blur16
  xpos 506
  ypos 217
 }
 Merge2 {
  inputs 2
  name Merge3
  xpos 506
  ypos 243
 }
set Nc96e230 [stack 0]
 Dot {
  name Dot6
  xpos 540
  ypos 393
 }
set Nc97ec00 [stack 0]
push $Nc96e230
 Blur {
  channels rgba
  size {{parent.slice_width}}
  name Blur4
  xpos 682
  ypos 243
 }
 Shuffle {
  black alpha
  out2 depth
  name Shuffle4
  xpos 682
  ypos 280
 }
 Unpremult {
  channels rgba
  alpha depth.Z
  name Unpremult5
  xpos 682
  ypos 311
 }
 Blur {
  channels rgba
  size {{parent.blurResult}}
  name Blur17
  xpos 682
  ypos 361
 }
 Merge2 {
  inputs 2
  name Merge4
  xpos 679
  ypos 389
 }
set Nc9b8b20 [stack 0]
 Dot {
  name Dot7
  xpos 713
  ypos 539
 }
set Nc9c94f0 [stack 0]
push $Nc9b8b20
 Blur {
  channels rgba
  size {{parent.slice_width}}
  name Blur5
  xpos 885
  ypos 389
 }
 Shuffle {
  black alpha
  out2 depth
  name Shuffle6
  xpos 885
  ypos 426
 }
 Unpremult {
  channels rgba
  alpha depth.Z
  name Unpremult6
  xpos 885
  ypos 457
 }
 Blur {
  channels rgba
  size {{parent.blurResult}}
  name Blur18
  xpos 885
  ypos 507
 }
 Merge2 {
  inputs 2
  name Merge5
  xpos 882
  ypos 535
 }
set Nc803390 [stack 0]
 Dot {
  name Dot8
  xpos 916
  ypos 685
 }
set Nc813ce0 [stack 0]
push $Nc803390
 Blur {
  channels rgba
  size {{parent.slice_width}}
  name Blur6
  xpos 1094
  ypos 535
 }
 Shuffle {
  black alpha
  out2 depth
  name Shuffle7
  xpos 1094
  ypos 572
 }
 Unpremult {
  channels rgba
  alpha depth.Z
  name Unpremult7
  xpos 1094
  ypos 603
 }
 Blur {
  channels rgba
  size {{parent.blurResult}}
  name Blur19
  xpos 1094
  ypos 653
 }
 Merge2 {
  inputs 2
  name Merge6
  xpos 1091
  ypos 681
 }
set Nc84dae0 [stack 0]
 Dot {
  name Dot9
  xpos 1125
  ypos 831
 }
set Nc85e4b0 [stack 0]
push $Nc84dae0
 Blur {
  channels rgba
  size {{parent.slice_width}}
  name Blur20
  xpos 1282
  ypos 681
 }
 Shuffle {
  black alpha
  out2 depth
  name Shuffle12
  xpos 1282
  ypos 718
 }
 Unpremult {
  channels rgba
  alpha depth.Z
  name Unpremult12
  xpos 1282
  ypos 749
 }
 Blur {
  channels rgba
  size {{parent.blurResult}}
  name Blur21
  xpos 1282
  ypos 799
 }
 Merge2 {
  inputs 2
  name Merge10
  xpos 1279
  ypos 827
 }
set Nc8982b0 [stack 0]
 Dot {
  name Dot10
  xpos 1313
  ypos 977
 }
set Nc8a8c80 [stack 0]
push $Nc8982b0
 Blur {
  channels rgba
  size {{parent.slice_width}}
  name Blur22
  xpos 1495
  ypos 827
 }
 Shuffle {
  black alpha
  out2 depth
  name Shuffle13
  xpos 1495
  ypos 864
 }
 Unpremult {
  channels rgba
  alpha depth.Z
  name Unpremult13
  xpos 1495
  ypos 895
 }
 Blur {
  channels rgba
  size {{parent.blurResult}}
  name Blur23
  xpos 1495
  ypos 945
 }
 Merge2 {
  inputs 2
  name Merge12
  xpos 1492
  ypos 973
 }
set Nc8e2ea0 [stack 0]
 Dot {
  name Dot1
  xpos 1526
  ypos 1142
 }
set Nc8f3870 [stack 0]
push $Nc8e2ea0
 Blur {
  channels rgba
  size {{parent.slice_width}}
  name Blur3
  xpos 1701
  ypos 973
 }
 Shuffle {
  black alpha
  out2 depth
  name Shuffle8
  xpos 1701
  ypos 1010
 }
 Unpremult {
  channels rgba
  alpha depth.Z
  name Unpremult8
  xpos 1701
  ypos 1041
 }
 Blur {
  channels rgba
  size {{parent.blurResult}}
  name Blur7
  xpos 1701
  ypos 1091
 }
 Merge2 {
  inputs 2
  name Merge9
  xpos 1701
  ypos 1138
 }
push $Nc8f3870
push $Nc8a8c80
push $Nc85e4b0
push $Nc813ce0
push $Nc9c94f0
push $Nc97ec00
push $Nc934430
push $Ncae9c20
push $Nca9f3f0
push $Nca3d9a0
 Switch {
  inputs 11
  which {{parent.slices}}
  name Switch1
  xpos 679
  ypos 1232
 }
 Merge2 {
  inputs 2
  operation stencil
  name Merge7
  xpos 679
  ypos 1325
  disable {{!parent.addOrigPlate}}
 }
set Nc746900 [stack 0]
push $Nca59110
 Dot {
  name Dot11
  xpos -194
  ypos 1513
 }
 Merge2 {
  inputs 2
  operation disjoint-over
  name Merge8
  xpos 679
  ypos 1509
 }
push $Nc746900
 Dot {
  name Dot12
  xpos 868
  ypos 1329
 }
 Switch {
  inputs 2
  which {{parent.addOrigPlate}}
  name Switch2
  xpos 834
  ypos 1509
 }
 Output {
  name Output1
  xpos 834
  ypos 1697
 }
push $Nca32340
 Viewer {
  frame_range 1001-1052
  viewerProcess "rec709 (rec709)"
  name Viewer1
  selected true
  xpos 91
  ypos -416
 }
end_group
Copy {
 inputs 2
 from0 rgba.alpha
 to0 rgba.alpha
 name Copy8
 selected true
 xpos -26920
 ypos 6879
}
Premult {
 name Premult12
 selected true
 xpos -26920
 ypos 6976
}
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message EdgeExtendV2
 old_message {{69 100 103 101 69 120 116 101 110 100 86 50}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 11 40 0 70}
   }
 cursor_position 12
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text5
 selected true
 xpos -26920
 ypos 7753
}
Dot {
 name Dot59
 selected true
 xpos -26886
 ypos 7836
}
push $N15741f10
Dot {
 name Dot35
 selected true
 xpos -29618
 ypos 6603
}
set Nc6369c0 [stack 0]
Dot {
 name Dot36
 selected true
 xpos -29314
 ypos 6603
}
Dot {
 name Dot37
 selected true
 xpos -29314
 ypos 6923
}
Constant {
 inputs 0
 channels rgb
 color {0.113 0.032 -0.002 0.012}
 format "1920 1080 0 0 1920 1080 1 HD_1080"
 name Constant9
 selected true
 xpos -29483
 ypos 6653
}
Shuffle2 {
 fromInput1 {{0} B}
 fromInput2 {{0} B}
 mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 white -1 -1 rgba.alpha 0 3"
 name Shuffle6
 selected true
 xpos -29483
 ypos 6761
}
Dot {
 name Dot34
 selected true
 xpos -29449
 ypos 6820
}
push 0
push 0
push $Nc6369c0
Group {
 inputs 4
 name Edge4
 help "Edge allows you to extend the proper color out over transparent edges or areas with a lot of motionblur without eroding away the nice detail. This edge extend has some more advanced features like splitting the core matte and final key which allows you to work on motion blur without effecting small details like hair or a swinging rope for example. There is also more control over how you blend the core detail to the extended edge color. This was shown to me years ago by an old comp sup I had and is the same as the edge extend by Frank Reuter. This is my version of it that has evolved a little bit over the years.\n\nInputs\nThere are multiple inputs to Edge but you can just plug in your FG with alpha if you want to use it simplified. Separating Core and Softer keys or using roto with and without motionblur has advantages in certain situations. ie: If you have a thin object this will help maintain solid alpha where you need it.\n\nFG – Foreground plate with Spill suppression applied\nCore – This is like a core matte, it helps identify the leading edge and where the edge tool should start from. It is important to add this core so that small details are not lost like a thin rope or hair.\nKey – This is your Key with fine hair details and transparent motion blurred edges. For Roto you want to have motion blur turned on.\nBG – This is where your Background goes if you are using the node as Final Result\nMask - Currently this only works if you are using Edge in Final result."
 tile_color 0x990000
 label "\[value iterations]"
 selected true
 xpos -29652
 ypos 6810
 addUserKnob {20 User l Extend}
 addUserKnob {6 xxx_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {41 in l channels T Shuffle2.in}
 addUserKnob {4 operation t "Here you can choose if you want to use the Edge Tool to merge together your foreground and background giving you the Final Result or if you would like the Intermediate Result which is unpremultiplied and not merged over the background. The Intermediate Result can be helpful when tweaking parameters like the edgegrow start and edgegrow size." M {Final Intermediate "" ""}}
 addUserKnob {6 previewedgematte l "preview edge matte" t "This allows you to preview your edge matte that you can use via the channels created in the edge node or by creating a shuffle using the button at the bottom." -STARTLINE}
 addUserKnob {6 extendChromaOnly l "extend chroma only" t "This selection will extend only Chroma information by swapping back in the original luminance information." +STARTLINE}
 addUserKnob {41 exp -STARTLINE T EdgeExpansion.exp}
 addUserKnob {6 premultiplied t "Select this if your footage is already premultiplied to remove dark edges in the extension." -STARTLINE}
 premultiplied true
 addUserKnob {6 clamped l "clamp alpha" t "Select this if your alpha has values below 0 or above 1." -STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {14 edgeStart l "slice start" t "Determines where you would like to start bleeding out the color from the inside of your key. It does this with a series of unpremult, blur, premult operations instead of a standard erode." R 0 100}
 edgeStart {6.8 3.8}
 addUserKnob {41 iterations l "slice iterations" t "Sets how large the edge with the color bleeding will be from the edge grow start or core matte and how many times this will be duplicated." T EdgeExpansion.iterations}
 addUserKnob {41 sliceWidth l "slice width" t "The slice width is the amount of blur being applied per slice." T EdgeExpansion.sliceWidth}
 addUserKnob {41 sliceBlur l INVISIBLE +INVISIBLE T EdgeExpansion.sliceBlur}
 addUserKnob {26 ""}
 addUserKnob {7 blurEdgeBlend l "edge blend" t "Helps to soften the transition from the original to the new edge. It tends to erode the bleeding color back inwards if you use high values." R 0 10}
 blurEdgeBlend 2.3
 addUserKnob {7 blurEdgeBlur l "edge blur" t "This helps soften the transition bringing back original detail. This can sometimes bring back some lighting information instead of having it completely replaced." R 0 10}
 addUserKnob {7 filterErodeEdgeSmooth l "edge smooth" t "This one will help with extremely large motionblur and completely takes away detail. This should not be used in most cases but if you do use it sparingly." R -10 10}
 filterErodeEdgeSmooth 8.3
 addUserKnob {26 ""}
 addUserKnob {41 maskChannelMask l mask -STARTLINE T Merge3.maskChannelMask}
 addUserKnob {41 inject -STARTLINE T Merge3.inject}
 addUserKnob {41 invert_mask l invert -STARTLINE T Merge3.invert_mask}
 addUserKnob {41 fringe -STARTLINE T Merge3.fringe}
 addUserKnob {26 ""}
 addUserKnob {22 edgeShuffleButton l "create edge matte" t "This will generate a shuffle node that isolates the areas of extension which you can use to regrain your edges." T "nuke.root().begin()\nEdgeShuffle = nuke.createNode('Shuffle', inpanel = False)\nEdgeShuffle\['label'].setValue( 'Regrain this edge' )\nEdgeShuffle\['in'].setValue( 'edge' )\nEdgeShuffle\['in2'].setValue( 'none' )\nEdgeShuffle\['red'].setValue('alpha')\nEdgeShuffle\['green'].setValue('alpha')\nEdgeShuffle\['blue'].setValue('alpha')\nEdgeShuffle\['alpha'].setValue('alpha')" +STARTLINE}
 addUserKnob {26 reminder l "" -STARTLINE T "*** use edge.matte to regrain your edges. ***"}
 addUserKnob {20 color l Blending}
 addUserKnob {6 enablecolor l enable t "This tab will help you blending your foreground edges with the background color. it is based off the edge extension in the first tab but you can modify the edge properties to get your desired look." +STARTLINE}
 addUserKnob {6 colorpreview l preview t "Preview the edge being used for blending with the BG. This helps if you want to modify it further." -STARTLINE}
 addUserKnob {41 operation_1 l operation t "This is the merge operation you want to use for blending. It is set to average by default but you can use anything you like ie: plus, max, min." T ColorMerge.operation}
 addUserKnob {7 erodeExpandEdge l "expand edge" t "You can expand or contract the edge created in the extend tab." R -100 100}
 erodeExpandEdge 5
 addUserKnob {7 blurSoftenEdge l "soften edge" t "This blur will help soften the transition of the inside blending edge." R 0 100}
 blurSoftenEdge 9.5
 addUserKnob {41 mix_1 l "mix fg luma" t "At a value of 1 this will only blend the chroma information but you can mix this back to include the luma info as well." T Copy5.mix}
 addUserKnob {7 mergeBlendingMix l mix t "Mix Edge Blending result"}
 mergeBlendingMix 0.745
 addUserKnob {26 ""}
 addUserKnob {7 BlurBG l "blur bg" t "Blur the details in the background when you blend them so your foreground doesnt look transparent." R 0 100}
 addUserKnob {26 ""}
 addUserKnob {20 AdjustBGColor l "adjust bg color" t "Here you can modify the color and saturation of the bg being used for blending. This will anly affect the blending not the actual bg." n 1}
 AdjustBGColor 0
 addUserKnob {41 white l gain T GradeEdgeColor.white}
 addUserKnob {41 gamma T GradeEdgeColor.gamma}
 addUserKnob {41 black l lift T GradeEdgeColor.black}
 addUserKnob {41 saturation T EdgeSat.saturation}
 addUserKnob {41 mix l INVISIBLE +INVISIBLE T ColorMerge.mix}
 addUserKnob {20 endGroup n -1}
 addUserKnob {20 MaskBGLuma l "mask bg luma" t "This section will allow you to preview and isolate the bright areas of the bg to wrap around your foreground. Think of this as a way to have lights wrap arpound your foreground in car comps." n 1}
 MaskBGLuma 0
 addUserKnob {26 maskBgLuma l "mask bg luma"}
 addUserKnob {6 enableBGMask l "enable bg mask" +STARTLINE}
 addUserKnob {6 PreviewBG l "preview bg input" -STARTLINE}
 addUserKnob {41 range l INVISIBLE +INVISIBLE T Keyer1.range}
 addUserKnob {41 out l "Luma Range" T controler.out}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {20 info l Info}
 addUserKnob {26 ""}
 addUserKnob {26 info_1 l "" +STARTLINE T "\nEdge Version 6.9\nCreated by Rob Bannister\nwww.bannisterpost.com"}
 addUserKnob {26 help_1 l "" +STARTLINE T "<a href=\"http://www.bannisterpost.com/downloads/edge/\" style=\"color:white\">HELP</a>"}
}
 Histogram {
  inputs 0
  name controler
  xpos -982
  ypos 561
 }
 Input {
  inputs 0
  name FG
  xpos 376
  ypos -343
 }
 Unpremult {
  name Unpremult3
  xpos 376
  ypos -288
  disable {{!parent.premultiplied}}
 }
 Dot {
  name Dot14
  xpos 410
  ypos -224
 }
set Nc68c300 [stack 0]
 Input {
  inputs 0
  name Key
  xpos -215
  ypos -318
  number 1
 }
 Clamp {
  name Clamp1
  xpos -215
  ypos -180
  disable {{parent.clamped==0?1:0}}
 }
 Switch {
  inputs 2
  which {{"!\[exists parent.input1]"}}
  name Switch1
  xpos -215
  ypos -61
 }
set Nc6a4eb0 [stack 0]
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle1
  xpos -215
  ypos 237
 }
set Nc6ad2a0 [stack 0]
 Dot {
  name Dot6
  xpos -181
  ypos 477
 }
set Nc6be060 [stack 0]
push $Nc6a4eb0
 Input {
  inputs 0
  name Core
  xpos 791
  ypos -331
  number 2
 }
 Clamp {
  name Clamp2
  xpos 787
  ypos -157
  disable {{parent.clamped==0?1:0}}
 }
 Switch {
  inputs 2
  which {{"!\[exists parent.input2]"}}
  name Switch5
  xpos 787
  ypos -61
 }
 Erode {
  size {{parent.edgeStart} {parent.edgeStart}}
  name Erode1
  label "\[value size]"
  selected true
  xpos 787
  ypos 22
 }
 Blur {
  channels alpha
  size {{parent.blurEdgeBlur}}
  name Blur_edgeBur
  label "\[value size]"
  xpos 787
  ypos 126
 }
set Nc6ec6f0 [stack 0]
 Blur {
  channels alpha
  size {{parent.blurEdgeBlend}}
  name blue_edgeBlend
  label "\[value size]"
  xpos 591
  ypos 126
 }
 FilterErode {
  size {{parent.filterErodeEdgeSmooth}}
  filter gaussian
  name FilterErode_edgeSmooth
  label "\[value size]"
  xpos 591
  ypos 224
 }
set Nc508400 [stack 0]
push $Nc6ad2a0
 ChannelMerge {
  inputs 2
  operation stencil
  name ChannelMerge1
  xpos -64
  ypos 224
 }
 ChannelMerge {
  inputs 2
  operation multiply
  name ChannelMerge2
  xpos -64
  ypos 460
 }
 Dot {
  name Dot17
  xpos -30
  ypos 691
 }
set Nc52ea00 [stack 0]
 Dot {
  name Dot11
  xpos -30
  ypos 1133
 }
 Input {
  inputs 0
  name BG
  xpos -1081
  ypos -343
  number 3
 }
 Dot {
  name Dot5
  xpos -1047
  ypos 293
 }
set Nc53d4d0 [stack 0]
 Dot {
  name Dot12
  xpos -1047
  ypos 644
 }
set Nc542400 [stack 0]
 Keyer {
  operation "luminance key"
  range {{parent.controler.out.0} {parent.controler.out.1} 1 1}
  name Keyer1
  xpos -979
  ypos 634
 }
 Blur {
  channels rgba
  size {{parent.BlurBG}}
  name Blur2
  label "\[value size]"
  xpos -717
  ypos 634
 }
set Nc552450 [stack 0]
push $Nc508400
 Dot {
  name Dot7
  xpos 625
  ypos 344
 }
set Nc55fde0 [stack 0]
 Dilate {
  channels alpha
  size {{parent.erodeExpandEdge}}
  name DilateColorEdge
  label "\[value size]"
  xpos -388
  ypos 327
 }
 Blur {
  channels alpha
  size {{parent.blurSoftenEdge}}
  name BlurColorEdge
  label "\[value size]"
  xpos -498
  ypos 327
 }
push $Nc6ec6f0
push $Nc68c300
 Shuffle {
  name Shuffle2
  xpos 376
  ypos -174
 }
 Remove {
  channels alpha
  name Remove1
  xpos 376
  ypos -113
 }
 Dot {
  name Dot16
  xpos 410
  ypos 459
 }
set Nc597d50 [stack 0]
 Group {
  inputs 2
  name EdgeExpansion
  knobChanged "\n\nn = nuke.thisNode()\nk = nuke.thisKnob()\n\nif 'iterations' in k.name(): \n    #print int(k.value())\n    k.setValue(int(k.value()))\n    if k.value()<1:\n        k.setValue(1)\n    n.begin()\n\n    for node in nuke.allNodes():\n        if 'static' not in node\['label'].value():\n            nuke.delete(node)\n\n    slices = int(n\['iterations'].value())-1\n    step = 1\n    blur_count = 5\n    merge_count = 2\n    unpremult_count = 4\n    num = 1\n    for x in range(1,slices+step,step):\n        \n        a = nuke.createNode('Blur', inpanel=False)\n        new_knob = nuke.Int_Knob('exp_value')\n        a.addKnob(new_knob)\n        a\['exp_value'].setValue(num)\n        a.setInput(0, nuke.toNode('Unpremult' + str(unpremult_count)))\n        a\['size'].setExpression('parent.sliceWidth*(parent.exp==0?1:exp_value)')\n        a\['channels'].setValue('red green blue depth.Z')\n\n        b = nuke.createNode('Shuffle', inpanel=False)\n        b\['in'].setValue( 'rgba' )\n        b\['in2'].setValue( 'depth' )\n        b\['out2'].setValue( 'depth' )\n        b\['alpha'].setValue('red2')\n\n        c = nuke.createNode('Unpremult', inpanel=False)\n        c\['channels'].setValue('red green blue alpha')\n        c\['alpha'].setValue('depth.Z')\n\n        d = nuke.createNode('Blur', inpanel=False)\n        new_knob = nuke.Int_Knob('exp_value')\n        d.addKnob(new_knob)\n        d\['exp_value'].setValue(num)\n        d\['size'].setExpression('parent.sliceWidth*(parent.exp==0?1:exp_value)')\n        d\['channels'].setValue('rgba')\n\n        e = nuke.createNode('Merge2', inpanel=False)\n        e\['Achannels'].setValue('red green blue depth.Z')\n        e.setInput(1, nuke.toNode('Merge' + str(merge_count)))\n        e.setInput(0, nuke.toNode('Blur' + str(blur_count+2)))\n\n        merge_count += 1\n        blur_count += 2\n        unpremult_count += 1\n\n        f = nuke.createNode('Blur', inpanel=False)\n        new_knob = nuke.Int_Knob('exp_value')\n        f.addKnob(new_knob)\n        f\['exp_value'].setValue(num)\n        f.setInput(0, nuke.toNode('Unpremult' + str(unpremult_count)))\n        f\['size'].setExpression('parent.sliceWidth*(parent.exp==0?1:exp_value)')\n        f\['channels'].setValue('rgba')\n\n        g = nuke.createNode('Shuffle', inpanel=False)\n        g\['in'].setValue( 'rgba' )\n        g\['in2'].setValue( 'depth' )\n        g\['out2'].setValue( 'depth' )\n        g\['black'].setValue('alpha')\n\n        h = nuke.createNode('Unpremult', inpanel=False)\n        h\['channels'].setValue('red green blue depth.Z')\n\n        j = nuke.createNode('Blur', inpanel=False)\n        new_knob = nuke.Int_Knob('exp_value')\n        j.addKnob(new_knob)\n        j\['exp_value'].setValue(num)\n        j\['size'].setExpression('parent.sliceWidth*(parent.exp==0?1:exp_value)')\n        j\['channels'].setValue('red green blue depth.Z')\n\n        k = nuke.createNode('Merge2', inpanel=False)\n        k.setInput(1, nuke.toNode('Merge' + str(merge_count)))\n        k.setInput(0, nuke.toNode('Blur' + str(blur_count+2)))\n\n        merge_count += 1\n        blur_count += 2\n        unpremult_count += 1\n        num += 1\n        nuke.toNode('Output1').setInput(0, k)\n\n    try:\n        nuke.toNode('Blur5').setInput(0, nuke.toNode('Unpremult4'))\n    except:\n        nuke.toNode('Output1').setInput(0, nuke.toNode('Merge2'))\n\n    n.end()\n    \n\n"
  note_font_size 25
  xpos 787
  ypos 449
  addUserKnob {20 User}
  addUserKnob {6 firstrun l "Disable before input" +STARTLINE}
  firstrun {{"!\[exists parent.input0]"}}
  addUserKnob {6 exp t "The exponential check box will add a variable to the duplicated blurs that increases as they move outwards from the original edge. This might help if you have a large distance to extend." +STARTLINE}
  addUserKnob {7 iterations t "Sets how large the edge with the color bleeding will be from the edge grow start or core matte and how many times this will be duplicated. The smaller the width the more detail is preserved.This should be just big enough to reach the edge of the largest areas of motionblur." R 1 25}
  iterations 7
  addUserKnob {7 sliceWidth l "slice width" t "The slice width is the amount of blur being applied per slice." R 1 10}
  sliceWidth 1
  addUserKnob {7 sliceBlur l "slice blur" t "The slice width is the amount of blur being applied per slice." R 1 10}
  sliceBlur 1
 }
  Input {
   inputs 0
   name Alpha
   label static
   xpos -218
   ypos -646
   number 1
  }
  Input {
   inputs 0
   name RGB
   label static
   xpos -64
   ypos -772
  }
  Unpremult {
   name Unpremult1
   label static
   xpos -64
   ypos -689
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   label static
   xpos -64
   ypos -653
   disable {{parent.firstrun}}
  }
  Premult {
   name Premult1
   label static
   xpos -64
   ypos -599
  }
  Shuffle {
   black alpha
   out2 depth
   name Shuffle1
   label static
   xpos -64
   ypos -561
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult2
   label static
   xpos -64
   ypos -523
  }
set Nc5e1e90 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth}}
   name Blur1
   label static
   xpos -64
   ypos -428
  }
  Dot {
   name Dot2
   label static
   xpos -30
   ypos -336
  }
push $Nc5e1e90
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth}}
   name Blur2
   label static
   xpos 46
   ypos -523
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle2
   label static
   xpos 46
   ypos -471
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult3
   label static
   xpos 46
   ypos -435
  }
set Nc41be10 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth}}
   name Blur3
   label static
   xpos 46
   ypos -381
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge1
   label static
   xpos 46
   ypos -343
  }
  Dot {
   name Dot3
   label static
   xpos 80
   ypos -237
  }
push $Nc41be10
  Blur {
   channels rgba
   size {{parent.sliceWidth}}
   name Blur4
   label static
   xpos 156
   ypos -428
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle3
   label static
   xpos 156
   ypos -390
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult4
   label static
   xpos 156
   ypos -350
  }
set Nc466750 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth}}
   name Blur5
   label static
   xpos 156
   ypos -299
  }
  Merge2 {
   inputs 2
   name Merge2
   label static
   xpos 156
   ypos -247
  }
push $Nc466750
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur6
   xpos 266
   ypos -300
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 1
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle4
   xpos 266
   ypos -262
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult5
   xpos 266
   ypos -236
  }
set Nc4ac750 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur7
   xpos 376
   ypos -198
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 1
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge3
   xpos 376
   ypos -172
  }
push $Nc4ac750
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur8
   xpos 266
   ypos -198
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 1
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle5
   xpos 266
   ypos -172
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult6
   xpos 266
   ypos -146
  }
set Nc4f2ce0 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur9
   xpos 376
   ypos -108
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 1
  }
  Merge2 {
   inputs 2
   name Merge4
   xpos 486
   ypos -108
  }
push $Nc4f2ce0
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur10
   xpos 266
   ypos -108
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 2
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle6
   xpos 266
   ypos -70
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult7
   xpos 266
   ypos -44
  }
set Nc3392d0 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur11
   xpos 376
   ypos -6
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 2
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge5
   xpos 486
   ypos -6
  }
push $Nc3392d0
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur12
   xpos 266
   ypos -6
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 2
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle7
   xpos 266
   ypos 20
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult8
   xpos 266
   ypos 46
  }
set Nc37f980 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur13
   xpos 376
   ypos 84
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 2
  }
  Merge2 {
   inputs 2
   name Merge6
   xpos 486
   ypos 84
  }
push $Nc37f980
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur14
   xpos 266
   ypos 84
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 3
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle8
   xpos 266
   ypos 122
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult9
   xpos 266
   ypos 148
  }
set Nc3c5f30 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur15
   xpos 376
   ypos 186
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 3
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge7
   xpos 486
   ypos 186
  }
push $Nc3c5f30
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur16
   xpos 266
   ypos 186
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 3
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle9
   xpos 266
   ypos 212
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult10
   xpos 266
   ypos 238
  }
set Nc20c4f0 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur17
   xpos 376
   ypos 276
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 3
  }
  Merge2 {
   inputs 2
   name Merge8
   xpos 486
   ypos 276
  }
push $Nc20c4f0
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur18
   xpos 266
   ypos 276
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 4
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle10
   xpos 266
   ypos 314
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult11
   xpos 266
   ypos 340
  }
set Nc252aa0 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur19
   xpos 376
   ypos 378
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 4
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge9
   xpos 486
   ypos 378
  }
push $Nc252aa0
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur20
   xpos 266
   ypos 378
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 4
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle11
   xpos 266
   ypos 404
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult12
   xpos 266
   ypos 430
  }
set Nc299450 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur21
   xpos 376
   ypos 468
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 4
  }
  Merge2 {
   inputs 2
   name Merge10
   xpos 486
   ypos 468
  }
push $Nc299450
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur22
   xpos 266
   ypos 468
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 5
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle12
   xpos 266
   ypos 506
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult13
   xpos 266
   ypos 532
  }
set Nc2dfa00 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur23
   xpos 376
   ypos 570
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 5
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge11
   xpos 486
   ypos 570
  }
push $Nc2dfa00
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur24
   xpos 266
   ypos 570
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 5
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle13
   xpos 266
   ypos 596
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult14
   xpos 266
   ypos 622
  }
set Nc1261b0 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur25
   xpos 376
   ypos 654
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 5
  }
  Merge2 {
   inputs 2
   name Merge12
   xpos 486
   ypos 660
  }
push $Nc1261b0
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur26
   xpos 266
   ypos 660
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 6
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle14
   xpos 266
   ypos 698
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult15
   xpos 266
   ypos 724
  }
set Nc16c760 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur27
   xpos 376
   ypos 762
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 6
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge13
   xpos 486
   ypos 762
  }
push $Nc16c760
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur28
   xpos 266
   ypos 762
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 6
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle15
   xpos 266
   ypos 788
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult16
   xpos 266
   ypos 814
  }
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur29
   xpos 266
   ypos 852
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 6
  }
  Merge2 {
   inputs 2
   name Merge14
   selected true
   xpos 486
   ypos 852
  }
  Output {
   name Output1
   label static
   xpos 156
   ypos 4217
  }
 end_group
set Nc59cca0 [stack 0]
push $Nc6ad2a0
 Switch {
  inputs 2
  which {{parent.FinalSwitch.which}}
  name Switch2
  xpos -418
  ypos 237
 }
 Dilate {
  size 50
  name Dilate1
  label "\[value size]"
  xpos -608
  ypos 224
  disable true
 }
 ChannelMerge {
  inputs 2
  operation stencil
  name ChannelMerge3
  xpos -608
  ypos 327
 }
 ChannelMerge {
  inputs 2
  operation multiply
  name ChannelMerge_colormask
  xpos -608
  ypos 628
  disable {{!parent.enableBGMask}}
 }
 Dot {
  name Dot4
  xpos -574
  ypos 702
 }
set N42dab60 [stack 0]
 Dot {
  name Dot10
  xpos -573
  ypos 1057
 }
push $Nc552450
 Dot {
  name Dot13
  xpos -683
  ypos 993
 }
 Premult {
  name Premult1
  xpos -971
  ypos 990
 }
push $N42dab60
push $Nc6be060
push $Nc52ea00
push $Nc597d50
 Dot {
  name Dot1
  xpos 410
  ypos 565
 }
set N42f1c20 [stack 0]
 Dot {
  name Dot18
  xpos 190
  ypos 565
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace2
  xpos 156
  ypos 596
 }
push $Nc55fde0
 Dot {
  name Dot8
  xpos 625
  ypos 602
 }
push $N42f1c20
push $Nc59cca0
 Dot {
  name Dot15
  xpos 821
  ypos 531
 }
 Dot {
  name Dot3
  xpos 821
  ypos 733
 }
 Keymix {
  inputs 3
  name Keymix1
  xpos 376
  ypos 723
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace1
  xpos 266
  ypos 729
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 rgba.red
  name Copy1
  xpos 156
  ypos 723
  disable {{!parent.extendChromaOnly}}
 }
 Colorspace {
  colorspace_in YCbCr
  name Colorspace3
  xpos 46
  ypos 729
 }
 ShuffleCopy {
  inputs 2
  red alpha
  green alpha
  blue alpha
  out edge
  name ShuffleCopy1
  xpos -64
  ypos 729
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy2
  xpos -215
  ypos 723
 }
 Dot {
  name Dot9
  xpos -472
  ypos 733
 }
set N438dbb0 [stack 0]
 Colorspace {
  colorspace_out YCbCr
  name Colorspace4
  xpos -506
  ypos 434
 }
push $Nc53d4d0
 Colorspace {
  colorspace_out YCbCr
  name Colorspace6
  xpos -790
  ypos 290
 }
 Blur {
  channels rgb
  size {{parent.BlurBG}}
  name Blur1
  label "\[value size]"
  xpos -790
  ypos 341
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 rgba.red
  from1 rgba.alpha
  to1 rgba.alpha
  name Copy5
  xpos -790
  ypos 421
 }
 Colorspace {
  colorspace_in YCbCr
  name Colorspace5
  xpos -790
  ypos 487
 }
 Grade {
  black_clamp false
  name GradeEdgeColor
  xpos -790
  ypos 525
 }
 Saturation {
  name EdgeSat
  xpos -790
  ypos 563
 }
push $N438dbb0
 Merge2 {
  inputs 2+1
  operation average
  Achannels rgb
  output rgb
  mix {{parent.mergeBlendingMix}}
  name ColorMerge
  xpos -791
  ypos 730
  disable {{!parent.enablecolor}}
 }
set N4218560 [stack 0]
 Dot {
  name Dot2
  xpos -757
  ypos 911
 }
 Input {
  inputs 0
  name Mask
  xpos -1288
  ypos 730
  number 4
 }
push $N4218560
 Premult {
  name Premult3
  xpos -955
  ypos 730
 }
push $Nc542400
 Merge2 {
  inputs 2+1
  also_merge edge
  name Merge3
  xpos -1081
  ypos 730
 }
 Switch {
  inputs 2
  which {{operation}}
  name FinalSwitch
  xpos -1081
  ypos 908
 }
 Switch {
  inputs 2
  which {{parent.PreviewBG}}
  name BGPreview
  xpos -1081
  ypos 990
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.red
  name Copy3
  xpos -1081
  ypos 1050
  disable {{parent.colorpreview*-1+1}}
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.red
  name Copy4
  xpos -1081
  ypos 1123
  disable {{!parent.previewedgematte}}
 }
 Shuffle {
  out {{{parent.Shuffle2.in}}}
  name Shuffle3
  xpos -1081
  ypos 1237
 }
 Output {
  name Output1
  xpos -1081
  ypos 1947
 }
end_group
set Nc65ff30 [stack 0]
Copy {
 inputs 2
 from0 rgba.alpha
 to0 rgba.alpha
 name Copy16
 selected true
 xpos -29652
 ypos 6914
}
Premult {
 name Premult13
 selected true
 xpos -29652
 ypos 7003
}
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message Edge
 old_message {{69 100 103 101}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 0 70}
   }
 cursor_position 4
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text4
 selected true
 xpos -29652
 ypos 7753
}
Dot {
 name Dot38
 selected true
 xpos -29618
 ypos 7836
}
push $N1573cf10
Dot {
 name Dot26
 selected true
 xpos -31403
 ypos 6616
}
set N40d3e70 [stack 0]
Dot {
 name Dot29
 selected true
 xpos -31256
 ypos 6616
}
Dot {
 name Dot28
 selected true
 xpos -31256
 ypos 6891
}
push $N40d3e70
Dot {
 name Dot24
 selected true
 xpos -31529
 ypos 6616
}
Dot {
 name Dot27
 selected true
 xpos -31529
 ypos 6777
}
push $N40d3e70
Group {
 inputs 2
 name ColorDilate5
 knobChanged "\ntn = nuke.thisNode()\ntk = nuke.thisKnob()\n\nfullList =  tn\['fullList'].value().strip(\"\[']\").split(\"', '\")\nnodeList = fullList\[0], fullList\[1], fullList\[2], fullList\[3], fullList\[4], fullList\[5], fullList\[6]\npreviousLoopNum = tn\['previousLoopNum'].getValue()\n\ngrowTexture = tn\['growTexture'].getValue()\nqualityVal = int( tn\['quality'].getValue() )\n\n\n##### DEFINE VALUE CHANGES ##################\n\ndef valChange():\n    qualityBias = tn\['qualityBias'].getValue()\n    blurCenter = tn\['blurCenter'].getValue()\n    bcDistribution = tn\['bcDistribution'].getValue()\n    for i in range (0, qualityVal):\n        blurVal = nuke.toNode(fullList\[i*len(nodeList)])\n        erodeVal = nuke.toNode(fullList\[i*len(nodeList)+3])\n        blurCenterVal = nuke.toNode(fullList\[i*len(nodeList)+5])\n        if isinstance(growTexture, float) == True:\n            blurValSize = (growTexture/qualityVal*(i+1)*(1-qualityBias)) + (growTexture/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2)))\n            blurVal\['size'].setValue( blurValSize )\n            erodeVal\['size'].setValue(blurVal\['size'].getValue()/2)\n            blurCenterVal\['size'].setValue( ( blurValSize*(1-bcDistribution) +  (blurValSize*(bcDistribution*(pow(i+1, 2)/pow(qualityVal, 2)))) ) * blurCenter )\n        else:\n            blurVal\['size'].setValue(\[ (growTexture\[0]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[0]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) , (growTexture\[1]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[1]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) ])\n            erodeVal\['size'].setValue(\[blurVal\['size'].getValue()\[0]/2,blurVal\['size'].getValue()\[1]/2])\n            blurCenterVal\['size'].setValue(\[ (growTexture\[0]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[0]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) , (growTexture\[1]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[1]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) ])\n\ndef filterChange():\n    filters = int( tn\['filter'].getValue() )\n    filterQuality = int( tn\['filterQuality'].getValue() )\n    crop = int( tn\['crop'].getValue() )\n    for i in range (0, qualityVal):\n        blurVal = nuke.toNode(fullList\[i*len(nodeList)])\n        blurVal\['filter'].setValue( filters )\n        blurVal\['quality'].setValue( filterQuality )\n        blurVal\['crop'].setValue( crop )\n        blurCenterVal = nuke.toNode(fullList\[i*len(nodeList)])\n        blurCenterVal\['filter'].setValue( filters )\n        blurCenterVal\['quality'].setValue( filterQuality )\n        blurCenterVal\['crop'].setValue( crop )\n\n\n##### CREATE THE NODES ###################\n\nif tk.name()=='quality':\n    if qualityVal < 1:\n        qualityVal = 1\n    elif qualityVal >100:\n        qualityVal = 100\n    tn\['quality'].setValue( qualityVal )\n    \n\n    if qualityVal != previousLoopNum:\n\n\n        inputDep = nuke.dependencies(\[nuke.toNode('Unpremult1')], nuke.INPUTS)\n        resultOver = nuke.toNode( inputDep\[0].name() )\n\n        difference = qualityVal-previousLoopNum\n        if difference > 0:\n            for i in range (1, int(difference+1)):\n                \n                blur = nuke.nodes.Blur ()\n                blur\['channels'].setValue('rgba')\n                blur\['maskChannelInput'].setValue('none')\n                blur.setInput (0, nuke.toNode('Switch2'))\n                \n                unpremult = nuke.nodes.Unpremult ()\n                unpremult\['channels'].setValue('rgb')\n                unpremult\['alpha'].setValue('rgba.alpha')\n                unpremult\['invert'].setValue(0)\n                unpremult.setInput (0, blur)\n                \n                expression = nuke.nodes.Expression(expr3 = 'a==0?0:1')\n                expression.setInput (0, unpremult)\n                \n                erode = nuke.nodes.FilterErode ()\n                erode\['channels'].setValue( 'rgba.alpha' )\n                erode\['filter'].setValue( 'gaussian' )\n                erode.setInput (0, expression)\n                \n                premult = nuke.nodes.Premult ()\n                premult\['channels'].setValue( 'rgb' )\n                premult\['alpha'].setValue( 'rgba.alpha' )\n                premult.setInput (0, erode)\n\n                blurCenter = nuke.nodes.Blur ()\n                blurCenter\['channels'].setValue('rgba')\n                blurCenter\['maskChannelInput'].setValue('none')\n                blurCenter.setInput (0, premult)\n\n                mergeOver = nuke.nodes.Merge2 ()\n                mergeOver\['operation'].setValue( 'over' )\n                mergeOver\['sRGB'].setValue( 0 )\n                mergeOver\['screen_alpha'].setValue( 0 )\n                mergeOver\['bbox'].setValue( 'union' )\n                mergeOver\['Achannels'].setValue( 'rgba' )\n                mergeOver\['Bchannels'].setValue( 'rgba' )\n                mergeOver\['output'].setValue( 'rgba' )\n                mergeOver\['also_merge'].setValue( 'none' )\n                mergeOver.setInput (0, blurCenter)\n                mergeOver.setInput (1, resultOver)\n                \n                \n                resultOver = mergeOver\n                \n                \n                nodeList = blur.name(), unpremult.name(), expression.name(), erode.name(), premult.name(), blurCenter.name(), resultOver.name()\n                fullList.extend(nodeList)\n\n\n##### DELETE THE NODES ##################################\n\n        else:\n            fullList.reverse()\n            for i in range (int(qualityVal), int(previousLoopNum)):\n                for i in range (0, len(nodeList)):\n                    nuke.delete(nuke.toNode(fullList\[0]))\n                    del fullList\[0]\n                resultOver = nuke.toNode(fullList\[0])\n                resultExpression = nuke.toNode(fullList\[3])\n            fullList.reverse()\n\n        nuke.toNode('Unpremult1').setInput(0, resultOver)\n        valChange()\n        filterChange()\n                \n        previousLoopNum = qualityVal\n        \n        tn\['previousLoopNum'].setValue( int(previousLoopNum) )\n        tn\['fullList'].setValue( str(fullList) )\n\n\n\n##### CHANGE EXISTING VALUES #####################\n\nif tk.name()=='growTexture':\n    valChange()\n    \nif tk.name()=='qualityBias':\n    valChange()\n\nif tk.name()=='blurCenter':\n    valChange()\n\nif tk.name()=='bcDistribution':\n    valChange()\n    \nif tk.name()=='filter':\n    filterChange()\n    \nif tk.name()=='filterQuality':\n    filterChange()\n    \nif tk.name()=='crop':\n    filterChange()\n\n\n"
 note_font "Bitstream Vera Sans"
 selected true
 xpos -31437
 ypos 6773
 addUserKnob {20 User l fColourDilate}
 addUserKnob {14 growTexture l "Grow Texture" R 0 100}
 growTexture {8.4 4.4}
 addUserKnob {14 erodeMatte l "Erode Matte" t "Dilate or erode the matte to adjust the grow start paint" R -100 100}
 erodeMatte {-8 -4}
 addUserKnob {7 expandMatte l "Expand Matte" t "Expand or compress the matte to adjust the grow start point" R -0.99999 0.99999}
 expandMatte 0.14
 addUserKnob {7 quality l Iterations t "The number of iterations Colour Dilate will go through.  More is slower.  Max steps is 100" R 1 20}
 quality 7
 addUserKnob {7 qualityBias l Distribution t "0 is a linear distribution.  1 is exponential distribution.\nExponential is smoother with low quality.\nLinear is better with high quality."}
 addUserKnob {26 ""}
 addUserKnob {7 blurCenter l "Blur Center" t "Soften central area where opposite dilates meet creating a hard line.  Is a multiple of Grow Texture." R 0 5}
 addUserKnob {7 bcDistribution l "BC Distribution" t "0 blurs a direct multiple of Grow Texture. 1 blurs exponentially more towards the center."}
 addUserKnob {26 ""}
 addUserKnob {4 filter l Filter t "filter\n" M {box triangle quadratic gaussian ""}}
 filter quadratic
 addUserKnob {3 filterQuality l " " -STARTLINE}
 filterQuality 15
 addUserKnob {6 crop l "crop to format" -STARTLINE}
 crop true
 addUserKnob {4 matteOutput l "Matte Output" M {rgb.alpha matte "dilated matte" "dilated area" "grain matte" ""}}
 matteOutput "dilated area"
 addUserKnob {26 blank l "" -STARTLINE T "      "}
 addUserKnob {6 invertMatte l "invert Matte" -STARTLINE}
 invertMatte true
 addUserKnob {26 blank2 l "" -STARTLINE T "      "}
 addUserKnob {6 rgbIsPremult l "RGB is Premult?" -STARTLINE}
 rgbIsPremult true
 addUserKnob {1 colorDilate l INVISIBLE t "Keep me hidden" +INVISIBLE}
 addUserKnob {3 previousLoopNum l INVISIBLE +INVISIBLE}
 previousLoopNum 7
 addUserKnob {1 fullList l INVISIBLE +INVISIBLE}
 fullList "\['Blur1', 'Unpremult2', 'Expression1', 'FilterErode2', 'Premult1', 'BlurCenter', 'Merge2', 'Blur2', 'Unpremult3', 'Expression2', 'FilterErode3', 'Premult2', 'Blur3', 'Merge5', 'Blur4', 'Unpremult4', 'Expression3', 'FilterErode4', 'Premult3', 'Blur5', 'Merge6', 'Blur6', 'Unpremult5', 'Expression4', 'FilterErode5', 'Premult4', 'Blur7', 'Merge7', 'Blur8', 'Unpremult6', 'Expression5', 'FilterErode6', 'Premult5', 'Blur9', 'Merge8', 'Blur10', 'Unpremult7', 'Expression6', 'FilterErode7', 'Premult6', 'Blur11', 'Merge9', 'Blur12', 'Unpremult8', 'Expression7', 'FilterErode8', 'Premult7', 'Blur13', 'Merge10']"
}
 Input {
  inputs 0
  name InputMask
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -665
  number 1
 }
set N40fef50 [stack 0]
 AddChannels {
  channels alpha
  name AddChannels2
  note_font "Bitstream Vera Sans"
  xpos 365
  ypos 1125
 }
 Dot {
  name Dot3
  note_font "Bitstream Vera Sans"
  xpos 399
  ypos 1183
 }
 Input {
  inputs 0
  name InputRGB
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -531
 }
set N4111d20 [stack 0]
 AddChannels {
  channels alpha
  name AddChannels1
  note_font "Bitstream Vera Sans"
  xpos 348
  ypos 949
 }
 Dot {
  name Dot2
  note_font "Bitstream Vera Sans"
  xpos 382
  ypos 1078
 }
push $N40fef50
 FilterErode {
  channels alpha
  size {{invertMatte==0?erodeMatte.w:-erodeMatte.w} {invertMatte==0?erodeMatte.h:-erodeMatte.h}}
  name FilterErode1
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -631
 }
 Invert {
  channels alpha
  mix {{invertMatte}}
  name Invert2
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -563
 }
 Clamp {
  minimum 1e-05
  MinClampTo_enable true
  MaxClampTo_enable true
  name Clamp1
  xpos 803
  ypos -497
 }
 Grade {
  channels alpha
  blackpoint {{"clamp(expandMatte, 0, 1)"}}
  whitepoint {{"clamp(1+expandMatte, 0, 1)"}}
  white_clamp true
  name Grade1
  note_font "Bitstream Vera Sans"
  xpos 624
  ypos -474
 }
 Grade {
  channels alpha
  whitepoint 0.5
  black_clamp false
  white_clamp true
  name Grade6
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -343
 }
 Dot {
  name Dot1
  note_font "Bitstream Vera Sans"
  xpos 837
  ypos -287
 }
set N416e1c0 [stack 0]
push $N4111d20
 AddChannels {
  channels alpha
  name AddChannels3
  note_font "Bitstream Vera Sans"
  xpos 1120
  ypos -444
 }
push $N4111d20
 Shuffle {
  alpha white
  name Shuffle1
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -458
 }
 Crop {
  box {{InputRGB.bbox.x i x1001 542} {InputRGB.bbox.y i} {InputRGB.bbox.r i} {InputRGB.bbox.t i}}
  name Crop3
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -414
 }
 Switch {
  inputs 2
  which {{rgbIsPremult}}
  name Switch1
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -372
 }
 Dot {
  name Dot5
  note_font "Bitstream Vera Sans"
  xpos 1047
  ypos -326
 }
set N41a0800 [stack 0]
 Merge2 {
  inputs 2
  operation stencil
  bbox intersection
  name Merge1
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -290
 }
push $N416e1c0
 Dot {
  name Dot4
  note_font "Bitstream Vera Sans"
  xpos 837
  ypos -253
 }
push $N41a0800
 Dot {
  name Dot6
  note_font "Bitstream Vera Sans"
  xpos 946
  ypos -326
 }
 Merge2 {
  inputs 2
  operation stencil
  bbox B
  name Merge3
  note_font "Bitstream Vera Sans"
  xpos 912
  ypos -258
 }
 Dot {
  name Dot7
  note_font "Bitstream Vera Sans"
  xpos 946
  ypos -192
 }
 Switch {
  inputs 2
  which {{invertMatte}}
  name Switch2
  note_font "Bitstream Vera Sans"
  xpos 1025
  ypos -223
 }
set Nf9f05db0 [stack 0]
push $Nf9f05db0
 Blur {
  channels rgba
  size {1.2 0.6285714286}
  filter quadratic
  name Blur1
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos -27
 }
 Unpremult {
  name Unpremult2
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 18
 }
 Expression {
  expr3 a==0?0:1
  name Expression1
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 62
 }
 FilterErode {
  channels alpha
  size {0.6 0.3142857143}
  filter gaussian
  name FilterErode2
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 106
 }
 Premult {
  name Premult1
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 165
 }
 Blur {
  channels rgba
  size {1.2 0.6285714286}
  name BlurCenter
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 222
 }
 Merge2 {
  inputs 2
  name Merge2
  note_font "Bitstream Vera Sans"
  xpos 1299
  ypos 266
 }
push $Nf9f05db0
 Blur {
  channels rgba
  size {2.4 1.257142857}
  filter quadratic
  name Blur2
 }
 Unpremult {
  name Unpremult3
 }
 Expression {
  expr3 a==0?0:1
  name Expression2
 }
 FilterErode {
  channels alpha
  size {1.2 0.6285714286}
  filter gaussian
  name FilterErode3
 }
 Premult {
  name Premult2
 }
 Blur {
  channels rgba
  size {2.4 1.257142857}
  name Blur3
 }
 Merge2 {
  inputs 2
  name Merge5
 }
push $Nf9f05db0
 Blur {
  channels rgba
  size {3.6 1.885714286}
  filter quadratic
  name Blur4
 }
 Unpremult {
  name Unpremult4
 }
 Expression {
  expr3 a==0?0:1
  name Expression3
 }
 FilterErode {
  channels alpha
  size {1.8 0.9428571429}
  filter gaussian
  name FilterErode4
 }
 Premult {
  name Premult3
 }
 Blur {
  channels rgba
  size {3.6 1.885714286}
  name Blur5
 }
 Merge2 {
  inputs 2
  name Merge6
 }
push $Nf9f05db0
 Blur {
  channels rgba
  size {4.8 2.514285714}
  filter quadratic
  name Blur6
 }
 Unpremult {
  name Unpremult5
 }
 Expression {
  expr3 a==0?0:1
  name Expression4
 }
 FilterErode {
  channels alpha
  size {2.4 1.257142857}
  filter gaussian
  name FilterErode5
 }
 Premult {
  name Premult4
 }
 Blur {
  channels rgba
  size {4.8 2.514285714}
  name Blur7
 }
 Merge2 {
  inputs 2
  name Merge7
 }
push $Nf9f05db0
 Blur {
  channels rgba
  size {6 3.142857143}
  filter quadratic
  name Blur8
 }
 Unpremult {
  name Unpremult6
 }
 Expression {
  expr3 a==0?0:1
  name Expression5
 }
 FilterErode {
  channels alpha
  size {3 1.571428571}
  filter gaussian
  name FilterErode6
 }
 Premult {
  name Premult5
 }
 Blur {
  channels rgba
  size {6 3.142857143}
  name Blur9
 }
 Merge2 {
  inputs 2
  name Merge8
 }
push $Nf9f05db0
 Blur {
  channels rgba
  size {7.2 3.771428571}
  filter quadratic
  name Blur10
 }
 Unpremult {
  name Unpremult7
 }
 Expression {
  expr3 a==0?0:1
  name Expression6
 }
 FilterErode {
  channels alpha
  size {3.6 1.885714286}
  filter gaussian
  name FilterErode7
 }
 Premult {
  name Premult6
 }
 Blur {
  channels rgba
  size {7.2 3.771428571}
  name Blur11
 }
 Merge2 {
  inputs 2
  name Merge9
 }
push $Nf9f05db0
 Blur {
  channels rgba
  size {8.4 4.4}
  filter quadratic
  name Blur12
 }
 Unpremult {
  name Unpremult8
 }
 Expression {
  expr3 a==0?0:1
  name Expression7
 }
 FilterErode {
  channels alpha
  size {4.2 2.2}
  filter gaussian
  name FilterErode8
 }
 Premult {
  name Premult7
 }
 Blur {
  channels rgba
  size {8.4 4.4}
  name Blur13
 }
 Merge2 {
  inputs 2
  name Merge10
 }
 Unpremult {
  name Unpremult1
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 966
 }
 Dot {
  name Dot11
  xpos 258
  ypos 1020
 }
set Nf9d78590 [stack 0]
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  mix {{matteOutput==0?1:0 i}}
  name Copy2
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1068
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  mix {{matteOutput==1?1:0}}
  name Copy1
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1173
 }
 Dot {
  name Dot8
  xpos 258
  ypos 1227
 }
set Nf9d9a310 [stack 0]
 Dot {
  name Dot9
  xpos 453
  ypos 1227
 }
 Expression {
  expr3 a<=0.000001?0:1
  name Expression12
  note_font "Bitstream Vera Sans"
  xpos 419
  ypos 1261
 }
 Dot {
  name Dot10
  xpos 453
  ypos 1303
 }
push $Nf9d78590
 Dot {
  name Dot13
  xpos 521
  ypos 1020
 }
 Dot {
  name Dot12
  xpos 521
  ypos 1205
 }
push $N4111d20
 Merge2 {
  inputs 2
  operation difference
  bbox B
  name Merge14
  xpos 563
  ypos 1201
 }
 Keyer {
  operation "luminance key"
  range {0 1e-05 1 1}
  name Keyer1
  xpos 563
  ypos 1243
 }
 Merge2 {
  inputs 2
  operation mask
  bbox B
  name Merge15
  xpos 563
  ypos 1299
 }
 Dot {
  name Dot14
  xpos 597
  ypos 1341
 }
push $Nf9d9a310
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  mix {{matteOutput==4?1:0 i}}
  name Copy3
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1331
 }
 Expression {
  expr3 a<=0.000001?0:1
  mix {{matteOutput==3?1:0}}
  name Expression8
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1418
 }
push $N4111d20
 Merge2 {
  inputs 2
  operation copy
  bbox B
  name Merge4
  xpos 932
  ypos 1418
 }
 Output {
  name Output1
  note_font "Bitstream Vera Sans"
  xpos 932
  ypos 1579
 }
end_group
Copy {
 inputs 2
 from0 rgba.alpha
 to0 rgba.alpha
 name Copy7
 selected true
 xpos -31437
 ypos 6881
}
Premult {
 name Premult15
 selected true
 xpos -31437
 ypos 6952
}
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message ColorDilate
 old_message {{67 111 108 111 114 68 105 108 97 116 101}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 0 70}
   }
 cursor_position 11
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text3
 selected true
 xpos -31437
 ypos 7753
}
Dot {
 name Dot32
 selected true
 xpos -31403
 ypos 7836
}
push $N15737f10
Dot {
 name Dot21
 selected true
 xpos -33473
 ypos 6648
}
set Nf9c63ba0 [stack 0]
Dot {
 name Dot22
 selected true
 xpos -33363
 ypos 6648
}
Dot {
 name Dot23
 selected true
 xpos -33363
 ypos 6911
}
push $Nf9c63ba0
Group {
 name AAQuickFill1
 tile_color 0x7f9900ff
 selected true
 xpos -33507
 ypos 6797
 addUserKnob {20 User l "Quick Fill"}
 addUserKnob {41 size l extend T Blur_extend.size}
 addUserKnob {20 clip l "Alpha Clip"}
 addUserKnob {41 blackpoint l "alpha blackpoint" T Grade3.blackpoint}
 addUserKnob {41 whitepoint l "alpa whitepoint" T Grade3.whitepoint}
 addUserKnob {41 disable_2 l disable T Grade3.disable}
 addUserKnob {26 ""}
 addUserKnob {41 size_5 l "blur alpha" T Blur1.size}
 addUserKnob {41 disable_4 l disable T Blur1.disable}
 addUserKnob {20 adjustments l Adjustments}
 addUserKnob {26 "" -STARTLINE T "limits the sample area to the edge"}
 addUserKnob {41 size_2 l "edge sample size" T FilterErode1.size}
 addUserKnob {41 disable_1 l "clip to edge" T ChannelMerge1.disable}
 addUserKnob {26 ""}
 addUserKnob {26 "" -STARTLINE T "overal blur"}
 addUserKnob {41 size_1 l "overal blur size" T Blur_post.size}
 addUserKnob {41 size_3 l "dialate matte" T FilterErode_edgePost.size}
 addUserKnob {41 size_4 l "soft matte" T Blur_edgePost.size}
 addUserKnob {41 disable_3 l disable T Blur_post.disable}
}
 Input {
  inputs 0
  name Input1
  xpos 260
  ypos -263
 }
 Unpremult {
  name Unpremult2
  xpos 260
  ypos -179
 }
 Grade {
  channels alpha
  blackpoint 0.95
  whitepoint 0.999
  white_clamp true
  name Grade3
  xpos 260
  ypos -86
 }
set Nf9c8dee0 [stack 0]
 FilterErode {
  size 1.6
  name FilterErode_edgePost
  xpos 260
  ypos 222
 }
 Blur {
  channels alpha
  size 2.3
  name Blur_edgePost
  xpos 260
  ypos 272
 }
push $Nf9c8dee0
 FilterErode {
  size 5
  name FilterErode1
  xpos 560
  ypos 8
 }
push $Nf9c8dee0
 ChannelMerge {
  inputs 2
  operation stencil
  name ChannelMerge1
  xpos 460
  ypos 8
 }
 Premult {
  name Premult1
  xpos 460
  ypos 63
 }
 Blur {
  channels rgba
  size {10 6}
  name Blur_extend
  tile_color 0x2d5e05ff
  xpos 460
  ypos 99
 }
 Unpremult {
  name Unpremult1
  xpos 460
  ypos 134
 }
 Grade {
  channels alpha
  blackpoint 0.0001
  whitepoint 0.001
  white_clamp true
  name alpha_solid
  xpos 460
  ypos 169
 }
 Premult {
  name Premult2
  xpos 460
  ypos 218
 }
push $Nf9c8dee0
 Erode {
  size 0
  name Erode1
  xpos 360
  ypos -15
  disable true
 }
 Blur {
  channels alpha
  size 3.5
  name Blur1
  xpos 360
  ypos 31
  disable true
 }
 Premult {
  name Premult8
  xpos 360
  ypos 85
 }
 Merge2 {
  inputs 2
  operation under
  name Merge1
  xpos 360
  ypos 218
 }
 Blur {
  inputs 1+1
  channels rgba
  size 3.4
  invert_mask true
  name Blur_post
  xpos 360
  ypos 278
 }
 Output {
  name Output1
  xpos 360
  ypos 402
 }
end_group
Copy {
 inputs 2
 from0 rgba.alpha
 to0 rgba.alpha
 name Copy17
 selected true
 xpos -33507
 ypos 6901
}
Premult {
 name Premult17
 selected true
 xpos -33507
 ypos 6981
}
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message AAQuickFill
 old_message {{65 65 81 117 105 99 107 70 105 108 108}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 0 70}
   }
 cursor_position 11
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text2
 selected true
 xpos -33507
 ypos 7753
}
Dot {
 name Dot31
 selected true
 xpos -33473
 ypos 7836
}
push $N157330f0
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message "NO TREATMENT"
 old_message {{78 79 32 84 82 69 65 84 77 69 78 84}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 11 40 0 70 1 70 2 70 3 70 4 70 5 70 6 70 7 70 8 70 9 70 10 70 11 70}
   }
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text1
 selected true
 xpos -33743
 ypos 7753
}
Switch {
 inputs 16
 name Switch1
 selected true
 xpos -33743
 ypos 9079
}
Dot {
 name Dot30
 selected true
 xpos -33709
 ypos 9559
}
Constant {
 inputs 0
 channels rgb
 color {0.113 0.032 -0.002 0.012}
 format "1920 1080 0 0 1920 1080 1 HD_1080"
 name Constant8
 selected true
 xpos -34006
 ypos 9338
}
Shuffle2 {
 fromInput1 {{0} B}
 fromInput2 {{0} B}
 mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 white -1 -1 rgba.alpha 0 3"
 name Shuffle10
 selected true
 xpos -34006
 ypos 9446
}
Merge2 {
 inputs 2
 name Merge22
 selected true
 xpos -34006
 ypos 9556
}
push $Nc65ff30
Shuffle {
 in edge
 red alpha
 green alpha
 blue alpha
 name Shuffle3
 label "Regrain this edge"
 selected true
 xpos -29513
 ypos 6870
}
StickyNote {
 inputs 0
 name StickyNote1
 label "\n<b>AAQuickFill</b>\n\n- blur, unpremult technique\n\n\n<font color=green>- quick & simple\n- extend size can be split</font>\n\n<font color=red>- only 1 Blur iteration\n- adjustment knobs can be a bit &nbsp;&nbsp;confusing\n- alpha has to be shuffled in again\n\n</font>\n"
 note_font_size 30
 selected true
 xpos -33264
 ypos 6614
}
StickyNote {
 inputs 0
 name StickyNote2
 label "\n<b>ColorDilate</b>\n\n- blur, unpremult technique\n\n\n<font color=green>- quick to set up\n- separate mask input (core matte)\n- choice of iterations & distribution (created &nbsp;&nbsp;dynamically)\n- choice of matte output\n</font>\n\n<font color=red>- Blur Center breaks when grow texture split up\n- default value for grow texture too high\n\n\n</font>\n"
 note_font_size 30
 selected true
 xpos -31146
 ypos 6603
}
StickyNote {
 inputs 0
 name StickyNote4
 label "\n<b>Edge (by Rob Bannister)</b>\n\n- blur, unpremult technique\n\n\n<font color=green>- complex but straight forward to set up\n- choice of iterations & distribution (created dynamically)\n- separate matte inputs\n- option to preview edge matte\n- goes beyond edge extend (options to blend with BG)\n- 2 output options\n- can output edge matte\n</font>\n\n<font color=red>- splitting slice start knob doesn't work (has to be manually &nbsp;&nbsp;adjusted inside)\n- slice width can not be split\n\n</font>\n"
 note_font_size 30
 selected true
 xpos -29134
 ypos 6616
}
StickyNote {
 inputs 0
 name StickyNote5
 label "\n<b>EdgeExtendV2</b>\n\n- blur, unpremult technique\n\n\n<font color=green>- easy to set up\n- separate (core) matte input\n- option to output extension only\n</font>\n\n<font color=red>- erode alpha and slice width can not &nbsp;&nbsp;be split\n- maximum of 10 slices (not &nbsp;&nbsp;dynamically)\n- alpha needs to be shuffled in\n\n</font>\n"
 note_font_size 30
 selected true
 xpos -26577
 ypos 6630
}
StickyNote {
 inputs 0
 name StickyNote7
 label "\n<b>Edge_Extrude_Directional</b>\n\n- blur, unpremult technique\n- re-using PxF_Filler (improving ease of use)\n\n\n<font color=green>- easy to set up\n- knobs can be split up\n- option to choose angle\n- additional core matte & mask inputs\n\n</font>\n\n<font color=red>- angle and size direction working against each other (just &nbsp;&nbsp;to be aware of)\n\n</font>\n"
 note_font_size 30
 selected true
 xpos -21127
 ypos 6600
}
StickyNote {
 inputs 0
 name StickyNote9
 label "\n<b>PxF_Filler (by Xavier Bourque)</b>\n\n- blur, unpremult technique\n\n\n<font color=green>- easy to set up\n- size can be split up\n- choice of iterations (dynamically)\n- option to choose angle\n- separate core matte & mask inputs\n\n</font>\n\n<font color=red>- too simple\n- matte has to be inverted for edge extend &nbsp;&nbsp;purpose\n- edge blur can't be adjusted\n- angle and size direction working against each other (just &nbsp;&nbsp;to be aware of)\n\n</font>\n"
 note_font_size 30
 selected true
 xpos -22921
 ypos 6618
}
StickyNote {
 inputs 0
 name StickyNote3
 label "Frank Rueter's Edge Extend"
 selected true
 xpos -19453
 ypos 6658
}
StickyNote {
 inputs 0
 name StickyNote11
 label "\n<b>EdgeWarp</b>\n\n- vector extend technique\n- using Matrix as an edge detect to determine &nbsp;&nbsp;vectors\n- get fed into STmap\n\n\n<font color=green>- easy to set up\n- maintains details and shapes\n- perpendicular spread\n\n</font>\n\n<font color=red>- knobs can't be split\n- alpha has to be shuffled in if it is treated &nbsp;&nbsp;prior to node\n- a bit slower\n\n</font>\n"
 note_font_size 30
 selected true
 xpos -14374
 ypos 6592
}
StickyNote {
 inputs 0
 name StickyNote12
 label "\n<b>PxF_Distort (by Xavier Bourque)</b>\n\n- vector extend technique\n- detects edges and direction/vector\n- affected region gets calculated via &nbsp;&nbsp;expression\n- internally using an iDistort to perform the &nbsp;&nbsp;stretching\n\n\n<font color=green>- easy to set up\n- maintains details and shapes\n- perpendicular spread\n\n</font>\n\n<font color=red>- knobs can't be split\n- watch out for artifacts (filter setting)\n- a bit slower\n\n</font>\n"
 note_font_size 30
 selected true
 xpos -12324
 ypos 6595
}
StickyNote {
 inputs 0
 name StickyNote13
 label "\n<b>VectorExtendEdge</b>\n\n- mix of vector extend & blur/unpremult technique\n- detects edges and direction/vector\n- used to apply multiple blur/unpremult combos but in this case &nbsp;&nbsp;VectorBlurs\n\n\n<font color=green>- easy to set up\n- maintains details and shapes\n- perpendicular spread\n- separate ctrl_matte (core matte) input\n- can output vectors / edges if needed\n\n</font>\n\n<font color=red>- knobs can't be split\n- a bit slower\n\n</font>\n"
 note_font_size 30
 selected true
 xpos -10272
 ypos 6602
}
StickyNote {
 inputs 0
 name StickyNote14
 label "\n<b>Edge_Expand (by SpinVFX)</b>\n\n- all techniques available (erode/dilate, blur/unpremult, &nbsp;&nbsp;warp, distort)\n\n\n<font color=green>- easy to set up\n- great option to flip through different techniques\n- separate mask input (not for core!)\n- can shuffle out edge matte\n\n</font>\n\n<font color=red>- alpha needs to be shuffled in again if it is treated prior &nbsp;&nbsp;to node\n- can be a bit slower\n\n</font>\n"
 note_font_size 30
 selected true
 xpos -6029
 ypos 6613
}
StickyNote {
 inputs 0
 name StickyNote16
 label "\n- manual smear technique\n\n\n<font color=green>- easy to use for selective areas\n- full control\n\n</font>\n\n<font color=red>- not procedural (unless maybe tracked / smart &nbsp;&nbsp;vector)\n- can become very slow when overused\n\n</font>\n"
 note_font_size 30
 selected true
 xpos -3965
 ypos 6666
}
push $N4083bbb0
Dot {
 name Dot139
 selected true
 xpos 259
 ypos 13659
}
set Nf9a2d140 [stack 0]
Dot {
 name Dot140
 selected true
 xpos 130
 ypos 13659
}
set Nf9a321c0 [stack 0]
Dot {
 name Dot153
 selected true
 xpos -3
 ypos 13659
}
Dot {
 name Dot152
 selected true
 xpos -3
 ypos 14063
}
push $Nf9a321c0
Erode {
 size 12
 name Erode8
 selected true
 xpos 96
 ypos 13717
}
Dot {
 name Dot141
 selected true
 xpos 130
 ypos 13822
}
set Nf9a4e4d0 [stack 0]
Invert {
 name Invert1
 selected true
 xpos 96
 ypos 13880
}
Erode {
 name Erode10
 selected true
 xpos 96
 ypos 13918
}
Dot {
 name Dot149
 selected true
 xpos 130
 ypos 13993
}
push $N40880e30
Dot {
 name Dot150
 selected true
 xpos 575
 ypos 13993
}
push $Nf9a4e4d0
push $Nf9a2d140
Group {
 inputs 2
 name ColorDilate8
 knobChanged "\ntn = nuke.thisNode()\ntk = nuke.thisKnob()\n\nfullList =  tn\['fullList'].value().strip(\"\[']\").split(\"', '\")\nnodeList = fullList\[0], fullList\[1], fullList\[2], fullList\[3], fullList\[4], fullList\[5], fullList\[6]\npreviousLoopNum = tn\['previousLoopNum'].getValue()\n\ngrowTexture = tn\['growTexture'].getValue()\nqualityVal = int( tn\['quality'].getValue() )\n\n\n##### DEFINE VALUE CHANGES ##################\n\ndef valChange():\n    qualityBias = tn\['qualityBias'].getValue()\n    blurCenter = tn\['blurCenter'].getValue()\n    bcDistribution = tn\['bcDistribution'].getValue()\n    for i in range (0, qualityVal):\n        blurVal = nuke.toNode(fullList\[i*len(nodeList)])\n        erodeVal = nuke.toNode(fullList\[i*len(nodeList)+3])\n        blurCenterVal = nuke.toNode(fullList\[i*len(nodeList)+5])\n        if isinstance(growTexture, float) == True:\n            blurValSize = (growTexture/qualityVal*(i+1)*(1-qualityBias)) + (growTexture/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2)))\n            blurVal\['size'].setValue( blurValSize )\n            erodeVal\['size'].setValue(blurVal\['size'].getValue()/2)\n            blurCenterVal\['size'].setValue( ( blurValSize*(1-bcDistribution) +  (blurValSize*(bcDistribution*(pow(i+1, 2)/pow(qualityVal, 2)))) ) * blurCenter )\n        else:\n            blurVal\['size'].setValue(\[ (growTexture\[0]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[0]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) , (growTexture\[1]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[1]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) ])\n            erodeVal\['size'].setValue(\[blurVal\['size'].getValue()\[0]/2,blurVal\['size'].getValue()\[1]/2])\n            blurCenterVal\['size'].setValue(\[ (growTexture\[0]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[0]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) , (growTexture\[1]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[1]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) ])\n\ndef filterChange():\n    filters = int( tn\['filter'].getValue() )\n    filterQuality = int( tn\['filterQuality'].getValue() )\n    crop = int( tn\['crop'].getValue() )\n    for i in range (0, qualityVal):\n        blurVal = nuke.toNode(fullList\[i*len(nodeList)])\n        blurVal\['filter'].setValue( filters )\n        blurVal\['quality'].setValue( filterQuality )\n        blurVal\['crop'].setValue( crop )\n        blurCenterVal = nuke.toNode(fullList\[i*len(nodeList)])\n        blurCenterVal\['filter'].setValue( filters )\n        blurCenterVal\['quality'].setValue( filterQuality )\n        blurCenterVal\['crop'].setValue( crop )\n\n\n##### CREATE THE NODES ###################\n\nif tk.name()=='quality':\n    if qualityVal < 1:\n        qualityVal = 1\n    elif qualityVal >100:\n        qualityVal = 100\n    tn\['quality'].setValue( qualityVal )\n    \n\n    if qualityVal != previousLoopNum:\n\n\n        inputDep = nuke.dependencies(\[nuke.toNode('Unpremult1')], nuke.INPUTS)\n        resultOver = nuke.toNode( inputDep\[0].name() )\n\n        difference = qualityVal-previousLoopNum\n        if difference > 0:\n            for i in range (1, int(difference+1)):\n                \n                blur = nuke.nodes.Blur ()\n                blur\['channels'].setValue('rgba')\n                blur\['maskChannelInput'].setValue('none')\n                blur.setInput (0, nuke.toNode('Switch2'))\n                \n                unpremult = nuke.nodes.Unpremult ()\n                unpremult\['channels'].setValue('rgb')\n                unpremult\['alpha'].setValue('rgba.alpha')\n                unpremult\['invert'].setValue(0)\n                unpremult.setInput (0, blur)\n                \n                expression = nuke.nodes.Expression(expr3 = 'a==0?0:1')\n                expression.setInput (0, unpremult)\n                \n                erode = nuke.nodes.FilterErode ()\n                erode\['channels'].setValue( 'rgba.alpha' )\n                erode\['filter'].setValue( 'gaussian' )\n                erode.setInput (0, expression)\n                \n                premult = nuke.nodes.Premult ()\n                premult\['channels'].setValue( 'rgb' )\n                premult\['alpha'].setValue( 'rgba.alpha' )\n                premult.setInput (0, erode)\n\n                blurCenter = nuke.nodes.Blur ()\n                blurCenter\['channels'].setValue('rgba')\n                blurCenter\['maskChannelInput'].setValue('none')\n                blurCenter.setInput (0, premult)\n\n                mergeOver = nuke.nodes.Merge2 ()\n                mergeOver\['operation'].setValue( 'over' )\n                mergeOver\['sRGB'].setValue( 0 )\n                mergeOver\['screen_alpha'].setValue( 0 )\n                mergeOver\['bbox'].setValue( 'union' )\n                mergeOver\['Achannels'].setValue( 'rgba' )\n                mergeOver\['Bchannels'].setValue( 'rgba' )\n                mergeOver\['output'].setValue( 'rgba' )\n                mergeOver\['also_merge'].setValue( 'none' )\n                mergeOver.setInput (0, blurCenter)\n                mergeOver.setInput (1, resultOver)\n                \n                \n                resultOver = mergeOver\n                \n                \n                nodeList = blur.name(), unpremult.name(), expression.name(), erode.name(), premult.name(), blurCenter.name(), resultOver.name()\n                fullList.extend(nodeList)\n\n\n##### DELETE THE NODES ##################################\n\n        else:\n            fullList.reverse()\n            for i in range (int(qualityVal), int(previousLoopNum)):\n                for i in range (0, len(nodeList)):\n                    nuke.delete(nuke.toNode(fullList\[0]))\n                    del fullList\[0]\n                resultOver = nuke.toNode(fullList\[0])\n                resultExpression = nuke.toNode(fullList\[3])\n            fullList.reverse()\n\n        nuke.toNode('Unpremult1').setInput(0, resultOver)\n        valChange()\n        filterChange()\n                \n        previousLoopNum = qualityVal\n        \n        tn\['previousLoopNum'].setValue( int(previousLoopNum) )\n        tn\['fullList'].setValue( str(fullList) )\n\n\n\n##### CHANGE EXISTING VALUES #####################\n\nif tk.name()=='growTexture':\n    valChange()\n    \nif tk.name()=='qualityBias':\n    valChange()\n\nif tk.name()=='blurCenter':\n    valChange()\n\nif tk.name()=='bcDistribution':\n    valChange()\n    \nif tk.name()=='filter':\n    filterChange()\n    \nif tk.name()=='filterQuality':\n    filterChange()\n    \nif tk.name()=='crop':\n    filterChange()\n\n\n"
 note_font "Bitstream Vera Sans"
 selected true
 xpos 225
 ypos 13818
 addUserKnob {20 User l fColourDilate}
 addUserKnob {14 growTexture l "Grow Texture" R 0 100}
 growTexture 63
 addUserKnob {14 erodeMatte l "Erode Matte" t "Dilate or erode the matte to adjust the grow start paint" R -100 100}
 erodeMatte -7.5
 addUserKnob {7 expandMatte l "Expand Matte" t "Expand or compress the matte to adjust the grow start point" R -0.99999 0.99999}
 addUserKnob {7 quality l Iterations t "The number of iterations Colour Dilate will go through.  More is slower.  Max steps is 100" R 1 20}
 quality 7
 addUserKnob {7 qualityBias l Distribution t "0 is a linear distribution.  1 is exponential distribution.\nExponential is smoother with low quality.\nLinear is better with high quality."}
 qualityBias 1
 addUserKnob {26 ""}
 addUserKnob {7 blurCenter l "Blur Center" t "Soften central area where opposite dilates meet creating a hard line.  Is a multiple of Grow Texture." R 0 5}
 addUserKnob {7 bcDistribution l "BC Distribution" t "0 blurs a direct multiple of Grow Texture. 1 blurs exponentially more towards the center."}
 addUserKnob {26 ""}
 addUserKnob {4 filter l Filter t "filter\n" M {box triangle quadratic gaussian ""}}
 filter gaussian
 addUserKnob {3 filterQuality l " " -STARTLINE}
 filterQuality 15
 addUserKnob {6 crop l "crop to format" -STARTLINE}
 crop true
 addUserKnob {4 matteOutput l "Matte Output" M {rgb.alpha matte "dilated matte" "dilated area" "grain matte" ""}}
 addUserKnob {26 blank l "" -STARTLINE T "      "}
 addUserKnob {6 invertMatte l "invert Matte" -STARTLINE}
 invertMatte true
 addUserKnob {26 blank2 l "" -STARTLINE T "      "}
 addUserKnob {6 rgbIsPremult l "RGB is Premult?" -STARTLINE}
 rgbIsPremult true
 addUserKnob {1 colorDilate l INVISIBLE t "Keep me hidden" +INVISIBLE}
 addUserKnob {3 previousLoopNum l INVISIBLE +INVISIBLE}
 previousLoopNum 7
 addUserKnob {1 fullList l INVISIBLE +INVISIBLE}
 fullList "\['Blur1', 'Unpremult2', 'Expression1', 'FilterErode2', 'Premult1', 'BlurCenter', 'Merge2', 'Blur2', 'Unpremult3', 'Expression2', 'FilterErode3', 'Premult2', 'Blur3', 'Merge5', 'Blur4', 'Unpremult4', 'Expression3', 'FilterErode4', 'Premult3', 'Blur5', 'Merge6', 'Blur6', 'Unpremult5', 'Expression4', 'FilterErode5', 'Premult4', 'Blur7', 'Merge7', 'Blur8', 'Unpremult6', 'Expression5', 'FilterErode6', 'Premult5', 'Blur9', 'Merge8', 'Blur10', 'Unpremult7', 'Expression6', 'FilterErode7', 'Premult6', 'Blur11', 'Merge9', 'Blur12', 'Unpremult8', 'Expression7', 'FilterErode8', 'Premult7', 'Blur13', 'Merge10']"
}
 Input {
  inputs 0
  name InputMask
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -665
  number 1
 }
set Nf9a86fa0 [stack 0]
 AddChannels {
  channels alpha
  name AddChannels2
  note_font "Bitstream Vera Sans"
  xpos 365
  ypos 1125
 }
 Dot {
  name Dot3
  note_font "Bitstream Vera Sans"
  xpos 399
  ypos 1183
 }
 Input {
  inputs 0
  name InputRGB
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -531
 }
set Nf9a99dd0 [stack 0]
 AddChannels {
  channels alpha
  name AddChannels1
  note_font "Bitstream Vera Sans"
  xpos 348
  ypos 949
 }
 Dot {
  name Dot2
  note_font "Bitstream Vera Sans"
  xpos 382
  ypos 1078
 }
push $Nf9a86fa0
 FilterErode {
  channels alpha
  size {{invertMatte==0?erodeMatte.w:-erodeMatte.w i} {invertMatte==0?erodeMatte.h:-erodeMatte.h i}}
  name FilterErode1
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -621
 }
 Invert {
  channels alpha
  mix {{invertMatte i}}
  name Invert2
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -563
 }
 Grade {
  channels alpha
  blackpoint {{"clamp(expandMatte, 0, 1)" i}}
  whitepoint {{"clamp(1+expandMatte, 0, 1)" i}}
  white_clamp true
  name Grade1
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -505
 }
 Grade {
  channels alpha
  whitepoint 0.5
  black_clamp false
  white_clamp true
  name Grade6
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -345
 }
 Dot {
  name Dot1
  note_font "Bitstream Vera Sans"
  xpos 837
  ypos -287
 }
set Nf9ae76f0 [stack 0]
push $Nf9a99dd0
 AddChannels {
  channels alpha
  name AddChannels3
  note_font "Bitstream Vera Sans"
  xpos 1120
  ypos -444
 }
push $Nf9a99dd0
 Shuffle {
  alpha white
  name Shuffle1
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -458
 }
 Crop {
  box {{InputRGB.bbox.x i x1001 542} {InputRGB.bbox.y i} {InputRGB.bbox.r i} {InputRGB.bbox.t i}}
  name Crop3
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -414
 }
 Switch {
  inputs 2
  which {{rgbIsPremult i}}
  name Switch1
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -370
 }
 Dot {
  name Dot5
  note_font "Bitstream Vera Sans"
  xpos 1047
  ypos -326
 }
set Nf9919d60 [stack 0]
 Merge2 {
  inputs 2
  operation stencil
  bbox intersection
  name Merge1
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -292
 }
push $Nf9ae76f0
 Dot {
  name Dot4
  note_font "Bitstream Vera Sans"
  xpos 837
  ypos -253
 }
push $Nf9919d60
 Dot {
  name Dot6
  note_font "Bitstream Vera Sans"
  xpos 946
  ypos -326
 }
 Merge2 {
  inputs 2
  operation stencil
  bbox B
  name Merge3
  note_font "Bitstream Vera Sans"
  xpos 912
  ypos -258
 }
 Dot {
  name Dot7
  note_font "Bitstream Vera Sans"
  xpos 946
  ypos -192
 }
 Switch {
  inputs 2
  which {{invertMatte i}}
  name Switch2
  note_font "Bitstream Vera Sans"
  xpos 1002
  ypos -196
 }
set Nf994f2e0 [stack 0]
push $Nf994f2e0
 Blur {
  channels rgba
  size 0.1836734694
  name Blur1
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos -26
 }
 Unpremult {
  name Unpremult2
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 18
 }
 Expression {
  expr3 a==0?0:1
  name Expression1
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 62
 }
 FilterErode {
  channels alpha
  size 0.09183673469
  filter gaussian
  name FilterErode2
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 106
 }
 Premult {
  name Premult1
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 164
 }
 Blur {
  channels rgba
  name BlurCenter
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 222
 }
 Merge2 {
  inputs 2
  name Merge2
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 280
 }
push $Nf994f2e0
 Blur {
  channels rgba
  size 1.469387755
  name Blur2
  xpos 1552
  ypos -170
 }
 Unpremult {
  name Unpremult3
  xpos 1552
  ypos -144
 }
 Expression {
  expr3 a==0?0:1
  name Expression2
  xpos 1552
  ypos -118
 }
 FilterErode {
  channels alpha
  size 0.7346938776
  filter gaussian
  name FilterErode3
  xpos 1552
  ypos -92
 }
 Premult {
  name Premult2
  xpos 1552
  ypos -66
 }
 Blur {
  channels rgba
  name Blur3
  xpos 1552
  ypos -40
 }
 Merge2 {
  inputs 2
  name Merge5
  xpos 1552
  ypos 280
 }
push $Nf994f2e0
 Blur {
  channels rgba
  size 4.959183673
  name Blur4
  xpos 1442
  ypos -170
 }
 Unpremult {
  name Unpremult4
  xpos 1442
  ypos -144
 }
 Expression {
  expr3 a==0?0:1
  name Expression3
  xpos 1442
  ypos -118
 }
 FilterErode {
  channels alpha
  size 2.479591837
  filter gaussian
  name FilterErode4
  xpos 1442
  ypos -92
 }
 Premult {
  name Premult3
  xpos 1442
  ypos -66
 }
 Blur {
  channels rgba
  name Blur5
  xpos 1442
  ypos 306
 }
 Merge2 {
  inputs 2
  name Merge6
  xpos 1552
  ypos 306
 }
push $Nf994f2e0
 Blur {
  channels rgba
  size 11.75510204
  name Blur6
  xpos 1332
  ypos -170
 }
 Unpremult {
  name Unpremult5
  xpos 1332
  ypos -144
 }
 Expression {
  expr3 a==0?0:1
  name Expression4
  xpos 1332
  ypos -118
 }
 FilterErode {
  channels alpha
  size 5.87755102
  filter gaussian
  name FilterErode5
  xpos 1332
  ypos -92
 }
 Premult {
  name Premult4
  xpos 1332
  ypos -66
 }
 Blur {
  channels rgba
  name Blur7
  xpos 1332
  ypos -40
 }
 Merge2 {
  inputs 2
  name Merge7
  xpos 1552
  ypos 332
 }
push $Nf994f2e0
 Blur {
  channels rgba
  size 22.95918367
  name Blur8
  xpos 1222
  ypos -170
 }
 Unpremult {
  name Unpremult6
  xpos 1222
  ypos -144
 }
 Expression {
  expr3 a==0?0:1
  name Expression5
  xpos 1222
  ypos -118
 }
 FilterErode {
  channels alpha
  size 11.47959184
  filter gaussian
  name FilterErode6
  xpos 1222
  ypos -92
 }
 Premult {
  name Premult5
  xpos 1222
  ypos -66
 }
 Blur {
  channels rgba
  name Blur9
  xpos 1222
  ypos 358
 }
 Merge2 {
  inputs 2
  name Merge8
  xpos 1552
  ypos 358
 }
push $Nf994f2e0
 Blur {
  channels rgba
  size 39.67346939
  name Blur10
  xpos 1112
  ypos -170
 }
 Unpremult {
  name Unpremult7
  xpos 1112
  ypos -144
 }
 Expression {
  expr3 a==0?0:1
  name Expression6
  xpos 1112
  ypos -118
 }
 FilterErode {
  channels alpha
  size 19.83673469
  filter gaussian
  name FilterErode7
  xpos 1112
  ypos -92
 }
 Premult {
  name Premult6
  xpos 1112
  ypos -66
 }
 Blur {
  channels rgba
  name Blur11
  xpos 1112
  ypos 384
 }
 Merge2 {
  inputs 2
  name Merge9
  xpos 1552
  ypos 384
 }
push $Nf994f2e0
 Blur {
  channels rgba
  size 63
  name Blur12
  xpos 1002
  ypos -170
 }
 Unpremult {
  name Unpremult8
  xpos 1002
  ypos -144
 }
 Expression {
  expr3 a==0?0:1
  name Expression7
  xpos 1002
  ypos -118
 }
 FilterErode {
  channels alpha
  size 31.5
  filter gaussian
  name FilterErode8
  xpos 1002
  ypos -92
 }
 Premult {
  name Premult7
  xpos 1002
  ypos -66
 }
 Blur {
  channels rgba
  name Blur13
  xpos 1002
  ypos 410
 }
 Merge2 {
  inputs 2
  name Merge10
  xpos 1552
  ypos 410
 }
 Unpremult {
  name Unpremult1
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 966
 }
 Dot {
  name Dot11
  xpos 258
  ypos 1020
 }
set Nf97c1ab0 [stack 0]
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  mix {{matteOutput==0?1:0 i}}
  name Copy2
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1068
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  mix {{matteOutput==1?1:0}}
  name Copy1
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1173
 }
 Dot {
  name Dot8
  xpos 258
  ypos 1227
 }
set Nf97e3830 [stack 0]
 Dot {
  name Dot9
  xpos 453
  ypos 1227
 }
 Expression {
  expr3 a<=0.000001?0:1
  name Expression12
  note_font "Bitstream Vera Sans"
  xpos 419
  ypos 1261
 }
 Dot {
  name Dot10
  xpos 453
  ypos 1303
 }
push $Nf97c1ab0
 Dot {
  name Dot13
  xpos 521
  ypos 1020
 }
 Dot {
  name Dot12
  xpos 521
  ypos 1205
 }
push $Nf9a99dd0
 Merge2 {
  inputs 2
  operation difference
  bbox B
  name Merge14
  xpos 563
  ypos 1201
 }
 Keyer {
  operation "luminance key"
  range {0 1e-05 1 1}
  name Keyer1
  xpos 563
  ypos 1243
 }
 Merge2 {
  inputs 2
  operation mask
  bbox B
  name Merge15
  xpos 563
  ypos 1299
 }
 Dot {
  name Dot14
  xpos 597
  ypos 1341
 }
push $Nf97e3830
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  mix {{matteOutput==4?1:0 i}}
  name Copy3
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1331
 }
set Nf963b2d0 [stack 0]
 Expression {
  expr3 a<=0.000001?0:1
  mix {{matteOutput==3?1:0}}
  name Expression8
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1418
 }
push $Nf9a99dd0
 Merge2 {
  inputs 2
  operation copy
  bbox B
  name Merge4
  xpos 932
  ypos 1418
 }
 Output {
  name Output1
  note_font "Bitstream Vera Sans"
  xpos 932
  ypos 1579
 }
push $Nf9a99dd0
push $Nf963b2d0
 Viewer {
  inputs 2
  input_process false
  name Viewer1
  xpos 336
  ypos 1225
 }
end_group
Merge2 {
 inputs 2+1
 operation multiply
 name Merge9
 selected true
 xpos 225
 ypos 13989
}
Copy {
 inputs 2
 from0 rgba.alpha
 to0 rgba.alpha
 name Copy1
 selected true
 xpos 225
 ypos 14053
}
Premult {
 name Premult21
 selected true
 xpos 225
 ypos 14122
}
Dot {
 name Dot151
 selected true
 xpos 259
 ypos 14168
}
CheckerBoard2 {
 inputs 0
 format "4550 2416 0 0 4550 2416 1 "
 color0 {0.1 0.1 0 1}
 color1 {0.1 0.1 0.1 1}
 color2 {0.1 0.1 0 1}
 color3 {0.1 0.1 0.1 1}
 centerlinewidth 0
 name CheckerBoard2
 selected true
 xpos -231
 ypos 14026
}
Merge2 {
 inputs 2
 name Merge11
 selected true
 xpos -231
 ypos 14164
}

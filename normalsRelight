set cut_paste_input [stack 0]
version 13.2 v8
push $cut_paste_input
Group {
 name AE_Normal_Relight
 tile_color 0x1eb47dff
 label "X | \[value Degree.rx]\nY | \[value Degree.ry]"
 note_font Verdana
 selected true
 xpos -459
 ypos 620
 addUserKnob {20 User}
 addUserKnob {3 existsmask +INVISIBLE}
 existsmask {{"\[exists input1]"}}
 addUserKnob {26 headtxt l "" +STARTLINE T "<p><b> <font size=7 color=#06AE6F>AE Normal Relight |<font size=4 color=#06AE6F> 360 Degree Mask\n\n"}
 addUserKnob {26 text l "" +STARTLINE T "<b><font size=4>:: by Ali Ehtemami"}
 addUserKnob {6 color_rgb_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {26 ""}
 addUserKnob {41 channel3 l channels T Expselect.channel3}
 addUserKnob {26 ""}
 addUserKnob {41 rx l "Rotation X" T Degree.rx}
 addUserKnob {41 ry l "Rotation Y" T Degree.ry}
 addUserKnob {26 ""}
 addUserKnob {41 white l gain T Grade2.white}
 addUserKnob {41 gamma T Grade2.gamma}
 addUserKnob {26 ""}
 addUserKnob {26 text_1 l "" +STARTLINE T "<font size=3><b><a href=\"http://aliehtemami.com.au\"style=\"color: #06AE6F\">www.aliehtemami.com.au</a>"}
}
 Input {
  inputs 0
  name Inputmask
  xpos -392
  ypos 517
  number 1
 }
 Input {
  inputs 0
  name Input
  xpos -580
  ypos -122
 }
set N1cdc8f80 [stack 0]
 Expression {
  channel0 rgb
  channel3 rgb
  name Expselect
  xpos -580
  ypos -56
 }
 Expression {
  expr0 "\[value Expselect.channel3].red"
  expr1 "\[value Expselect.channel3].green"
  expr2 "\[value Expselect.channel3].blue"
  channel3 rgb
  name Expconvert
  selected true
  xpos -580
  ypos -14
 }
push $N1cdc8f80
 Constant {
  inputs 0
  channels rgb
  color {{cos(radians(rx))*cos(radians(ry))} {sin(radians(rx))} {cos(radians(rx))*sin(radians(ry))} {curve}}
  name Degree
  xpos -794
  ypos -118
  addUserKnob {20 User}
  addUserKnob {7 rx l "Rotation X" R 0 360}
  rx 180
  addUserKnob {7 ry l "Rotation Y" R 0 360}
  ry 180
 }
 Reformat {
  type "to box"
  box_width {{Input.width}}
  box_height {{Input.height}}
  box_fixed true
  box_pixel_aspect {{Input.pixel_aspect}}
  name Reformat1
  xpos -794
  ypos 9
 }
 CopyBBox {
  inputs 2
  name CopyBBox1
  xpos -794
  ypos 51
 }
 Dot {
  name Dot1
  xpos -760
  ypos 108
 }
 Difference {
  inputs 2
  name Difference1
  xpos -580
  ypos 98
 }
 Invert {
  channels rgba
  name Invert1
  xpos -580
  ypos 244
 }
 Grade {
  channels rgba
  gamma 0.5
  name Grade2
  xpos -580
  ypos 294
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle2
  tile_color 0xfefefeff
  xpos -580
  ypos 332
 }
 Clamp {
  channels rgba
  name Clamp1
  xpos -580
  ypos 413
 }
 Merge2 {
  inputs 2
  operation mask
  bbox A
  name Merge2
  xpos -580
  ypos 517
  disable {{1-existsmask}}
 }
 BlackOutside {
  name BlackOutside1
  xpos -580
  ypos 543
 }
 Output {
  name Output1
  xpos -580
  ypos 605
 }
 Viewer {
  frame_range 1001-1001
  name Viewer1
  xpos -443
  ypos -80
 }
end_group
push $cut_paste_input
add_layer {normal normal.r normal.g normal.b normal.red normal.green normal.blue normal.alpha normal.x normal.y normal.z}
Group {
 name NormalsRotate1
 onCreate "\nn=nuke.thisNode()\nn\['mblack'].setFlag(0x0000000000000004)\nn\['mgain'].setFlag(0x0000000000000004)\nn\['mgamma'].setFlag(0x0000000000000004)\n"
 tile_color 0xff00ff
 selected true
 xpos -459
 ypos 702
 addUserKnob {20 User}
 addUserKnob {41 in l "Normals in" t "Select the layer containing the \nnormals" T Shuffle1.in}
 addUserKnob {41 pick l "Pick Plane" T Plane.pick}
 addUserKnob {22 planereset l Reset -STARTLINE T "nuke.thisNode().knob(\"pick\").setValue(0,0)\nnuke.thisNode().knob(\"pick\").setValue(0,1)\nnuke.thisNode().knob(\"pick\").setValue(1,2)"}
 addUserKnob {26 ""}
 addUserKnob {26 divider_2 l "" +STARTLINE T " "}
 addUserKnob {26 manual l "<b>Manual Rotation</b>" -STARTLINE T "  "}
 addUserKnob {22 rotreset l Reset -STARTLINE T "nuke.thisNode().knob(\"yoffset\").setValue(0)\nnuke.thisNode().knob(\"xzrot\").setValue(0)"}
 addUserKnob {7 yoffset l Horizontal t "Rotate around the world Y axis" R -180 180}
 yoffset 149
 addUserKnob {7 xzrot l Vertical t "Rotates around the rotated X axis" R -180 180}
 xzrot -9
 addUserKnob {26 ""}
 addUserKnob {26 matte l "@b;Matte Output" T "      "}
 addUserKnob {6 inv l "Invert    " t "This happens before the matte \ntweaks" -STARTLINE}
 addUserKnob {6 amask l "Mask by Alpha    " -STARTLINE}
 addUserKnob {6 unpre l Unpremult -STARTLINE}
 addUserKnob {7 exp l Exponent t "Exponential falloff" R 1 10}
 exp 2
 addUserKnob {22 expreset l Reset -STARTLINE T "nuke.thisNode().knob(\"exp\").setValue(2)"}
 addUserKnob {7 mblack l Black R -1 1}
 addUserKnob {22 mblackreset l Reset -STARTLINE T "nuke.thisNode().knob(\"mblack\").setValue(0)"}
 addUserKnob {7 mgain l White R 0 4}
 mgain 1
 addUserKnob {22 mgainreset l Reset -STARTLINE T "nuke.thisNode().knob(\"mgain\").setValue(1)"}
 addUserKnob {7 mgamma l Gamma R 0 4}
 mgamma 1
 addUserKnob {22 mgammareset l Reset -STARTLINE T "nuke.thisNode().knob(\"mgamma\").setValue(1)"}
 addUserKnob {26 ""}
 addUserKnob {26 "" l mask T ""}
 addUserKnob {41 maskChannelInput l "" -STARTLINE T Merge1.maskChannelInput}
 addUserKnob {41 inject -STARTLINE T Merge1.inject}
 addUserKnob {41 invert_mask l invert -STARTLINE T Merge1.invert_mask}
 addUserKnob {41 fringe -STARTLINE T Merge1.fringe}
 addUserKnob {41 mix T Merge1.mix}
 addUserKnob {20 info l Info}
 addUserKnob {26 infotext l "" +STARTLINE T "W_SuperNormal generates a surface angle based matte using normals.\n\n1. Select the layer containing normals in the dropdown menu.\n2. Enable color picker and pick the point where you want the matte to be white.\n  (I look at the alpha output, hold ctrl+alt and \"glide\" over the surfaces.)\n3. You can also manually rotate the matte. When you colorpick a new point,\n  it is recommended that you reset the manual rotation values to 0.\n"}
 addUserKnob {20 v2_1_group l "v2.1 - Feb 2019" n 1}
 v2_1_group 0
 addUserKnob {26 v2_1_text l "" +STARTLINE T "  -Manual rotation working as originally envisioned: It is more intuitive \n   and faster to reach any desired angle with horizontal(Y) and vertical\n   rotation than with separate XYZ rotations.\n  -General cleanup & refinements.\n"}
 addUserKnob {20 endGroup n -1}
 addUserKnob {20 v2group l "v2.0 - 2018" n 1}
 v2group 0
 addUserKnob {26 v2text l "" +STARTLINE T "  -Adopted a different method for rotating normals shown to me by Daniel Pelc\n  -Simpler math for converting normals into a matte with the help of Erwan Leroy\n"}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {26 v1_1_text l "" +STARTLINE T "    v1.1 - 2016"}
 addUserKnob {26 ""}
 addUserKnob {26 spacer_1 l "" +STARTLINE T "     "}
 addUserKnob {26 copyright l "&#169;  Wes Heo" -STARTLINE T " "}
}
 Axis2 {
  inputs 0
  rot_order YXZ
  rotate {0 {-parent.yoffset} 0}
  name Axis10
  label H
  xpos -173
  ypos -163
 }
 Axis2 {
  inputs 0
  rot_order YXZ
  rotate {{parent.xzrot} {-degrees(parent.Plane.picked.g)} 0}
  name Axis2
  label V
  xpos -171
  ypos -62
 }
 Axis2 {
  inputs 0
  rot_order YXZ
  rotate {0 {-parent.Axis2.rotate.y} 0}
  name Axis5
  label V
  xpos -170
  ypos 34
 }
 Input {
  inputs 0
  name Inputmask
  xpos 132
  ypos 544
  number 1
 }
 Input {
  inputs 0
  name N
  xpos 0
  ypos -425
 }
 Shuffle {
  in {normal.r normal.g normal.b normal.red}
  alpha red2
  out rgb
  name Shuffle1
  xpos 0
  ypos -347
 }
set N1dc15f60 [stack 0]
 Dot {
  name Dot1
  xpos 315
  ypos 289
 }
push $N1dc15f60
 Unpremult {
  name Unpremult1
  xpos 0
  ypos -286
  disable {{!parent.unpre}}
 }
 NoOp {
  name Plane
  xpos 0
  ypos -218
  addUserKnob {20 User}
  addUserKnob {18 pick l "User Picked Plane" R -1 1}
  pick {0 0 1}
  addUserKnob {6 pick_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
  addUserKnob {20 calc l "Internal Conversions"}
  addUserKnob {18 picked}
  picked {0 {"(atan2(pick.r, pick.b))"} 0}
  addUserKnob {6 picked_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 }
 ColorMatrix {
  matrix {
      {{parent.Axis10.world_matrix.0} {parent.Axis10.world_matrix.1} {parent.Axis10.world_matrix.2}}
      {{parent.Axis10.world_matrix.4} {parent.Axis10.world_matrix.5} {parent.Axis10.world_matrix.6}}
      {{parent.Axis10.world_matrix.8} {parent.Axis10.world_matrix.9} {parent.Axis10.world_matrix.10}}
    }
  name ColorMatrix2
  xpos 0
  ypos -148
  disable {{parent.yoffset==0}}
 }
 ColorMatrix {
  matrix {
      {{parent.Axis2.world_matrix.0} {parent.Axis2.world_matrix.1} {parent.Axis2.world_matrix.2}}
      {{parent.Axis2.world_matrix.4} {parent.Axis2.world_matrix.5} {parent.Axis2.world_matrix.6}}
      {{parent.Axis2.world_matrix.8} {parent.Axis2.world_matrix.9} {parent.Axis2.world_matrix.10}}
    }
  name ColorMatrix3
  xpos 0
  ypos -42
  disable {{parent.xzrot==0}}
 }
 ColorMatrix {
  matrix {
      {{parent.Axis5.world_matrix.0} {parent.Axis5.world_matrix.1} {parent.Axis5.world_matrix.2}}
      {{parent.Axis5.world_matrix.4} {parent.Axis5.world_matrix.5} {parent.Axis5.world_matrix.6}}
      {{parent.Axis5.world_matrix.8} {parent.Axis5.world_matrix.9} {parent.Axis5.world_matrix.10}}
    }
  name ColorMatrix5
  xpos 0
  ypos 54
  disable {{parent.xzrot==0}}
 }
 Expression {
  temp_name0 nx
  temp_expr0 parent.Plane.pick.r
  temp_name1 ny
  temp_expr1 parent.Plane.pick.g
  temp_name2 nz
  temp_expr2 parent.Plane.pick.b
  channel0 {rgba.red -rgba.green -rgba.blue -rgba.alpha}
  expr0 r*nx
  channel1 {-rgba.red rgba.green -rgba.blue none}
  expr1 g*ny
  channel2 {-rgba.red -rgba.green rgba.blue none}
  expr2 b*nz
  channel3 {none none none -rgba.alpha}
  name Expression1
  xpos 0
  ypos 121
  cached true
 }
 Expression {
  expr3 clamp(r+g+b)
  name Expression3
  xpos 0
  ypos 187
 }
 Invert {
  channels alpha
  name Invert1
  xpos 0
  ypos 249
  disable {{!parent.inv}}
 }
 Expression {
  expr3 pow(a,max(1,parent.exp))
  name Expression4
  xpos 0
  ypos 317
 }
 Grade {
  channels alpha
  blackpoint {{-parent.mblack}}
  white {{parent.mgain}}
  gamma {{max(0.001,parent.mgamma)}}
  white_clamp true
  name Grade1
  xpos 0
  ypos 369
 }
 ChannelMerge {
  inputs 2
  operation multiply
  name ChannelMerge1
  xpos 0
  ypos 444
  disable {{!parent.amask}}
 }
push 0
 Merge2 {
  inputs 2+1
  operation copy
  also_merge all
  name Merge1
  label "\[ expr \{ \[value mix] == 1 ? \" \" : \[concat Mix: \[value mix]] \}]"
  xpos 0
  ypos 544
 }
 Output {
  name Output1
  xpos 0
  ypos 623
 }
end_group
push $cut_paste_input
add_layer {pos pos.x pos.y pos.z}
Group {
 name normalRelight
 tile_color 0x6effff
 selected true
 xpos -455
 ypos 773
 addUserKnob {20 User}
 addUserKnob {41 use_alpha l "use alpha" T ReLight1.use_alpha}
 addUserKnob {41 normal l "normal vectors" T ReLight1.normal}
 addUserKnob {41 position l "point positions" T ReLight1.position}
 addUserKnob {41 ambient T ReLight1.ambient}
}
 Input {
  inputs 0
  name beauty
  xpos -643
  ypos 528
 }
 Dot {
  name Dot44
  xpos -464
  ypos 532
 }
set N1e6b4ba0 [stack 0]
 Dot {
  name Dot41
  xpos -393
  ypos 532
 }
 Input {
  inputs 0
  name normal
  xpos -295
  ypos 371
  number 1
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy17
  xpos -295
  ypos 522
 }
set N1e45ae60 [stack 0]
 Input {
  inputs 0
  name position
  xpos -67
  ypos 372
  number 2
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy18
  xpos -69
  ypos 522
 }
 Unpremult {
  name Unpremult17
  xpos -69
  ypos 560
 }
push $N1e45ae60
 Unpremult {
  name Unpremult16
  xpos -297
  ypos 559
 }
push $N1e6b4ba0
 Dot {
  name Dot43
  xpos -464
  ypos 613
 }
 Unpremult {
  name Unpremult5
  xpos -424
  ypos 609
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  from1 rgba.red
  to1 normal.x
  from2 rgba.green
  to2 normal.y
  from3 rgba.blue
  to3 normal.z
  name Copy4
  xpos -295
  ypos 585
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  from1 rgba.red
  to1 pos.x
  from2 rgba.green
  to2 pos.y
  from3 rgba.blue
  to3 pos.z
  name Copy15
  xpos -69
  ypos 585
 }
set N1cdda720 [stack 0]
 Dot {
  name Dot42
  xpos -124
  ypos 711
 }
 Input {
  inputs 0
  name camera
  selected true
  xpos -314
  ypos 771
  number 4
 }
 Input {
  inputs 0
  name light
  xpos -271
  ypos 834
  number 3
 }
push $N1cdda720
 Dot {
  name Dot40
  xpos 37
  ypos 713
 }
 ReLight {
  inputs 4
  use_alpha true
  normal {normal.r normal.g normal.b}
  position pos
  name ReLight1
  xpos -88
  ypos 790
 }
 Premult {
  name Premult3
  xpos -88
  ypos 867
 }
 Output {
  name Output1
  xpos -88
  ypos 967
 }
end_group

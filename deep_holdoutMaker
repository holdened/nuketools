set cut_paste_input [stack 0]
version 13.2 v8
push $cut_paste_input
NoOp {
 name deep_holdOutMaker1
 tile_color 0xdf00ffff
 gl_color 0xfefefeff
 note_font_size 60
 note_font_color 0xfefefeff
 selected true
 xpos -2584
 ypos -454
 addUserKnob {20 User}
 addUserKnob {22 create_holdout_structure T "global sn\n\nsn = nuke.selectedNodes()\n#dt = nuke.nodes.Dot()\n\ndeepList = \[]\nsnX = \[]\nsnY = \[]\nselectUs = \[]\nHDlist = \[]\ndpHD = \[]\nwConnection = \[]\nnewWrite = \[]\n\n# takes the selected nodes into a list for later distribution#\n\nfor k in sn:\n  deepList.append(k\['name'].value())\n  snX.append(k\['xpos'].value())\n  snY.append(k\['ypos'].value())\n  HDlist.append(k\['name'].value())\n  #wConnection.append(k)\n#confirms the list for me#\n#print deepList \n#print snX\n#print snY\n\nndNmb = int(len(deepList))\n#print 'lenght of my list ' + str(ndNmb)\n\nfor i in range(ndNmb):\n  dt = nuke.nodes.Dot()\n  newi = i - 1\n  connectTo=deepList\[i]\n#  print 'i node of the day ' + connectTo\n  dt.setXYpos(int(snX\[i]+int(34.5)),int(snY\[i])+int(50));dt.setInput(0, nuke.toNode(connectTo))\n#  print i\n  dpM = nuke.nodes.DeepMerge()\n  dpM.setXYpos(int(snX\[i]+int(-134.5)),int(snY\[i])+int(150))\n  dpM\['hide_input'].setValue(True)\n  selectUs.append(dpM)\n  \n  for y in range(ndNmb):\n    dpM.setInput(y, nuke.toNode(deepList\[y]))\n    dpM.setInput(i, None)\n  dHGrp = nuke.nodes.Group(name='g_DeepHoldout_Divide', tile_color=4278230529)\n  dHGrp.setXYpos(int(snX\[i]+int(0)),int(snY\[i])+int(150));dHGrp.setInput(1,dt);dHGrp.setInput(0,dpM)\n  \n  dHGrp.begin()\n  \n  inptA = nuke.nodes.Input(name='A')\n  inptA.setXYpos(0,0)\n  inptB = nuke.nodes.Input(name='B')\n  inptB.setXYpos(100,50)\n  dpM = nuke.nodes.DeepMerge()\n  dpM\['operation'].setValue('holdout')\n  dpM.setInput(0, inptB);dpM.setInput(1, inptA);dpM.setXYpos(0,50)\n  dImg1 = nuke.nodes.DeepToImage2()\n  dImg1.setXYpos(0,150);dImg1.setInput(0, dpM)\n  dImg2 = nuke.nodes.DeepToImage2()\n  dImg2.setXYpos(100,150);dImg2.setInput(0, inptB)\n  mDiv = nuke.nodes.Merge2()\n  mDiv\['operation'].setValue('divide');mDiv.setXYpos(50,200);mDiv.setInput(1,dImg1);mDiv.setInput(0,dImg2)\n  Inv = nuke.nodes.Invert()\n  Inv.setXYpos(50,250);Inv.setInput(0,mDiv)\n  exp = nuke.nodes.Expression()\n  exp.setXYpos(50,350);exp.setInput(0,Inv)\n  exp\['expr0'].setValue('a');exp\['expr1'].setValue('a');exp\['expr2'].setValue('a');exp\['expr3'].setValue('a');\n  outP = nuke.nodes.Output()\n  outP.setXYpos(50,450);outP.setInput(0,exp)\n  \n  dHGrp.end()\n  \n  selectUs.append(dt)\n  selectUs.append(dHGrp)\n  dpHD.append(dHGrp)\n  wConnection.append(dHGrp)\n\nfor z in nuke.selectedNodes():\n    z\['selected'].setValue(False)\n\nndNmb2 = int(len(wConnection))\nfor things in range(ndNmb2):\n#  print things\n  wConnection\[things].setSelected(True)\n  dpW = nuke.menu('Nodes').findItem('Jabuka/Write (Jabuka)').invoke()\n  for i in nuke.selectedNodes():\n    newWrite.append(i)\n#    print 'this is my new ' +str(i) \n  #print newWrite\n  topnode_name = nuke.tcl(\"full_name \[topnode %s]\" % nuke.selectedNode().name())\n  x = topnode_name.split('_')\n  newWrite\[things]\['ieEntityName'].setValue('custom')\n  newWrite\[things]\['ieEntityNameCustom'].setValue('holdout_'+ '_'.join(x\[4:7]))\n  newWrite\[things]\['ieVersionDescription'].setValue('holdout')\n  newWrite\[things]\['selected'].setValue(False)\n  #newWrite\[0].setXYpos(int(snX\[i]+int(0)),int(snY\[i])+int(250));newWrite\[0].setInput(0, nuke.toNode(dHGrp))\n  selectUs.append(newWrite\[things])\n  wConnection\[things]\['selected'].setValue(False)\n  \n   \nfor everyone in selectUs:\n  everyone.setSelected(True)\n \n \nselectUs = \[]\n\ndeepList = \[]\n\n\n#dpW = nuke.menu('Nodes').findItem('IE/Publisher/Write (Jabuka)').invoke()\n#for i in nuke.selectedNodes():\n#  newWrite.append(i)\n#  newWrite.setSelected(False)\n#print newWrite\n#newWrite\[0]\['ieEntityName'].setValue('custom')\n#newWrite\[0]\['ieEntityNameCustom'].setValue('holdout')\n#newWrite\[0]\['ieVersionDescription'].setValue('holdout')\n#newWrite\[0].setXYpos(int(snX\[i]+int(0)),int(snY\[i])+int(250));newWrite\[0].setInput(0, nuke.toNode(dHGrp))\n#selectUs.append(newWrite\[0])" +STARTLINE}
}

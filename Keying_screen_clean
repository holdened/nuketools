set cut_paste_input [stack 0]
version 13.2 v8
BackdropNode {
 inputs 0
 name BackdropNode6
 tile_color 0x234927ff
 label "ADDITIVE KEYER"
 note_font_size 42
 selected true
 xpos -34242
 ypos 11697
 bdwidth 400
 bdheight 274
}
BackdropNode {
 inputs 0
 name BackdropNode7
 tile_color 0x8e388e00
 label "LEVEL GREENSCREEN"
 note_font_size 42
 selected true
 xpos -34237
 ypos 12043
 bdwidth 497
 bdheight 482
}
BackdropNode {
 inputs 0
 name BackdropNode8
 tile_color 0x345daaff
 label "INVERSE OVER"
 note_font_size 42
 selected true
 xpos -34214
 ypos 12588
 bdwidth 354
 bdheight 265
}
Log2Lin {
 inputs 0
 operation lin2log
 name Log2Lin1
 selected true
 xpos -34085
 ypos 11777
}
Log2Lin {
 inputs 0
 operation lin2log
 name Log2Lin2
 selected true
 xpos -34232
 ypos 11867
}
push $cut_paste_input
Log2Lin {
 operation lin2log
 name Log2Lin3
 selected true
 xpos -33932
 ypos 11867
}
Group {
 inputs 3
 name AdditiveKeyer1
 help "Additive Keyer enhanced functionality. \n (foreground-reference)+background\nhttp://intranet/depts/Compositing:Nuke:Gizmos:AdditiveKeyer_FS"
 tile_color 0xa400ff
 note_font "Bitstream Vera Sans"
 selected true
 xpos -34085
 ypos 11867
 mapsize {0.15 0.15}
 addUserKnob {20 User l AdditiveKeyer}
 addUserKnob {7 DarkValue R 0 2}
 DarkValue 1
 addUserKnob {7 ConstrainDarks}
 addUserKnob {7 LightValue R 0 2}
 LightValue 1
 addUserKnob {7 ConstrainLights}
 ConstrainLights 1
 addUserKnob {26 ""}
 addUserKnob {7 Saturation}
 Saturation 0.2
 addUserKnob {18 DarkTint}
 DarkTint {1 1 1}
 addUserKnob {6 DarkTint_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {18 LightTint}
 LightTint {1 1 1}
 addUserKnob {6 LightTint_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
}
 Input {
  inputs 0
  name fg
  xpos -123
  ypos 46
  number 2
 }
 Shuffle {
  alpha black
  name Shuffle2
  xpos -123
  ypos 243
 }
 Input {
  inputs 0
  name ref
  xpos 90
  ypos 40
  number 1
 }
 Shuffle {
  alpha black
  name Shuffle3
  xpos 90
  ypos 242
 }
set Ne1fe8a80 [stack 0]
 Merge2 {
  inputs 2
  operation minus
  maskChannelMask -rgba.alpha
  name Merge1
  xpos 7
  ypos 384
 }
set Ne1fd2270 [stack 0]
push $Ne1fe8a80
 Merge2 {
  inputs 2
  operation difference
  maskChannelMask -rgba.alpha
  name Merge2
  xpos -312
  ypos 384
 }
 Saturation {
  saturation 0
  maskChannelMask -rgba.alpha
  name Saturation2
  xpos -312
  ypos 413
 }
 Shuffle {
  red black
  green black
  blue black
  alpha red
  name Shuffle1
  xpos -312
  ypos 928
 }
 Input {
  inputs 0
  name bg
  selected true
  xpos 320
  ypos 47
 }
 Shuffle {
  alpha black
  name Shuffle4
  xpos 301
  ypos 237
 }
set Ne1710700 [stack 0]
 Saturation {
  saturation 0
  maskChannelMask -rgba.alpha
  name Saturation3
  xpos 156
  ypos 418
 }
 Dot {
  name Dot1
  xpos 190
  ypos 625
 }
set N36996b50 [stack 0]
push $Ne1fd2270
 Saturation {
  saturation {{Saturation i}}
  maskChannelMask -rgba.alpha
  name Saturation1
  xpos 7
  ypos 412
 }
set Ne1f3e1e0 [stack 0]
 Clamp {
  minimum -15
  maximum 0
  name Clamp1
  xpos -60
  ypos 484
 }
 Grade {
  multiply {{DarkValue i}}
  black_clamp false
  name Grade3
  xpos -60
  ypos 526
 }
 Grade {
  multiply {{DarkTint.r} {DarkTint.g} {DarkTint.b} 1}
  black_clamp false
  name Grade2
  xpos -60
  ypos 554
 }
 Merge2 {
  inputs 2
  operation multiply
  Achannels {rgba.red rgba.green rgba.blue -rgba.alpha}
  Bchannels {rgba.red rgba.green rgba.blue -rgba.alpha}
  output {rgba.red rgba.green rgba.blue -rgba.alpha}
  maskChannelMask -rgba.alpha
  maskChannelInput -rgba.alpha
  mix {{ConstrainDarks i}}
  name Multiply
  xpos -60
  ypos 620
 }
set Ne02164d0 [stack 0]
push $N36996b50
push $Ne1f3e1e0
 Clamp {
  maximum 15
  name Clamp2
  xpos 69
  ypos 483
 }
 Grade {
  multiply {{LightValue i}}
  name Grade4
  xpos 69
  ypos 526
 }
 Grade {
  multiply {{LightTint.r} {LightTint.g} {LightTint.b} 1}
  name Grade5
  xpos 69
  ypos 554
 }
 Merge2 {
  inputs 2
  operation multiply
  Achannels {rgba.red rgba.green rgba.blue -rgba.alpha}
  Bchannels {rgba.red rgba.green rgba.blue -rgba.alpha}
  output {rgba.red rgba.green rgba.blue -rgba.alpha}
  maskChannelMask -rgba.alpha
  maskChannelInput -rgba.alpha
  mix {{ConstrainLights i}}
  name Multiply1
  xpos 69
  ypos 660
 }
 Merge2 {
  inputs 2
  operation plus
  name Merge4
  xpos 7
  ypos 718
 }
push $Ne1710700
 Dot {
  name Dot4
  xpos 335
  ypos 812
 }
 Merge2 {
  inputs 2
  operation plus
  maskChannelMask -rgba.alpha
  name Merge3
  xpos 7
  ypos 807
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos 7
  ypos 921
 }
 Output {
  name Output1
  xpos 7
  ypos 1053
 }
push $N36996b50
push $Ne02164d0
 Viewer {
  inputs 2
  viewerProcess "None (rec709)"
  name Viewer1
  xpos 241
  ypos 694
 }
end_group
Log2Lin {
 name Log2Lin4
 selected true
 xpos -34085
 ypos 11940
}
push $cut_paste_input
NoOp {
 name NoOp1
 tile_color 0x9b6c27ff
 label GREENSCREEN
 selected true
 xpos -34062
 ypos 12123
}
Dot {
 name Dot52
 selected true
 xpos -34034
 ypos 12175
}
set Nf84a76b0 [stack 0]
push $Nf84a76b0
Dot {
 name Dot79
 selected true
 xpos -33895
 ypos 12175
}
IBKColourV3 {
 name IBKColourV3_1
 selected true
 xpos -33923
 ypos 12378
 screen_type green
 Size 61.5
 off {0.1 0 0}
 mult {1.9 1 1}
 multi 5
}
Merge2 {
 inputs 2
 operation divide
 name Merge4
 selected true
 xpos -34062
 ypos 12378
}
Constant {
 inputs 0
 channels rgb
 color {0.05926513672 2.609375 0.1540527344 1}
 name Constant1
 selected true
 xpos -34217
 ypos 12424
}
Merge2 {
 inputs 2
 operation multiply
 name Multiply2
 selected true
 xpos -34062
 ypos 12447
}
Group {
 inputs 0
 name InverseOKeyer2
 label "\n"
 selected true
 xpos -34160
 ypos 12688
 addUserKnob {20 InverseOverKeyer l "Inverse Over Keyer"}
 addUserKnob {26 textArea l "1) select screen  "}
 addUserKnob {41 cropScreen l "crop screen" T MASTER.cropScreen}
 addUserKnob {41 frameHold l "frame hold" T MASTER.frameHold}
 addUserKnob {22 pySetFrame l " set this frame " -STARTLINE T "f=nuke.frame()\ng=nuke.thisNode()\ng.knob('frameHold').setValue(f)"}
 addUserKnob {26 text02 l "2) match bars setup   "}
 addUserKnob {41 setupMode l "setup mode" T MASTER.setupMode}
 addUserKnob {41 KeyDensity l "key density" T MASTER.KeyDensity}
 addUserKnob {41 minimum T MASTER.minimum}
 addUserKnob {26 ""}
 addUserKnob {26 test02 l fixMatteBlacks: T " "}
 addUserKnob {41 fixMatteBlacks l "" -STARTLINE T MASTER.fixMatteBlacks}
 addUserKnob {26 ""}
 addUserKnob {41 maskChannel l mask T Keymix2.maskChannel}
 addUserKnob {41 invertMask l invert -STARTLINE T Keymix2.invertMask}
 addUserKnob {41 mix T MASTER.mix}
 addUserKnob {20 notes}
 addUserKnob {26 text04_1 l notes: T "beta v0.6b 24/06/14 vfxwiki.org\n\nInstructions: \n\nThis is not a keyer, its is a a different way of using an over \nand the reverse of an over (the InverseOver) together to\nmaintain fine transparent detail from a key(matte).\n\n1) plug in plate despill.\n2) plug in a very thin matte i.e. an unscale'd color difference or keylight matte. \n3) plug in the bg into the InverseOver.\n4) split the out of the InverseOKeyer into the inverseOver and a premult node.\n5) over the premult and the InverseOver.\n6) follow the instructions on the main tab."}
 addUserKnob {22 HELP l " HELP " T "nukescripts.start('href=\"http://vfxwiki.org/tiki-index.php?page=Inverse+Over')" +STARTLINE}
 addUserKnob {26 credit l "" +STARTLINE +INVISIBLE T "The idea of using this for keying and the name goes to Thomas Dyn (credit retained in node please)\n\nAlthough since discovering this technique someone else have also shown me this same technique from thier toolbox used in shake(pre-nuke) - they called it the 'holy matte' trick."}
}
 BackdropNode {
  inputs 0
  name BackdropNode2
  tile_color 0x71c67100
  label key
  note_font_size 42
  xpos -508
  ypos -804
  bdwidth 2948
  bdheight 2860
 }
 Input {
  inputs 0
  name key
  xpos 675
  ypos -928
 }
 Clamp {
  channels rgba
  minimum {{MASTER.fixInfNans}}
  name Clamp5
  xpos 675
  ypos -665
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle10
  xpos 675
  ypos -641
 }
 Grade {
  channels rgba
  blackpoint {0.08146618307 0.08146618307 0.08146618307 0.08146618307}
  whitepoint {0.9875434637 0.9875434637 0.9875434637 0.9875434637}
  gamma 1.02
  white_clamp true
  name Grade1
  xpos 654
  ypos -537
  disable true
 }
 Dot {
  name Dot22
  xpos 703
  ypos -433
 }
 Dot {
  name Dot44
  xpos 703
  ypos -238
 }
set Nd961cdd0 [stack 0]
 Dot {
  name Dot16
  xpos 703
  ypos -26
 }
 Dot {
  name Dot4
  xpos 676
  ypos -26
 }
set Nd9626c70 [stack 0]
 Dot {
  name Dot3
  xpos 566
  ypos -26
 }
set Nd962bc50 [stack 0]
 FrameHold {
  firstFrame {{MASTER.frameHold}}
  name FrameHold3
  xpos 532
  ypos 52
 }
 Crop {
  box {{parent.MASTER.cropScreen} {parent.MASTER.cropScreen} {parent.MASTER.cropScreen} {parent.MASTER.cropScreen}}
  name Crop7
  xpos 532
  ypos 112
 }
 Blur {
  channels rgba
  size 100
  filter box
  quality 25
  name Blur4
  xpos 563
  ypos 167
 }
 Crop {
  box {{parent.Crop7.box.x+((parent.Crop7.box.r-parent.Crop7.box.x)*0.5) x1012 -27} {int(parent.Crop7.box.y+((parent.Crop7.box.t-parent.Crop7.box.y)*0.5))} {int(parent.Crop7.box.x+((parent.Crop7.box.r-parent.Crop7.box.x)*0.5)+1)} {int(int(parent.Crop7.box.y+((parent.Crop7.box.t-parent.Crop7.box.y)*0.5)+1))}}
  reformat true
  crop false
  name Crop8
  xpos 532
  ypos 218
 }
 Input {
  inputs 0
  name despill
  xpos 1340
  ypos -938
  number 1
 }
 Shuffle {
  alpha black
  name Shuffle2
  label "\[value in]-->\[value out]"
  xpos 1340
  ypos -684
 }
 Dot {
  name Dot31
  xpos 1364
  ypos -498
 }
 Dot {
  name Dot1
  xpos 1364
  ypos -100
 }
set Nd9678c60 [stack 0]
 Dot {
  name Dot10
  xpos 1252
  ypos -100
 }
set Nd967db70 [stack 0]
 Dot {
  name Dot14
  xpos 1129
  ypos -100
 }
 Shuffle {
  red black
  green black
  blue black
  alpha black
  name Shuffle7
  label "\[value in]-->\[value out]"
  xpos 1095
  ypos 273
 }
set Nd9687a40 [stack 0]
 Merge2 {
  inputs 2
  bbox B
  name Merge10
  xpos 532
  ypos 279
 }
set Nd96987d0 [stack 0]
push $Nd96987d0
push $Nd9626c70
 Merge2 {
  inputs 2
  operation min
  name Min2
  xpos 642
  ypos 325
 }
 Merge2 {
  inputs 2
  operation divide
  name Merge2
  xpos 532
  ypos 407
 }
push $Nd962bc50
 Dot {
  name Dot2
  xpos 464
  ypos -26
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge9
  xpos 430
  ypos 450
  disable {{!MASTER.fixMatteBlacks x1029 1}}
 }
 Grade {
  channels rgba
  black {{-MASTER.minimum}}
  black_clamp false
  name Grade3
  xpos 430
  ypos 545
 }
set Nd89a5e40 [stack 0]
 Grade {
  channels alpha
  gamma {{parent.MASTER.KeyDensity x1002 1.26 x1027 0.99}}
  black_clamp false
  name GradeDensity
  xpos 430
  ypos 623
 }
set Nd89b6f00 [stack 0]
 Grade {
  channels rgba
  black {{-MASTER.minimum}}
  black_clamp false
  name Grade2
  xpos 324
  ypos 665
  disable true
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle9
  xpos 430
  ypos 725
 }
 Clamp {
  name Clamp3
  xpos 430
  ypos 749
  disable true
 }
set Nd89e9a90 [stack 0]
 Dot {
  name Dot9
  xpos 952
  ypos 755
 }
 Dot {
  name Dot12
  xpos 1090
  ypos 755
 }
push $Nd967db70
 FrameHold {
  firstFrame {{FrameHold.first_frame}}
  name FrameHold2
  xpos 1218
  ypos 452
 }
 Crop {
  box {{parent.Crop1.box} {parent.Crop1.box} {parent.Crop1.box} {parent.Crop1.box}}
  reformat true
  crop false
  name Crop2
  xpos 1218
  ypos 500
 }
 Blur {
  channels rgba
  size 100
  filter box
  name Blur1
  xpos 1218
  ypos 568
 }
 Crop {
  box {{int(width/2)} {int(height/2)} {int(width/2)+1} {int(height/2)+1}}
  reformat true
  crop false
  name Crop6
  xpos 1218
  ypos 622
 }
push $Nd9678c60
 Dot {
  name Dot20
  xpos 1364
  ypos 417
 }
set Nd8a2f7c0 [stack 0]
 Shuffle {
  red black
  green black
  blue black
  alpha black
  name Shuffle6
  label "\[value in]-->\[value out]"
  xpos 1328
  ypos 537
 }
 Merge2 {
  inputs 2
  bbox B
  name Merge3
  xpos 1328
  ypos 622
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  from1 -rgba.alpha
  to1 -rgba.blue
  name Copy1
  xpos 1328
  ypos 746
 }
set Nd8a55f10 [stack 0]
 Dot {
  name Dot21
  xpos 1544
  ypos 755
 }
 Input {
  inputs 0
  name mask
  xpos -154
  ypos -747
  number 2
 }
 Clamp {
  name Clamp7
  xpos -154
  ypos -721
 }
 Invert {
  name Invert3
  xpos -154
  ypos -683
 }
 Dot {
  name Dot15
  xpos -120
  ypos 1892
 }
push $Nd961cdd0
 Dot {
  name Dot6
  xpos 330
  ypos -238
 }
 Dot {
  name Dot13
  xpos 330
  ypos 1296
 }
set Nd88926e0 [stack 0]
 Shuffle {
  red black
  green black
  blue black
  alpha black
  name Shuffle12
  xpos 74
  ypos 1600
 }
 Grid {
  number {6 0}
  size {{width/2/number}}
  color {0.5 0.5 0.5 1}
  name Grid1
  xpos 74
  ypos 1659
 }
push $Nd89a5e40
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle15
  label "\[value in]-->\[value out]"
  xpos 184
  ypos 1530
 }
 Add {
  value 0.5
  name Add1
  xpos 184
  ypos 1587
 }
 Clamp {
  minimum 0.5
  MinClampTo {1 0 0 0}
  MinClampTo_enable true
  name Clamp2
  xpos 214
  ypos 1661
 }
 Merge2 {
  inputs 2
  name Merge11
  label "blacks match"
  xpos 194
  ypos 1760
 }
set Nd88e3e90 [stack 0]
 Shuffle {
  alpha black
  name Shuffle16
  xpos 328
  ypos 1745
 }
push $Nd88926e0
 Shuffle {
  red black
  green black
  blue black
  alpha black
  name Shuffle1
  xpos 296
  ypos 1546
 }
 Grid {
  number {6 0}
  size {{width/2/number}}
  color {0.5 {color.r} {color.r} 1}
  name Grid2
  xpos 296
  ypos 1611
 }
 Grade {
  channels rgba
  black {{MASTER.minimum}}
  black_clamp false
  name Grade4
  xpos 457
  ypos 1611
  disable true
 }
 Add {
  value -0.5
  name Add3
  xpos 641
  ypos 1606
  disable true
 }
push $Nd89b6f00
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle14
  xpos 574
  ypos 644
 }
 Dot {
  name Dot11
  xpos 858
  ypos 652
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle13
  label "\[value in]-->\[value out]"
  xpos 850
  ypos 1465
 }
 Add {
  value {{parent.Add3.value}}
  name Add2
  xpos 855
  ypos 1523
  disable true
 }
 Merge2 {
  inputs 2
  name Merge1
  label "Density match"
  xpos 850
  ypos 1624
 }
 Shuffle {
  green red
  blue red
  alpha black
  name Shuffle3
  xpos 990
  ypos 1598
 }
push $Nd8a2f7c0
 Dot {
  name Dot19
  xpos 1495
  ypos 417
 }
 Dot {
  name Dot18
  xpos 1495
  ypos 1206
 }
push $Nd89e9a90
 FrameHold {
  firstFrame {{MASTER.frameHold}}
  name FrameHold
  xpos 428
  ypos 804
 }
 Crop {
  box {{parent.MASTER.cropScreen} {parent.MASTER.cropScreen} {parent.MASTER.cropScreen} {parent.MASTER.cropScreen}}
  name Crop1
  xpos 428
  ypos 855
 }
 Blur {
  channels rgba
  size 100
  filter box
  quality 25
  name Blur3
  xpos 428
  ypos 897
 }
 Crop {
  box {{parent.Crop1.box.x+((parent.Crop1.box.r-parent.Crop1.box.x)*0.5) x1012 -27} {int(parent.Crop1.box.y+((parent.Crop1.box.t-parent.Crop1.box.y)*0.5))} {int(parent.Crop1.box.x+((parent.Crop1.box.r-parent.Crop1.box.x)*0.5)+1)} {int(int(parent.Crop1.box.y+((parent.Crop1.box.t-parent.Crop1.box.y)*0.5)+1))}}
  reformat true
  crop false
  name Crop3
  xpos 428
  ypos 938
 }
 Dot {
  name Dot17
  xpos 462
  ypos 1087
 }
push $Nd9687a40
 Merge2 {
  inputs 2
  bbox B
  name Merge4
  xpos 1095
  ypos 1094
 }
push $Nd8a55f10
add_layer {inverseOver inverseOver.red inverseOver.green inverseOver.blue inverseOver.alpha}
 Shuffle {
  out inverseOver
  name Shuffle5
  label "\[value in]-->\[value out]"
  xpos 1328
  ypos 1040
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 inverseOver.alpha
  name Copy3
  xpos 1328
  ypos 1088
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 rgba.red
  from1 rgba.green
  to1 rgba.green
  from2 rgba.blue
  to2 rgba.blue
  name Copy2
  xpos 1328
  ypos 1185
 }
 Multiply {
  channels {-inverseOver.red -inverseOver.green -inverseOver.blue inverseOver.alpha}
  value {{MASTER.mix}}
  name Multiply1
  xpos 1333
  ypos 1443
 }
 Multiply {
  channels alpha
  value {{MASTER.mix}}
  name Multiply2
  xpos 1333
  ypos 1479
 }
 Switch {
  inputs 3
  which {{MASTER.setupMode x1021 0}}
  name Switch1
  xpos 1328
  ypos 1598
 }
set Nd861a530 [stack 0]
 Shuffle {
  in inverseOver
  name Shuffle11
  label "\[value in]-->\[value out]"
  xpos 1200
  ypos 1769
 }
 Dot {
  name Dot7
  xpos 1242
  ypos 1847
 }
push $Nd861a530
 Keymix {
  inputs 3
  channels rgba
  maskChannel -rgba.alpha
  name Keymix2
  xpos 1328
  ypos 1889
  disable {{maskChannel?none:1 x1013 1}}
 }
 Output {
  name Output2
  xpos 1328
  ypos 2156
 }
push $Nd88e3e90
 Viewer {
  viewerProcess "rec709 (rec709)"
  input_process false
  name Viewer1
  xpos 440
  ypos 685
 }
 NoOp {
  inputs 0
  name MASTER
  selected true
  xpos 1765
  ypos 1599
  addUserKnob {20 User}
  addUserKnob {26 ""}
  addUserKnob {15 cropScreen l "crop screen"}
  cropScreen {0 0 100 100}
  addUserKnob {3 frameHold l "frame hold"}
  frameHold 1001
  addUserKnob {26 ""}
  addUserKnob {4 setupMode l "setup mode" M {off "key density" minimum "" ""}}
  addUserKnob {7 KeyDensity l "key density" R 0.01 4}
  KeyDensity 1
  addUserKnob {7 minimum R 0 2}
  addUserKnob {26 ""}
  addUserKnob {26 test02 l fixMatteBlacks: T " "}
  addUserKnob {6 fixMatteBlacks l "" -STARTLINE}
  addUserKnob {7 fixInfNans R 0 0.01}
  addUserKnob {26 ""}
  addUserKnob {7 mix}
  mix 1
 }
end_group
set N2ee0d3b0 [stack 0]
Premult {
 name Premult2
 selected true
 xpos -34160
 ypos 12811
}
push $N2ee0d3b0
push 0
Group {
 inputs 2
 name InverseOver2
 selected true
 xpos -33997
 ypos 12688
 addUserKnob {20 inverseOver l "Inverse Over"}
 addUserKnob {41 in l "invOver input channel" T Shuffle1.in}
 addUserKnob {26 credit l "" +STARTLINE +INVISIBLE T "The idea of using this for keying and the name goes to Thomas Dyn (credit retained in node please)\n\nAlthough since discovering this technique someone else have also shown me this same technique from thier toolbox used in shake(pre-nuke) - they called it the 'holy matte' trick."}
}
 Input {
  inputs 0
  name InvOver
  xpos 262
  ypos -144
  number 1
 }
 Shuffle {
  in inverseOver
  name Shuffle1
  label "\[value in]-->\[value out]"
  xpos 262
  ypos -11
 }
 Premult {
  name Premult1
  xpos 262
  ypos 68
 }
set Nd84f3e20 [stack 0]
 Invert {
  name Invert1
  xpos 262
  ypos 99
 }
set Nd84fc360 [stack 0]
 Shuffle {
  red white
  green white
  blue white
  alpha white
  name Shuffle2
  label "\[value in]-->\[value out]"
  xpos 152
  ypos 99
 }
 Dot {
  name Dot1
  selected true
  xpos 186
  ypos 199
 }
push $Nd84fc360
 Merge2 {
  inputs 2
  operation divide
  name Merge1
  xpos 255
  ypos 196
 }
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle3
  label "\[value in]-->\[value out]"
  xpos 255
  ypos 323
 }
 Input {
  inputs 0
  name bg
  xpos 386
  ypos -131
 }
set Nd853f470 [stack 0]
 Dot {
  name Dot3
  xpos 420
  ypos 186
 }
push $Nd84f3e20
 Dot {
  name Dot2
  xpos 521
  ypos 71
 }
 Merge2 {
  inputs 2
  operation minus
  bbox A
  name Merge2
  xpos 487
  ypos 183
 }
 Dot {
  name Dot5
  xpos 521
  ypos 276
 }
 Dot {
  name Dot6
  xpos 118
  ypos 276
 }
 Dot {
  name Dot7
  xpos 121
  ypos 433
 }
 Merge2 {
  inputs 2
  operation multiply
  bbox B
  name Merge3
  xpos 255
  ypos 430
 }
 Remove {
  channels inverseOver
  name Remove1
  xpos 255
  ypos 487
 }
push $Nd853f470
 Dot {
  name Dot4
  xpos 692
  ypos -72
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 rgba.red
  from1 rgba.green
  to1 rgba.green
  from2 rgba.blue
  to2 rgba.blue
  channels all
  bbox B
  name Copy1
  xpos 649
  ypos 459
 }
 Output {
  name Output2
  xpos 649
  ypos 752
 }
end_group
Merge2 {
 inputs 2
 name Merge5
 selected true
 xpos -33997
 ypos 12811
}
push $cut_paste_input
Group {
 name PxF_ScreenClean
 help "Clean chroma key background imperfections using a clean plate."
 tile_color 0x733520ff
 selected true
 xpos -34123
 ypos 12969
 addUserKnob {20 User}
 addUserKnob {4 screen_type l ScreenType t "The color of the chroma key background." M {Red Green Blue "" "" ""}}
 screen_type Green
 addUserKnob {18 screen_color l ScreenColor t "The color that will be used to repair the chroma key background (usually the average color of the greenscreen on the plate).\n\nWhen using the color picker, use Ctrl+Alt+Shift to avoid looping values."}
 screen_color {0.85 0.1 0.85}
 addUserKnob {6 screen_color_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {7 mix t "Dissolve between the original (0) and the full effect (1)."}
 mix 1
 addUserKnob {26 ""}
 addUserKnob {26 Credits l "" t "PxF_ScreenClean 2.0.4 - &copy; 2012-2023 - Xavier Bourque - pixelfudger.com \n\nPixelfudger gizmos are free to use for personal and commercial use as long as you leave the credit text intact in the gizmo's knobs and in the source files. " +STARTLINE T "<font size=2>PxF_ScreenClean 2.0.4 - &copy; 2012-2023 - </font><a href=\"http://www.xavierbourque.com\"><font color=\"#bbbbbb\" size=2>Xavier Bourque</a></font> - <a href=\"http://www.pixelfudger.com\"><font color=\"#bbbbbb\" size=2>pixelfudger.com</a></font> - <a href=\"http://www.pixelfudger.com/userguides/PxF_ScreenClean.html\"><font color=\"#bbbbbb\" size=2>Video Tutorial</a></font>"}
}
 Input {
  inputs 0
  name mask
  xpos 419
  ypos 274
  number 2
 }
 Input {
  inputs 0
  name plate
  xpos 203
  ypos -448
 }
 Dot {
  name Dot1
  xpos 209
  ypos -347
 }
set Nd83c16a0 [stack 0]
 Dot {
  name Dot2
  xpos -64
  ypos -202
 }
 Dot {
  name Dot3
  xpos -57
  ypos 214
 }
set Nd83ec8a0 [stack 0]
push $Nd83ec8a0
push $Nd83c16a0
 Shuffle {
  red blue
  green blue
  alpha black
  name Blue
  xpos 203
  ypos -187
 }
set Nf8529670 [stack 0]
push $Nd83c16a0
 Shuffle {
  red green
  blue green
  alpha black
  name Green
  xpos 112
  ypos -179
 }
set Nd83e1a60 [stack 0]
push $Nd83c16a0
 Shuffle {
  green red
  blue red
  alpha black
  name Red
  xpos 17
  ypos -180
 }
set Nc9f22f80 [stack 0]
 Switch {
  inputs 3
  which {{screen_type i x1 0}}
  name High
  xpos 17
  ypos -99
 }
push $Nd83e1a60
push $Nc9f22f80
 Switch {
  inputs 2
  which {{"screen_type == 0 ? 1 : screen_type == 1 ? 0 : 0" i x1 0}}
  name LowA
  xpos 145
  ypos -108
 }
push $Nf8529670
push $Nd83e1a60
push 0
 Switch {
  inputs 3
  which {{"screen_type == 0 ? 2 : screen_type == 1 ? 2 : 1" i x1 1}}
  name LowB
  xpos 261
  ypos -107
 }
 Merge2 {
  inputs 2
  operation max
  name Merge1
  xpos 217
  ypos -59
 }
 Merge2 {
  inputs 2
  operation minus
  name Merge2
  xpos 116
  ypos -20
 }
 Input {
  inputs 0
  name clean_plate
  xpos 462
  ypos -437
  number 1
 }
 Dot {
  name Dot4
  xpos 530
  ypos -235
 }
set Nc9f33050 [stack 0]
 Shuffle {
  red blue
  green blue
  alpha black
  name Blue1
  xpos 570
  ypos -194
 }
set Nc9f37f60 [stack 0]
push $Nc9f33050
 Shuffle {
  red green
  blue green
  alpha black
  name Green1
  xpos 481
  ypos -195
 }
set Nc9f48cc0 [stack 0]
push $Nc9f33050
 Shuffle {
  green red
  blue red
  alpha black
  name Red1
  xpos 382
  ypos -194
 }
set Nc9f59a80 [stack 0]
 Switch {
  inputs 3
  which {{screen_type i x1 0}}
  name High1
  xpos 401
  ypos -130
 }
push $Nc9f48cc0
push $Nc9f59a80
 Switch {
  inputs 2
  which {{"screen_type == 0 ? 1 : screen_type == 1 ? 0 : 0" i}}
  name LowA1
  xpos 498
  ypos -131
 }
push $Nc9f37f60
push $Nc9f48cc0
push 0
 Switch {
  inputs 3
  which {{"screen_type == 0 ? 2 : screen_type == 1 ? 2 : 1" i}}
  name LowB1
  xpos 592
  ypos -128
 }
 Merge2 {
  inputs 2
  operation max
  name Merge3
  xpos 532
  ypos -73
 }
 Merge2 {
  inputs 2
  operation minus
  name Merge4
  xpos 429
  ypos -19
 }
 Merge2 {
  inputs 2
  operation divide
  name Merge5
  xpos 309
  ypos 87
 }
 Clamp {
  name Clamp1
  xpos 309
  ypos 114
 }
push $Nc9f33050
 Dot {
  name Dot5
  xpos 720
  ypos -198
 }
push $Nd83c16a0
 Dot {
  name Dot7
  xpos 845
  ypos -231
 }
 ColorCorrect {
  gain 0
  offset {{screen_color.r i} {screen_color.g i} {screen_color.b i} {1 i}}
  name ColorCorrect1
  xpos 817
  ypos -159
  postage_stamp true
 }
 Merge2 {
  inputs 2
  operation minus
  name Merge6
  xpos 692
  ypos -24
 }
 Dot {
  name Dot6
  xpos 688
  ypos 165
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge7
  xpos 309
  ypos 166
 }
 Merge2 {
  inputs 2
  operation minus
  name Merge8
  xpos 309
  ypos 215
 }
 Keymix {
  inputs 3
  invertMask true
  bbox B
  name Keymix1
  xpos 309
  ypos 299
  disable {{"\[exists parent.input2] ? 0 : 1" i x1 0}}
 }
push $Nd83ec8a0
 Dissolve {
  inputs 2
  which {{parent.mix}}
  name Dissolve1
  selected true
  xpos 309
  ypos 403
 }
 Output {
  name Output1
  xpos 309
  ypos 503
 }
end_group

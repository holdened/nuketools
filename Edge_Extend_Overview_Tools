set cut_paste_input [stack 0]
version 13.2 v8
StickyNote {
 inputs 0
 name StickyNote6
 label "\n<b>EdgeSpread</b>\n\n- blur, unpremult technique\n\n\n<font color=green>- easy to set up\n\n</font>\n\n<font color=red>- erode can't be split (or has to be done &nbsp;&nbsp;internally)\n- only 1 blur iteration\n\n</font>\n"
 note_font_size 30
 selected true
 xpos -22214
 ypos 2932
}
StickyNote {
 inputs 0
 name StickyNote15
 label "\n- erode / dilate technique\n\n\n<font color=green>- easy to tweak\n- option to maintain or blur &nbsp;&nbsp;detail\n- choice of Merge operation\n\n</font>\n\n<font color=red>\n\n</font>\n"
 note_font_size 30
 selected true
 xpos -5353
 ypos 2858
}
StickyNote {
 inputs 0
 name StickyNote8
 label "\n<b>Nuke's EdgeExtend</b>\n\n- blur, unpremult technique\n\n\n<font color=green>- easy to set up\n- option to restore detail\n- GPU support\n\n</font>\n\n<font color=red>- too simple\n- knobs can't be split\n- edge blur can't be adjusted\n- confusing alpha channel bypass / premult when using matte &nbsp;&nbsp;input alpha\n\n</font>\n"
 note_font_size 30
 selected true
 xpos -14287
 ypos 2835
}
push $cut_paste_input
Group {
 name EdgeExtend
 help "EdgeExtend repeatedly blurs and unpremuliplies the image to extend edges outward while trying to preserve the original source colour"
 selected true
 xpos -16970
 ypos 2945
 addUserKnob {20 "" l User}
 addUserKnob {4 premult l "input is" M {premultiplied unpremultiplied}}
 addUserKnob {3 slices t "How many times the edges are blurred and unpremuliplied.\nThis is the fine control for slightly better quality. The current maximum is 10."}
 slices 4
 addUserKnob {3 slice_width l "slice width" t "Blur amount that is applied before unpremultiplying the result per slice.\nThis is the brute force control and should be kept at 1 if possible.\nOnly increase this if the maximum amount of slices (10) doesn't cover the area you need."}
 slice_width 1
 addUserKnob {7 blurResult l "blur slices" R 0 10}
 blurResult 5
}
 Input {
  inputs 0
  name img
  xpos -590
  ypos -509
 }
set N2b1ab3f0 [stack 0]
 Dot {
  name Dot1
  xpos -556
  ypos 978
 }
 Input {
  inputs 0
  name matte
  xpos -358
  ypos -653
  number 1
 }
push $N2b1ab3f0
 Unpremult {
  name Unpremult11
  xpos -468
  ypos -509
  disable {{parent.premult}}
 }
 Copy {
  inputs 2
  from0 -rgba.alpha
  to0 -rgba.alpha
  channels alpha
  name Copy2
  xpos -358
  ypos -516
 }
 Premult {
  name Premult1
  xpos -358
  ypos -450
 }
 Shuffle {
  black alpha
  out2 depth
  name Shuffle1
  label alpha>depth
  xpos -223
  ypos -413
 }
 Unpremult {
  channels {rgba.red rgba.green rgba.blue depth.Z}
  name Unpremult1
  xpos -223
  ypos -373
 }
set N2b516170 [stack 0]
 Dot {
  name Dot2
  xpos -189
  ypos -214
 }
set N16bc6150 [stack 0]
push $N2b516170
 Blur {
  channels {rgba.red rgba.green rgba.blue depth.Z}
  size {{parent.slice_width}}
  name Blur1
  xpos -25
  ypos -373
 }
 Shuffle {
  in2 depth
  alpha red2
  out2 depth
  name Shuffle3
  label depth>alpha
  xpos -25
  ypos -333
 }
 Unpremult {
  channels rgba
  alpha depth.Z
  name Unpremult3
  xpos -25
  ypos -293
 }
 Blur {
  channels rgba
  size {{parent.blurResult}}
  name Blur10
  xpos -25
  ypos -241
 }
 set C16b71840 [stack 0]
 Merge2 {
  inputs 2
  Achannels {rgba.red rgba.green rgba.blue depth.Z}
  name Merge1
  xpos -25
  ypos -218
 }
set N16b5faf0 [stack 0]
 Dot {
  name Dot3
  xpos 9
  ypos -73
 }
set N16b5bc10 [stack 0]
push $N16b5faf0
 Blur {
  channels rgba
  size {{parent.slice_width}}
  name Blur2
  xpos 159
  ypos -218
 }
 Shuffle {
  in2 depth
  black alpha
  out2 depth
  name Shuffle5
  label alpha>depth
  xpos 159
  ypos -180
 }
 Unpremult {
  channels {rgba.red rgba.green rgba.blue depth.Z}
  name Unpremult2
  xpos 159
  ypos -140
 }
 Blur {
  channels {rgba.red rgba.green rgba.blue depth.Z}
  size {{parent.blurResult}}
  name Blur3
  xpos 159
  ypos -101
 }
 set C2f5b3940 [stack 0]
 Merge2 {
  inputs 2
  name Merge2
  xpos 159
  ypos -73
 }
set N2f5c0470 [stack 0]
 Dot {
  name Dot4
  xpos 193
  ypos 103
 }
set N2059a970 [stack 0]
push $N2f5c0470
 Shuffle {
  in2 depth
  alpha red2
  out2 depth
  name Shuffle2
  label depth>alpha
  xpos 342
  ypos -24
 }
 Unpremult {
  channels rgba
  alpha depth.Z
  name Unpremult4
  xpos 342
  ypos 16
 }
set N2f4a6cd0 [stack 0]
clone $C16b71840 {
  xpos 342
  ypos 68
  selected false
 }
 Merge2 {
  inputs 2
  Achannels {rgba.red rgba.green rgba.blue depth.Z}
  name Merge3
  xpos 342
  ypos 103
 }
 Dot {
  name Dot5
  xpos 373
  ypos 226
 }
set N2b403a30 [stack 0]
push $N2f4a6cd0
 Blur {
  channels rgba
  size {{parent.slice_width}}
  name Blur4
  xpos 503
  ypos 23
 }
 Shuffle {
  in2 depth
  black alpha
  out2 depth
  name Shuffle4
  label alpha>depth
  xpos 503
  ypos 65
 }
 Unpremult {
  channels {rgba.red rgba.green rgba.blue depth.Z}
  name Unpremult5
  xpos 503
  ypos 105
 }
set N2f45a520 [stack 0]
clone $C2f5b3940 {
  xpos 503
  ypos 174
  selected false
 }
 Merge2 {
  inputs 2
  name Merge4
  xpos 503
  ypos 226
 }
 Dot {
  name Dot6
  xpos 537
  ypos 321
 }
set N2f587a20 [stack 0]
push $N2f45a520
 Blur {
  channels {rgba.red rgba.green rgba.blue depth.Z}
  size {{parent.slice_width}}
  name Blur5
  xpos 689
  ypos 105
 }
 Shuffle {
  in2 depth
  alpha red2
  out2 depth
  name Shuffle6
  label depth>alpha
  xpos 689
  ypos 145
 }
 Unpremult {
  channels rgba
  alpha depth.Z
  name Unpremult6
  xpos 689
  ypos 185
 }
set N2f483a40 [stack 0]
clone $C16b71840 {
  xpos 684
  ypos 272
  selected false
 }
 Merge2 {
  inputs 2
  Achannels {rgba.red rgba.green rgba.blue depth.Z}
  name Merge5
  xpos 689
  ypos 321
 }
 Dot {
  name Dot7
  xpos 723
  ypos 448
 }
set N2f5af860 [stack 0]
push $N2f483a40
 Blur {
  channels rgba
  size {{parent.slice_width}}
  name Blur6
  xpos 856
  ypos 200
 }
 Shuffle {
  in2 depth
  black alpha
  out2 depth
  name Shuffle7
  label alpha>depth
  xpos 856
  ypos 280
 }
 Unpremult {
  channels {rgba.red rgba.green rgba.blue depth.Z}
  name Unpremult7
  xpos 856
  ypos 320
 }
set N22900bd0 [stack 0]
clone $C2f5b3940 {
  xpos 852
  ypos 405
  selected false
 }
 Merge2 {
  inputs 2
  name Merge6
  xpos 856
  ypos 448
 }
 Dot {
  name Dot8
  xpos 890
  ypos 514
 }
set N2f4ccaf0 [stack 0]
push $N22900bd0
 Blur {
  channels {rgba.red rgba.green rgba.blue depth.Z}
  size {{parent.slice_width}}
  name Blur7
  xpos 1042
  ypos 320
 }
 Shuffle {
  in2 depth
  alpha red2
  out2 depth
  name Shuffle8
  label depth>alpha
  xpos 1042
  ypos 393
 }
 Unpremult {
  channels rgba
  alpha depth.Z
  name Unpremult8
  xpos 1042
  ypos 433
 }
set N206df910 [stack 0]
clone $C16b71840 {
  xpos 1046
  ypos 484
  selected false
 }
 Merge2 {
  inputs 2
  Achannels {rgba.red rgba.green rgba.blue depth.Z}
  name Merge7
  xpos 1042
  ypos 514
 }
 Dot {
  name Dot9
  xpos 1076
  ypos 579
 }
set N20706530 [stack 0]
push $N206df910
 Blur {
  channels rgba
  size {{parent.slice_width}}
  name Blur8
  xpos 1205
  ypos 440
 }
 Shuffle {
  in2 depth
  black alpha
  out2 depth
  name Shuffle9
  label alpha>depth
  xpos 1205
  ypos 466
 }
 Unpremult {
  channels {rgba.red rgba.green rgba.blue depth.Z}
  name Unpremult9
  xpos 1205
  ypos 506
 }
set N2f4eb920 [stack 0]
clone $C2f5b3940 {
  xpos 1206
  ypos 551
  selected false
 }
 Merge2 {
  inputs 2
  name Merge8
  xpos 1205
  ypos 579
 }
 Dot {
  name Dot10
  xpos 1239
  ypos 664
 }
set N2f512950 [stack 0]
push $N2f4eb920
 Blur {
  channels {rgba.red rgba.green rgba.blue depth.Z}
  size {{parent.slice_width}}
  name Blur9
  xpos 1421
  ypos 506
 }
 Shuffle {
  in2 depth
  alpha red2
  out2 depth
  name Shuffle11
  label depth>alpha
  xpos 1421
  ypos 546
 }
 Unpremult {
  channels rgba
  alpha depth.Z
  name Unpremult10
  xpos 1421
  ypos 586
 }
clone $C16b71840 {
  xpos 1421
  ypos 638
  selected true
 }
 Merge2 {
  inputs 2
  Achannels {rgba.red rgba.green rgba.blue depth.Z}
  name Merge9
  xpos 1421
  ypos 664
 }
push $N2f512950
push $N20706530
push $N2f4ccaf0
push $N2f5af860
push $N2f587a20
push $N2b403a30
push $N2059a970
push $N16b5bc10
push $N16bc6150
push $N2b1ab3f0
 Switch {
  inputs 11
  which {{parent.slices}}
  name Switch1
  xpos 689
  ypos 827
 }
 Shuffle {
  in2 depth
  alpha red2
  out2 depth
  name Shuffle10
  label depth>alpha
  xpos 689
  ypos 865
 }
 Remove {
  channels depth
  name Remove1
  xpos 689
  ypos 905
 }
 Copy {
  inputs 2
  from0 -rgba.alpha
  to0 -rgba.alpha
  channels depth
  name Copy1
  xpos 689
  ypos 960
 }
 Output {
  name Output1
  xpos 689
  ypos 1290
 }
 Blur {
  inputs 0
  channels {rgba.red rgba.green rgba.blue depth.Z}
  size 8.5
  name Blur11
  xpos 299
  ypos -61
 }
end_group
StickyNote {
 inputs 0
 name StickyNote10
 label "\n<b>KillOutline (by Andreas Frickinger)</b>\n\n- blur, unpremult technique\n- re-using the original EdgeExtend by Frank Rueter\n\n\n<font color=green>- easy to set up\n- choice of iterations (dynamically)\n- separate mask input (for masking, not for core)\n\n</font>\n\n<font color=red>- knobs can't be split up\n- alpha has to be shuffled in if you want to treat your matte before &nbsp;&nbsp;going into the tool\n\n</font>\n"
 note_font_size 30
 selected true
 xpos -16654
 ypos 2851
}
push $cut_paste_input
RotoPaint {
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097152}
    {t x44700000 x44070000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {cubiccurve Brush2 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448fa000 x446a6000 1}
       {x448e6000 x44698000 1}
       {x448d9000 x4468c000 1}
       {x448cc000 x44682000 1}
       {x448bb000 x44674000 1}
       {x448b9000 x44670000 1}
       {x448bd000 x4466a000 1}
       {x448bd000 x44666000 1}
       {x448c0000 x44666000 1}
       {x448cc000 x44666000 1}
       {x448de000 x44664000 1}
       {x448e1000 x44664000 1}
       {x448ef000 x44660000 1}
       {x448fe000 x44660000 1}
       {x44904000 x44660000 1}}}
     {tx x447a4000 x448d8777 x44672666}
     {a r 0 b 0 ro 0 go 0 bo 0 ao 0 bs x41200000 h 1 bu 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 tt x41880000}}
    {cubiccurve Brush1 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44a17000 x446ec000 1}
       {x449e5000 x446de000 1}
       {x449a4000 x446c8000 1}
       {x4492e000 x4469c000 1}
       {x448e3000 x4467e000 1}
       {x448d9000 x4467a000 1}}}
     {tx x447a4000 x4496c555 x446b1000}
     {a r 0 b 0 ro 0 go 0 bo 0 ao 0 bs x41200000 h 1 bu 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 tt x41880000}}}}}}
 toolbox {brush {
  { selectAll str 1 ssx 1 ssy 1 sf 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush r 0 b 0 bs 10 h 1 str 1 ssx 1 ssy 1 sf 1 sb 1 ltn 1001 ltm 1001 tt 17 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
} }
 toolbar_paint_color {0 1 0 1}
 toolbar_brush_size 10
 toolbar_brush_hardness 1
 toolbar_lifetime_type single
 toolbar_lifetime_start 1001
 toolbar_lifetime_end 1001
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {960 540}
 color {0 1 0 1}
 colorOverlay {0 0 0 0}
 lifetime_type "all frames"
 lifetime_start 1001
 lifetime_end 1001
 motionblur_on true
 brush_size 10
 brush_spacing 0.05000000075
 brush_hardness 1
 source_black_outside true
 name RotoPaint2
 selected true
 xpos -1844
 ypos 3911
}
Group {
 inputs 0
 name Test_Shape
 tile_color 0xffff
 note_font "Bitstream Vera Sans Bold"
 selected true
 xpos -31290
 ypos 2629
 postage_stamp true
 addUserKnob {20 User}
 addUserKnob {7 thickness l Thickness R 0 5}
 thickness 2
}
 Radial {
  inputs 0
  area {180 150 1740 920}
  softness {{parent.thickness/100}}
  name Radial2
  selected true
  xpos -584
  ypos 503
 }
 Dot {
  name Dot9
  xpos -550
  ypos 573
 }
set N2f689300 [stack 0]
 Dot {
  name Dot10
  xpos -550
  ypos 645
 }
push $N2f689300
 Invert {
  name Invert4
  xpos -730
  ypos 564
 }
 Constant {
  inputs 0
  channels rgb
  color 0.6
  format "1920 1080 0 0 1920 1080 1 HD_1080"
  name Constant3
  xpos -1053
  ypos 405
 }
 Shuffle2 {
  fromInput1 {{0} B}
  fromInput2 {{0} B}
  mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 white -1 -1 rgba.alpha 0 3"
  name Shuffle6
  xpos -1053
  ypos 515
 }
 Dot {
  name Dot11
  xpos -1019
  ypos 573
 }
 CheckerBoard2 {
  inputs 0
  format "1920 1080 0 0 1920 1080 1 HD_1080"
  boxsize 32
  centerlinewidth 0
  name CheckerBoard2
  xpos -742
  ypos 303
 }
 ColorBars {
  inputs 0
  format "1920 1080 0 0 1920 1080 1 HD_1080"
  PAL true
  name ColorBars3
  xpos -888
  ypos 197
 }
 Merge2 {
  inputs 2
  operation multiply
  name Merge3
  xpos -888
  ypos 327
 }
 Shuffle2 {
  fromInput1 {{0} B}
  fromInput2 {{0} B}
  mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 white -1 -1 rgba.alpha 0 3"
  name Shuffle10
  xpos -888
  ypos 388
 }
 Merge2 {
  inputs 2+1
  name Merge11
  xpos -888
  ypos 570
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy2
  xpos -888
  ypos 636
 }
 Premult {
  name Premult9
  xpos -888
  ypos 713
 }
 Output {
  name Output1
  xpos -888
  ypos 813
 }
end_group
Dot {
 name Dot18
 selected true
 xpos -31256
 ypos 2765
}
set N2f711730 [stack 0]
Dot {
 name Dot20
 selected true
 xpos -31020
 ypos 2765
}
set N2f716590 [stack 0]
Dot {
 name Dot25
 selected true
 xpos -28950
 ypos 2765
}
set N2f71b650 [stack 0]
Dot {
 name Dot33
 selected true
 xpos -27165
 ypos 2765
}
set N2f720630 [stack 0]
Dot {
 name Dot11
 selected true
 xpos -24433
 ypos 2765
}
set N2f725650 [stack 0]
Dot {
 name Dot58
 selected true
 xpos -22420
 ypos 2765
}
set N2f72a670 [stack 0]
Dot {
 name Dot17
 selected true
 xpos -20636
 ypos 2765
}
set N2f72f690 [stack 0]
Dot {
 name Dot40
 selected true
 xpos -18837
 ypos 2765
}
set N2f734670 [stack 0]
Dot {
 name Dot78
 selected true
 xpos -16792
 ypos 2765
}
set N2f7396e0 [stack 0]
Dot {
 name Dot77
 selected true
 xpos -14437
 ypos 2765
}
set N2f73e700 [stack 0]
Dot {
 name Dot61
 selected true
 xpos -12121
 ypos 2765
}
set N2f7437b0 [stack 0]
Dot {
 name Dot73
 selected true
 xpos -9982
 ypos 2762
}
set N2f7487d0 [stack 0]
Dot {
 name Dot9
 selected true
 xpos -8055
 ypos 2762
}
set N2f74d7f0 [stack 0]
Dot {
 name Dot86
 selected true
 xpos -5631
 ypos 2762
}
set N2f752770 [stack 0]
Dot {
 name Dot67
 selected true
 xpos -3826
 ypos 2762
}
set N2f757830 [stack 0]
Dot {
 name Dot92
 selected true
 xpos -1673
 ypos 2762
}
Unpremult {
 name Unpremult9
 selected true
 xpos -1707
 ypos 2959
}
RotoPaint {
 output rgb
 curves {{{v x3f99999a}
  {f 0}
  {n
   {layer Root
    {f 2097664}
    {t x44700000 x44070000}
    {a pt1x 0 pt1y 0 pt2x 0 pt2y 0 pt3x 0 pt3y 0 pt4x 0 pt4y 0 ptex00 0 ptex01 0 ptex02 0 ptex03 0 ptex10 0 ptex11 0 ptex12 0 ptex13 0 ptex20 0 ptex21 0 ptex22 0 ptex23 0 ptex30 0 ptex31 0 ptex32 0 ptex33 0 ptof1x 0 ptof1y 0 ptof2x 0 ptof2y 0 ptof3x 0 ptof3y 0 ptof4x 0 ptof4y 0 pterr 0 ptrefset 0 ptmot x40800000 ptref 0}
    {cubiccurve Smear31 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44845333 x4463e666 1}
       {x44845333 x4465e666 1}
       {x44841333 x4466d99a 1}}}
     {tx x447a4000 x44843ddd x44658ccd}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear30 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4484599a x4463599a 1}
       {x44848000 x4465599a 1}
       {x44849333 x44670000 1}
       {x4484799a x4467599a 1}
       {x4484599a x4466a666 1}}}
     {tx x447a4000 x44847333 x4465f0a5}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear29 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44849333 x4462cccd 1}
       {x44847333 x44644000 1}
       {x44847333 x44664000 1}
       {x44846ccd x4467199a 1}
       {x44844ccd x44664ccd 1}}}
     {tx x447a4000 x448470a3 x4465570b}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear28 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4484f99a x44633333 1}
       {x44850666 x4464599a 1}
       {x4484f99a x44668000 1}
       {x4484b333 x4467c000 1}
       {x4484a000 x4466f333 1}}}
     {tx x447a4000 x4484dc29 x4465c000}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear27 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4484e666 x44638000 1}
       {x44851333 x44653333 1}
       {x4485199a x4466cccd 1}
       {x44850000 x44680000 1}
       {x4484f99a x44670ccd 1}}}
     {tx x447a4000 x4485028e x44661c2a}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear26 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44858ccd x44633333 1}
       {x44858ccd x4463999a 1}
       {x44858ccd x4466c000 1}
       {x44855333 x44686666 1}
       {x44852ccd x44672666 1}}}
     {tx x447a4000 x44856e15 x4465d1eb}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear25 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4486199a x44630ccd 1}
       {x44860ccd x44644ccd 1}
       {x44862ccd x44660ccd 1}
       {x4486199a x4468199a 1}
       {x4485f333 x44677333 1}
       {x4485e000 x4466a666 1}}}
     {tx x447a4000 x44860aab x4465eeef}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear24 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4486599a x4462cccd 1}
       {x44869333 x44648ccd 1}
       {x4486a666 x44670000 1}
       {x44866ccd x44682666 1}
       {x44864000 x4466d99a 1}}}
     {tx x447a4000 x44867333 x4465deb8}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear23 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4486599a x4462c000 1}
       {x44868000 x4463c000 1}
       {x4486accd x44656666 1}
       {x4486d99a x44670ccd 1}
       {x4486d99a x4467e666 1}
       {x4486a666 x4466999a 1}}}
     {tx x447a4000 x4486a555 x44659333}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear22 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44870666 x44627333 1}
       {x44872000 x44652666 1}
       {x44872ccd x4466b333 1}
       {x44870ccd x44674ccd 1}
       {x4486e000 x44668000 1}}}
     {tx x447a4000 x44870ccd x44659eb8}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear21 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44878666 x44620000 1}
       {x44878666 x4462cccd 1}
       {x44878666 x4464599a 1}
       {x44879333 x44660ccd 1}
       {x44878000 x44668000 1}
       {x44875333 x4465999a 1}}}
     {tx x447a4000 x44877eef x44648ccc}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear20 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4487f333 x4461999a 1}
       {x4487d99a x4463999a 1}
       {x4487d99a x4465599a 1}
       {x4487b99a x4466a666 1}
       {x44878ccd x4466199a 1}}}
     {tx x447a4000 x4487c8f6 x4464a8f6}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear19 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44886000 x44622666 1}
       {x44885333 x4462d99a 1}
       {x44885333 x44644000 1}
       {x44885333 x44660000 1}
       {x44884666 x44666666 1}
       {x44882000 x44667333 1}}}
     {tx x447a4000 x44884aab x4464aeef}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear18 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44887333 x44618000 1}
       {x44886ccd x44634000 1}
       {x44886ccd x4464b333 1}
       {x44884ccd x4465a666 1}
       {x44884000 x4465599a 1}}}
     {tx x447a4000 x44885eb8 x4464170a}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear17 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4488e666 x4461b333 1}
       {x4488cccd x4462a666 1}
       {x4488d99a x4464599a 1}
       {x4488cccd x4465d99a 1}
       {x44888000 x44650000 1}}}
     {tx x447a4000 x4488c51f x4463e8f5}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear16 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44895333 x4461b333 1}
       {x44894000 x44620000 1}
       {x44892ccd x4463a666 1}
       {x44894000 x44653333 1}
       {x44892ccd x44660ccd 1}
       {x4489199a x4465c000 1}}}
     {tx x447a4000 x44893667 x44640eef}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear15 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x44899333 x44623333 1}
       {x4489accd x4463e666 1}
       {x4489cccd x4465599a 1}
       {x4489b99a x44666666 1}
       {x44898666 x44658000 1}}}
     {tx x447a4000 x4489a8f6 x4464ab85}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear14 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x4489eccd x4461c000 1}
       {x4489eccd x44620ccd 1}
       {x448a1333 x44643333 1}
       {x448a1333 x44656666 1}
       {x4489f99a x44660000 1}
       {x4489cccd x44654ccd 1}}}
     {tx x447a4000 x4489f666 x44641ddf}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear13 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448a6666 x4461c000 1}
       {x448a6000 x4462cccd 1}
       {x448a8000 x44640000 1}
       {x448a8ccd x44656666 1}
       {x448a6000 x44654000 1}
       {x448a4000 x4464b333 1}}}
     {tx x447a4000 x448a6889 x4463fbbb}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear12 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448ab99a x44618000 1}
       {x448aaccd x44624ccd 1}
       {x448ab333 x44632666 1}
       {x448ab99a x4464a666 1}
       {x448ab99a x44650ccd 1}}}
     {tx x447a4000 x448ab5c3 x4463547b}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear11 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448ab99a x4461599a 1}
       {x448ab99a x4461a666 1}
       {x448ab99a x4461f333 1}
       {x448acccd x4462c000 1}
       {x448aeccd x44640000 1}
       {x448ae000 x44653333 1}
       {x448ac666 x44656666 1}
       {x448a8ccd x4464cccd 1}}}
     {tx x447a4000 x448ac334 x44636333}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear10 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448f6ccd x44610000 1}
       {x448fa666 x44617333 1}
       {x4490a000 x4462c000 1}
       {x44912ccd x4463b333 1}
       {x44916666 x44646666 1}
       {x44918666 x44646666 1}}}
     {tx x447a4000 x4490a223 x4462f334}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear9 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448f3333 x4460d99a 1}
       {x448f599a x44617333 1}
       {x448fc000 x44626666 1}
       {x44907333 x44634ccd 1}
       {x44911333 x44642666 1}}}
     {tx x447a4000 x448ff70a x44626e13}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear8 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448cd99a x4460d99a 1}
       {x448cc666 x44610ccd 1}
       {x448c6000 x4461f333 1}
       {x448bb333 x4463599a 1}
       {x448b6000 x44642666 1}
       {x448b399a x44646666 1}}}
     {tx x447a4000 x448c0ccd x4462a001}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear7 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448ca000 x4461e666 1}
       {x448c8ccd x4462199a 1}
       {x448c4ccd x44628ccd 1}
       {x448c0666 x44630000 1}
       {x448bd333 x44637333 1}
       {x448b8666 x4463cccd 1}
       {x448b6000 x4463f333 1}
       {x448b3333 x4464199a 1}}}
     {tx x447a4000 x448bed99 x44631b33}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear6 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448fd333 x445fe666 1}
       {x448fd333 x4460599a 1}
       {x448fd333 x4460f333 1}
       {x448fc666 x4461c000 1}
       {x448fc666 x4462c000 1}
       {x448fc666 x44638000 1}
       {x448fc666 x44646666 1}
       {x448fc666 x4464b333 1}}}
     {tx x447a4000 x448fcb34 x44624999}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear5 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448ef333 x44600ccd 1}
       {x448ef333 x4460a666 1}
       {x448ef333 x44613333 1}
       {x448ef333 x44624ccd 1}
       {x448ee666 x44632666 1}}}
     {tx x447a4000 x448ef0a3 x44617852}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear4 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448e599a x4460599a 1}
       {x448e5333 x4461cccd 1}
       {x448e4000 x44628ccd 1}
       {x448e3333 x44632666 1}
       {x448e3333 x44640000 1}}}
     {tx x447a4000 x448e43d7 x44625eb8}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear3 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448db333 x44608000 1}
       {x448db333 x44610ccd 1}
       {x448db333 x4461cccd 1}
       {x448db333 x44623333 1}
       {x448da000 x44633333 1}
       {x448d9333 x4463a666 1}
       {x448d9333 x4463f333 1}}}
     {tx x447a4000 x448da751 x446255f1}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear2 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448ceccd x4460cccd 1}
       {x448ceccd x44610ccd 1}
       {x448cf333 x44624000 1}
       {x448cf333 x4463599a 1}
       {x448cf333 x44648ccd 1}
       {x448cf333 x4464cccd 1}}}
     {tx x447a4000 x448cf111 x4462cccd}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}
    {cubiccurve Smear1 512 catmullrom
     {cc
      {f 2080}
      {px x447a4000
       {x448c6666 x44604000 1}
       {x448c6000 x44608000 1}
       {x448c6000 x4460d99a 1}
       {x448c6000 x44613333 1}
       {x448c6000 x4461a666 1}
       {x448c6000 x4462199a 1}
       {x448c6000 x4462b333 1}
       {x448c5333 x44632666 1}
       {x448c4ccd x4463cccd 1}
       {x448c4ccd x44646666 1}
       {x448c5333 x4464b333 1}}}
     {tx x447a4000 x448c5ac4 x44624ccc}
     {a ro 0 go 0 bo 0 ao 0 bm x40800000 bt 1 bu 1 src 1 str 1 spx x44700000 spy x44070000 sb 1 ltn x447a4000 ltm x447a4000 ep1 1 tt x41c80000}}}}}}
 toolbox {smear {
  { selectAll bm 4 src 1 str 1 ssx 1 ssy 1 sf 1 ep1 1 }
  { createBezier str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBezierCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createBSpline str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createEllipse str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangle str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { createRectangleCusped str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { brush str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { eraser src 2 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { clone src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { reveal src 3 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { dodge src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { burn src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { blur src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { sharpen src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 }
  { smear bm 4 src 1 str 1 ssx 1 ssy 1 sf 1 sb 1 ltn 1001 ltm 1001 tt 25 }
} }
 toolbar_blending_mode min
 toolbar_brush_hardness 0.200000003
 toolbar_lifetime_type single
 toolbar_lifetime_start 1001
 toolbar_lifetime_end 1001
 toolbar_effect_parameter1 1
 toolbar_paint_source fg
 toolbar_source_transform_scale {1 1}
 toolbar_source_transform_center {960 540}
 colorOverlay {0 0 0 0}
 paint_source foreground
 blending_mode min
 lifetime_type "all frames"
 lifetime_start 1001
 lifetime_end 1001
 motionblur_on true
 brush_type smear
 brush_spacing 0.05000000075
 brush_hardness 0.200000003
 effect_parameter1 1
 source_black_outside true
 name RotoPaint1
 selected true
 xpos -1707
 ypos 3018
}
Premult {
 name Premult29
 selected true
 xpos -1707
 ypos 3083
}
Merge2 {
 inputs 2
 name Merge1
 selected true
 xpos -1707
 ypos 3911
}
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message "Smear (RotoPaint / Inpaint)"
 old_message {{83 109 101 97 114 32 40 82 111 116 111 80 97 105 110 116 32 47 32 73 110 112 97 105 110 116 41}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 11 40 12 40 13 40 14 40 15 40 16 40 17 40 18 40 19 40 20 40 21 40 22 40 23 40 24 40 25 40 26 40}
   }
 cursor_position 1
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text16
 selected true
 xpos -1707
 ypos 3978
}
Dot {
 name Dot93
 selected true
 xpos -1673
 ypos 4061
}
push $N2f757830
Dot {
 name Dot176
 tile_color 0xff0000ff
 label "Expects an Alpha input to drive the expand"
 note_font "Bitstream Vera Sans Bold"
 note_font_color 0xff0000ff
 selected true
 xpos -3826
 ypos 2837
}
Dot {
 name Dot95
 selected true
 xpos -3826
 ypos 2901
}
set N2fa66280 [stack 0]
Dot {
 name Dot96
 selected true
 xpos -3649
 ypos 2901
}
Dot {
 name Dot94
 selected true
 xpos -3649
 ypos 3175
}
push $N2fa66280
FilterErode {
 size {8 4}
 name FilterErode4
 selected true
 xpos -3860
 ypos 2955
 disable true
}
Group {
 name Edge_Expand3
 help "Expand edges to fix fringing on keys.\nUse after a premult is preferred, but can also help on some other inputs."
 knobChanged "\nnode = nuke.thisNode()\nknob = nuke.thisKnob()\n\nif knob.name() in \['method']:\n    if knob.value() == 'Dilate':\n        node\['size_extend'].clearFlag(nuke.INVISIBLE)\n        node\['samples'].clearFlag(nuke.INVISIBLE)\n        node\['size_warp'].setFlag(nuke.INVISIBLE)\n        node\['warp_amount'].setFlag(nuke.INVISIBLE)\n        node\['warp_normal'].setFlag(nuke.INVISIBLE)\n        node\['size_distort'].setFlag(nuke.INVISIBLE)\n        node\['distort_amount'].setFlag(nuke.INVISIBLE)\n        node\['blur'].clearFlag(nuke.INVISIBLE)\n    elif knob.value() == 'Extend':\n        node\['size_extend'].clearFlag(nuke.INVISIBLE)\n        node\['samples'].clearFlag(nuke.INVISIBLE)\n        node\['size_warp'].setFlag(nuke.INVISIBLE)\n        node\['warp_amount'].setFlag(nuke.INVISIBLE)\n        node\['warp_normal'].setFlag(nuke.INVISIBLE)\n        node\['size_distort'].setFlag(nuke.INVISIBLE)\n        node\['distort_amount'].setFlag(nuke.INVISIBLE)\n        node\['blur'].clearFlag(nuke.INVISIBLE)\n    elif knob.value() == 'Warp':\n        node\['size_extend'].setFlag(nuke.INVISIBLE)\n        node\['samples'].setFlag(nuke.INVISIBLE)\n        node\['size_warp'].clearFlag(nuke.INVISIBLE)\n        node\['warp_amount'].clearFlag(nuke.INVISIBLE)\n        node\['warp_normal'].clearFlag(nuke.INVISIBLE)\n        node\['size_distort'].setFlag(nuke.INVISIBLE)\n        node\['distort_amount'].setFlag(nuke.INVISIBLE)\n        node\['blur'].clearFlag(nuke.INVISIBLE)\n    elif knob.value() == 'Distort':\n        node\['size_extend'].setFlag(nuke.INVISIBLE)\n        node\['samples'].setFlag(nuke.INVISIBLE)\n        node\['size_warp'].setFlag(nuke.INVISIBLE)\n        node\['warp_amount'].setFlag(nuke.INVISIBLE)\n        node\['warp_normal'].setFlag(nuke.INVISIBLE)\n        node\['size_distort'].clearFlag(nuke.INVISIBLE)\n        node\['distort_amount'].clearFlag(nuke.INVISIBLE)\n        node\['blur'].setFlag(nuke.INVISIBLE)\n\nelif knob.name() in \['samples']:\n    if knob.value() > 10:\n        knob.setValue(10)\n    elif knob.value() < 1:\n        knob.setValue(1)\n"
 tile_color 0xef7033ff
 label "(\[value method])"
 selected true
 xpos -3860
 ypos 3072
 addUserKnob {20 User}
 addUserKnob {4 method l Method t "Dilate: Multiple iterations of Blur and Unpremult of the same input.\nExtend: Recursive iterations of Blur and Unpremult.\nWarp: A vector based method to stretch the edges.\nDistort: A wide distortion which \"grows\" the subject into its matte." M {Dilate Extend Warp Distort}}
 addUserKnob {6 in_premult l "Input is Premultiplied" -STARTLINE}
 in_premult true
 addUserKnob {26 ""}
 addUserKnob {7 erode t "Erodes the original alpha to get rid of edges." R 0 15}
 erode 6
 addUserKnob {14 edgeblur l "edge blur" t "Use this to soften the transition between the extended area and the core." R 0 100}
 addUserKnob {26 ""}
 addUserKnob {14 size_extend l size t "Controls the size of the expansion." R 0 100}
 size_extend 10
 addUserKnob {3 samples t "Controls the amount of samples for the Dilate or Extend Methods. (min:1 max:10)"}
 samples 10
 addUserKnob {14 size_warp l size t "Controls the size of the Warp" +INVISIBLE R 0 100}
 size_warp 7.5
 addUserKnob {7 warp_amount l "warp amount" +INVISIBLE R 0.5 1}
 warp_amount 1
 addUserKnob {7 warp_normal l "warp normal" t "Rotates the angle of the vector extension." +INVISIBLE R -90 90}
 warp_normal 18
 addUserKnob {14 size_distort l size t "Controls the size of the distort." +INVISIBLE R 0 100}
 size_distort 4.6
 addUserKnob {7 distort_amount l "distort amount" +INVISIBLE R 0.5 1}
 distort_amount 1
 addUserKnob {14 blur l "blur expansion" R 0 100}
 blur 2.8
 addUserKnob {26 ""}
 addUserKnob {7 mix_luma l "mix luma"}
 mix_luma 1
 addUserKnob {7 mix_chroma l "mix chroma"}
 mix_chroma 1
 addUserKnob {22 shuffle_edge l "shuffle edge matte" T "node = nuke.thisNode()\nfullName = 'root.' + node.fullName()\nparent_group = fullName.rsplit('.', 1)\[0]\nwith nuke.toNode(parent_group):\n    shuffle = nuke.createNode(\"Shuffle\", 'in edge red alpha green alpha blue alpha label \"Edge Matte\"', inpanel=False)\n    shuffle.setXpos(node.xpos() + 100)\n    shuffle.setYpos(node.ypos())\n    shuffle.setInput(0, node)\n\n" +STARTLINE}
 addUserKnob {6 premult l "premult output" t "Check this box to get the final result of the expension with the original matte.\nUncheck this box to see the result of the expension with a new expended alpha." -STARTLINE}
 premult true
 addUserKnob {26 spin_copyright_div l "" +STARTLINE}
 addUserKnob {26 spin_copyright l "" t "© <b>SPIN<span style=\"color:#b32026\">VFX</span></b>\nEdge_Expand\nVersion 1.0\n2018" +STARTLINE T "<span style=\"color:#aaa;font-family:sans-serif;font-size:8pt\"><b>SPIN<span style=\"color:#b32026\">VFX</span></b> - Version 1.0 - 2018 - <a href=\"https://github.com/SpinVFX/spin_nuke_gizmos/\" style=\"color:#aaa\">Github Page</a></span>"}
 addUserKnob {1 Scriplet_Info +DISABLED +INVISIBLE}
 Scriplet_Info "user Toolsets edgeExpand"
}
 Input {
  inputs 0
  name Inputmask
  xpos -3
  ypos 1325
  number 1
 }
 Input {
  inputs 0
  name Input
  xpos -175
  ypos -347
 }
 Dot {
  name Dot13
  tile_color 0xcccccc00
  xpos -141
  ypos -279
 }
set N2fa99e90 [stack 0]
 Unpremult {
  name Unpremult2
  xpos -175
  ypos -226
  disable {{!parent.in_premult}}
 }
set N2fa9edd0 [stack 0]
 Erode {
  size {{parent.erode}}
  name Erode1
  xpos -175
  ypos -136
 }
set N2faa7500 [stack 0]
 Dot {
  name Dot1
  tile_color 0xcc804e00
  xpos -259
  ypos -127
 }
 Erode {
  size {{parent.edgeblur} {parent.edgeblur}}
  blur 1
  name Erode2
  xpos -293
  ypos -94
 }
push $N2faa7500
 ChannelMerge {
  inputs 2
  operation min
  name ChannelMerge1
  xpos -175
  ypos -100
 }
 Dot {
  name Dot16
  tile_color 0x4b5ec600
  xpos -141
  ypos -22
 }
set N2fad4190 [stack 0]
push $N2fa99e90
 Dot {
  name Dot15
  tile_color 0xcccccc00
  xpos -438
  ypos -279
 }
set N2fad8ec0 [stack 0]
 ChannelMerge {
  inputs 2
  operation from
  name ChannelMerge2
  xpos -472
  ypos -37
 }
push $N2fad8ec0
 Dot {
  name Dot7
  tile_color 0xcccccc00
  xpos -605
  ypos -279
 }
add_layer {edge edge.red edge.green edge.blue edge.alpha edge.matte}
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 edge.alpha
  bbox B
  name Copy5
  xpos -639
  ypos -32
 }
 Dot {
  name Dot20
  tile_color 0x9e3c6300
  xpos -605
  ypos 641
 }
set N2fafe120 [stack 0]
 Dot {
  name Dot23
  tile_color 0x9e3c6300
  xpos -612
  ypos 1151
 }
set N2fb02e70 [stack 0]
 Dot {
  name Dot24
  tile_color 0x9e3c6300
  xpos -612
  ypos 1329
 }
set N2fb07e10 [stack 0]
push $N2fb02e70
push $N2fad4190
 Premult {
  name Premult2
  xpos -175
  ypos 51
 }
 Dot {
  name Dot2
  tile_color 0xcccccc00
  xpos -141
  ypos 108
 }
set N2fb15270 [stack 0]
 Dot {
  name Dot11
  tile_color 0xcccccc00
  xpos -302
  ypos 108
 }
 Dot {
  name Dot12
  tile_color 0xcccccc00
  xpos -302
  ypos 561
 }
push $N2fad4190
 Dot {
  name Dot14
  tile_color 0x4b5ec600
  xpos 253
  ypos -22
 }
 Dot {
  name Dot6
  tile_color 0x4b5ec600
  xpos 253
  ypos 92
 }
set N2fb29020 [stack 0]
push $N2fa9edd0
 Dot {
  name Dot8
  tile_color 0xcccccc00
  xpos 121
  ypos -222
 }
set N2fb2df70 [stack 0]
 Dot {
  name Dot5
  tile_color 0xcccccc00
  xpos 367
  ypos -222
 }
 Group {
  inputs 2
  name Distort
  xpos 333
  ypos 153
  addUserKnob {20 User}
  addUserKnob {14 size R 0 100}
  size {{parent.size_distort} {parent.size_distort}}
  addUserKnob {7 distort}
  distort {{parent.distort_amount}}
 }
  Input {
   inputs 0
   name Inputcontrol_mask
   xpos 236
   ypos -303
   number 1
  }
  Shuffle {
   red alpha
   green alpha
   blue alpha
   name Shuffle1
   label "in \[value in]-->out \[value out]"
   xpos 235
   ypos -248
  }
set N2fb46c20 [stack 0]
  Blur {
   size {{parent.size*10} {parent.size*10}}
   quality {{int(parent.size*8)}}
   name Blur2
   label "size \[value size]"
   xpos 360
   ypos -121
  }
push $N2fb46c20
  Blur {
   size {{parent.size} {parent.size}}
   quality 50
   name Blur1
   xpos 235
   ypos -117
  }
  Merge2 {
   inputs 2
   operation multiply
   bbox B
   name Merge2
   xpos 234
   ypos 5
  }
  Grade {
   gamma 0.415
   name Grade5
   xpos 234
   ypos 57
  }
set N2fb846b0 [stack 0]
  Invert {
   name Invert1
   xpos 61
   ypos 51
  }
  Multiply {
   value {{parent.size*2}}
   name Multiply1
   xpos 61
   ypos 178
  }
  Dot {
   name Dot1
   tile_color 0x7aa9ff00
   xpos 95
   ypos 441
  }
push $N2fb846b0
  Dot {
   name Dot2
   tile_color 0x7aa9ff00
   xpos 269
   ypos 123
  }
set N2fbb2080 [stack 0]
  Matrix {
   matrix {
       {1 0 -1}
       {2 0 -2}
       {1 0 -1}
     }
   name Matrix1
   xpos 235
   ypos 204
  }
push $N2fbb2080
  Dot {
   name Dot3
   tile_color 0x7aa9ff00
   xpos 379
   ypos 123
  }
  Matrix {
   channels rgb
   matrix {
       {-1 -2 -1}
       {0 0 0}
       {1 2 1}
     }
   name Matrix2
   xpos 345
   ypos 205
  }
  Dot {
   name Dot4
   xpos 379
   ypos 260
  }
  ShuffleCopy {
   inputs 2
   red red
   blue black
   alpha black
   name ShuffleCopy1
   xpos 236
   ypos 256
  }
  Expression {
   temp_name0 mag
   temp_expr0 sqrt(pow(r,2)+pow(g,2)+pow(b,2))
   expr0 mag!=0?r/mag:0
   expr1 mag!=0?g/mag:0
   expr2 mag!=0?b/mag:0
   name Normalize
   xpos 236
   ypos 321
  }
  Multiply {
   value -1
   name Multiply2
   xpos 236
   ypos 358
  }
  Merge2 {
   inputs 2
   operation multiply
   bbox B
   name Merge1
   xpos 236
   ypos 437
  }
  Input {
   inputs 0
   name Input
   xpos 536
   ypos -112
  }
  Copy {
   inputs 2
   from0 rgba.red
   to0 forward.u
   from1 rgba.green
   to1 forward.v
   name Copy1
   selected true
   xpos 536
   ypos 425
  }
  IDistort {
   uv forward
   uv_scale {{parent.distort}}
   name IDistort1
   xpos 536
   ypos 497
  }
  Output {
   name Output1
   xpos 536
   ypos 566
  }
 end_group
 Dot {
  name Dot4
  tile_color 0xcccccc00
  xpos 367
  ypos 217
 }
push $N2fb29020
push $N2fb2df70
 Group {
  inputs 2
  name Warp
  xpos 87
  ypos 154
  addUserKnob {20 User}
  addUserKnob {14 size R 0 100}
  size {{parent.size_warp} {parent.size_warp}}
  addUserKnob {7 distort}
  distort {{parent.warp_amount}}
  addUserKnob {7 normal R -90 90}
  normal {{parent.warp_normal}}
 }
  Input {
   inputs 0
   name Inputcontrol_mask
   xpos 235
   ypos -176
   number 1
  }
  Shuffle {
   red alpha
   green alpha
   blue alpha
   name Shuffle1
   xpos 235
   ypos -150
  }
  Clamp {
   name Clamp1
   xpos 235
   ypos -78
  }
  Blur {
   size {{parent.size/parent.distort} {parent.size/parent.distort}}
   quality 50
   name Blur1
   label "size \[value size]"
   xpos 235
   ypos -27
  }
  Grade {
   whitepoint 0.5
   white_clamp true
   name Grade2
   xpos 235
   ypos 81
  }
set N2fc79dd0 [stack 0]
  Invert {
   name Invert1
   xpos 61
   ypos 75
  }
  Multiply {
   value {{parent.size}}
   name Multiply1
   xpos 61
   ypos 113
  }
  Dot {
   name Dot1
   tile_color 0x7aa9ff00
   xpos 95
   ypos 441
  }
push $N2fc79dd0
  Dot {
   name Dot2
   tile_color 0x7aa9ff00
   xpos 269
   ypos 123
  }
set N2fca7750 [stack 0]
  Matrix {
   matrix {
       {1 0 -1}
       {2 0 -2}
       {1 0 -1}
     }
   name Matrix1
   xpos 235
   ypos 206
  }
push $N2fca7750
  Dot {
   name Dot3
   tile_color 0x7aa9ff00
   xpos 379
   ypos 123
  }
  Matrix {
   matrix {
       {-1 -2 -1}
       {0 0 0}
       {1 2 1}
     }
   name Matrix2
   xpos 345
   ypos 205
  }
  Dot {
   name Dot4
   xpos 379
   ypos 260
  }
  ShuffleCopy {
   inputs 2
   red red
   blue black
   alpha black
   name ShuffleCopy1
   xpos 236
   ypos 256
  }
  Expression {
   temp_name0 mag
   temp_expr0 sqrt(pow(r,2)+pow(g,2)+pow(b,2))
   expr0 mag!=0?r/mag:0
   expr1 mag!=0?g/mag:0
   expr2 mag!=0?b/mag:0
   name Normalize
   selected true
   xpos 236
   ypos 301
  }
  Multiply {
   value -1
   name Multiply2
   xpos 236
   ypos 336
  }
  Group {
   name Vectors_Rotation
   help "Edit the direction of motion vectors"
   xpos 236
   ypos 386
   addUserKnob {20 VecRot l "Vectors Rotation"}
   addUserKnob {7 rotation t "Rotates the vectors direction" R -90 90}
   rotation {{parent.normal}}
  }
   Input {
    inputs 0
    name Input
    xpos -303
    ypos 144
   }
   Expression {
    temp_name0 angleRad
    temp_expr0 radians(parent.rotation)
    expr0 "r * cos(angleRad) - g * sin(angleRad)"
    expr1 "r * sin(angleRad) + g * cos(angleRad)"
    name Direction
    selected true
    xpos -303
    ypos 217
   }
   Output {
    name Output1
    xpos -303
    ypos 291
   }
  end_group
  Merge2 {
   inputs 2
   operation multiply
   bbox B
   name Merge1
   xpos 236
   ypos 437
  }
set N2fd1a390 [stack 0]
  Input {
   inputs 0
   name Input
   xpos 536
   ypos -176
  }
  Copy {
   inputs 2
   from0 rgba.red
   to0 forward.u
   from1 rgba.green
   to1 forward.v
   name Copy1
   xpos 536
   ypos 425
  }
  IDistort {
   uv forward
   uv_scale {{parent.distort}}
   name IDistort1
   xpos 536
   ypos 497
  }
  Output {
   name Output1
   xpos 536
   ypos 607
  }
push $N2fd1a390
  Viewer {
   frame_range 1001-1264
   viewerProcess "Show_LUT_CDL (rec709)"
   name Viewer1
   xpos 395
   ypos 294
  }
 end_group
 Dot {
  name Dot9
  tile_color 0xcccccc00
  xpos 121
  ypos 220
 }
push $N2fb15270
 Dot {
  name Dot3
  tile_color 0xcccccc00
  xpos -9
  ypos 108
 }
 Group {
  name Recursive_Extend
  xpos -43
  ypos 156
  addUserKnob {20 User}
  addUserKnob {14 size R 0 100}
  size {{parent.size_extend} {parent.size_extend}}
  addUserKnob {3 samples}
  samples {{parent.samples}}
  addUserKnob {26 ""}
  addUserKnob {7 threshold t "Used to eliminate ugly edges due to small precision error." R 0 0.001}
  threshold 0.0002
 }
  Input {
   inputs 0
   name Input1
   xpos 185
   ypos -5
  }
  Clamp {
   channels alpha
   name Clamp1
   xpos 185
   ypos 46
  }
  Dot {
   name Dot1
   tile_color 0x7aa9ff00
   xpos 219
   ypos 123
  }
set N2fdf06c0 [stack 0]
  Dot {
   name Dot2
   tile_color 0x7aa9ff00
   xpos 396
   ypos 123
  }
  Blur {
   size {{parent.size/parent.samples} {parent.size/parent.samples}}
   name Blur1
   xpos 362
   ypos 189
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult1
   xpos 362
   ypos 225
  }
push $N2fdf06c0
  Merge2 {
   inputs 2
   operation under
   name Merge1
   xpos 185
   ypos 225
  }
  Dot {
   name Dot4
   tile_color 0x4b5ec600
   xpos 219
   ypos 325
  }
set N2fe271a0 [stack 0]
  Dot {
   name Dot5
   tile_color 0x4b5ec600
   xpos 396
   ypos 325
  }
  Blur {
   size {{parent.size/parent.samples} {parent.size/parent.samples}}
   name Blur2
   xpos 362
   ypos 386
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult2
   xpos 362
   ypos 422
  }
push $N2fe271a0
  Merge2 {
   inputs 2
   operation under
   name Merge2
   xpos 185
   ypos 422
   disable {{parent.samples<2}}
  }
  Dot {
   name Dot6
   tile_color 0x4b5ec600
   xpos 219
   ypos 527
  }
set N2fe5deb0 [stack 0]
  Dot {
   name Dot7
   tile_color 0x4b5ec600
   xpos 396
   ypos 527
  }
  Blur {
   size {{parent.size/parent.samples} {parent.size/parent.samples}}
   name Blur3
   xpos 362
   ypos 588
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult3
   xpos 362
   ypos 624
  }
push $N2fe5deb0
  Merge2 {
   inputs 2
   operation under
   name Merge3
   xpos 185
   ypos 624
   disable {{parent.samples<3}}
  }
  Dot {
   name Dot8
   tile_color 0x4b5ec600
   xpos 219
   ypos 729
  }
set N2fe94dd0 [stack 0]
  Dot {
   name Dot9
   tile_color 0x4b5ec600
   xpos 396
   ypos 729
  }
  Blur {
   size {{parent.size/parent.samples} {parent.size/parent.samples}}
   name Blur4
   xpos 362
   ypos 790
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult4
   xpos 362
   ypos 826
  }
push $N2fe94dd0
  Merge2 {
   inputs 2
   operation under
   name Merge4
   xpos 185
   ypos 826
   disable {{parent.samples<4}}
  }
  Dot {
   name Dot10
   tile_color 0x4b5ec600
   xpos 219
   ypos 931
  }
set N2fecbd70 [stack 0]
  Dot {
   name Dot11
   tile_color 0x4b5ec600
   xpos 396
   ypos 931
  }
  Blur {
   size {{parent.size/parent.samples} {parent.size/parent.samples}}
   name Blur5
   xpos 362
   ypos 992
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult5
   xpos 362
   ypos 1028
  }
push $N2fecbd70
  Merge2 {
   inputs 2
   operation under
   name Merge5
   xpos 185
   ypos 1028
   disable {{parent.samples<5}}
  }
  Dot {
   name Dot12
   tile_color 0x4b5ec600
   xpos 219
   ypos 1133
  }
set N2ff02c90 [stack 0]
  Dot {
   name Dot13
   tile_color 0x4b5ec600
   xpos 396
   ypos 1133
  }
  Blur {
   size {{parent.size/parent.samples} {parent.size/parent.samples}}
   name Blur6
   xpos 362
   ypos 1194
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult6
   xpos 362
   ypos 1230
  }
push $N2ff02c90
  Merge2 {
   inputs 2
   operation under
   bbox B
   name Merge6
   xpos 185
   ypos 1230
   disable {{parent.samples<6}}
  }
  Dot {
   name Dot14
   tile_color 0x4b5ec600
   xpos 219
   ypos 1335
  }
set N2ff39b90 [stack 0]
  Dot {
   name Dot15
   tile_color 0x4b5ec600
   xpos 396
   ypos 1335
  }
  Blur {
   size {{parent.size/parent.samples} {parent.size/parent.samples}}
   name Blur7
   xpos 362
   ypos 1396
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult7
   xpos 362
   ypos 1432
  }
push $N2ff39b90
  Merge2 {
   inputs 2
   operation under
   name Merge7
   xpos 185
   ypos 1432
   disable {{parent.samples<7}}
  }
  Dot {
   name Dot16
   tile_color 0x4b5ec600
   xpos 219
   ypos 1537
  }
set N2ff70c00 [stack 0]
  Dot {
   name Dot17
   tile_color 0x4b5ec600
   xpos 396
   ypos 1537
  }
  Blur {
   size {{parent.size/parent.samples} {parent.size/parent.samples}}
   name Blur8
   xpos 362
   ypos 1596
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult8
   xpos 362
   ypos 1634
  }
push $N2ff70c00
  Merge2 {
   inputs 2
   operation under
   name Merge8
   xpos 185
   ypos 1634
   disable {{parent.samples<8}}
  }
  Dot {
   name Dot18
   tile_color 0x4b5ec600
   xpos 219
   ypos 1739
  }
set N2ffa7b30 [stack 0]
  Dot {
   name Dot19
   tile_color 0x4b5ec600
   xpos 396
   ypos 1739
  }
  Blur {
   size {{parent.size/parent.samples} {parent.size/parent.samples}}
   name Blur9
   xpos 362
   ypos 1798
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult9
   xpos 362
   ypos 1836
  }
push $N2ffa7b30
  Merge2 {
   inputs 2
   operation under
   name Merge9
   xpos 185
   ypos 1836
   disable {{parent.samples<9}}
  }
  Dot {
   name Dot20
   tile_color 0x4b5ec600
   xpos 219
   ypos 1946
  }
set N2ffdea60 [stack 0]
  Dot {
   name Dot21
   tile_color 0x4b5ec600
   xpos 396
   ypos 1948
  }
  Blur {
   size {{parent.size/parent.samples} {parent.size/parent.samples}}
   name Blur10
   xpos 362
   ypos 2007
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult10
   xpos 362
   ypos 2043
  }
push $N2ffdea60
  Merge2 {
   inputs 2
   operation under
   name Merge10
   xpos 185
   ypos 2043
   disable {{parent.samples<10 x1054 1}}
  }
set N300050e0 [stack 0]
  Viewer {
   frame_range 1001-1264
   viewerProcess "Show_LUT_CDL (rec709)"
   name Viewer1
   xpos 472
   ypos 225
  }
push $N300050e0
  Output {
   name Output1
   xpos 185
   ypos 2281
  }
 end_group
 Dot {
  name Dot10
  tile_color 0xcccccc00
  xpos -9
  ypos 216
 }
push $N2fb15270
 Group {
  name Dilate
  selected true
  xpos -175
  ypos 152
  addUserKnob {20 User}
  addUserKnob {14 size R 0 100}
  size {{parent.size_extend} {parent.size_extend}}
  addUserKnob {3 samples}
  samples {{parent.samples}}
  addUserKnob {7 blending}
  blending 1
  addUserKnob {26 ""}
  addUserKnob {7 threshold t "Used to eliminate ugly edges due to small precision error." R 0 0.001}
  threshold 0.0001
 }
  Input {
   inputs 0
   name Input1
   xpos 0
   ypos -3
  }
  Clamp {
   channels alpha
   name Clamp1
   xpos 0
   ypos 48
  }
  Dot {
   name Dot3
   tile_color 0x7aa9ff00
   xpos 34
   ypos 123
  }
set N300b79f0 [stack 0]
  Dot {
   name Dot22
   tile_color 0x7aa9ff00
   xpos 34
   ypos 323
  }
set N300bc740 [stack 0]
  Dot {
   name Dot23
   tile_color 0x7aa9ff00
   xpos 34
   ypos 525
  }
set N300c16a0 [stack 0]
  Dot {
   name Dot24
   tile_color 0x7aa9ff00
   xpos 34
   ypos 727
  }
set N300c65d0 [stack 0]
  Dot {
   name Dot10
   tile_color 0x7aa9ff00
   xpos 34
   ypos 931
  }
set N300cb570 [stack 0]
  Dot {
   name Dot12
   tile_color 0x7aa9ff00
   xpos 34
   ypos 1133
  }
set N300d04c0 [stack 0]
  Dot {
   name Dot14
   tile_color 0x7aa9ff00
   xpos 34
   ypos 1333
  }
set N300d5410 [stack 0]
  Dot {
   name Dot16
   tile_color 0x7aa9ff00
   xpos 34
   ypos 1535
  }
set N300da3f0 [stack 0]
  Dot {
   name Dot18
   tile_color 0x7aa9ff00
   xpos 34
   ypos 1737
  }
set N300df270 [stack 0]
  Dot {
   name Dot20
   tile_color 0x7aa9ff00
   xpos 34
   ypos 1941
  }
  Dot {
   name Dot21
   tile_color 0x7aa9ff00
   xpos 243
   ypos 1941
  }
  Blur {
   size {{parent.size/parent.samples*10} {parent.size/parent.samples*10}}
   name Blur10
   xpos 209
   ypos 1998
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult10
   xpos 209
   ypos 2036
  }
push $N300df270
  Dot {
   name Dot19
   tile_color 0x7aa9ff00
   xpos 243
   ypos 1737
  }
  Blur {
   size {{parent.size/parent.samples*9} {parent.size/parent.samples*9}}
   name Blur9
   xpos 209
   ypos 1796
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult9
   xpos 209
   ypos 1834
  }
  FilterErode {
   size {{(parent.size/parent.samples)*parent.blending} {(parent.size/parent.samples)*parent.blending}}
   filter gaussian
   name FilterErode3
   xpos 209
   ypos 1860
  }
  Premult {
   name Premult9
   xpos 209
   ypos 1898
  }
push $N300da3f0
  Dot {
   name Dot17
   tile_color 0x7aa9ff00
   xpos 243
   ypos 1535
  }
  Blur {
   size {{parent.size/parent.samples*8} {parent.size/parent.samples*8}}
   name Blur8
   xpos 209
   ypos 1594
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult8
   xpos 209
   ypos 1632
  }
  FilterErode {
   size {{(parent.size/parent.samples)*parent.blending} {(parent.size/parent.samples)*parent.blending}}
   filter gaussian
   name FilterErode4
   xpos 209
   ypos 1658
  }
  Premult {
   name Premult8
   xpos 209
   ypos 1696
  }
push $N300d5410
  Dot {
   name Dot15
   tile_color 0x7aa9ff00
   xpos 243
   ypos 1333
  }
  Blur {
   size {{parent.size/parent.samples*7} {parent.size/parent.samples*7}}
   name Blur7
   xpos 209
   ypos 1392
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult7
   xpos 209
   ypos 1430
  }
  FilterErode {
   size {{(parent.size/parent.samples)*parent.blending} {(parent.size/parent.samples)*parent.blending}}
   filter gaussian
   name FilterErode5
   xpos 209
   ypos 1456
  }
  Premult {
   name Premult7
   xpos 209
   ypos 1494
  }
push $N300d04c0
  Dot {
   name Dot13
   tile_color 0x7aa9ff00
   xpos 243
   ypos 1133
  }
  Blur {
   size {{parent.size/parent.samples*6} {parent.size/parent.samples*6}}
   name Blur6
   xpos 209
   ypos 1190
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult6
   xpos 209
   ypos 1228
  }
  FilterErode {
   size {{(parent.size/parent.samples)*parent.blending} {(parent.size/parent.samples)*parent.blending}}
   filter gaussian
   name FilterErode6
   xpos 209
   ypos 1254
  }
  Premult {
   name Premult6
   xpos 209
   ypos 1292
  }
push $N300cb570
  Dot {
   name Dot11
   tile_color 0x7aa9ff00
   xpos 243
   ypos 931
  }
  Blur {
   size {{parent.size/parent.samples*5} {parent.size/parent.samples*5}}
   name Blur5
   xpos 209
   ypos 988
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult5
   xpos 209
   ypos 1026
  }
  FilterErode {
   size {{(parent.size/parent.samples)*parent.blending} {(parent.size/parent.samples)*parent.blending}}
   filter gaussian
   name FilterErode7
   xpos 209
   ypos 1052
  }
  Premult {
   name Premult5
   xpos 209
   ypos 1090
  }
push $N300c65d0
  Dot {
   name Dot9
   tile_color 0x7aa9ff00
   xpos 243
   ypos 729
  }
  Blur {
   size {{parent.size/parent.samples*4} {parent.size/parent.samples*4}}
   name Blur4
   xpos 209
   ypos 788
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult4
   xpos 209
   ypos 826
  }
  FilterErode {
   size {{(parent.size/parent.samples)*parent.blending} {(parent.size/parent.samples)*parent.blending}}
   filter gaussian
   name FilterErode8
   xpos 209
   ypos 852
  }
  Premult {
   name Premult4
   xpos 209
   ypos 890
  }
push $N300c16a0
  Dot {
   name Dot7
   tile_color 0x7aa9ff00
   xpos 243
   ypos 527
  }
  Blur {
   size {{parent.size/parent.samples*3} {parent.size/parent.samples*3}}
   name Blur3
   xpos 209
   ypos 586
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult3
   xpos 209
   ypos 624
  }
  FilterErode {
   size {{(parent.size/parent.samples)*parent.blending} {(parent.size/parent.samples)*parent.blending}}
   filter gaussian
   name FilterErode9
   xpos 209
   ypos 650
  }
  Premult {
   name Premult3
   xpos 209
   ypos 688
  }
push $N300bc740
  Dot {
   name Dot5
   tile_color 0x7aa9ff00
   xpos 243
   ypos 325
  }
  Blur {
   size {{parent.size/parent.samples*2} {parent.size/parent.samples*2}}
   name Blur2
   xpos 209
   ypos 384
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult2
   xpos 209
   ypos 422
  }
  FilterErode {
   size {{(parent.size/parent.samples)*parent.blending} {(parent.size/parent.samples)*parent.blending}}
   filter gaussian
   name FilterErode10
   xpos 209
   ypos 448
  }
  Premult {
   name Premult2
   xpos 209
   ypos 486
  }
push $N300b79f0
  Dot {
   name Dot25
   tile_color 0x7aa9ff00
   xpos 243
   ypos 123
  }
set N302bacb0 [stack 0]
  Blur {
   size {{parent.size/parent.samples} {parent.size/parent.samples}}
   name Blur1
   xpos 209
   ypos 187
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult1
   xpos 209
   ypos 225
  }
  FilterErode {
   size {{(parent.size/parent.samples)*parent.blending} {(parent.size/parent.samples)*parent.blending}}
   filter gaussian
   name FilterErode1
   xpos 209
   ypos 251
  }
  Premult {
   name Premult1
   xpos 209
   ypos 289
  }
push $N302bacb0
  Dot {
   name Dot1
   tile_color 0x7aa9ff00
   xpos 434
   ypos 123
  }
  Merge2 {
   inputs 2
   operation under
   name Merge1
   xpos 400
   ypos 289
  }
  Merge2 {
   inputs 2
   operation under
   name Merge2
   xpos 400
   ypos 486
   disable {{parent.samples<2}}
  }
  Merge2 {
   inputs 2
   operation under
   name Merge3
   xpos 400
   ypos 688
   disable {{parent.samples<3}}
  }
  Merge2 {
   inputs 2
   operation under
   name Merge4
   xpos 400
   ypos 890
   disable {{parent.samples<4}}
  }
  Merge2 {
   inputs 2
   operation under
   name Merge5
   xpos 400
   ypos 1090
   disable {{parent.samples<5}}
  }
  Merge2 {
   inputs 2
   operation under
   name Merge6
   xpos 400
   ypos 1292
   disable {{parent.samples<6}}
  }
  Merge2 {
   inputs 2
   operation under
   name Merge7
   xpos 400
   ypos 1494
   disable {{parent.samples<7}}
  }
  Merge2 {
   inputs 2
   operation under
   name Merge8
   xpos 400
   ypos 1696
   disable {{parent.samples<8}}
  }
  Merge2 {
   inputs 2
   operation under
   name Merge9
   xpos 400
   ypos 1898
   disable {{parent.samples<9}}
  }
  Merge2 {
   inputs 2
   operation under
   name Merge10
   xpos 400
   ypos 2036
   disable {{parent.samples<10}}
  }
  Expression {
   temp_name0 tres
   temp_expr0 parent.threshold
   expr0 a>tres?r/a:r
   expr1 a>tres?g/a:g
   expr2 a>tres?b/a:b
   expr3 a>tres?a/a:0
   name All_unpremult11
   selected true
   xpos 400
   ypos 2062
  }
  Output {
   name Output1
   xpos 400
   ypos 2120
  }
 end_group
set N30099600 [stack 0]
 Switch {
  inputs 4
  which {{parent.method}}
  name Switch1
  xpos -175
  ypos 296
 }
 Blur {
  size {{parent.blur} {parent.blur}}
  name Blur1
  xpos -175
  ypos 410
  disable {{parent.method==3}}
 }
 Merge2 {
  inputs 2
  bbox B
  name Merge1
  xpos -175
  ypos 557
  disable {{parent.method==3}}
 }
 Dot {
  name Dot26
  tile_color 0x4b5ec600
  xpos -141
  ypos 747
 }
set N303d7ce0 [stack 0]
push $N2fafe120
 Dot {
  name Dot19
  tile_color 0x9e3c6300
  xpos -489
  ypos 641
 }
 Unpremult {
  name Unpremult1
  xpos -523
  ypos 666
  disable {{!parent.in_premult}}
 }
 CopyBBox {
  inputs 2
  name CopyBBox1
  xpos -523
  ypos 743
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace1
  label "input \[value colorspace_in]\noutput \[value colorspace_out]"
  xpos -523
  ypos 814
 }
 Dot {
  name Dot21
  tile_color 0xcccccc00
  xpos -489
  ypos 884
 }
set N3040ba80 [stack 0]
 Dot {
  name Dot22
  tile_color 0xcccccc00
  xpos -489
  ypos 953
 }
push $N3040ba80
push $N303d7ce0
 Colorspace {
  colorspace_out YCbCr
  name Colorspace3
  label "input \[value colorspace_in]\noutput \[value colorspace_out]"
  xpos -175
  ypos 795
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 rgba.red
  bbox B
  mix {{1-parent.mix_luma}}
  name Copy2
  xpos -175
  ypos 875
 }
 Copy {
  inputs 2
  from0 rgba.green
  to0 rgba.green
  from1 rgba.blue
  to1 rgba.blue
  bbox B
  mix {{1-parent.mix_chroma}}
  name Copy3
  xpos -175
  ypos 938
 }
 Colorspace {
  colorspace_in YCbCr
  name Colorspace2
  label "input \[value colorspace_in]\noutput \[value colorspace_out]"
  xpos -175
  ypos 1025
 }
 Dot {
  name Dot17
  tile_color 0xcccccc00
  xpos -141
  ypos 1151
 }
set N30465500 [stack 0]
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  bbox A
  name Copy1
  xpos -327
  ypos 1142
 }
 Premult {
  name Premult1
  xpos -327
  ypos 1178
 }
 Dot {
  name Dot18
  tile_color 0xcccccc00
  xpos -293
  ypos 1249
 }
push $N30465500
 Switch {
  inputs 2
  which {{parent.premult}}
  name Switch2
  xpos -175
  ypos 1245
 }
set N30485a90 [stack 0]
 Keymix {
  inputs 3
  channels rgba
  invertMask true
  name Keymix1
  xpos -175
  ypos 1325
  disable {{"!\[exists parent.input1] "}}
 }
 Dot {
  name Dot25
  tile_color 0x4b5ec600
  xpos -141
  ypos 1421
 }
push $N30485a90
push $N2fb07e10
 Copy {
  inputs 2
  from0 rgba.red
  to0 rgba.red
  from1 rgba.green
  to1 rgba.green
  from2 rgba.blue
  to2 rgba.blue
  from3 rgba.alpha
  to3 rgba.alpha
  bbox A
  name Copy4
  xpos -646
  ypos 1407
  disable {{"!\[exists parent.input0] "}}
 }
 Output {
  name Output1
  xpos -646
  ypos 1525
 }
push $N30099600
 Viewer {
  frame_range 1001-1052
  channels {rgba.red rgba.green rgba.blue edge.alpha}
  viewerProcess "Show_LUT_CDL (rec709)"
  name Viewer1
  xpos 9
  ypos 763
 }
end_group
Copy {
 inputs 2
 from0 rgba.alpha
 to0 rgba.alpha
 name Copy3
 selected true
 xpos -3860
 ypos 3165
 disable true
}
Premult {
 name Premult19
 selected true
 xpos -3860
 ypos 3239
 disable true
}
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message Edge_Expand
 old_message {{69 100 103 101 95 69 120 112 97 110 100}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 0 70}
   }
 cursor_position 11
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text14
 selected true
 xpos -3860
 ypos 3978
}
Dot {
 name Dot85
 selected true
 xpos -3826
 ypos 4061
}
push $N2f752770
Unpremult {
 name Unpremult1
 selected true
 xpos -5665
 ypos 2856
}
Dot {
 name Dot137
 selected true
 xpos -5631
 ypos 2924
}
set N3057bd80 [stack 0]
Dot {
 name Dot89
 selected true
 xpos -5484
 ypos 2924
}
EdgeDetectWrapper {
 channels alpha
 name EdgeDetect1
 selected true
 xpos -5518
 ypos 2967
}
Blur {
 size 3
 name Blur9
 selected true
 xpos -5518
 ypos 3053
}
Dot {
 name Dot90
 selected true
 xpos -5484
 ypos 3174
}
push $N3057bd80
Dot {
 name Dot87
 selected true
 xpos -5774
 ypos 2924
}
FilterErode {
 channels rgba
 size {8 4}
 name FilterErode13
 selected true
 xpos -5809
 ypos 2972
}
FilterErode {
 channels rgb
 size {{-parent.FilterErode13.size} {-parent.FilterErode13.size}}
 name FilterErode14
 selected true
 xpos -5809
 ypos 3035
}
Blur {
 name Blur1
 selected true
 xpos -5809
 ypos 3096
}
Dot {
 name Dot88
 selected true
 xpos -5775
 ypos 3174
}
push $N3057bd80
Merge2 {
 inputs 2+1
 operation min
 output {rgba.red rgba.green rgba.blue -rgba.alpha}
 name Min
 selected true
 xpos -5665
 ypos 3170
}
Premult {
 name Premult18
 selected true
 xpos -5665
 ypos 3243
}
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message "Erode / Dilate"
 old_message {{69 114 111 100 101 32 47 32 68 105 108 97 116 101}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 11 40 12 40 13 40 0 70}
   }
 cursor_position 14
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text15
 selected true
 xpos -5665
 ypos 3978
}
Dot {
 name Dot91
 selected true
 xpos -5631
 ypos 4061
}
push $N2f74d7f0
Dot {
 name Dot10
 selected true
 xpos -8055
 ypos 2922
}
set N30614520 [stack 0]
Dot {
 name Dot14
 selected true
 xpos -7937
 ypos 2922
}
Dot {
 name Dot15
 selected true
 xpos -7937
 ypos 3224
}
push $N30614520
Dot {
 name Dot12
 selected true
 xpos -8227
 ypos 2922
}
FilterErode {
 channels alpha
 size {11 4}
 name FilterErode2
 selected true
 xpos -8261
 ypos 2974
}
Dot {
 name Dot13
 selected true
 xpos -8227
 ypos 3104
}
push $N30614520
Group {
 inputs 2
 name VectorExtendEdge3
 help "Push rgb pixels outwards using vectors  generated perpedicular to a control matte edge."
 selected true
 xpos -8089
 ypos 3094
 addUserKnob {20 User}
 addUserKnob {4 premult l "input is" M {premultiplied unpremultiplied}}
 addUserKnob {41 from0 l "control matte channel" T Copy4.from0}
 addUserKnob {7 preblur l "pre-blur control matte" t "Blurring the control matte by a moderate amount will increase the width of the extended edge border and help with blending together the slices." R 0 10}
 preblur 6
 addUserKnob {26 ""}
 addUserKnob {3 slices l "vector blur slices" t "The number of iterations of the vector blur operation, up to 10."}
 slices 5
 addUserKnob {7 preblur_vector l "preblur vector" t "Blur the vector a bit before it's used to extend the rgb pixels.  Can help with blending and will also extend the edge further." R 0 10}
 addUserKnob {7 vector_length l "vector length" t "The length of the vector blur operation per slice. Best to avoid making this too high because it can slow things down when multiplied by the number of slices." R 1 10}
 vector_length 6
 addUserKnob {26 ""}
 addUserKnob {4 output t "The default output is the rgb.  The vector output options are just for checking what's going on under the hood.  The \"-1 to 1\" range is the \"native\" format while the \"0 to 1\" range compresses the vectors so that negative values can be visualised." M {"extended rgb" "vectors (-1 to 1 range)" "vectors (0 to 1 range)" ""}}
}
 Input {
  inputs 0
  name ctrl_matte
  xpos 1122
  ypos 457
  number 1
 }
 Input {
  inputs 0
  name img
  xpos 840
  ypos 457
 }
 Dot {
  name Dot2
  xpos 874
  ypos 570
 }
set N30651f10 [stack 0]
 Unpremult {
  name Unpremult11
  xpos 965
  ypos 566
  disable {{parent.premult i}}
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy4
  xpos 1122
  ypos 559
  disable {{"!\[exists parent.input1]" i}}
 }
 Blur {
  channels alpha
  size {{parent.preblur}}
  name Blur12
  label "pre-blur alpha"
  xpos 1122
  ypos 648
 }
set N3066dba0 [stack 0]
push $N3066dba0
push $N3066dba0
push $N3066dba0
 Group {
  inputs 2
  name ExtendEdge
  help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
  selected true
  xpos 1325
  ypos 662
  addUserKnob {20 Controls}
  addUserKnob {7 preblurVector R 0 10}
  preblurVector {{parent.preblur_vector}}
  addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
 }
  Input {
   inputs 0
   name Input
   xpos 556
   ypos -426
  }
set N30685490 [stack 0]
  Dot {
   name Dot1
   xpos 707
   ypos -414
  }
  Dot {
   name Dot2
   xpos 707
   ypos -121
  }
  Input {
   inputs 0
   name matte
   xpos 440
   ypos -424
   number 1
  }
  Shuffle {
   red alpha
   green alpha
   blue alpha
   alpha black
   name Shuffle3
   xpos 440
   ypos -346
  }
  Group {
   name Edge2Vec2
   selected true
   xpos 440
   ypos -322
  }
   Input {
    inputs 0
    name Input1
    xpos -172
    ypos -315
   }
   Clamp {
    channels rgb
    name Clamp1
    xpos -172
    ypos -250
   }
set N306b7b00 [stack 0]
   Position {
    translate {0 1}
    name Position2
    xpos -63
    ypos -106
   }
push $N306b7b00
   Merge2 {
    inputs 2
    operation minus
    name Merge2
    xpos -103
    ypos -28
   }
push $N306b7b00
   Position {
    translate {1 0}
    name Position1
    xpos -285
    ypos -98
   }
push $N306b7b00
   Merge2 {
    inputs 2
    operation minus
    name Merge1
    xpos -253
    ypos -29
   }
   Copy {
    inputs 2
    from0 rgba.green
    to0 rgba.green
    name Copy3
    xpos -179
    ypos 27
   }
   Grade {
    channels {rgba.red rgba.green -rgba.blue none}
    multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
    black_clamp false
    name Grade1
    xpos -179
    ypos 196
    addUserKnob {20 User}
    addUserKnob {7 height l Height}
    height 1
   }
set N30706c70 [stack 0]
push $N30706c70
   Expression {
    channel0 rgb
    expr0 sqrt((r*r)+(g*g)+(b*b))
    name VectorLength
    selected true
    xpos -260
    ypos 278
   }
   Merge2 {
    inputs 2
    operation divide
    name Merge4
    xpos -179
    ypos 350
   }
   Output {
    name Output1
    xpos -179
    ypos 494
   }
  end_group
  Blur {
   channels rgb
   size {{parent.preblurVector i}}
   name Blur5
   label "pre blur vector"
   xpos 440
   ypos -296
  }
push $N30685490
  ShuffleCopy {
   inputs 2
   red red
   green green
   out forward
   name ShuffleCopy1
   label "rg to forward"
   xpos 556
   ypos -194
  }
  VectorBlur {
   channels rgba
   uv forward
   scale {{vector_length}}
   offset 0
   alpha -rgba.alpha
   maskChannelMask -rgba.alpha
   maskChannelInput -rgba.alpha
   name VectorBlur2
   xpos 556
   ypos -139
  }
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos 556
   ypos -92
  }
  Output {
   name Output1
   xpos 556
   ypos -8
  }
 end_group
 Keymix {
  inputs 3
  channels rgb
  name Keymix11
  xpos 1325
  ypos 751
 }
set N307776f0 [stack 0]
push $N307776f0
push $N307776f0
push $N307776f0
 Group {
  inputs 2
  name ExtendEdge1
  help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
  xpos 1509
  ypos 743
  addUserKnob {20 Controls}
  addUserKnob {7 preblurVector R 0 10}
  preblurVector {{parent.ExtendEdge.preblurVector i}}
  addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
 }
  Input {
   inputs 0
   name Input
   xpos 556
   ypos -426
  }
set N3078a380 [stack 0]
  Dot {
   name Dot1
   xpos 707
   ypos -414
  }
  Dot {
   name Dot2
   xpos 707
   ypos -121
  }
  Input {
   inputs 0
   name matte
   xpos 440
   ypos -424
   number 1
  }
  Shuffle {
   red alpha
   green alpha
   blue alpha
   alpha black
   name Shuffle3
   xpos 440
   ypos -346
  }
  Group {
   name Edge2Vec2
   xpos 440
   ypos -322
  }
   Input {
    inputs 0
    name Input1
    xpos -172
    ypos -315
   }
   Clamp {
    channels rgb
    name Clamp1
    xpos -172
    ypos -250
   }
set N307bca20 [stack 0]
   Position {
    translate {0 1}
    name Position2
    xpos -63
    ypos -106
   }
push $N307bca20
   Merge2 {
    inputs 2
    operation minus
    name Merge2
    xpos -103
    ypos -28
   }
push $N307bca20
   Position {
    translate {1 0}
    name Position1
    xpos -285
    ypos -98
   }
push $N307bca20
   Merge2 {
    inputs 2
    operation minus
    name Merge1
    xpos -253
    ypos -29
   }
   Copy {
    inputs 2
    from0 rgba.green
    to0 rgba.green
    name Copy3
    xpos -179
    ypos 27
   }
   Grade {
    channels {rgba.red rgba.green -rgba.blue none}
    multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
    black_clamp false
    name Grade1
    xpos -179
    ypos 196
    addUserKnob {20 User}
    addUserKnob {7 height l Height}
    height 1
   }
set N3080bb90 [stack 0]
push $N3080bb90
   Expression {
    channel0 rgb
    expr0 sqrt((r*r)+(g*g)+(b*b))
    name VectorLength
    selected true
    xpos -260
    ypos 278
   }
   Merge2 {
    inputs 2
    operation divide
    name Merge4
    selected true
    xpos -179
    ypos 350
   }
   Output {
    name Output1
    xpos -179
    ypos 494
   }
  end_group
  Blur {
   channels rgb
   size {{parent.preblurVector i}}
   name Blur5
   label "pre blur vector"
   xpos 440
   ypos -296
  }
push $N3078a380
  ShuffleCopy {
   inputs 2
   red red
   green green
   out forward
   name ShuffleCopy1
   label "rg to forward"
   xpos 556
   ypos -194
  }
  VectorBlur {
   channels rgba
   uv forward
   scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
   offset 0
   alpha -rgba.alpha
   maskChannelMask -rgba.alpha
   maskChannelInput -rgba.alpha
   name VectorBlur2
   xpos 556
   ypos -139
  }
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos 556
   ypos -92
  }
  Output {
   name Output1
   xpos 556
   ypos -8
  }
 end_group
 Keymix {
  inputs 3
  channels rgb
  name Keymix12
  xpos 1509
  ypos 823
 }
set N3087c640 [stack 0]
push $N3087c640
push $N3087c640
push $N3087c640
 Group {
  inputs 2
  name ExtendEdge2
  help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
  xpos 1695
  ypos 823
  addUserKnob {20 Controls}
  addUserKnob {7 preblurVector R 0 10}
  preblurVector {{parent.ExtendEdge.preblurVector}}
  addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
 }
  Input {
   inputs 0
   name Input
   xpos 556
   ypos -426
  }
set N3088f310 [stack 0]
  Dot {
   name Dot1
   xpos 707
   ypos -414
  }
  Dot {
   name Dot2
   xpos 707
   ypos -121
  }
  Input {
   inputs 0
   name matte
   xpos 440
   ypos -424
   number 1
  }
  Shuffle {
   red alpha
   green alpha
   blue alpha
   alpha black
   name Shuffle3
   xpos 440
   ypos -346
  }
  Group {
   name Edge2Vec2
   xpos 440
   ypos -322
  }
   Input {
    inputs 0
    name Input1
    xpos -172
    ypos -315
   }
   Clamp {
    channels rgb
    name Clamp1
    xpos -172
    ypos -250
   }
set N308c1940 [stack 0]
   Position {
    translate {0 1}
    name Position2
    xpos -63
    ypos -106
   }
push $N308c1940
   Merge2 {
    inputs 2
    operation minus
    name Merge2
    xpos -103
    ypos -28
   }
push $N308c1940
   Position {
    translate {1 0}
    name Position1
    xpos -285
    ypos -98
   }
push $N308c1940
   Merge2 {
    inputs 2
    operation minus
    name Merge1
    xpos -253
    ypos -29
   }
   Copy {
    inputs 2
    from0 rgba.green
    to0 rgba.green
    name Copy3
    xpos -179
    ypos 27
   }
   Grade {
    channels {rgba.red rgba.green -rgba.blue none}
    multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
    black_clamp false
    name Grade1
    xpos -179
    ypos 196
    addUserKnob {20 User}
    addUserKnob {7 height l Height}
    height 1
   }
set N30910ab0 [stack 0]
push $N30910ab0
   Expression {
    channel0 rgb
    expr0 sqrt((r*r)+(g*g)+(b*b))
    name VectorLength
    selected true
    xpos -260
    ypos 278
   }
   Merge2 {
    inputs 2
    operation divide
    name Merge4
    selected true
    xpos -179
    ypos 350
   }
   Output {
    name Output1
    xpos -179
    ypos 494
   }
  end_group
  Blur {
   channels rgb
   size {{parent.preblurVector i}}
   name Blur5
   label "pre blur vector"
   xpos 440
   ypos -296
  }
push $N3088f310
  ShuffleCopy {
   inputs 2
   red red
   green green
   out forward
   name ShuffleCopy1
   label "rg to forward"
   xpos 556
   ypos -194
  }
  VectorBlur {
   channels rgba
   uv forward
   scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
   offset 0
   alpha -rgba.alpha
   maskChannelMask -rgba.alpha
   maskChannelInput -rgba.alpha
   name VectorBlur2
   xpos 556
   ypos -139
  }
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos 556
   ypos -92
  }
  Output {
   name Output1
   xpos 556
   ypos -8
  }
 end_group
 Keymix {
  inputs 3
  channels rgb
  name Keymix13
  xpos 1695
  ypos 895
 }
set N30981560 [stack 0]
push $N30981560
push $N30981560
push $N30981560
 Group {
  inputs 2
  name ExtendEdge3
  help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
  xpos 1891
  ypos 895
  addUserKnob {20 Controls}
  addUserKnob {7 preblurVector R 0 10}
  preblurVector {{parent.ExtendEdge.preblurVector}}
  addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
 }
  Input {
   inputs 0
   name Input
   xpos 556
   ypos -426
  }
set N30994220 [stack 0]
  Dot {
   name Dot1
   xpos 707
   ypos -414
  }
  Dot {
   name Dot2
   xpos 707
   ypos -121
  }
  Input {
   inputs 0
   name matte
   xpos 440
   ypos -424
   number 1
  }
  Shuffle {
   red alpha
   green alpha
   blue alpha
   alpha black
   name Shuffle3
   xpos 440
   ypos -346
  }
  Group {
   name Edge2Vec2
   xpos 440
   ypos -322
  }
   Input {
    inputs 0
    name Input1
    xpos -172
    ypos -315
   }
   Clamp {
    channels rgb
    name Clamp1
    xpos -172
    ypos -250
   }
set N309c6860 [stack 0]
   Position {
    translate {0 1}
    name Position2
    xpos -63
    ypos -106
   }
push $N309c6860
   Merge2 {
    inputs 2
    operation minus
    name Merge2
    xpos -103
    ypos -28
   }
push $N309c6860
   Position {
    translate {1 0}
    name Position1
    xpos -285
    ypos -98
   }
push $N309c6860
   Merge2 {
    inputs 2
    operation minus
    name Merge1
    xpos -253
    ypos -29
   }
   Copy {
    inputs 2
    from0 rgba.green
    to0 rgba.green
    name Copy3
    xpos -179
    ypos 27
   }
   Grade {
    channels {rgba.red rgba.green -rgba.blue none}
    multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
    black_clamp false
    name Grade1
    xpos -179
    ypos 196
    addUserKnob {20 User}
    addUserKnob {7 height l Height}
    height 1
   }
set N30a159d0 [stack 0]
push $N30a159d0
   Expression {
    channel0 rgb
    expr0 sqrt((r*r)+(g*g)+(b*b))
    name VectorLength
    selected true
    xpos -260
    ypos 278
   }
   Merge2 {
    inputs 2
    operation divide
    name Merge4
    selected true
    xpos -179
    ypos 350
   }
   Output {
    name Output1
    xpos -179
    ypos 494
   }
  end_group
  Blur {
   channels rgb
   size {{parent.preblurVector i}}
   name Blur5
   label "pre blur vector"
   xpos 440
   ypos -296
  }
push $N30994220
  ShuffleCopy {
   inputs 2
   red red
   green green
   out forward
   name ShuffleCopy1
   label "rg to forward"
   xpos 556
   ypos -194
  }
  VectorBlur {
   channels rgba
   uv forward
   scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
   offset 0
   alpha -rgba.alpha
   maskChannelMask -rgba.alpha
   maskChannelInput -rgba.alpha
   name VectorBlur2
   xpos 556
   ypos -139
  }
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos 556
   ypos -92
  }
  Output {
   name Output1
   xpos 556
   ypos -8
  }
 end_group
 Keymix {
  inputs 3
  channels rgb
  name Keymix14
  xpos 1891
  ypos 967
 }
set N30a86480 [stack 0]
push $N30a86480
push $N30a86480
push $N30a86480
 Group {
  inputs 2
  name ExtendEdge4
  help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
  xpos 2077
  ypos 967
  addUserKnob {20 Controls}
  addUserKnob {7 preblurVector R 0 10}
  preblurVector {{parent.ExtendEdge.preblurVector}}
  addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
 }
  Input {
   inputs 0
   name Input
   xpos 556
   ypos -426
  }
set N30a99110 [stack 0]
  Dot {
   name Dot1
   xpos 707
   ypos -414
  }
  Dot {
   name Dot2
   xpos 707
   ypos -121
  }
  Input {
   inputs 0
   name matte
   xpos 440
   ypos -424
   number 1
  }
  Shuffle {
   red alpha
   green alpha
   blue alpha
   alpha black
   name Shuffle3
   xpos 440
   ypos -346
  }
  Group {
   name Edge2Vec2
   xpos 440
   ypos -322
  }
   Input {
    inputs 0
    name Input1
    xpos -172
    ypos -315
   }
   Clamp {
    channels rgb
    name Clamp1
    xpos -172
    ypos -250
   }
set N30acb790 [stack 0]
   Position {
    translate {0 1}
    name Position2
    xpos -63
    ypos -106
   }
push $N30acb790
   Merge2 {
    inputs 2
    operation minus
    name Merge2
    xpos -103
    ypos -28
   }
push $N30acb790
   Position {
    translate {1 0}
    name Position1
    xpos -285
    ypos -98
   }
push $N30acb790
   Merge2 {
    inputs 2
    operation minus
    name Merge1
    xpos -253
    ypos -29
   }
   Copy {
    inputs 2
    from0 rgba.green
    to0 rgba.green
    name Copy3
    xpos -179
    ypos 27
   }
   Grade {
    channels {rgba.red rgba.green -rgba.blue none}
    multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
    black_clamp false
    name Grade1
    xpos -179
    ypos 196
    addUserKnob {20 User}
    addUserKnob {7 height l Height}
    height 1
   }
set N30b1a900 [stack 0]
push $N30b1a900
   Expression {
    channel0 rgb
    expr0 sqrt((r*r)+(g*g)+(b*b))
    name VectorLength
    selected true
    xpos -260
    ypos 278
   }
   Merge2 {
    inputs 2
    operation divide
    name Merge4
    selected true
    xpos -179
    ypos 350
   }
   Output {
    name Output1
    xpos -179
    ypos 494
   }
  end_group
  Blur {
   channels rgb
   size {{parent.preblurVector i}}
   name Blur5
   label "pre blur vector"
   xpos 440
   ypos -296
  }
push $N30a99110
  ShuffleCopy {
   inputs 2
   red red
   green green
   out forward
   name ShuffleCopy1
   label "rg to forward"
   xpos 556
   ypos -194
  }
  VectorBlur {
   channels rgba
   uv forward
   scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
   offset 0
   alpha -rgba.alpha
   maskChannelMask -rgba.alpha
   maskChannelInput -rgba.alpha
   name VectorBlur2
   xpos 556
   ypos -139
  }
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos 556
   ypos -92
  }
  Output {
   name Output1
   xpos 556
   ypos -8
  }
 end_group
 Keymix {
  inputs 3
  channels rgb
  name Keymix15
  xpos 2077
  ypos 1039
 }
set N30b8b3b0 [stack 0]
push $N30b8b3b0
push $N30b8b3b0
push $N30b8b3b0
 Group {
  inputs 2
  name ExtendEdge5
  help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
  xpos 2263
  ypos 1039
  addUserKnob {20 Controls}
  addUserKnob {7 preblurVector R 0 10}
  preblurVector {{parent.ExtendEdge.preblurVector i}}
  addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
 }
  Input {
   inputs 0
   name Input
   xpos 556
   ypos -426
  }
set N30b9e0f0 [stack 0]
  Dot {
   name Dot1
   xpos 707
   ypos -414
  }
  Dot {
   name Dot2
   xpos 707
   ypos -121
  }
  Input {
   inputs 0
   name matte
   xpos 440
   ypos -424
   number 1
  }
  Shuffle {
   red alpha
   green alpha
   blue alpha
   alpha black
   name Shuffle3
   xpos 440
   ypos -346
  }
  Group {
   name Edge2Vec2
   xpos 440
   ypos -322
  }
   Input {
    inputs 0
    name Input1
    xpos -172
    ypos -315
   }
   Clamp {
    channels rgb
    name Clamp1
    xpos -172
    ypos -250
   }
set N30bd0730 [stack 0]
   Position {
    translate {0 1}
    name Position2
    xpos -63
    ypos -106
   }
push $N30bd0730
   Merge2 {
    inputs 2
    operation minus
    name Merge2
    xpos -103
    ypos -28
   }
push $N30bd0730
   Position {
    translate {1 0}
    name Position1
    xpos -285
    ypos -98
   }
push $N30bd0730
   Merge2 {
    inputs 2
    operation minus
    name Merge1
    xpos -253
    ypos -29
   }
   Copy {
    inputs 2
    from0 rgba.green
    to0 rgba.green
    name Copy3
    xpos -179
    ypos 27
   }
   Grade {
    channels {rgba.red rgba.green -rgba.blue none}
    multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
    black_clamp false
    name Grade1
    xpos -179
    ypos 196
    addUserKnob {20 User}
    addUserKnob {7 height l Height}
    height 1
   }
set N30c1f8b0 [stack 0]
push $N30c1f8b0
   Expression {
    channel0 rgb
    expr0 sqrt((r*r)+(g*g)+(b*b))
    name VectorLength
    selected true
    xpos -260
    ypos 278
   }
   Merge2 {
    inputs 2
    operation divide
    name Merge4
    selected true
    xpos -179
    ypos 350
   }
   Output {
    name Output1
    xpos -179
    ypos 494
   }
  end_group
  Blur {
   channels rgb
   size {{parent.preblurVector i}}
   name Blur5
   label "pre blur vector"
   xpos 440
   ypos -296
  }
push $N30b9e0f0
  ShuffleCopy {
   inputs 2
   red red
   green green
   out forward
   name ShuffleCopy1
   label "rg to forward"
   xpos 556
   ypos -194
  }
  VectorBlur {
   channels rgba
   uv forward
   scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
   offset 0
   alpha -rgba.alpha
   maskChannelMask -rgba.alpha
   maskChannelInput -rgba.alpha
   name VectorBlur2
   xpos 556
   ypos -139
  }
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos 556
   ypos -92
  }
  Output {
   name Output1
   xpos 556
   ypos -8
  }
 end_group
 Keymix {
  inputs 3
  channels rgb
  name Keymix16
  xpos 2263
  ypos 1111
 }
set N30c90390 [stack 0]
push $N30c90390
push $N30c90390
push $N30c90390
 Group {
  inputs 2
  name ExtendEdge6
  help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
  xpos 2449
  ypos 1111
  addUserKnob {20 Controls}
  addUserKnob {7 preblurVector R 0 10}
  preblurVector {{parent.ExtendEdge.preblurVector}}
  addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
 }
  Input {
   inputs 0
   name Input
   xpos 556
   ypos -426
  }
set N30ca3050 [stack 0]
  Dot {
   name Dot1
   xpos 707
   ypos -414
  }
  Dot {
   name Dot2
   xpos 707
   ypos -121
  }
  Input {
   inputs 0
   name matte
   xpos 440
   ypos -424
   number 1
  }
  Shuffle {
   red alpha
   green alpha
   blue alpha
   alpha black
   name Shuffle3
   xpos 440
   ypos -346
  }
  Group {
   name Edge2Vec2
   xpos 440
   ypos -322
  }
   Input {
    inputs 0
    name Input1
    xpos -172
    ypos -315
   }
   Clamp {
    channels rgb
    name Clamp1
    xpos -172
    ypos -250
   }
set N30cd5690 [stack 0]
   Position {
    translate {0 1}
    name Position2
    xpos -63
    ypos -106
   }
push $N30cd5690
   Merge2 {
    inputs 2
    operation minus
    name Merge2
    xpos -103
    ypos -28
   }
push $N30cd5690
   Position {
    translate {1 0}
    name Position1
    xpos -285
    ypos -98
   }
push $N30cd5690
   Merge2 {
    inputs 2
    operation minus
    name Merge1
    xpos -253
    ypos -29
   }
   Copy {
    inputs 2
    from0 rgba.green
    to0 rgba.green
    name Copy3
    xpos -179
    ypos 27
   }
   Grade {
    channels {rgba.red rgba.green -rgba.blue none}
    multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
    black_clamp false
    name Grade1
    xpos -179
    ypos 196
    addUserKnob {20 User}
    addUserKnob {7 height l Height}
    height 1
   }
set N30d24800 [stack 0]
push $N30d24800
   Expression {
    channel0 rgb
    expr0 sqrt((r*r)+(g*g)+(b*b))
    name VectorLength
    selected true
    xpos -260
    ypos 278
   }
   Merge2 {
    inputs 2
    operation divide
    name Merge4
    selected true
    xpos -179
    ypos 350
   }
   Output {
    name Output1
    xpos -179
    ypos 494
   }
  end_group
  Blur {
   channels rgb
   size {{parent.preblurVector i}}
   name Blur5
   label "pre blur vector"
   xpos 440
   ypos -296
  }
push $N30ca3050
  ShuffleCopy {
   inputs 2
   red red
   green green
   out forward
   name ShuffleCopy1
   label "rg to forward"
   xpos 556
   ypos -194
  }
  VectorBlur {
   channels rgba
   uv forward
   scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
   offset 0
   alpha -rgba.alpha
   maskChannelMask -rgba.alpha
   maskChannelInput -rgba.alpha
   name VectorBlur2
   xpos 556
   ypos -139
  }
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos 556
   ypos -92
  }
  Output {
   name Output1
   xpos 556
   ypos -8
  }
 end_group
 Keymix {
  inputs 3
  channels rgb
  name Keymix17
  xpos 2449
  ypos 1183
 }
set N30d952b0 [stack 0]
push $N30d952b0
push $N30d952b0
push $N30d952b0
 Group {
  inputs 2
  name ExtendEdge7
  help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
  xpos 2635
  ypos 1183
  addUserKnob {20 Controls}
  addUserKnob {7 preblurVector R 0 10}
  preblurVector {{parent.ExtendEdge.preblurVector}}
  addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
 }
  Input {
   inputs 0
   name Input
   xpos 556
   ypos -426
  }
set N30da7f70 [stack 0]
  Dot {
   name Dot1
   xpos 707
   ypos -414
  }
  Dot {
   name Dot2
   xpos 707
   ypos -121
  }
  Input {
   inputs 0
   name matte
   xpos 440
   ypos -424
   number 1
  }
  Shuffle {
   red alpha
   green alpha
   blue alpha
   alpha black
   name Shuffle3
   xpos 440
   ypos -346
  }
  Group {
   name Edge2Vec2
   xpos 440
   ypos -322
  }
   Input {
    inputs 0
    name Input1
    xpos -172
    ypos -315
   }
   Clamp {
    channels rgb
    name Clamp1
    xpos -172
    ypos -250
   }
set N30dda5c0 [stack 0]
   Position {
    translate {0 1}
    name Position2
    xpos -63
    ypos -106
   }
push $N30dda5c0
   Merge2 {
    inputs 2
    operation minus
    name Merge2
    xpos -103
    ypos -28
   }
push $N30dda5c0
   Position {
    translate {1 0}
    name Position1
    xpos -285
    ypos -98
   }
push $N30dda5c0
   Merge2 {
    inputs 2
    operation minus
    name Merge1
    xpos -253
    ypos -29
   }
   Copy {
    inputs 2
    from0 rgba.green
    to0 rgba.green
    name Copy3
    xpos -179
    ypos 27
   }
   Grade {
    channels {rgba.red rgba.green -rgba.blue none}
    multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
    black_clamp false
    name Grade1
    xpos -179
    ypos 196
    addUserKnob {20 User}
    addUserKnob {7 height l Height}
    height 1
   }
set N30e29730 [stack 0]
push $N30e29730
   Expression {
    channel0 rgb
    expr0 sqrt((r*r)+(g*g)+(b*b))
    name VectorLength
    selected true
    xpos -260
    ypos 278
   }
   Merge2 {
    inputs 2
    operation divide
    name Merge4
    selected true
    xpos -179
    ypos 350
   }
   Output {
    name Output1
    xpos -179
    ypos 494
   }
  end_group
  Blur {
   channels rgb
   size {{parent.preblurVector i}}
   name Blur5
   label "pre blur vector"
   xpos 440
   ypos -296
  }
push $N30da7f70
  ShuffleCopy {
   inputs 2
   red red
   green green
   out forward
   name ShuffleCopy1
   label "rg to forward"
   xpos 556
   ypos -194
  }
  VectorBlur {
   channels rgba
   uv forward
   scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
   offset 0
   alpha -rgba.alpha
   maskChannelMask -rgba.alpha
   maskChannelInput -rgba.alpha
   name VectorBlur2
   xpos 556
   ypos -139
  }
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos 556
   ypos -92
  }
  Output {
   name Output1
   xpos 556
   ypos -8
  }
 end_group
 Keymix {
  inputs 3
  channels rgb
  name Keymix18
  xpos 2635
  ypos 1255
 }
set N30e9a160 [stack 0]
push $N30e9a160
push $N30e9a160
push $N30e9a160
 Group {
  inputs 2
  name ExtendEdge8
  help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
  xpos 2829
  ypos 1255
  addUserKnob {20 Controls}
  addUserKnob {7 preblurVector R 0 10}
  preblurVector {{parent.ExtendEdge.preblurVector}}
  addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
 }
  Input {
   inputs 0
   name Input
   xpos 556
   ypos -426
  }
set N30eacec0 [stack 0]
  Dot {
   name Dot1
   xpos 707
   ypos -414
  }
  Dot {
   name Dot2
   xpos 707
   ypos -121
  }
  Input {
   inputs 0
   name matte
   xpos 440
   ypos -424
   number 1
  }
  Shuffle {
   red alpha
   green alpha
   blue alpha
   alpha black
   name Shuffle3
   xpos 440
   ypos -346
  }
  Group {
   name Edge2Vec2
   xpos 440
   ypos -322
  }
   Input {
    inputs 0
    name Input1
    xpos -172
    ypos -315
   }
   Clamp {
    channels rgb
    name Clamp1
    xpos -172
    ypos -250
   }
set N30edf510 [stack 0]
   Position {
    translate {0 1}
    name Position2
    xpos -63
    ypos -106
   }
push $N30edf510
   Merge2 {
    inputs 2
    operation minus
    name Merge2
    xpos -103
    ypos -28
   }
push $N30edf510
   Position {
    translate {1 0}
    name Position1
    xpos -285
    ypos -98
   }
push $N30edf510
   Merge2 {
    inputs 2
    operation minus
    name Merge1
    xpos -253
    ypos -29
   }
   Copy {
    inputs 2
    from0 rgba.green
    to0 rgba.green
    name Copy3
    xpos -179
    ypos 27
   }
   Grade {
    channels {rgba.red rgba.green -rgba.blue none}
    multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
    black_clamp false
    name Grade1
    xpos -179
    ypos 196
    addUserKnob {20 User}
    addUserKnob {7 height l Height}
    height 1
   }
set N30f2e680 [stack 0]
push $N30f2e680
   Expression {
    channel0 rgb
    expr0 sqrt((r*r)+(g*g)+(b*b))
    name VectorLength
    selected true
    xpos -260
    ypos 278
   }
   Merge2 {
    inputs 2
    operation divide
    name Merge4
    selected true
    xpos -179
    ypos 350
   }
   Output {
    name Output1
    xpos -179
    ypos 494
   }
  end_group
  Blur {
   channels rgb
   size {{parent.preblurVector i}}
   name Blur5
   label "pre blur vector"
   xpos 440
   ypos -296
  }
push $N30eacec0
  ShuffleCopy {
   inputs 2
   red red
   green green
   out forward
   name ShuffleCopy1
   label "rg to forward"
   xpos 556
   ypos -194
  }
  VectorBlur {
   channels rgba
   uv forward
   scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
   offset 0
   alpha -rgba.alpha
   maskChannelMask -rgba.alpha
   maskChannelInput -rgba.alpha
   name VectorBlur2
   xpos 556
   ypos -139
  }
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos 556
   ypos -92
  }
  Output {
   name Output1
   xpos 556
   ypos -8
  }
 end_group
 Keymix {
  inputs 3
  channels rgb
  name Keymix19
  xpos 2829
  ypos 1327
 }
set N30f9f130 [stack 0]
push $N30f9f130
push $N30f9f130
push $N30f9f130
 Group {
  inputs 2
  name ExtendEdge9
  help "Very useful as a super unpremultiplier.  The input matte is used as the source edge to extend the input colour channels beyond their existing alpha.  It can also be used to do dilate/erode operations on an alpha. The effect can be extended by using multiple copies.  The result should probably be re-comped with the original using an edge matte through a KeyMix so that only the desired areas are used.  "
  xpos 3023
  ypos 1327
  addUserKnob {20 Controls}
  addUserKnob {7 preblurVector R 0 10}
  preblurVector {{parent.ExtendEdge.preblurVector i}}
  addUserKnob {41 scale l "vector length" T VectorBlur2.scale}
 }
  Input {
   inputs 0
   name Input
   xpos 556
   ypos -426
  }
set N30fb1df0 [stack 0]
  Dot {
   name Dot1
   xpos 707
   ypos -414
  }
  Dot {
   name Dot2
   xpos 707
   ypos -121
  }
  Input {
   inputs 0
   name matte
   xpos 440
   ypos -424
   number 1
  }
  Shuffle {
   red alpha
   green alpha
   blue alpha
   alpha black
   name Shuffle3
   xpos 440
   ypos -346
  }
  Group {
   name Edge2Vec2
   xpos 440
   ypos -322
  }
   Input {
    inputs 0
    name Input1
    xpos -172
    ypos -315
   }
   Clamp {
    channels rgb
    name Clamp1
    xpos -172
    ypos -250
   }
set N30fe4380 [stack 0]
   Position {
    translate {0 1}
    name Position2
    xpos -63
    ypos -106
   }
push $N30fe4380
   Merge2 {
    inputs 2
    operation minus
    name Merge2
    xpos -103
    ypos -28
   }
push $N30fe4380
   Position {
    translate {1 0}
    name Position1
    xpos -285
    ypos -98
   }
push $N30fe4380
   Merge2 {
    inputs 2
    operation minus
    name Merge1
    xpos -253
    ypos -29
   }
   Copy {
    inputs 2
    from0 rgba.green
    to0 rgba.green
    name Copy3
    xpos -179
    ypos 27
   }
   Grade {
    channels {rgba.red rgba.green -rgba.blue none}
    multiply {{Input1.height*Grade1.height i} {Input1.height*Grade1.height i} {curve i} {curve i}}
    black_clamp false
    name Grade1
    xpos -179
    ypos 196
    addUserKnob {20 User}
    addUserKnob {7 height l Height}
    height 1
   }
set N310335a0 [stack 0]
push $N310335a0
   Expression {
    channel0 rgb
    expr0 sqrt((r*r)+(g*g)+(b*b))
    name VectorLength
    selected true
    xpos -260
    ypos 278
   }
   Merge2 {
    inputs 2
    operation divide
    name Merge4
    selected true
    xpos -179
    ypos 350
   }
   Output {
    name Output1
    xpos -179
    ypos 494
   }
  end_group
  Blur {
   channels rgb
   size {{parent.preblurVector i}}
   name Blur5
   label "pre blur vector"
   xpos 440
   ypos -296
  }
push $N30fb1df0
  ShuffleCopy {
   inputs 2
   red red
   green green
   out forward
   name ShuffleCopy1
   label "rg to forward"
   xpos 556
   ypos -194
  }
  VectorBlur {
   channels rgba
   uv forward
   scale {{parent.parent.ExtendEdge.VectorBlur2.scale i}}
   offset 0
   alpha -rgba.alpha
   maskChannelMask -rgba.alpha
   maskChannelInput -rgba.alpha
   name VectorBlur2
   xpos 556
   ypos -139
  }
  CopyBBox {
   inputs 2
   name CopyBBox1
   xpos 556
   ypos -92
  }
  Output {
   name Output1
   xpos 556
   ypos -8
  }
 end_group
 Keymix {
  inputs 3
  channels rgb
  name Keymix20
  xpos 3023
  ypos 1399
 }
push $N30f9f130
push $N30e9a160
push $N30d952b0
push $N30c90390
push $N30b8b3b0
push $N30a86480
push $N30981560
push $N3087c640
push $N307776f0
push $N30651f10
 Switch {
  inputs 11
  which {{parent.slices}}
  name Switch3
  xpos 2018
  ypos 2366
 }
set N310ad230 [stack 0]
 Shuffle {
  in forward
  blue black
  alpha black
  name Shuffle1
  xpos 2116
  ypos 2425
 }
set N310b5920 [stack 0]
 Expression {
  expr0 (r+1)/2
  expr1 (g+1)/2
  name Expression1
  xpos 2116
  ypos 2476
 }
push $N310b5920
push $N310ad230
 Switch {
  inputs 3
  which {{parent.output}}
  name Switch1
  xpos 2018
  ypos 2501
 }
push $N30651f10
 Dot {
  name Dot22
  xpos 898
  ypos 2459
 }
 Copy {
  inputs 2
  from0 -rgba.alpha
  to0 -rgba.alpha
  channels rgb
  name Copy1
  xpos 2018
  ypos 2544
 }
 Output {
  name Output1
  xpos 2018
  ypos 2644
 }
end_group
Copy {
 inputs 2
 from0 rgba.alpha
 to0 rgba.alpha
 name Copy6
 selected true
 xpos -8089
 ypos 3215
}
Premult {
 name Premult9
 selected true
 xpos -8089
 ypos 3319
}
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message VectorExtendEdge
 old_message {{86 101 99 116 111 114 69 120 116 101 110 100 69 100 103 101}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 11 40 12 40 13 40 14 40 15 40 0 70}
   }
 cursor_position 6
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text11
 selected true
 xpos -8089
 ypos 3978
}
Dot {
 name Dot16
 selected true
 xpos -8055
 ypos 4061
}
push $N2f7487d0
Unpremult {
 name Unpremult3
 selected true
 xpos -10016
 ypos 2824
}
Dot {
 name Dot72
 selected true
 xpos -9982
 ypos 2877
}
set N31147ba0 [stack 0]
Dot {
 name Dot74
 selected true
 xpos -10080
 ypos 2877
}
FilterErode {
 name FilterErode1
 selected true
 xpos -10114
 ypos 2938
}
Dot {
 name Dot75
 selected true
 xpos -10080
 ypos 3035
}
push $N31147ba0
Group {
 inputs 2
 name PxF_Distort2
 tile_color 0x733520ff
 selected true
 xpos -10016
 ypos 3031
 addUserKnob {20 User}
 addUserKnob {41 channels T IDistort1.channels}
 addUserKnob {7 amount R -2 2}
 amount 0.08
 addUserKnob {6 fine +STARTLINE}
 fine true
 addUserKnob {14 blurLens R 0 100}
 blurLens 2
 addUserKnob {6 wrap +STARTLINE}
 addUserKnob {4 lensChannel M {Red Green Blue Alpha ""}}
 lensChannel Alpha
 addUserKnob {41 filter T IDistort1.filter}
 addUserKnob {26 ""}
 addUserKnob {26 t l "" +STARTLINE T "PxF_Distort 2.0 - (c) 2009 - Xavier Bourque - www.pixelfudger.com"}
}
 Input {
  inputs 0
  name lens
  xpos -214
  ypos -227
  number 1
 }
 Dot {
  name Dot4
  xpos -180
  ypos -175
 }
set N31172d20 [stack 0]
 Shuffle {
  red black
  green black
  blue black
  name Shuffle4
  label alpha
  xpos -77
  ypos -38
 }
push $N31172d20
 Shuffle {
  red black
  green black
  blue black
  alpha blue
  name Shuffle3
  label blue
  xpos -170
  ypos -36
 }
push $N31172d20
 Shuffle {
  red black
  green black
  blue black
  alpha green
  name Shuffle2
  label green
  xpos -259
  ypos -38
 }
push $N31172d20
 Shuffle {
  red black
  green black
  blue black
  alpha red
  name Shuffle1
  label red
  xpos -352
  ypos -40
 }
 Switch {
  inputs 4
  which {{lensChannel i}}
  name Switch1
  xpos -216
  ypos 29
 }
 Dot {
  name Dot1
  xpos -188
  ypos 118
 }
set N311c37b0 [stack 0]
push $N311c37b0
 Position {
  translate {1 0}
  name Position1
  xpos -291
  ypos 159
 }
 Merge2 {
  inputs 2
  operation minus
  name Merge15
  xpos -253
  ypos 206
 }
push $N311c37b0
push $N311c37b0
 Position {
  translate {0 1}
  name Position2
  xpos -96
  ypos 166
 }
 Merge2 {
  inputs 2
  operation minus
  name Merge21
  xpos -149
  ypos 208
 }
 ShuffleCopy {
  inputs 2
  red alpha
  green alpha2
  blue blue
  name ShuffleCopy3
  xpos -206
  ypos 247
 }
 Blur {
  size {{"blurLens * width / 2048 * 2.75" x1 30}}
  name Blur13
  xpos -52
  ypos 260
 }
 Multiply {
  value {{"fine ? pow(blurLens,0.395) * amount * width * 3.597 / 10 : pow(blurLens,0.395) * amount * width * 3.597"}}
  name Multiply5
  xpos -206
  ypos 310
 }
set N31219480 [stack 0]
 Expression {
  channel3 {-rgba.red -rgba.green -rgba.blue rgba.alpha}
  expr3 "r == 0 && g == 0 ? 1 : 0"
  name Expression1
  xpos -169
  ypos 461
 }
 Input {
  inputs 0
  name img
  xpos -451
  ypos -225
 }
 Dot {
  name Dot3
  xpos -409
  ypos -140
 }
set N31238a00 [stack 0]
 Dot {
  name Dot2
  xpos -757
  ypos 242
 }
push $N31219480
push $N31238a00
 Mirror {
  Horizontal true
  Vertical true
  name Mirror2
  xpos -435
  ypos 113
  disable {{"1 - wrap" i}}
 }
 Reformat {
  type scale
  scale 3
  filter impulse
  name Reformat2
  xpos -435
  ypos 137
  disable {{"1 - wrap" i}}
 }
 Tile {
  rows 3
  mirrorRows true
  columns 3
  mirrorCols true
  filter impulse
  name Tile1
  xpos -435
  ypos 161
  disable {{"1 - wrap" i}}
 }
 Reformat {
  type scale
  scale 0.333333
  resize none
  filter impulse
  name Reformat3
  xpos -435
  ypos 185
  disable {{"1 - wrap" i}}
 }
 Transform {
  translate {-1 -1}
  center {3072 2334}
  black_outside false
  name Transform1
  xpos -435
  ypos 219
  disable {{"1 - wrap" i}}
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 forward.u
  from1 rgba.green
  to1 forward.v
  name Copy1
  xpos -396
  ypos 304
 }
 IDistort {
  channels rgb
  uv forward
  blur -depth.Z
  filter notch
  name IDistort1
  xpos -396
  ypos 469
 }
 Remove {
  channels forward
  name Remove1
  xpos -396
  ypos 502
 }
 Keymix {
  inputs 3
  name Keymix1
  xpos -416
  ypos 668
 }
 Output {
  name Output1
  xpos -425
  ypos 739
 }
 Viewer {
  inputs 0
  frame_range 1001-1052
  name Viewer1
  selected true
  xpos -572
  ypos 747
 }
end_group
Premult {
 name Premult20
 selected true
 xpos -10016
 ypos 3089
}
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message PxF_Distort
 old_message {{80 120 70 95 68 105 115 116 111 114 116}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 0 70}
   }
 cursor_position 11
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text9
 selected true
 xpos -10016
 ypos 3978
}
Dot {
 name Dot71
 selected true
 xpos -9982
 ypos 4061
}
push $N2f7437b0
Dot {
 name Dot83
 selected true
 xpos -12121
 ypos 2832
}
set N3135a9b0 [stack 0]
Dot {
 name Dot84
 selected true
 xpos -12001
 ypos 2832
}
Dot {
 name Dot63
 selected true
 xpos -12001
 ypos 3090
}
push $N3135a9b0
Erode {
 size 1.8
 name Erode7
 selected true
 xpos -12155
 ypos 2894
 disable true
}
Group {
 name EdgeWarp3
 selected true
 xpos -12155
 ypos 2992
 addUserKnob {20 EdgeWarp}
 addUserKnob {7 area l "warp area" R 0 250}
 area 3
 addUserKnob {7 intensity l "warp intensity"}
 intensity 3
 addUserKnob {6 preserve_alpha l "preserve input alpha" +STARTLINE}
 preserve_alpha true
 addUserKnob {1 Scriplet_Info +DISABLED +INVISIBLE}
 Scriplet_Info central
}
 Input {
  inputs 0
  name Input
  xpos -305
  ypos -118
 }
set N31383e10 [stack 0]
 Dot {
  name Dot3
  xpos -271
  ypos -166
 }
 Dot {
  name Dot4
  xpos -665
  ypos -166
 }
push $N31383e10
 Dot {
  name Dot2
  xpos -402
  ypos -114
 }
set N31392b90 [stack 0]
 Matrix {
  channels alpha
  matrix {
      {3 0 -3}
      {10 0 -10}
      {3 0 -3}
    }
  name Scharr_operator_x
  xpos -436
  ypos 1
 }
push $N31383e10
 Matrix {
  channels alpha
  matrix {
      {3 10 3}
      {0 0 0}
      {-3 -10 -3}
    }
  name Scharr_operator_y
  xpos -305
  ypos -66
 }
 ShuffleCopy {
  inputs 2
  red alpha
  green alpha2
  blue black
  alpha black
  name ShuffleCopy2
  xpos -305
  ypos 7
 }
set N313aed50 [stack 0]
 Blur {
  size {{"\[value parent.area]" i}}
  filter quadratic
  name Blur
  xpos -305
  ypos 83
 }
 Crop {
  box {0 0 {format.w} {format.h}}
  name Crop1
  xpos -305
  ypos 121
 }
 Multiply {
  value {{"\[python -execlocal blur\\ =\\ nuke.toNode(\\\"Blur\\\")\\\[\\\"size\\\"\\].value()\\nmult\\ =\\ nuke.thisParent()\\\[\\\"intensity\\\"\\].value()\\nif\\ blur\\ <=\\ 50:\\n\\ ret\\ =\\ mult\\ *\\ blur\\ /\\ 2\\nelse:\\ #blur\\ <=\\ 100:\\n\\ ret\\ =\\ mult\\ *\\ blur\\ *\\ ((blur\\ -\\ 25)\\ /\\ 50)\\n]" i}}
  name Multiply
  xpos -305
  ypos 160
 }
push $N31392b90
 Dot {
  name Dot1
  xpos -512
  ypos -114
 }
 Group {
  inputs 2
  name DisplaceXV
  note_font "Bitstream Vera Sans"
  xpos -546
  ypos 167
  mapsize {0.15 0.15}
  addUserKnob {20 DisplaceX}
  addUserKnob {41 expr0 l "X displacement" T Displacement.expr0}
  addUserKnob {41 expr1 l "Y displacement" T Displacement.expr1}
 }
  Input {
   inputs 0
   name ctrl
   xpos 442
   ypos -372
   number 1
  }
  Input {
   inputs 0
   name src
   xpos 237
   ypos -275
  }
set N313f7b50 [stack 0]
  Merge2 {
   inputs 2
   operation copy
   name Merge1
   xpos 442
   ypos -275
  }
set N313fc9e0 [stack 0]
  Expression {
   expr0 x-r
   expr1 y+g
   expr2 0
   name Displacement
   xpos 442
   ypos -238
  }
push $N313fc9e0
  Dot {
   name Dot1
   xpos 585
   ypos -270
  }
  Expression {
   expr0 0.5
   expr1 0.5
   name Expression1
   xpos 551
   ypos -204
  }
  Merge2 {
   inputs 2
   operation plus
   name Merge2
   xpos 442
   ypos -204
  }
  Multiply {
   value {{1.0/width} {"1.0 / height"} 1 1}
   name Multiply1
   xpos 442
   ypos -119
  }
push $N313f7b50
  STMap {
   inputs 2
   uv rgb
   name STMap2
   xpos 237
   ypos -119
  }
  Output {
   name Output1
   xpos 237
   ypos -57
  }
 end_group
set N313e9710 [stack 0]
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos -699
  ypos 160
 }
 Dot {
  name Dot5
  xpos -665
  ypos 247
 }
push $N313e9710
 Switch {
  inputs 2
  which {{parent.preserve_alpha}}
  name Switch1
  xpos -546
  ypos 243
 }
 Output {
  name Output1
  xpos -546
  ypos 300
 }
push $N313aed50
 Viewer {
  frame_range 1001-1052
  viewerProcess "Show_LUT_CDL (rec709)"
  name Viewer1
  selected true
  xpos -110
  ypos 63
 }
end_group
Copy {
 inputs 2
 from0 rgba.alpha
 to0 rgba.alpha
 name Copy2
 selected true
 xpos -12155
 ypos 3080
 disable true
}
Premult {
 name Premult11
 selected true
 xpos -12155
 ypos 3170
}
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message EdgeWarp
 old_message {{69 100 103 101 87 97 114 112}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 0 70}
   }
 cursor_position 8
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text7
 selected true
 xpos -12155
 ypos 3978
}
Dot {
 name Dot62
 selected true
 xpos -12121
 ypos 4061
}
push $N2f73e700
Dot {
 name Dot53
 selected true
 xpos -14437
 ypos 2899
}
set N31530e80 [stack 0]
Dot {
 name Dot65
 selected true
 xpos -14595
 ypos 2899
}
Erode {
 size {2 1}
 name Erode5
 selected true
 xpos -14629
 ypos 2972
}
Dot {
 name Dot76
 selected true
 xpos -14595
 ypos 3070
}
push $N31530e80
EdgeExtend {
 inputs 2
 sourceIsPremultiplied true
 detailAmount 0
 name EdgeExtend1
 selected true
 xpos -14471
 ypos 3066
}
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message "Nuke's EdgeExtend"
 old_message {{78 117 107 101 39 115 32 69 100 103 101 69 120 116 101 110 100}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 11 40 12 40 13 40 14 40 15 40 16 40 7 70}
   }
 cursor_position 17
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text13
 selected true
 xpos -14471
 ypos 3978
}
Dot {
 name Dot64
 selected true
 xpos -14437
 ypos 4061
}
push $N2f7396e0
Group {
 name KillOutline2
 help "KillOutline reduces unwanted outlines from keyed footage.\n\nerode controls: erode the alpha in for the amount of the visible outline.\n\nexpand controls: expand outer pixels of eroded image out again until it reaches the edge of the original alpha.\n\ntransition treatment: if needed, blur the transition between original image and extension."
 selected true
 xpos -16826
 ypos 2945
 addUserKnob {20 Settings}
 addUserKnob {26 title l "" +STARTLINE T "KillOutline by Andreas Frickinger"}
 addUserKnob {26 expectation l "" +STARTLINE T "expects premultiplied input."}
 addUserKnob {26 ""}
 addUserKnob {20 erodeControls l "erode controls" n 1}
 addUserKnob {41 erodeSize l "erode size" t "alpha gets eroded in by this amount." T GizmoControl.erodeSize}
 addUserKnob {20 endGroup n -1}
 addUserKnob {26 ""}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {20 extendControls l "expand controls" n 1}
 addUserKnob {41 slices T EdgeExtend2.slices}
 addUserKnob {41 slice_width l "slice width" T EdgeExtend2.slice_width}
 addUserKnob {41 expandSize l "expand size" t "outer pixels of eroded image gets dilated out by this amount. " T EdgeExtend2.blurResult}
 addUserKnob {26 ""}
 addUserKnob {20 transitionTreatment l "transition treatment" n 1}
 addUserKnob {41 transitionTreatmentSwitch l on/off T GizmoControl.transitionTreatmentSwitch}
 addUserKnob {41 edgeSize l "edge size" t "size of transition edge." T GizmoControl.edgeSize}
 addUserKnob {41 edgeBlur l "edge blur" t "blur size of transition edge." T GizmoControl.edgeBlur}
 addUserKnob {41 size l "image blur" t "blur size of image, masked out by transition edge." T TransitionBlur.size}
 addUserKnob {20 endGroup_2 l endGroup n -1}
}
 Input {
  inputs 0
  name mask
  xpos 1465
  ypos 803
  number 1
 }
 Invert {
  name Invert1
  xpos 1465
  ypos 829
 }
 Input {
  inputs 0
  name img
  xpos 833
  ypos -395
 }
 Dot {
  name Dot5
  xpos 867
  ypos -311
 }
set N315a2e50 [stack 0]
 Dot {
  name Dot6
  xpos 585
  ypos -311
 }
 Dot {
  name Dot7
  xpos 585
  ypos 839
 }
 Dot {
  name Dot8
  xpos 1057
  ypos 839
 }
push $N315a2e50
 Unpremult {
  name UnpremultInput
  xpos 833
  ypos -241
 }
 Dot {
  name Dot3
  xpos 867
  ypos -144
 }
set N315bf120 [stack 0]
 Dot {
  name Dot4
  xpos 867
  ypos 434
 }
 Dot {
  name Dot1
  xpos 1054
  ypos 434
 }
set N315c9010 [stack 0]
 Dot {
  name Dot2
  xpos 1054
  ypos 672
 }
 Expression {
  expr3 a==0?0:a
  name Expression1
  xpos 1118
  ypos 668
 }
push $N315bf120
 Shuffle {
  red black
  green black
  blue black
  name AlphaOnly
  xpos 1250
  ypos -148
 }
 Erode {
  size {{GizmoControl.erodeSize i}}
  name ErodeShrink
  xpos 1250
  ypos 37
 }
set N315f1f30 [stack 0]
 Dot {
  name Dot10
  xpos 1657
  ypos 47
 }
 EdgeDetectWrapper {
  channels alpha
  erodesize {{GizmoControl.edgeSize*-1 i}}
  name EdgeDetectWrapper1
  xpos 1623
  ypos 252
 }
 Blur {
  size {{GizmoControl.edgeBlur i}}
  name EdgeBlur
  xpos 1623
  ypos 290
 }
 Dot {
  name Dot9
  xpos 1657
  ypos 605
 }
push $N315f1f30
push $N315c9010
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy1
  xpos 1250
  ypos 424
 }
 Premult {
  name Premult2
  xpos 1250
  ypos 462
 }
set N316341d0 [stack 0]
push $N316341d0
 Group {
  inputs 2
  name EdgeExtend2
  help "EdgeExtend repeatedly blurs and unpremuliplies the image to extend edges outward while trying to preserve the original source colour"
  xpos 1250
  ypos 533
  addUserKnob {20 "" l User}
  addUserKnob {4 premult l "input is" M {premultiplied unpremultiplied}}
  addUserKnob {3 slices t "How many times the edges are blurred and unpremuliplied.\nThis is the fine control for slightly better quality. The current maximum is 10."}
  slices 4
  addUserKnob {3 slice_width l "slice width" t "Blur amount that is applied before unpremultiplying the result per slice.\nThis is the brute force control and should be kept at 1 if possible.\nOnly increase this if the maximum amount of slices (10) doesn't cover the area you need."}
  slice_width 1
  addUserKnob {7 blurResult l "blur slices" R 0 10}
  blurResult 5
 }
  Input {
   inputs 0
   name img
   xpos -590
   ypos -509
  }
set N31646a10 [stack 0]
  Dot {
   name Dot1
   xpos -556
   ypos 978
  }
  Input {
   inputs 0
   name matte
   xpos -358
   ypos -653
   number 1
  }
push $N31646a10
  Unpremult {
   name Unpremult11
   xpos -468
   ypos -509
   disable {{parent.premult}}
  }
  Copy {
   inputs 2
   from0 -rgba.alpha
   to0 -rgba.alpha
   channels alpha
   name Copy2
   xpos -358
   ypos -516
  }
  Premult {
   name Premult1
   xpos -358
   ypos -450
  }
  Shuffle {
   black alpha
   out2 depth
   name Shuffle1
   label alpha>depth
   xpos -223
   ypos -413
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult1
   xpos -223
   ypos -373
  }
set N31685490 [stack 0]
  Dot {
   name Dot2
   xpos -189
   ypos -214
  }
set N3168d9c0 [stack 0]
push $N31685490
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.slice_width}}
   name Blur1
   xpos -25
   ypos -373
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle3
   label depth>alpha
   xpos -25
   ypos -333
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult3
   xpos -25
   ypos -293
  }
  Blur {
   channels rgba
   size {{parent.blurResult}}
   name Blur10
   xpos -25
   ypos -241
  }
  set C316b9a20 [stack 0]
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge1
   xpos -25
   ypos -218
  }
set N316c77e0 [stack 0]
  Dot {
   name Dot3
   xpos 9
   ypos -73
  }
set N316d81a0 [stack 0]
push $N316c77e0
  Blur {
   channels rgba
   size {{parent.slice_width}}
   name Blur2
   xpos 159
   ypos -218
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle5
   label alpha>depth
   xpos 159
   ypos -180
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult2
   xpos 159
   ypos -140
  }
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.blurResult}}
   name Blur3
   xpos 159
   ypos -101
  }
  set C31704280 [stack 0]
  Merge2 {
   inputs 2
   name Merge2
   xpos 159
   ypos -73
  }
set N31712040 [stack 0]
  Dot {
   name Dot4
   xpos 193
   ypos 103
  }
set N31722a10 [stack 0]
push $N31712040
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle2
   label depth>alpha
   xpos 342
   ypos -24
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult4
   xpos 342
   ypos 16
  }
set N31738730 [stack 0]
clone $C316b9a20 {
   xpos 342
   ypos 68
   selected false
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge3
   xpos 342
   ypos 103
  }
  Dot {
   name Dot5
   xpos 373
   ypos 226
  }
set N3175f370 [stack 0]
push $N31738730
  Blur {
   channels rgba
   size {{parent.slice_width}}
   name Blur4
   xpos 503
   ypos 23
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle4
   label alpha>depth
   xpos 503
   ypos 65
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult5
   xpos 503
   ypos 105
  }
set N31782ec0 [stack 0]
clone $C31704280 {
   xpos 503
   ypos 174
   selected false
  }
  Merge2 {
   inputs 2
   name Merge4
   xpos 503
   ypos 226
  }
  Dot {
   name Dot6
   xpos 537
   ypos 321
  }
set N317a9b10 [stack 0]
push $N31782ec0
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.slice_width}}
   name Blur5
   xpos 689
   ypos 105
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle6
   label depth>alpha
   xpos 689
   ypos 145
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult6
   xpos 689
   ypos 185
  }
set N317cd770 [stack 0]
clone $C316b9a20 {
   xpos 684
   ypos 272
   selected false
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge5
   xpos 689
   ypos 321
  }
  Dot {
   name Dot7
   xpos 723
   ypos 448
  }
set N317f43c0 [stack 0]
push $N317cd770
  Blur {
   channels rgba
   size {{parent.slice_width}}
   name Blur6
   xpos 856
   ypos 200
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle7
   label alpha>depth
   xpos 856
   ypos 280
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult7
   xpos 856
   ypos 320
  }
set N31817f10 [stack 0]
clone $C31704280 {
   xpos 852
   ypos 405
   selected false
  }
  Merge2 {
   inputs 2
   name Merge6
   xpos 856
   ypos 448
  }
  Dot {
   name Dot8
   xpos 890
   ypos 514
  }
set N3183eb50 [stack 0]
push $N31817f10
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.slice_width}}
   name Blur7
   xpos 1042
   ypos 320
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle8
   label depth>alpha
   xpos 1042
   ypos 393
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult8
   xpos 1042
   ypos 433
  }
set N318626a0 [stack 0]
clone $C316b9a20 {
   xpos 1046
   ypos 484
   selected false
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge7
   xpos 1042
   ypos 514
  }
  Dot {
   name Dot9
   xpos 1076
   ypos 579
  }
set N318892e0 [stack 0]
push $N318626a0
  Blur {
   channels rgba
   size {{parent.slice_width}}
   name Blur8
   xpos 1205
   ypos 440
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle9
   label alpha>depth
   xpos 1205
   ypos 466
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult9
   xpos 1205
   ypos 506
  }
set N318ace30 [stack 0]
clone $C31704280 {
   xpos 1206
   ypos 551
   selected false
  }
  Merge2 {
   inputs 2
   name Merge8
   xpos 1205
   ypos 579
  }
  Dot {
   name Dot10
   xpos 1239
   ypos 664
  }
set N318d3e60 [stack 0]
push $N318ace30
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.slice_width}}
   name Blur9
   xpos 1421
   ypos 506
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle11
   label depth>alpha
   xpos 1421
   ypos 546
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult10
   xpos 1421
   ypos 586
  }
clone $C316b9a20 {
   xpos 1421
   ypos 638
   selected true
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge9
   xpos 1421
   ypos 664
  }
push $N318d3e60
push $N318892e0
push $N3183eb50
push $N317f43c0
push $N317a9b10
push $N3175f370
push $N31722a10
push $N316d81a0
push $N3168d9c0
push $N31646a10
  Switch {
   inputs 11
   which {{parent.slices}}
   name Switch1
   xpos 689
   ypos 827
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle10
   label depth>alpha
   xpos 689
   ypos 865
  }
  Remove {
   channels depth
   name Remove1
   xpos 689
   ypos 905
  }
  Copy {
   inputs 2
   from0 -rgba.alpha
   to0 -rgba.alpha
   channels depth
   name Copy1
   xpos 689
   ypos 960
  }
  Output {
   name Output1
   xpos 689
   ypos 1290
  }
  Blur {
   inputs 0
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size 8.5
   name Blur11
   xpos 299
   ypos -61
  }
 end_group
set N3163c510 [stack 0]
 Blur {
  inputs 1+1
  size 3
  name TransitionBlur
  xpos 1250
  ypos 595
  disable {{(GizmoControl.transitionTreatmentSwitch-1)*-1 i}}
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy2
  xpos 1250
  ypos 662
 }
 Premult {
  name Premult3
  xpos 1250
  ypos 777
 }
 Keymix {
  inputs 3
  name Keymix1
  xpos 1250
  ypos 829
 }
 Output {
  name Output1
  xpos 1250
  ypos 915
 }
 NoOp {
  inputs 0
  name GizmoControl
  xpos 1428
  ypos 254
  addUserKnob {20 User}
  addUserKnob {6 transitionTreatmentSwitch l on/off +STARTLINE}
  transitionTreatmentSwitch true
  addUserKnob {7 edgeBlur l "edge blur" R 0 100}
  edgeBlur 3
  addUserKnob {7 edgeSize l "edge size" R -1 10}
  edgeSize 1
  addUserKnob {7 erodeSize l "erode size" R 0 10}
  erodeSize 4.25
 }
push $N3163c510
 Viewer {
  frame_range 1001-1052
  viewerProcess "Show_LUT_CDL (rec709)"
  name Viewer1
  xpos 1054
  ypos 192
 }
end_group
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message KillOutline
 old_message {{75 105 108 108 79 117 116 108 105 110 101}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 0 70}
   }
 cursor_position 11
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text8
 selected true
 xpos -16826
 ypos 3978
}
Dot {
 name Dot70
 selected true
 xpos -16792
 ypos 4061
}
push $N2f734670
Dot {
 name Dot39
 selected true
 xpos -18837
 ypos 2913
}
set N31a3b4b0 [stack 0]
Dot {
 name Dot43
 selected true
 xpos -19035
 ypos 2913
}
Erode {
 size {8 6}
 name Erode3
 selected true
 xpos -19069
 ypos 2984
}
Dot {
 name Dot42
 selected true
 xpos -19035
 ypos 3093
}
push $N31a3b4b0
Group {
 inputs 2
 name Edge_Extrude_Directional1
 help "Gaussian in-fill. Useful to remove markers and create clean plates."
 knobChanged "m = nuke.thisNode()\nkc = nuke.thisKnob()\n\nif kc.name() in \[\"iterations\"]:\n    i = nuke.toNode('Merge1')\n    i2 = nuke.toNode('Invert1')\n    o = nuke.toNode('Transform3')\n    \n    for n in nuke.allNodes():\n      if \"static\" not in n\['label'].getValue():\n          ###print \"i would delete\" + n\['name'].value()\n          nuke.delete(n)\n    \n    \n    slices = int(m\['iterations'].value())\n    step = int(1)\n    for x in range(1,slices+step,step):\n\n      b1 = nuke.nodes.Blur()\n      b1.setInput(0, i)\n      b1\['size'].setSingleValue(False)\n      b1\['size'].setExpression(\"parent.size.w\", 0)\n      b1\['size'].setExpression(\"parent.size.h\", 1)\n\n      b2 = nuke.nodes.Blur()\n      b2.setInput(0, i2)\n      b2\['size'].setSingleValue(False)\n      b2\['size'].setExpression(\"parent.size.w\", 0)\n      b2\['size'].setExpression(\"parent.size.h\", 1)\n\n      g1 = nuke.nodes.Grade()\n      g1.setInput(0, b2)\n      g1\['channels'].setValue('rgba')\n      g1\['blackpoint'].setValue(-0.0001)\n      g1\['disable'].setExpression(\"parent.softEdges ? 0 : 1\")\n\n      m1 = nuke.nodes.Merge()\n      m1.setInput(1, b1)\n      m1.setInput(0, g1)\n      m1\['operation'].setValue(\"divide\")\n      \n      if x < slices:\n         m2 = nuke.nodes.Merge()\n         m2.setInput(1, b2)\n         m2.setInput(0, g1)\n         m2\['operation'].setValue(\"divide\")\n    \n      i = m1\n      i2 = m2\n    \n    o.setInput(0, i)\n\n"
 tile_color 0x9db2ff
 selected true
 xpos -18871
 ypos 3089
 addUserKnob {20 User}
 addUserKnob {14 size t "Amount of 'in-fill' for one iteration. " R 0 100}
 size {4 1}
 addUserKnob {3 iterations l INVISIBLE t "How many times the blur/divide operation is repeated." +INVISIBLE}
 iterations 10
 addUserKnob {6 softEdges l INVISIBLE t "Smoother transition between iterations." -STARTLINE +INVISIBLE}
 softEdges true
 addUserKnob {14 edge_blr_size l "Seam Blur" t "Blurs the seam inbetween for blending." R 0 100}
 edge_blr_size 3.8
 addUserKnob {14 extend_blur_size l "extrude blur" t "Blurs the extended edges for blending." R 0 100}
 addUserKnob {7 angle l "Extrude Angle" t "Adjust the direction of the 'in-fill'. (Has no effect if size.w and size.h are the same value)." R -180 180}
 angle -28
 addUserKnob {6 blackOutside t "Clamp to format before the 'in-fill'." +STARTLINE}
 addUserKnob {4 maskChannel t "Which channel from the 'hole_mask' input is used to define the area to be 'in-filled'." M {Red Green Blue Alpha "" ""}}
 maskChannel Alpha
 addUserKnob {6 ignoreAlpha l "Don't process Alpha" t "Only process RGB channels and do not 'in-fill' the alpha channel." -STARTLINE}
 ignoreAlpha true
 addUserKnob {7 mix t "Dissolve between the effect and the original image."}
 mix 1
 addUserKnob {26 ""}
 addUserKnob {1 Scriplet_Info +DISABLED +INVISIBLE}
 Scriplet_Info central
}
 Input {
  inputs 0
  name mask
  label static
  xpos 184
  ypos 2059
  number 2
 }
 Input {
  inputs 0
  name img
  label static
  xpos -1271
  ypos 233
  addUserKnob {20 User}
  addUserKnob {7 blur R 0 500}
  addUserKnob {3 iterations}
 }
set N31a6c260 [stack 0]
push $N31a6c260
 Input {
  inputs 0
  name matte
  label static
  xpos 335
  ypos -919
  number 1
 }
set N31a71b70 [stack 0]
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle4
  label static
  xpos 470
  ypos -755
 }
push $N31a71b70
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle3
  label static
  xpos 374
  ypos -757
 }
push $N31a71b70
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle2
  label static
  xpos 287
  ypos -758
 }
push $N31a71b70
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle1
  label static
  xpos 172
  ypos -769
 }
 Switch {
  inputs 4
  which {{parent.maskChannel}}
  name Switch2
  label static
  xpos 342
  ypos -673
 }
 Invert {
  name Invert2
  xpos 342
  ypos -635
 }
set N31ac24c0 [stack 0]
 Dot {
  name Dot1
  xpos 288
  ypos 1666
 }
 Blur {
  channels alpha
  size {{parent.edge_blr_size.w} {parent.edge_blr_size.h}}
  name edge_blr
  xpos 64
  ypos 1656
 }
push $N31ac24c0
 Transform {
  rotate {{parent.angle}}
  center {2048 1463}
  black_outside false
  name Transform2
  label static
  xpos 342
  ypos -594
 }
set N31ae1110 [stack 0]
push $N31a6c260
 Transform {
  rotate {{parent.angle}}
  center {2048 1463}
  black_outside {{parent.blackOutside}}
  name Transform1
  label static
  xpos 137
  ypos -629
 }
 CopyBBox {
  inputs 2
  name CopyBBox1
  label static
  xpos 137
  ypos -594
 }
push $N31ae1110
 Merge2 {
  inputs 2
  operation out
  name Merge1
  label static
  xpos 137
  ypos -455
 }
set N31b06170 [stack 0]
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur1
  xpos 137
  ypos -239
 }
push $N31ae1110
 Clamp {
  name Clamp1
  label static
  xpos 342
  ypos -532
 }
 Invert {
  name Invert1
  label static
  xpos 342
  ypos -473
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur2
  xpos 342
  ypos -404
 }
set N31b3f4a0 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade1
  xpos 310
  ypos -319
  disable {{"parent.softEdges ? 0 : 1"}}
 }
set N31b4d4f0 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge2
  xpos 310
  ypos -233
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur3
  xpos 310
  ypos -79
 }
push $N31b3f4a0
push $N31b4d4f0
 Merge {
  inputs 2
  operation divide
  name Merge3
  xpos 470
  ypos -319
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur4
  xpos 470
  ypos -239
 }
set N31b8b8f0 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade2
  xpos 470
  ypos -159
  disable {{"parent.softEdges ? 0 : 1"}}
 }
set N31b99990 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge4
  xpos 470
  ypos -73
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur5
  xpos 470
  ypos 81
 }
push $N31b8b8f0
push $N31b99990
 Merge {
  inputs 2
  operation divide
  name Merge5
  xpos 630
  ypos -159
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur6
  xpos 630
  ypos -79
 }
set N31bd7db0 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade3
  xpos 630
  ypos 1
  disable {{"parent.softEdges ? 0 : 1"}}
 }
set N31be5e50 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge6
  xpos 630
  ypos 87
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur7
  xpos 630
  ypos 241
 }
push $N31bd7db0
push $N31be5e50
 Merge {
  inputs 2
  operation divide
  name Merge7
  xpos 790
  ypos 1
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur8
  xpos 790
  ypos 81
 }
set N31c244b0 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade4
  xpos 790
  ypos 161
  disable {{"parent.softEdges ? 0 : 1"}}
 }
set N31c323f0 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge8
  xpos 790
  ypos 241
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur9
  xpos 790
  ypos 401
 }
push $N31c244b0
push $N31c323f0
 Merge {
  inputs 2
  operation divide
  name Merge9
  xpos 950
  ypos 161
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur10
  xpos 950
  ypos 241
 }
set N31c70810 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade5
  xpos 950
  ypos 321
  disable {{"parent.softEdges ? 0 : 1"}}
 }
set N31c7e8b0 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge10
  xpos 950
  ypos 401
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur11
  xpos 950
  ypos 561
 }
push $N31c70810
push $N31c7e8b0
 Merge {
  inputs 2
  operation divide
  name Merge11
  xpos 1110
  ypos 321
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur12
  xpos 1110
  ypos 401
 }
set N31cbccd0 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade6
  xpos 1110
  ypos 481
  disable {{"parent.softEdges ? 0 : 1"}}
 }
set N31ccad70 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge12
  xpos 1110
  ypos 561
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur13
  xpos 1110
  ypos 721
 }
push $N31cbccd0
push $N31ccad70
 Merge {
  inputs 2
  operation divide
  name Merge13
  xpos 1270
  ypos 481
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur14
  xpos 1270
  ypos 561
 }
set N31d09190 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade7
  xpos 1270
  ypos 641
  disable {{"parent.softEdges ? 0 : 1"}}
 }
set N31d17230 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge14
  xpos 1270
  ypos 721
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur15
  xpos 1270
  ypos 881
 }
push $N31d09190
push $N31d17230
 Merge {
  inputs 2
  operation divide
  name Merge15
  xpos 1430
  ypos 641
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur16
  xpos 1430
  ypos 721
 }
set N31d55660 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade8
  xpos 1430
  ypos 801
  disable {{"parent.softEdges ? 0 : 1"}}
 }
set N31d63b20 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge16
  xpos 1430
  ypos 881
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur17
  xpos 1430
  ypos 1041
 }
push $N31d55660
push $N31d63b20
 Merge {
  inputs 2
  operation divide
  name Merge17
  xpos 1590
  ypos 801
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur18
  xpos 1590
  ypos 881
 }
set N31da1f50 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade9
  xpos 1590
  ypos 961
  disable {{"parent.softEdges ? 0 : 1"}}
 }
set N31dafff0 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge18
  xpos 1590
  ypos 1041
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur19
  xpos 1590
  ypos 1201
 }
push $N31da1f50
push $N31dafff0
 Merge {
  inputs 2
  operation divide
  name Merge19
  xpos 1750
  ypos 961
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur20
  xpos 1750
  ypos 1041
 }
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade10
  xpos 1750
  ypos 1121
  disable {{"parent.softEdges ? 0 : 1"}}
 }
 Merge {
  inputs 2
  operation divide
  name Merge20
  xpos 1750
  ypos 1217
 }
 Transform {
  rotate {{parent.angle*-1}}
  center {2048 1463}
  name Transform3
  label static
  xpos -163
  ypos 1431
 }
 Blur {
  size {{parent.extend_blur_size.w} {parent.extend_blur_size.h}}
  name extend_blur
  xpos -163
  ypos 1525
 }
push $N31a6c260
 Keymix {
  inputs 3
  bbox B
  name Keymix1
  label static
  xpos -163
  ypos 1650
 }
set N31e39820 [stack 0]
 ShuffleCopy {
  inputs 2
  name ShuffleCopy1
  label static
  xpos -163
  ypos 1763
  disable {{"parent.ignoreAlpha ? 0 : 1"}}
 }
push $N31a6c260
 Dissolve {
  inputs 2
  which {{parent.mix}}
  name Dissolve1
  label static
  xpos -163
  ypos 1924
 }
 Keymix {
  inputs 3
  invertMask true
  bbox B
  name Keymix2
  label static
  xpos -163
  ypos 2053
  disable {{"\[exists parent.input2] ? 0 : 1" x1 0}}
 }
 Output {
  name Output1
  label static
  xpos -163
  ypos 2155
 }
push $N31e39820
push 0
push $N31b06170
 Viewer {
  inputs 3
  frame_range 1001-1052
  viewerProcess "Show_LUT_CDL (rec709)"
  name Viewer1
  selected true
  xpos 1750
  ypos 1243
 }
end_group
Premult {
 name Premult16
 selected true
 xpos -18871
 ypos 3174
}
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message Edge_Extrude_Directional
 old_message {{69 100 103 101 95 69 120 116 114 117 100 101 95 68 105 114 101 99 116 105 111 110 97 108}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 11 40 12 40 13 40 14 40 15 40 16 40 17 40 18 40 19 40 20 40 21 40 22 40 23 40 0 70}
   }
 cursor_position 24
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text12
 selected true
 xpos -18871
 ypos 3978
}
Dot {
 name Dot44
 selected true
 xpos -18837
 ypos 4061
}
push $N2f72f690
Dot {
 name Dot66
 selected true
 xpos -20636
 ypos 2956
}
set N31f18930 [stack 0]
Dot {
 name Dot68
 selected true
 xpos -20788
 ypos 2956
}
Invert {
 name Invert4
 selected true
 xpos -20822
 ypos 3006
}
FilterErode {
 size {-12 -6}
 name FilterErode3
 selected true
 xpos -20822
 ypos 3078
}
Dot {
 name Dot69
 selected true
 xpos -20788
 ypos 3152
}
push $N31f18930
Group {
 inputs 2
 name PxF_Filler2
 help "Gaussian in-fill. Useful to remove markers and create clean plates."
 knobChanged "m = nuke.thisNode()\nkc = nuke.thisKnob()\n\nif kc.name() in \[\"iterations\"]:\n    i = nuke.toNode('Merge1')\n    i2 = nuke.toNode('Invert1')\n    o = nuke.toNode('Transform3')\n    \n    for n in nuke.allNodes():\n      if \"static\" not in n\['label'].getValue():\n          ###print \"i would delete\" + n\['name'].value()\n          nuke.delete(n)\n    \n    \n    slices = int(m\['iterations'].value())\n    step = int(1)\n    for x in range(1,slices+step,step):\n\n      b1 = nuke.nodes.Blur()\n      b1.setInput(0, i)\n      b1\['size'].setSingleValue(False)\n      b1\['size'].setExpression(\"parent.size.w\", 0)\n      b1\['size'].setExpression(\"parent.size.h\", 1)\n\n      b2 = nuke.nodes.Blur()\n      b2.setInput(0, i2)\n      b2\['size'].setSingleValue(False)\n      b2\['size'].setExpression(\"parent.size.w\", 0)\n      b2\['size'].setExpression(\"parent.size.h\", 1)\n\n      g1 = nuke.nodes.Grade()\n      g1.setInput(0, b2)\n      g1\['channels'].setValue('rgba')\n      g1\['blackpoint'].setValue(-0.0001)\n      g1\['disable'].setExpression(\"parent.softEdges ? 0 : 1\")\n\n      m1 = nuke.nodes.Merge()\n      m1.setInput(1, b1)\n      m1.setInput(0, g1)\n      m1\['operation'].setValue(\"divide\")\n      \n      if x < slices:\n         m2 = nuke.nodes.Merge()\n         m2.setInput(1, b2)\n         m2.setInput(0, g1)\n         m2\['operation'].setValue(\"divide\")\n    \n      i = m1\n      i2 = m2\n    \n    o.setInput(0, i)\n\n"
 tile_color 0x733520ff
 selected true
 xpos -20670
 ypos 3148
 addUserKnob {20 User}
 addUserKnob {14 size t "Amount of 'in-fill' for one iteration. " R 0 100}
 size {5 4}
 addUserKnob {3 iterations t "How many times the blur/divide operation is repeated."}
 iterations 3
 addUserKnob {6 softEdges t "Smoother transition between iterations." -STARTLINE}
 softEdges true
 addUserKnob {7 angle t "Adjust the direction of the 'in-fill'. (Has no effect if size.w and size.h are the same value)." R -180 180}
 angle -20
 addUserKnob {6 blackOutside t "Clamp to format before the 'in-fill'." +STARTLINE}
 addUserKnob {4 maskChannel t "Which channel from the 'hole_mask' input is used to define the area to be 'in-filled'." M {Red Green Blue Alpha "" ""}}
 maskChannel Alpha
 addUserKnob {6 ignoreAlpha l "Don't process Alpha" t "Only process RGB channels and do not 'in-fill' the alpha channel." -STARTLINE}
 ignoreAlpha true
 addUserKnob {7 mix t "Dissolve between the effect and the original image."}
 mix 1
 addUserKnob {26 ""}
 addUserKnob {26 t l "" -STARTLINE T "PxF_Filler 3.0.4 - (c) 2015 - Xavier Bourque - www.pixelfudger.com"}
}
 Input {
  inputs 0
  name mask
  label static
  xpos 183
  ypos 1950
  number 2
 }
 Input {
  inputs 0
  name img
  label static
  xpos -1073
  ypos -113
  addUserKnob {20 User}
  addUserKnob {7 blur R 0 500}
  addUserKnob {3 iterations}
 }
set N31f538c0 [stack 0]
push $N31f538c0
 Input {
  inputs 0
  name hole_mask
  label static
  xpos 337
  ypos -851
  number 1
 }
set N31f591d0 [stack 0]
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle4
  label static
  xpos 457
  ypos -762
 }
push $N31f591d0
 Shuffle {
  red blue
  green blue
  alpha blue
  name Shuffle3
  label static
  xpos 373
  ypos -762
 }
push $N31f591d0
 Shuffle {
  red green
  blue green
  alpha green
  name Shuffle2
  label static
  xpos 290
  ypos -762
 }
push $N31f591d0
 Shuffle {
  green red
  blue red
  alpha red
  name Shuffle1
  label static
  xpos 207
  ypos -762
 }
 Switch {
  inputs 4
  which {{parent.maskChannel i}}
  name Switch2
  label static
  xpos 342
  ypos -668
 }
set N31fa16c0 [stack 0]
push $N31fa16c0
 Transform {
  rotate {{parent.angle i}}
  center {2048 1463}
  name Transform2
  label static
  xpos 342
  ypos -587
 }
set N31fa9b40 [stack 0]
push $N31f538c0
 Transform {
  rotate {{parent.angle i}}
  center {2048 1463}
  black_outside {{parent.blackOutside i}}
  name Transform1
  label static
  xpos 137
  ypos -594
 }
 CopyBBox {
  inputs 2
  name CopyBBox1
  label static
  xpos 137
  ypos -519
 }
push $N31fa9b40
 Merge2 {
  inputs 2
  operation out
  name Merge1
  label static
  xpos 137
  ypos -432
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur1
  xpos 137
  ypos -359
 }
push $N31fa9b40
 Clamp {
  name Clamp1
  label static
  xpos 342
  ypos -532
 }
 Invert {
  name Invert1
  label static
  xpos 342
  ypos -473
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur2
  xpos 342
  ypos -423
 }
set N32007e60 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade1
  xpos 342
  ypos -379
  disable {{"parent.softEdges ? 0 : 1"}}
 }
set N32015eb0 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge2
  xpos 342
  ypos -353
 }
set N32026c60 [stack 0]
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur3
  xpos 342
  ypos -289
 }
push $N32007e60
push $N32015eb0
 Merge {
  inputs 2
  operation divide
  name Merge3
  xpos 452
  ypos -379
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur4
  xpos 452
  ypos -353
 }
set N32054350 [stack 0]
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade2
  xpos 452
  ypos -309
  disable {{"parent.softEdges ? 0 : 1"}}
 }
set N320623f0 [stack 0]
 Merge {
  inputs 2
  operation divide
  name Merge4
  xpos 452
  ypos -283
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur5
  xpos 452
  ypos -225
 }
push $N32054350
push $N320623f0
 Merge {
  inputs 2
  operation divide
  name Merge5
  xpos 562
  ypos -309
 }
 Blur {
  size {{parent.size.w} {parent.size.h}}
  name Blur6
  xpos 562
  ypos -283
 }
 Grade {
  channels rgba
  blackpoint -0.0001
  name Grade3
  xpos 562
  ypos -245
  disable {{"parent.softEdges ? 0 : 1"}}
 }
 Merge {
  inputs 2
  operation divide
  name Merge6
  xpos 562
  ypos -219
 }
 Transform {
  rotate {{parent.angle*-1}}
  center {2048 1463}
  name Transform3
  label static
  xpos -163
  ypos 1431
 }
push $N31f538c0
 Keymix {
  inputs 3
  name Keymix1
  label static
  xpos -163
  ypos 1650
 }
 ShuffleCopy {
  inputs 2
  name ShuffleCopy1
  label static
  xpos -163
  ypos 1763
  disable {{"parent.ignoreAlpha ? 0 : 1" i}}
 }
push $N31f538c0
 Dissolve {
  inputs 2
  which {{parent.mix i}}
  name Dissolve1
  label static
  xpos -163
  ypos 1923
 }
 Keymix {
  inputs 3
  invertMask true
  bbox B
  name Keymix2
  label static
  xpos -163
  ypos 2053
  disable {{"\[exists parent.input2] ? 0 : 1" x1 0}}
 }
 Output {
  name Output1
  label static
  xpos -163
  ypos 2155
 }
push $N32026c60
 Viewer {
  frame_range 1001-1052
  viewerProcess "Show_LUT_CDL (rec709)"
  name Viewer1
  xpos 452
  ypos -187
 }
end_group
Premult {
 name Premult10
 selected true
 xpos -20670
 ypos 3224
}
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message PxF_Filler
 old_message {{80 120 70 95 70 105 108 108 101 114}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 0 70}
   }
 cursor_position 10
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text10
 selected true
 xpos -20670
 ypos 3978
}
Dot {
 name Dot41
 selected true
 xpos -20636
 ypos 4061
}
push $N2f72a670
Group {
 name EdgeSpread2
 help "spreads out/grows edges based on the alpha channel"
 selected true
 xpos -22454
 ypos 2918
 addUserKnob {20 EdgeSpread}
 addUserKnob {6 inpremult l "Input is premult'd" +STARTLINE}
 inpremult true
 addUserKnob {41 spread T Blur13.size}
 addUserKnob {7 erode_size l erode t "erodes to remove unwanted edge color" R 0 20}
 erode_size 3
 addUserKnob {41 presize l preblursize T preblur.size}
 addUserKnob {6 PremultOut l "Premult Output" +STARTLINE}
 PremultOut true
}
 Input {
  inputs 0
  name Input1
  xpos -647
  ypos 125
 }
 Unpremult {
  name Unpremult1
  xpos -647
  ypos 171
  disable {{!parent.inpremult i}}
 }
 Dot {
  name Dot18
  xpos -614
  ypos 199
 }
set N321d3670 [stack 0]
push $N321d3670
 Blur {
  channels alpha
  name preblur
  selected true
  xpos -596
  ypos 222
 }
 Erode {
  size {{parent.erode_size}}
  name Erode1
  xpos -596
  ypos 264
 }
 Premult {
  name Premult24
  xpos -596
  ypos 306
 }
 Blur {
  size {8 6}
  maskChannelInput rgba.alpha
  invert_mask true
  name Blur13
  xpos -596
  ypos 334
 }
 Unpremult {
  name Unpremult10
  xpos -596
  ypos 376
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy13
  xpos -647
  ypos 417
 }
 Premult {
  name Premult1
  xpos -647
  ypos 473
  disable {{!parent.PremultOut i}}
 }
set N322201d0 [stack 0]
 Output {
  name Output1
  xpos -647
  ypos 518
 }
push $N322201d0
 Viewer {
  input_process false
  name Viewer1
  xpos -1024
  ypos 484
 }
end_group
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message EdgeSpread
 old_message {{69 100 103 101 83 112 114 101 97 100}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 0 70}
   }
 cursor_position 10
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text6
 selected true
 xpos -22454
 ypos 3978
}
Dot {
 name Dot60
 selected true
 xpos -22420
 ypos 4061
}
push $N2f725650
Unpremult {
 name Unpremult4
 selected true
 xpos -24467
 ypos 2815
}
Dot {
 name Dot19
 selected true
 xpos -24433
 ypos 2864
}
set N322d5f50 [stack 0]
Dot {
 name Dot57
 selected true
 xpos -24263
 ypos 2864
}
Dot {
 name Dot56
 selected true
 xpos -24263
 ypos 3114
}
push $N322d5f50
Dot {
 name Dot54
 selected true
 xpos -24579
 ypos 2864
}
Dot {
 name Dot55
 selected true
 xpos -24579
 ypos 3016
}
push $N322d5f50
Group {
 inputs 2
 name EdgeExtendV2_1
 help "EdgeExtend repeatedly blurs and unpremuliplies the image to extend edges outward while trying to preserve the original source colour"
 tile_color 0xff822dff
 selected true
 xpos -24467
 ypos 3012
 addUserKnob {20 edgeExtendTab l "Edge Extend"}
 addUserKnob {7 erodeAlpha l "Erode Alpha" t "Erodes the alpha before the edge extend." R 0 10}
 erodeAlpha 9
 addUserKnob {3 slices l Slices t "How many times the edges are blurred and unpremuliplied.\nThis is the fine control for slightly better quality. The current maximum is 10."}
 slices 4
 addUserKnob {7 slice_width l "Slice Width" t "controls how much each slice is extended. This multiplied by the number of slices give you your total edge extend" R 0 50}
 slice_width 15.4
 addUserKnob {7 blurResult l "Blur Slices" t "How much each slice is blurred after its been extended. Increase this will reduce stepping between the slices but decrease detail" R 0 50}
 blurResult 2
 addUserKnob {7 edgeMix l "Edge Mix" t "adjusts how the edge extend mixes on top of the plate" R 0 10}
 edgeMix 3
 addUserKnob {6 addOrigPlate l "merge original plate" t "uncheck this to only get the edge extend pass. this way you can merge the source plate on top yourself." +STARTLINE}
 addOrigPlate true
}
 Input {
  inputs 0
  name Matte
  xpos -228
  ypos -636
  number 1
 }
 Dilate {
  channels alpha
  size {{-parent.erodeAlpha}}
  name Dilate1
  xpos -228
  ypos -559
 }
set N322fec00 [stack 0]
 Input {
  inputs 0
  name Plate
  xpos -460
  ypos -461
 }
set N3230a260 [stack 0]
 Copy {
  inputs 2
  from0 -rgba.alpha
  to0 -rgba.alpha
  channels alpha
  name Copy2
  xpos -228
  ypos -473
 }
 Premult {
  name Premult1
  xpos -228
  ypos -407
 }
set N3231d6d0 [stack 0]
 Dot {
  name Dot2
  xpos -194
  ypos 1329
 }
set N323259f0 [stack 0]
 FilterErode {
  size {{parent.edgeMix}}
  filter gaussian
  name FilterErode1
  xpos 540
  ypos 1319
 }
push $N3231d6d0
 Blur {
  channels rgba
  size {{parent.slice_width}}
  name Blur1
  xpos -25
  ypos -407
 }
 Shuffle {
  black alpha
  out2 depth
  name Shuffle1
  xpos -25
  ypos -369
 }
 Unpremult {
  channels rgba
  alpha depth.Z
  name Unpremult3
  xpos -25
  ypos -338
 }
 Blur {
  channels rgba
  size {{parent.blurResult}}
  name Blur11
  xpos -25
  ypos -218
 }
set N3235df30 [stack 0]
 Dot {
  name Dot3
  xpos 9
  ypos -43
 }
set N3236bcf0 [stack 0]
push $N3235df30
 Blur {
  channels rgba
  size {{parent.slice_width}}
  name Blur13
  xpos 159
  ypos -218
 }
 Shuffle {
  black alpha
  out2 depth
  name Shuffle3
  xpos 159
  ypos -181
 }
 Unpremult {
  channels rgba
  alpha depth.Z
  name Unpremult2
  xpos 159
  ypos -150
 }
 Blur {
  channels rgba
  size {{parent.blurResult}}
  name Blur14
  xpos 159
  ypos -100
 }
 Merge2 {
  inputs 2
  name Merge2
  xpos 159
  ypos -47
 }
set N323a5b30 [stack 0]
 Dot {
  name Dot4
  xpos 193
  ypos 103
 }
set N323b6540 [stack 0]
push $N323a5b30
 Blur {
  channels rgba
  size {{parent.slice_width}}
  name Blur2
  xpos 342
  ypos -47
 }
 Shuffle {
  black alpha
  out2 depth
  name Shuffle5
  xpos 342
  ypos -10
 }
 Unpremult {
  channels rgba
  alpha depth.Z
  name Unpremult1
  xpos 342
  ypos 21
 }
 Blur {
  channels rgba
  size {{parent.blurResult}}
  name Blur15
  xpos 342
  ypos 71
 }
 Merge2 {
  inputs 2
  name Merge1
  xpos 339
  ypos 99
 }
set N323f0370 [stack 0]
 Dot {
  name Dot5
  xpos 373
  ypos 247
 }
set N32400d40 [stack 0]
push $N323f0370
 Blur {
  channels rgba
  size {{parent.slice_width}}
  name Blur12
  xpos 506
  ypos 99
 }
 Shuffle {
  black alpha
  out2 depth
  name Shuffle2
  xpos 506
  ypos 136
 }
 Unpremult {
  channels rgba
  alpha depth.Z
  name Unpremult4
  xpos 506
  ypos 167
 }
 Blur {
  channels rgba
  size {{parent.blurResult}}
  name Blur16
  xpos 506
  ypos 217
 }
 Merge2 {
  inputs 2
  name Merge3
  xpos 506
  ypos 243
 }
set N3243ab40 [stack 0]
 Dot {
  name Dot6
  xpos 540
  ypos 393
 }
set N3244b510 [stack 0]
push $N3243ab40
 Blur {
  channels rgba
  size {{parent.slice_width}}
  name Blur4
  xpos 682
  ypos 243
 }
 Shuffle {
  black alpha
  out2 depth
  name Shuffle4
  xpos 682
  ypos 280
 }
 Unpremult {
  channels rgba
  alpha depth.Z
  name Unpremult5
  xpos 682
  ypos 311
 }
 Blur {
  channels rgba
  size {{parent.blurResult}}
  name Blur17
  xpos 682
  ypos 361
 }
 Merge2 {
  inputs 2
  name Merge4
  xpos 679
  ypos 389
 }
set N32485430 [stack 0]
 Dot {
  name Dot7
  xpos 713
  ypos 539
 }
set N32495e00 [stack 0]
push $N32485430
 Blur {
  channels rgba
  size {{parent.slice_width}}
  name Blur5
  xpos 885
  ypos 389
 }
 Shuffle {
  black alpha
  out2 depth
  name Shuffle6
  xpos 885
  ypos 426
 }
 Unpremult {
  channels rgba
  alpha depth.Z
  name Unpremult6
  xpos 885
  ypos 457
 }
 Blur {
  channels rgba
  size {{parent.blurResult}}
  name Blur18
  xpos 885
  ypos 507
 }
 Merge2 {
  inputs 2
  name Merge5
  xpos 882
  ypos 535
 }
set N324cfc10 [stack 0]
 Dot {
  name Dot8
  xpos 916
  ypos 685
 }
set N324e05e0 [stack 0]
push $N324cfc10
 Blur {
  channels rgba
  size {{parent.slice_width}}
  name Blur6
  xpos 1094
  ypos 535
 }
 Shuffle {
  black alpha
  out2 depth
  name Shuffle7
  xpos 1094
  ypos 572
 }
 Unpremult {
  channels rgba
  alpha depth.Z
  name Unpremult7
  xpos 1094
  ypos 603
 }
 Blur {
  channels rgba
  size {{parent.blurResult}}
  name Blur19
  xpos 1094
  ypos 653
 }
 Merge2 {
  inputs 2
  name Merge6
  xpos 1091
  ypos 681
 }
set N3251a3e0 [stack 0]
 Dot {
  name Dot9
  xpos 1125
  ypos 831
 }
set N3252ada0 [stack 0]
push $N3251a3e0
 Blur {
  channels rgba
  size {{parent.slice_width}}
  name Blur20
  xpos 1282
  ypos 681
 }
 Shuffle {
  black alpha
  out2 depth
  name Shuffle12
  xpos 1282
  ypos 718
 }
 Unpremult {
  channels rgba
  alpha depth.Z
  name Unpremult12
  xpos 1282
  ypos 749
 }
 Blur {
  channels rgba
  size {{parent.blurResult}}
  name Blur21
  xpos 1282
  ypos 799
 }
 Merge2 {
  inputs 2
  name Merge10
  xpos 1279
  ypos 827
 }
set N32564ba0 [stack 0]
 Dot {
  name Dot10
  xpos 1313
  ypos 977
 }
set N32575570 [stack 0]
push $N32564ba0
 Blur {
  channels rgba
  size {{parent.slice_width}}
  name Blur22
  xpos 1495
  ypos 827
 }
 Shuffle {
  black alpha
  out2 depth
  name Shuffle13
  xpos 1495
  ypos 864
 }
 Unpremult {
  channels rgba
  alpha depth.Z
  name Unpremult13
  xpos 1495
  ypos 895
 }
 Blur {
  channels rgba
  size {{parent.blurResult}}
  name Blur23
  xpos 1495
  ypos 945
 }
 Merge2 {
  inputs 2
  name Merge12
  xpos 1492
  ypos 973
 }
set N325af790 [stack 0]
 Dot {
  name Dot1
  xpos 1526
  ypos 1142
 }
set N325c0160 [stack 0]
push $N325af790
 Blur {
  channels rgba
  size {{parent.slice_width}}
  name Blur3
  xpos 1701
  ypos 973
 }
 Shuffle {
  black alpha
  out2 depth
  name Shuffle8
  xpos 1701
  ypos 1010
 }
 Unpremult {
  channels rgba
  alpha depth.Z
  name Unpremult8
  xpos 1701
  ypos 1041
 }
 Blur {
  channels rgba
  size {{parent.blurResult}}
  name Blur7
  xpos 1701
  ypos 1091
 }
 Merge2 {
  inputs 2
  name Merge9
  xpos 1701
  ypos 1138
 }
push $N325c0160
push $N32575570
push $N3252ada0
push $N324e05e0
push $N32495e00
push $N3244b510
push $N32400d40
push $N323b6540
push $N3236bcf0
push $N3230a260
 Switch {
  inputs 11
  which {{parent.slices}}
  name Switch1
  xpos 679
  ypos 1232
 }
 Merge2 {
  inputs 2
  operation stencil
  name Merge7
  xpos 679
  ypos 1325
  disable {{!parent.addOrigPlate}}
 }
set N326131f0 [stack 0]
push $N323259f0
 Dot {
  name Dot11
  xpos -194
  ypos 1513
 }
 Merge2 {
  inputs 2
  operation disjoint-over
  name Merge8
  xpos 679
  ypos 1509
 }
push $N326131f0
 Dot {
  name Dot12
  xpos 868
  ypos 1329
 }
 Switch {
  inputs 2
  which {{parent.addOrigPlate}}
  name Switch2
  xpos 834
  ypos 1509
 }
 Output {
  name Output1
  xpos 834
  ypos 1697
 }
push $N322fec00
 Viewer {
  frame_range 1001-1052
  viewerProcess "rec709 (rec709)"
  name Viewer1
  selected true
  xpos 91
  ypos -416
 }
end_group
Copy {
 inputs 2
 from0 rgba.alpha
 to0 rgba.alpha
 name Copy8
 selected true
 xpos -24467
 ypos 3104
}
Premult {
 name Premult12
 selected true
 xpos -24467
 ypos 3201
}
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message EdgeExtendV2
 old_message {{69 100 103 101 69 120 116 101 110 100 86 50}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 11 40 0 70}
   }
 cursor_position 12
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text5
 selected true
 xpos -24467
 ypos 3978
}
Dot {
 name Dot59
 selected true
 xpos -24433
 ypos 4061
}
push $N2f720630
Dot {
 name Dot35
 selected true
 xpos -27165
 ypos 2828
}
set N32703260 [stack 0]
Dot {
 name Dot36
 selected true
 xpos -26861
 ypos 2828
}
Dot {
 name Dot37
 selected true
 xpos -26861
 ypos 3148
}
Constant {
 inputs 0
 channels rgb
 color {0.113 0.032 -0.002 0.012}
 format "1920 1080 0 0 1920 1080 1 HD_1080"
 name Constant9
 selected true
 xpos -27030
 ypos 2878
}
Shuffle2 {
 fromInput1 {{0} B}
 fromInput2 {{0} B}
 mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 white -1 -1 rgba.alpha 0 3"
 name Shuffle6
 selected true
 xpos -27030
 ypos 2986
}
Dot {
 name Dot34
 selected true
 xpos -26996
 ypos 3045
}
push 0
push 0
push $N32703260
Group {
 inputs 4
 name Edge4
 help "Edge allows you to extend the proper color out over transparent edges or areas with a lot of motionblur without eroding away the nice detail. This edge extend has some more advanced features like splitting the core matte and final key which allows you to work on motion blur without effecting small details like hair or a swinging rope for example. There is also more control over how you blend the core detail to the extended edge color. This was shown to me years ago by an old comp sup I had and is the same as the edge extend by Frank Reuter. This is my version of it that has evolved a little bit over the years.\n\nInputs\nThere are multiple inputs to Edge but you can just plug in your FG with alpha if you want to use it simplified. Separating Core and Softer keys or using roto with and without motionblur has advantages in certain situations. ie: If you have a thin object this will help maintain solid alpha where you need it.\n\nFG – Foreground plate with Spill suppression applied\nCore – This is like a core matte, it helps identify the leading edge and where the edge tool should start from. It is important to add this core so that small details are not lost like a thin rope or hair.\nKey – This is your Key with fine hair details and transparent motion blurred edges. For Roto you want to have motion blur turned on.\nBG – This is where your Background goes if you are using the node as Final Result\nMask - Currently this only works if you are using Edge in Final result."
 tile_color 0x990000
 label "\[value iterations]"
 selected true
 xpos -27199
 ypos 3035
 addUserKnob {20 User l Extend}
 addUserKnob {6 xxx_panelDropped l "panel dropped state" -STARTLINE +HIDDEN}
 addUserKnob {41 in l channels T Shuffle2.in}
 addUserKnob {4 operation t "Here you can choose if you want to use the Edge Tool to merge together your foreground and background giving you the Final Result or if you would like the Intermediate Result which is unpremultiplied and not merged over the background. The Intermediate Result can be helpful when tweaking parameters like the edgegrow start and edgegrow size." M {Final Intermediate "" ""}}
 addUserKnob {6 previewedgematte l "preview edge matte" t "This allows you to preview your edge matte that you can use via the channels created in the edge node or by creating a shuffle using the button at the bottom." -STARTLINE}
 addUserKnob {6 extendChromaOnly l "extend chroma only" t "This selection will extend only Chroma information by swapping back in the original luminance information." +STARTLINE}
 addUserKnob {41 exp -STARTLINE T EdgeExpansion.exp}
 addUserKnob {6 premultiplied t "Select this if your footage is already premultiplied to remove dark edges in the extension." -STARTLINE}
 premultiplied true
 addUserKnob {6 clamped l "clamp alpha" t "Select this if your alpha has values below 0 or above 1." -STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {14 edgeStart l "slice start" t "Determines where you would like to start bleeding out the color from the inside of your key. It does this with a series of unpremult, blur, premult operations instead of a standard erode." R 0 100}
 edgeStart {6.8 3.8}
 addUserKnob {41 iterations l "slice iterations" t "Sets how large the edge with the color bleeding will be from the edge grow start or core matte and how many times this will be duplicated." T EdgeExpansion.iterations}
 addUserKnob {41 sliceWidth l "slice width" t "The slice width is the amount of blur being applied per slice." T EdgeExpansion.sliceWidth}
 addUserKnob {41 sliceBlur l INVISIBLE +INVISIBLE T EdgeExpansion.sliceBlur}
 addUserKnob {26 ""}
 addUserKnob {7 blurEdgeBlend l "edge blend" t "Helps to soften the transition from the original to the new edge. It tends to erode the bleeding color back inwards if you use high values." R 0 10}
 blurEdgeBlend 2.3
 addUserKnob {7 blurEdgeBlur l "edge blur" t "This helps soften the transition bringing back original detail. This can sometimes bring back some lighting information instead of having it completely replaced." R 0 10}
 addUserKnob {7 filterErodeEdgeSmooth l "edge smooth" t "This one will help with extremely large motionblur and completely takes away detail. This should not be used in most cases but if you do use it sparingly." R -10 10}
 filterErodeEdgeSmooth 8.3
 addUserKnob {26 ""}
 addUserKnob {41 maskChannelMask l mask -STARTLINE T Merge3.maskChannelMask}
 addUserKnob {41 inject -STARTLINE T Merge3.inject}
 addUserKnob {41 invert_mask l invert -STARTLINE T Merge3.invert_mask}
 addUserKnob {41 fringe -STARTLINE T Merge3.fringe}
 addUserKnob {26 ""}
 addUserKnob {22 edgeShuffleButton l "create edge matte" t "This will generate a shuffle node that isolates the areas of extension which you can use to regrain your edges." T "nuke.root().begin()\nEdgeShuffle = nuke.createNode('Shuffle', inpanel = False)\nEdgeShuffle\['label'].setValue( 'Regrain this edge' )\nEdgeShuffle\['in'].setValue( 'edge' )\nEdgeShuffle\['in2'].setValue( 'none' )\nEdgeShuffle\['red'].setValue('alpha')\nEdgeShuffle\['green'].setValue('alpha')\nEdgeShuffle\['blue'].setValue('alpha')\nEdgeShuffle\['alpha'].setValue('alpha')" +STARTLINE}
 addUserKnob {26 reminder l "" -STARTLINE T "*** use edge.matte to regrain your edges. ***"}
 addUserKnob {20 color l Blending}
 addUserKnob {6 enablecolor l enable t "This tab will help you blending your foreground edges with the background color. it is based off the edge extension in the first tab but you can modify the edge properties to get your desired look." +STARTLINE}
 addUserKnob {6 colorpreview l preview t "Preview the edge being used for blending with the BG. This helps if you want to modify it further." -STARTLINE}
 addUserKnob {41 operation_1 l operation t "This is the merge operation you want to use for blending. It is set to average by default but you can use anything you like ie: plus, max, min." T ColorMerge.operation}
 addUserKnob {7 erodeExpandEdge l "expand edge" t "You can expand or contract the edge created in the extend tab." R -100 100}
 erodeExpandEdge 5
 addUserKnob {7 blurSoftenEdge l "soften edge" t "This blur will help soften the transition of the inside blending edge." R 0 100}
 blurSoftenEdge 9.5
 addUserKnob {41 mix_1 l "mix fg luma" t "At a value of 1 this will only blend the chroma information but you can mix this back to include the luma info as well." T Copy5.mix}
 addUserKnob {7 mergeBlendingMix l mix t "Mix Edge Blending result"}
 mergeBlendingMix 0.745
 addUserKnob {26 ""}
 addUserKnob {7 BlurBG l "blur bg" t "Blur the details in the background when you blend them so your foreground doesnt look transparent." R 0 100}
 addUserKnob {26 ""}
 addUserKnob {20 AdjustBGColor l "adjust bg color" t "Here you can modify the color and saturation of the bg being used for blending. This will anly affect the blending not the actual bg." n 1}
 AdjustBGColor 0
 addUserKnob {41 white l gain T GradeEdgeColor.white}
 addUserKnob {41 gamma T GradeEdgeColor.gamma}
 addUserKnob {41 black l lift T GradeEdgeColor.black}
 addUserKnob {41 saturation T EdgeSat.saturation}
 addUserKnob {41 mix l INVISIBLE +INVISIBLE T ColorMerge.mix}
 addUserKnob {20 endGroup n -1}
 addUserKnob {20 MaskBGLuma l "mask bg luma" t "This section will allow you to preview and isolate the bright areas of the bg to wrap around your foreground. Think of this as a way to have lights wrap arpound your foreground in car comps." n 1}
 MaskBGLuma 0
 addUserKnob {26 maskBgLuma l "mask bg luma"}
 addUserKnob {6 enableBGMask l "enable bg mask" +STARTLINE}
 addUserKnob {6 PreviewBG l "preview bg input" -STARTLINE}
 addUserKnob {41 range l INVISIBLE +INVISIBLE T Keyer1.range}
 addUserKnob {41 out l "Luma Range" T controler.out}
 addUserKnob {20 endGroup_1 l endGroup n -1}
 addUserKnob {20 info l Info}
 addUserKnob {26 ""}
 addUserKnob {26 info_1 l "" +STARTLINE T "\nEdge Version 6.9\nCreated by Rob Bannister\nwww.bannisterpost.com"}
 addUserKnob {26 help_1 l "" +STARTLINE T "<a href=\"http://www.bannisterpost.com/downloads/edge/\" style=\"color:white\">HELP</a>"}
}
 Histogram {
  inputs 0
  name controler
  xpos -982
  ypos 561
 }
 Input {
  inputs 0
  name FG
  xpos 376
  ypos -343
 }
 Unpremult {
  name Unpremult3
  xpos 376
  ypos -288
  disable {{!parent.premultiplied}}
 }
 Dot {
  name Dot14
  xpos 410
  ypos -224
 }
set N327590e0 [stack 0]
 Input {
  inputs 0
  name Key
  xpos -215
  ypos -318
  number 1
 }
 Clamp {
  name Clamp1
  xpos -215
  ypos -180
  disable {{parent.clamped==0?1:0}}
 }
 Switch {
  inputs 2
  which {{"!\[exists parent.input1]"}}
  name Switch1
  xpos -215
  ypos -61
 }
set N32771c90 [stack 0]
 Shuffle {
  red alpha
  green alpha
  blue alpha
  name Shuffle1
  xpos -215
  ypos 237
 }
set N3277a080 [stack 0]
 Dot {
  name Dot6
  xpos -181
  ypos 477
 }
set N3278ae40 [stack 0]
push $N32771c90
 Input {
  inputs 0
  name Core
  xpos 791
  ypos -331
  number 2
 }
 Clamp {
  name Clamp2
  xpos 787
  ypos -157
  disable {{parent.clamped==0?1:0}}
 }
 Switch {
  inputs 2
  which {{"!\[exists parent.input2]"}}
  name Switch5
  xpos 787
  ypos -61
 }
 Erode {
  size {{parent.edgeStart} {parent.edgeStart}}
  name Erode1
  label "\[value size]"
  selected true
  xpos 787
  ypos 22
 }
 Blur {
  channels alpha
  size {{parent.blurEdgeBlur}}
  name Blur_edgeBur
  label "\[value size]"
  xpos 787
  ypos 126
 }
set N327b94d0 [stack 0]
 Blur {
  channels alpha
  size {{parent.blurEdgeBlend}}
  name blue_edgeBlend
  label "\[value size]"
  xpos 591
  ypos 126
 }
 FilterErode {
  size {{parent.filterErodeEdgeSmooth}}
  filter gaussian
  name FilterErode_edgeSmooth
  label "\[value size]"
  xpos 591
  ypos 224
 }
set N327d51b0 [stack 0]
push $N3277a080
 ChannelMerge {
  inputs 2
  operation stencil
  name ChannelMerge1
  xpos -64
  ypos 224
 }
 ChannelMerge {
  inputs 2
  operation multiply
  name ChannelMerge2
  xpos -64
  ypos 460
 }
 Dot {
  name Dot17
  xpos -30
  ypos 691
 }
set N327fb7b0 [stack 0]
 Dot {
  name Dot11
  xpos -30
  ypos 1133
 }
 Input {
  inputs 0
  name BG
  xpos -1081
  ypos -343
  number 3
 }
 Dot {
  name Dot5
  xpos -1047
  ypos 293
 }
set N3280a280 [stack 0]
 Dot {
  name Dot12
  xpos -1047
  ypos 644
 }
set N3280f1b0 [stack 0]
 Keyer {
  operation "luminance key"
  range {{parent.controler.out.0} {parent.controler.out.1} 1 1}
  name Keyer1
  xpos -979
  ypos 634
 }
 Blur {
  channels rgba
  size {{parent.BlurBG}}
  name Blur2
  label "\[value size]"
  xpos -717
  ypos 634
 }
set N3281f200 [stack 0]
push $N327d51b0
 Dot {
  name Dot7
  xpos 625
  ypos 344
 }
set N3282cb90 [stack 0]
 Dilate {
  channels alpha
  size {{parent.erodeExpandEdge}}
  name DilateColorEdge
  label "\[value size]"
  xpos -388
  ypos 327
 }
 Blur {
  channels alpha
  size {{parent.blurSoftenEdge}}
  name BlurColorEdge
  label "\[value size]"
  xpos -498
  ypos 327
 }
push $N327b94d0
push $N327590e0
 Shuffle {
  name Shuffle2
  xpos 376
  ypos -174
 }
 Remove {
  channels alpha
  name Remove1
  xpos 376
  ypos -113
 }
 Dot {
  name Dot16
  xpos 410
  ypos 459
 }
set N32864b10 [stack 0]
 Group {
  inputs 2
  name EdgeExpansion
  knobChanged "\n\nn = nuke.thisNode()\nk = nuke.thisKnob()\n\nif 'iterations' in k.name(): \n    #print int(k.value())\n    k.setValue(int(k.value()))\n    if k.value()<1:\n        k.setValue(1)\n    n.begin()\n\n    for node in nuke.allNodes():\n        if 'static' not in node\['label'].value():\n            nuke.delete(node)\n\n    slices = int(n\['iterations'].value())-1\n    step = 1\n    blur_count = 5\n    merge_count = 2\n    unpremult_count = 4\n    num = 1\n    for x in range(1,slices+step,step):\n        \n        a = nuke.createNode('Blur', inpanel=False)\n        new_knob = nuke.Int_Knob('exp_value')\n        a.addKnob(new_knob)\n        a\['exp_value'].setValue(num)\n        a.setInput(0, nuke.toNode('Unpremult' + str(unpremult_count)))\n        a\['size'].setExpression('parent.sliceWidth*(parent.exp==0?1:exp_value)')\n        a\['channels'].setValue('red green blue depth.Z')\n\n        b = nuke.createNode('Shuffle', inpanel=False)\n        b\['in'].setValue( 'rgba' )\n        b\['in2'].setValue( 'depth' )\n        b\['out2'].setValue( 'depth' )\n        b\['alpha'].setValue('red2')\n\n        c = nuke.createNode('Unpremult', inpanel=False)\n        c\['channels'].setValue('red green blue alpha')\n        c\['alpha'].setValue('depth.Z')\n\n        d = nuke.createNode('Blur', inpanel=False)\n        new_knob = nuke.Int_Knob('exp_value')\n        d.addKnob(new_knob)\n        d\['exp_value'].setValue(num)\n        d\['size'].setExpression('parent.sliceWidth*(parent.exp==0?1:exp_value)')\n        d\['channels'].setValue('rgba')\n\n        e = nuke.createNode('Merge2', inpanel=False)\n        e\['Achannels'].setValue('red green blue depth.Z')\n        e.setInput(1, nuke.toNode('Merge' + str(merge_count)))\n        e.setInput(0, nuke.toNode('Blur' + str(blur_count+2)))\n\n        merge_count += 1\n        blur_count += 2\n        unpremult_count += 1\n\n        f = nuke.createNode('Blur', inpanel=False)\n        new_knob = nuke.Int_Knob('exp_value')\n        f.addKnob(new_knob)\n        f\['exp_value'].setValue(num)\n        f.setInput(0, nuke.toNode('Unpremult' + str(unpremult_count)))\n        f\['size'].setExpression('parent.sliceWidth*(parent.exp==0?1:exp_value)')\n        f\['channels'].setValue('rgba')\n\n        g = nuke.createNode('Shuffle', inpanel=False)\n        g\['in'].setValue( 'rgba' )\n        g\['in2'].setValue( 'depth' )\n        g\['out2'].setValue( 'depth' )\n        g\['black'].setValue('alpha')\n\n        h = nuke.createNode('Unpremult', inpanel=False)\n        h\['channels'].setValue('red green blue depth.Z')\n\n        j = nuke.createNode('Blur', inpanel=False)\n        new_knob = nuke.Int_Knob('exp_value')\n        j.addKnob(new_knob)\n        j\['exp_value'].setValue(num)\n        j\['size'].setExpression('parent.sliceWidth*(parent.exp==0?1:exp_value)')\n        j\['channels'].setValue('red green blue depth.Z')\n\n        k = nuke.createNode('Merge2', inpanel=False)\n        k.setInput(1, nuke.toNode('Merge' + str(merge_count)))\n        k.setInput(0, nuke.toNode('Blur' + str(blur_count+2)))\n\n        merge_count += 1\n        blur_count += 2\n        unpremult_count += 1\n        num += 1\n        nuke.toNode('Output1').setInput(0, k)\n\n    try:\n        nuke.toNode('Blur5').setInput(0, nuke.toNode('Unpremult4'))\n    except:\n        nuke.toNode('Output1').setInput(0, nuke.toNode('Merge2'))\n\n    n.end()\n    \n\n"
  note_font_size 25
  xpos 787
  ypos 449
  addUserKnob {20 User}
  addUserKnob {6 firstrun l "Disable before input" +STARTLINE}
  firstrun {{"!\[exists parent.input0]"}}
  addUserKnob {6 exp t "The exponential check box will add a variable to the duplicated blurs that increases as they move outwards from the original edge. This might help if you have a large distance to extend." +STARTLINE}
  addUserKnob {7 iterations t "Sets how large the edge with the color bleeding will be from the edge grow start or core matte and how many times this will be duplicated. The smaller the width the more detail is preserved.This should be just big enough to reach the edge of the largest areas of motionblur." R 1 25}
  iterations 7
  addUserKnob {7 sliceWidth l "slice width" t "The slice width is the amount of blur being applied per slice." R 1 10}
  sliceWidth 1
  addUserKnob {7 sliceBlur l "slice blur" t "The slice width is the amount of blur being applied per slice." R 1 10}
  sliceBlur 1
 }
  Input {
   inputs 0
   name Alpha
   label static
   xpos -218
   ypos -646
   number 1
  }
  Input {
   inputs 0
   name RGB
   label static
   xpos -64
   ypos -772
  }
  Unpremult {
   name Unpremult1
   label static
   xpos -64
   ypos -689
  }
  Copy {
   inputs 2
   from0 rgba.alpha
   to0 rgba.alpha
   name Copy1
   label static
   xpos -64
   ypos -653
   disable {{parent.firstrun}}
  }
  Premult {
   name Premult1
   label static
   xpos -64
   ypos -599
  }
  Shuffle {
   black alpha
   out2 depth
   name Shuffle1
   label static
   xpos -64
   ypos -561
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult2
   label static
   xpos -64
   ypos -523
  }
set N328aec70 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth}}
   name Blur1
   label static
   xpos -64
   ypos -428
  }
  Dot {
   name Dot2
   label static
   xpos -30
   ypos -336
  }
push $N328aec70
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth}}
   name Blur2
   label static
   xpos 46
   ypos -523
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle2
   label static
   xpos 46
   ypos -471
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult3
   label static
   xpos 46
   ypos -435
  }
set N328e8bd0 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth}}
   name Blur3
   label static
   xpos 46
   ypos -381
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge1
   label static
   xpos 46
   ypos -343
  }
  Dot {
   name Dot3
   label static
   xpos 80
   ypos -237
  }
push $N328e8bd0
  Blur {
   channels rgba
   size {{parent.sliceWidth}}
   name Blur4
   label static
   xpos 156
   ypos -428
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle3
   label static
   xpos 156
   ypos -390
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult4
   label static
   xpos 156
   ypos -350
  }
set N32933510 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth}}
   name Blur5
   label static
   xpos 156
   ypos -299
  }
  Merge2 {
   inputs 2
   name Merge2
   label static
   xpos 156
   ypos -247
  }
push $N32933510
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur6
   xpos 266
   ypos -300
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 1
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle4
   xpos 266
   ypos -262
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult5
   xpos 266
   ypos -236
  }
set N32979510 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur7
   xpos 376
   ypos -198
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 1
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge3
   xpos 376
   ypos -172
  }
push $N32979510
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur8
   xpos 266
   ypos -198
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 1
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle5
   xpos 266
   ypos -172
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult6
   xpos 266
   ypos -146
  }
set N329bfab0 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur9
   xpos 376
   ypos -108
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 1
  }
  Merge2 {
   inputs 2
   name Merge4
   xpos 486
   ypos -108
  }
push $N329bfab0
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur10
   xpos 266
   ypos -108
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 2
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle6
   xpos 266
   ypos -70
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult7
   xpos 266
   ypos -44
  }
set N32a06060 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur11
   xpos 376
   ypos -6
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 2
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge5
   xpos 486
   ypos -6
  }
push $N32a06060
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur12
   xpos 266
   ypos -6
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 2
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle7
   xpos 266
   ypos 20
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult8
   xpos 266
   ypos 46
  }
set N32a4c710 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur13
   xpos 376
   ypos 84
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 2
  }
  Merge2 {
   inputs 2
   name Merge6
   xpos 486
   ypos 84
  }
push $N32a4c710
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur14
   xpos 266
   ypos 84
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 3
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle8
   xpos 266
   ypos 122
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult9
   xpos 266
   ypos 148
  }
set N32a92cc0 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur15
   xpos 376
   ypos 186
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 3
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge7
   xpos 486
   ypos 186
  }
push $N32a92cc0
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur16
   xpos 266
   ypos 186
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 3
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle9
   xpos 266
   ypos 212
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult10
   xpos 266
   ypos 238
  }
set N32ad9250 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur17
   xpos 376
   ypos 276
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 3
  }
  Merge2 {
   inputs 2
   name Merge8
   xpos 486
   ypos 276
  }
push $N32ad9250
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur18
   xpos 266
   ypos 276
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 4
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle10
   xpos 266
   ypos 314
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult11
   xpos 266
   ypos 340
  }
set N32b1f800 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur19
   xpos 376
   ypos 378
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 4
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge9
   xpos 486
   ypos 378
  }
push $N32b1f800
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur20
   xpos 266
   ypos 378
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 4
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle11
   xpos 266
   ypos 404
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult12
   xpos 266
   ypos 430
  }
set N32b661b0 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur21
   xpos 376
   ypos 468
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 4
  }
  Merge2 {
   inputs 2
   name Merge10
   xpos 486
   ypos 468
  }
push $N32b661b0
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur22
   xpos 266
   ypos 468
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 5
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle12
   xpos 266
   ypos 506
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult13
   xpos 266
   ypos 532
  }
set N32bac760 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur23
   xpos 376
   ypos 570
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 5
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge11
   xpos 486
   ypos 570
  }
push $N32bac760
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur24
   xpos 266
   ypos 570
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 5
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle13
   xpos 266
   ypos 596
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult14
   xpos 266
   ypos 622
  }
set N32bf2f00 [stack 0]
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur25
   xpos 376
   ypos 654
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 5
  }
  Merge2 {
   inputs 2
   name Merge12
   xpos 486
   ypos 660
  }
push $N32bf2f00
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur26
   xpos 266
   ypos 660
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 6
  }
  Shuffle {
   in2 depth
   alpha red2
   out2 depth
   name Shuffle14
   xpos 266
   ypos 698
  }
  Unpremult {
   channels rgba
   alpha depth.Z
   name Unpremult15
   xpos 266
   ypos 724
  }
set N32c394c0 [stack 0]
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur27
   xpos 376
   ypos 762
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 6
  }
  Merge2 {
   inputs 2
   Achannels {rgba.red rgba.green rgba.blue depth.Z}
   name Merge13
   xpos 486
   ypos 762
  }
push $N32c394c0
  Blur {
   channels rgba
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur28
   xpos 266
   ypos 762
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 6
  }
  Shuffle {
   in2 depth
   black alpha
   out2 depth
   name Shuffle15
   xpos 266
   ypos 788
  }
  Unpremult {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   name Unpremult16
   xpos 266
   ypos 814
  }
  Blur {
   channels {rgba.red rgba.green rgba.blue depth.Z}
   size {{parent.sliceWidth*(parent.exp==0?1:exp_value)}}
   name Blur29
   xpos 266
   ypos 852
   addUserKnob {20 User}
   addUserKnob {3 exp_value}
   exp_value 6
  }
  Merge2 {
   inputs 2
   name Merge14
   selected true
   xpos 486
   ypos 852
  }
  Output {
   name Output1
   label static
   xpos 156
   ypos 4217
  }
 end_group
set N32869a60 [stack 0]
push $N3277a080
 Switch {
  inputs 2
  which {{parent.FinalSwitch.which}}
  name Switch2
  xpos -418
  ypos 237
 }
 Dilate {
  size 50
  name Dilate1
  label "\[value size]"
  xpos -608
  ypos 224
  disable true
 }
 ChannelMerge {
  inputs 2
  operation stencil
  name ChannelMerge3
  xpos -608
  ypos 327
 }
 ChannelMerge {
  inputs 2
  operation multiply
  name ChannelMerge_colormask
  xpos -608
  ypos 628
  disable {{!parent.enableBGMask}}
 }
 Dot {
  name Dot4
  xpos -574
  ypos 702
 }
set N32cd98c0 [stack 0]
 Dot {
  name Dot10
  xpos -573
  ypos 1057
 }
push $N3281f200
 Dot {
  name Dot13
  xpos -683
  ypos 993
 }
 Premult {
  name Premult1
  xpos -971
  ypos 990
 }
push $N32cd98c0
push $N3278ae40
push $N327fb7b0
push $N32864b10
 Dot {
  name Dot1
  xpos 410
  ypos 565
 }
set N32cf0980 [stack 0]
 Dot {
  name Dot18
  xpos 190
  ypos 565
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace2
  xpos 156
  ypos 596
 }
push $N3282cb90
 Dot {
  name Dot8
  xpos 625
  ypos 602
 }
push $N32cf0980
push $N32869a60
 Dot {
  name Dot15
  xpos 821
  ypos 531
 }
 Dot {
  name Dot3
  xpos 821
  ypos 733
 }
 Keymix {
  inputs 3
  name Keymix1
  xpos 376
  ypos 723
 }
 Colorspace {
  colorspace_out YCbCr
  name Colorspace1
  xpos 266
  ypos 729
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 rgba.red
  name Copy1
  xpos 156
  ypos 723
  disable {{!parent.extendChromaOnly}}
 }
 Colorspace {
  colorspace_in YCbCr
  name Colorspace3
  xpos 46
  ypos 729
 }
 ShuffleCopy {
  inputs 2
  red alpha
  green alpha
  blue alpha
  out edge
  name ShuffleCopy1
  xpos -64
  ypos 729
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  name Copy2
  xpos -215
  ypos 723
 }
 Dot {
  name Dot9
  xpos -472
  ypos 733
 }
set N32d8c940 [stack 0]
 Colorspace {
  colorspace_out YCbCr
  name Colorspace4
  xpos -506
  ypos 434
 }
push $N3280a280
 Colorspace {
  colorspace_out YCbCr
  name Colorspace6
  xpos -790
  ypos 290
 }
 Blur {
  channels rgb
  size {{parent.BlurBG}}
  name Blur1
  label "\[value size]"
  xpos -790
  ypos 341
 }
 Copy {
  inputs 2
  from0 rgba.red
  to0 rgba.red
  from1 rgba.alpha
  to1 rgba.alpha
  name Copy5
  xpos -790
  ypos 421
 }
 Colorspace {
  colorspace_in YCbCr
  name Colorspace5
  xpos -790
  ypos 487
 }
 Grade {
  black_clamp false
  name GradeEdgeColor
  xpos -790
  ypos 525
 }
 Saturation {
  name EdgeSat
  xpos -790
  ypos 563
 }
push $N32d8c940
 Merge2 {
  inputs 2+1
  operation average
  Achannels rgb
  output rgb
  mix {{parent.mergeBlendingMix}}
  name ColorMerge
  xpos -791
  ypos 730
  disable {{!parent.enablecolor}}
 }
set N32e172f0 [stack 0]
 Dot {
  name Dot2
  xpos -757
  ypos 911
 }
 Input {
  inputs 0
  name Mask
  xpos -1288
  ypos 730
  number 4
 }
push $N32e172f0
 Premult {
  name Premult3
  xpos -955
  ypos 730
 }
push $N3280f1b0
 Merge2 {
  inputs 2+1
  also_merge edge
  name Merge3
  xpos -1081
  ypos 730
 }
 Switch {
  inputs 2
  which {{operation}}
  name FinalSwitch
  xpos -1081
  ypos 908
 }
 Switch {
  inputs 2
  which {{parent.PreviewBG}}
  name BGPreview
  xpos -1081
  ypos 990
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.red
  name Copy3
  xpos -1081
  ypos 1050
  disable {{parent.colorpreview*-1+1}}
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.red
  name Copy4
  xpos -1081
  ypos 1123
  disable {{!parent.previewedgematte}}
 }
 Shuffle {
  out {{{parent.Shuffle2.in}}}
  name Shuffle3
  xpos -1081
  ypos 1237
 }
 Output {
  name Output1
  xpos -1081
  ypos 1947
 }
end_group
set N3272cd10 [stack 0]
Copy {
 inputs 2
 from0 rgba.alpha
 to0 rgba.alpha
 name Copy16
 selected true
 xpos -27199
 ypos 3139
}
Premult {
 name Premult13
 selected true
 xpos -27199
 ypos 3228
}
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message Edge
 old_message {{69 100 103 101}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 0 70}
   }
 cursor_position 4
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text4
 selected true
 xpos -27199
 ypos 3978
}
Dot {
 name Dot38
 selected true
 xpos -27165
 ypos 4061
}
push $N2f71b650
Dot {
 name Dot26
 selected true
 xpos -28950
 ypos 2841
}
set N32ed12b0 [stack 0]
Dot {
 name Dot29
 selected true
 xpos -28803
 ypos 2841
}
Dot {
 name Dot28
 selected true
 xpos -28803
 ypos 3116
}
push $N32ed12b0
Dot {
 name Dot24
 selected true
 xpos -29076
 ypos 2841
}
Dot {
 name Dot27
 selected true
 xpos -29076
 ypos 3002
}
push $N32ed12b0
Group {
 inputs 2
 name ColorDilate5
 knobChanged "\ntn = nuke.thisNode()\ntk = nuke.thisKnob()\n\nfullList =  tn\['fullList'].value().strip(\"\[']\").split(\"', '\")\nnodeList = fullList\[0], fullList\[1], fullList\[2], fullList\[3], fullList\[4], fullList\[5], fullList\[6]\npreviousLoopNum = tn\['previousLoopNum'].getValue()\n\ngrowTexture = tn\['growTexture'].getValue()\nqualityVal = int( tn\['quality'].getValue() )\n\n\n##### DEFINE VALUE CHANGES ##################\n\ndef valChange():\n    qualityBias = tn\['qualityBias'].getValue()\n    blurCenter = tn\['blurCenter'].getValue()\n    bcDistribution = tn\['bcDistribution'].getValue()\n    for i in range (0, qualityVal):\n        blurVal = nuke.toNode(fullList\[i*len(nodeList)])\n        erodeVal = nuke.toNode(fullList\[i*len(nodeList)+3])\n        blurCenterVal = nuke.toNode(fullList\[i*len(nodeList)+5])\n        if isinstance(growTexture, float) == True:\n            blurValSize = (growTexture/qualityVal*(i+1)*(1-qualityBias)) + (growTexture/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2)))\n            blurVal\['size'].setValue( blurValSize )\n            erodeVal\['size'].setValue(blurVal\['size'].getValue()/2)\n            blurCenterVal\['size'].setValue( ( blurValSize*(1-bcDistribution) +  (blurValSize*(bcDistribution*(pow(i+1, 2)/pow(qualityVal, 2)))) ) * blurCenter )\n        else:\n            blurVal\['size'].setValue(\[ (growTexture\[0]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[0]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) , (growTexture\[1]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[1]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) ])\n            erodeVal\['size'].setValue(\[blurVal\['size'].getValue()\[0]/2,blurVal\['size'].getValue()\[1]/2])\n            blurCenterVal\['size'].setValue(\[ (growTexture\[0]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[0]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) , (growTexture\[1]/qualityVal*(i+1)*(1-qualityBias)) + (growTexture\[1]/qualityVal*(i+1)) * (qualityBias*(pow(i+1, 2)/pow(qualityVal, 2))) ])\n\ndef filterChange():\n    filters = int( tn\['filter'].getValue() )\n    filterQuality = int( tn\['filterQuality'].getValue() )\n    crop = int( tn\['crop'].getValue() )\n    for i in range (0, qualityVal):\n        blurVal = nuke.toNode(fullList\[i*len(nodeList)])\n        blurVal\['filter'].setValue( filters )\n        blurVal\['quality'].setValue( filterQuality )\n        blurVal\['crop'].setValue( crop )\n        blurCenterVal = nuke.toNode(fullList\[i*len(nodeList)])\n        blurCenterVal\['filter'].setValue( filters )\n        blurCenterVal\['quality'].setValue( filterQuality )\n        blurCenterVal\['crop'].setValue( crop )\n\n\n##### CREATE THE NODES ###################\n\nif tk.name()=='quality':\n    if qualityVal < 1:\n        qualityVal = 1\n    elif qualityVal >100:\n        qualityVal = 100\n    tn\['quality'].setValue( qualityVal )\n    \n\n    if qualityVal != previousLoopNum:\n\n\n        inputDep = nuke.dependencies(\[nuke.toNode('Unpremult1')], nuke.INPUTS)\n        resultOver = nuke.toNode( inputDep\[0].name() )\n\n        difference = qualityVal-previousLoopNum\n        if difference > 0:\n            for i in range (1, int(difference+1)):\n                \n                blur = nuke.nodes.Blur ()\n                blur\['channels'].setValue('rgba')\n                blur\['maskChannelInput'].setValue('none')\n                blur.setInput (0, nuke.toNode('Switch2'))\n                \n                unpremult = nuke.nodes.Unpremult ()\n                unpremult\['channels'].setValue('rgb')\n                unpremult\['alpha'].setValue('rgba.alpha')\n                unpremult\['invert'].setValue(0)\n                unpremult.setInput (0, blur)\n                \n                expression = nuke.nodes.Expression(expr3 = 'a==0?0:1')\n                expression.setInput (0, unpremult)\n                \n                erode = nuke.nodes.FilterErode ()\n                erode\['channels'].setValue( 'rgba.alpha' )\n                erode\['filter'].setValue( 'gaussian' )\n                erode.setInput (0, expression)\n                \n                premult = nuke.nodes.Premult ()\n                premult\['channels'].setValue( 'rgb' )\n                premult\['alpha'].setValue( 'rgba.alpha' )\n                premult.setInput (0, erode)\n\n                blurCenter = nuke.nodes.Blur ()\n                blurCenter\['channels'].setValue('rgba')\n                blurCenter\['maskChannelInput'].setValue('none')\n                blurCenter.setInput (0, premult)\n\n                mergeOver = nuke.nodes.Merge2 ()\n                mergeOver\['operation'].setValue( 'over' )\n                mergeOver\['sRGB'].setValue( 0 )\n                mergeOver\['screen_alpha'].setValue( 0 )\n                mergeOver\['bbox'].setValue( 'union' )\n                mergeOver\['Achannels'].setValue( 'rgba' )\n                mergeOver\['Bchannels'].setValue( 'rgba' )\n                mergeOver\['output'].setValue( 'rgba' )\n                mergeOver\['also_merge'].setValue( 'none' )\n                mergeOver.setInput (0, blurCenter)\n                mergeOver.setInput (1, resultOver)\n                \n                \n                resultOver = mergeOver\n                \n                \n                nodeList = blur.name(), unpremult.name(), expression.name(), erode.name(), premult.name(), blurCenter.name(), resultOver.name()\n                fullList.extend(nodeList)\n\n\n##### DELETE THE NODES ##################################\n\n        else:\n            fullList.reverse()\n            for i in range (int(qualityVal), int(previousLoopNum)):\n                for i in range (0, len(nodeList)):\n                    nuke.delete(nuke.toNode(fullList\[0]))\n                    del fullList\[0]\n                resultOver = nuke.toNode(fullList\[0])\n                resultExpression = nuke.toNode(fullList\[3])\n            fullList.reverse()\n\n        nuke.toNode('Unpremult1').setInput(0, resultOver)\n        valChange()\n        filterChange()\n                \n        previousLoopNum = qualityVal\n        \n        tn\['previousLoopNum'].setValue( int(previousLoopNum) )\n        tn\['fullList'].setValue( str(fullList) )\n\n\n\n##### CHANGE EXISTING VALUES #####################\n\nif tk.name()=='growTexture':\n    valChange()\n    \nif tk.name()=='qualityBias':\n    valChange()\n\nif tk.name()=='blurCenter':\n    valChange()\n\nif tk.name()=='bcDistribution':\n    valChange()\n    \nif tk.name()=='filter':\n    filterChange()\n    \nif tk.name()=='filterQuality':\n    filterChange()\n    \nif tk.name()=='crop':\n    filterChange()\n\n\n"
 note_font "Bitstream Vera Sans"
 selected true
 xpos -28984
 ypos 2998
 addUserKnob {20 User l fColourDilate}
 addUserKnob {14 growTexture l "Grow Texture" R 0 100}
 growTexture {8.4 4.4}
 addUserKnob {14 erodeMatte l "Erode Matte" t "Dilate or erode the matte to adjust the grow start paint" R -100 100}
 erodeMatte {-8 -4}
 addUserKnob {7 expandMatte l "Expand Matte" t "Expand or compress the matte to adjust the grow start point" R -0.99999 0.99999}
 expandMatte 0.14
 addUserKnob {7 quality l Iterations t "The number of iterations Colour Dilate will go through.  More is slower.  Max steps is 100" R 1 20}
 quality 7
 addUserKnob {7 qualityBias l Distribution t "0 is a linear distribution.  1 is exponential distribution.\nExponential is smoother with low quality.\nLinear is better with high quality."}
 addUserKnob {26 ""}
 addUserKnob {7 blurCenter l "Blur Center" t "Soften central area where opposite dilates meet creating a hard line.  Is a multiple of Grow Texture." R 0 5}
 addUserKnob {7 bcDistribution l "BC Distribution" t "0 blurs a direct multiple of Grow Texture. 1 blurs exponentially more towards the center."}
 addUserKnob {26 ""}
 addUserKnob {4 filter l Filter t "filter\n" M {box triangle quadratic gaussian ""}}
 filter quadratic
 addUserKnob {3 filterQuality l " " -STARTLINE}
 filterQuality 15
 addUserKnob {6 crop l "crop to format" -STARTLINE}
 crop true
 addUserKnob {4 matteOutput l "Matte Output" M {rgb.alpha matte "dilated matte" "dilated area" "grain matte" ""}}
 matteOutput "dilated area"
 addUserKnob {26 blank l "" -STARTLINE T "      "}
 addUserKnob {6 invertMatte l "invert Matte" -STARTLINE}
 invertMatte true
 addUserKnob {26 blank2 l "" -STARTLINE T "      "}
 addUserKnob {6 rgbIsPremult l "RGB is Premult?" -STARTLINE}
 rgbIsPremult true
 addUserKnob {1 colorDilate l INVISIBLE t "Keep me hidden" +INVISIBLE}
 addUserKnob {3 previousLoopNum l INVISIBLE +INVISIBLE}
 previousLoopNum 7
 addUserKnob {1 fullList l INVISIBLE +INVISIBLE}
 fullList "\['Blur1', 'Unpremult2', 'Expression1', 'FilterErode2', 'Premult1', 'BlurCenter', 'Merge2', 'Blur2', 'Unpremult3', 'Expression2', 'FilterErode3', 'Premult2', 'Blur3', 'Merge5', 'Blur4', 'Unpremult4', 'Expression3', 'FilterErode4', 'Premult3', 'Blur5', 'Merge6', 'Blur6', 'Unpremult5', 'Expression4', 'FilterErode5', 'Premult4', 'Blur7', 'Merge7', 'Blur8', 'Unpremult6', 'Expression5', 'FilterErode6', 'Premult5', 'Blur9', 'Merge8', 'Blur10', 'Unpremult7', 'Expression6', 'FilterErode7', 'Premult6', 'Blur11', 'Merge9', 'Blur12', 'Unpremult8', 'Expression7', 'FilterErode8', 'Premult7', 'Blur13', 'Merge10']"
}
 Input {
  inputs 0
  name InputMask
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -665
  number 1
 }
set N32efde00 [stack 0]
 AddChannels {
  channels alpha
  name AddChannels2
  note_font "Bitstream Vera Sans"
  xpos 365
  ypos 1125
 }
 Dot {
  name Dot3
  note_font "Bitstream Vera Sans"
  xpos 399
  ypos 1183
 }
 Input {
  inputs 0
  name InputRGB
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -531
 }
set N32f10c00 [stack 0]
 AddChannels {
  channels alpha
  name AddChannels1
  note_font "Bitstream Vera Sans"
  xpos 348
  ypos 949
 }
 Dot {
  name Dot2
  note_font "Bitstream Vera Sans"
  xpos 382
  ypos 1078
 }
push $N32efde00
 FilterErode {
  channels alpha
  size {{invertMatte==0?erodeMatte.w:-erodeMatte.w} {invertMatte==0?erodeMatte.h:-erodeMatte.h}}
  name FilterErode1
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -631
 }
 Invert {
  channels alpha
  mix {{invertMatte}}
  name Invert2
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -563
 }
 Clamp {
  minimum 1e-05
  MinClampTo_enable true
  MaxClampTo_enable true
  name Clamp1
  xpos 803
  ypos -497
 }
 Grade {
  channels alpha
  blackpoint {{"clamp(expandMatte, 0, 1)"}}
  whitepoint {{"clamp(1+expandMatte, 0, 1)"}}
  white_clamp true
  name Grade1
  note_font "Bitstream Vera Sans"
  xpos 624
  ypos -474
 }
 Grade {
  channels alpha
  whitepoint 0.5
  black_clamp false
  white_clamp true
  name Grade6
  note_font "Bitstream Vera Sans"
  xpos 803
  ypos -343
 }
 Dot {
  name Dot1
  note_font "Bitstream Vera Sans"
  xpos 837
  ypos -287
 }
set N32f6d0b0 [stack 0]
push $N32f10c00
 AddChannels {
  channels alpha
  name AddChannels3
  note_font "Bitstream Vera Sans"
  xpos 1120
  ypos -444
 }
push $N32f10c00
 Shuffle {
  alpha white
  name Shuffle1
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -458
 }
 Crop {
  box {{InputRGB.bbox.x i x1001 542} {InputRGB.bbox.y i} {InputRGB.bbox.r i} {InputRGB.bbox.t i}}
  name Crop3
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -414
 }
 Switch {
  inputs 2
  which {{rgbIsPremult}}
  name Switch1
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -372
 }
 Dot {
  name Dot5
  note_font "Bitstream Vera Sans"
  xpos 1047
  ypos -326
 }
set N32f9f6f0 [stack 0]
 Merge2 {
  inputs 2
  operation stencil
  bbox intersection
  name Merge1
  note_font "Bitstream Vera Sans"
  xpos 1013
  ypos -290
 }
push $N32f6d0b0
 Dot {
  name Dot4
  note_font "Bitstream Vera Sans"
  xpos 837
  ypos -253
 }
push $N32f9f6f0
 Dot {
  name Dot6
  note_font "Bitstream Vera Sans"
  xpos 946
  ypos -326
 }
 Merge2 {
  inputs 2
  operation stencil
  bbox B
  name Merge3
  note_font "Bitstream Vera Sans"
  xpos 912
  ypos -258
 }
 Dot {
  name Dot7
  note_font "Bitstream Vera Sans"
  xpos 946
  ypos -192
 }
 Switch {
  inputs 2
  which {{invertMatte}}
  name Switch2
  note_font "Bitstream Vera Sans"
  xpos 1025
  ypos -223
 }
set N32fd4c80 [stack 0]
push $N32fd4c80
 Blur {
  channels rgba
  size {1.2 0.6285714286}
  filter quadratic
  name Blur1
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos -27
 }
 Unpremult {
  name Unpremult2
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 18
 }
 Expression {
  expr3 a==0?0:1
  name Expression1
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 62
 }
 FilterErode {
  channels alpha
  size {0.6 0.3142857143}
  filter gaussian
  name FilterErode2
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 106
 }
 Premult {
  name Premult1
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 165
 }
 Blur {
  channels rgba
  size {1.2 0.6285714286}
  name BlurCenter
  note_font "Bitstream Vera Sans"
  xpos 1336
  ypos 222
 }
 Merge2 {
  inputs 2
  name Merge2
  note_font "Bitstream Vera Sans"
  xpos 1299
  ypos 266
 }
push $N32fd4c80
 Blur {
  channels rgba
  size {2.4 1.257142857}
  filter quadratic
  name Blur2
 }
 Unpremult {
  name Unpremult3
 }
 Expression {
  expr3 a==0?0:1
  name Expression2
 }
 FilterErode {
  channels alpha
  size {1.2 0.6285714286}
  filter gaussian
  name FilterErode3
 }
 Premult {
  name Premult2
 }
 Blur {
  channels rgba
  size {2.4 1.257142857}
  name Blur3
 }
 Merge2 {
  inputs 2
  name Merge5
 }
push $N32fd4c80
 Blur {
  channels rgba
  size {3.6 1.885714286}
  filter quadratic
  name Blur4
 }
 Unpremult {
  name Unpremult4
 }
 Expression {
  expr3 a==0?0:1
  name Expression3
 }
 FilterErode {
  channels alpha
  size {1.8 0.9428571429}
  filter gaussian
  name FilterErode4
 }
 Premult {
  name Premult3
 }
 Blur {
  channels rgba
  size {3.6 1.885714286}
  name Blur5
 }
 Merge2 {
  inputs 2
  name Merge6
 }
push $N32fd4c80
 Blur {
  channels rgba
  size {4.8 2.514285714}
  filter quadratic
  name Blur6
 }
 Unpremult {
  name Unpremult5
 }
 Expression {
  expr3 a==0?0:1
  name Expression4
 }
 FilterErode {
  channels alpha
  size {2.4 1.257142857}
  filter gaussian
  name FilterErode5
 }
 Premult {
  name Premult4
 }
 Blur {
  channels rgba
  size {4.8 2.514285714}
  name Blur7
 }
 Merge2 {
  inputs 2
  name Merge7
 }
push $N32fd4c80
 Blur {
  channels rgba
  size {6 3.142857143}
  filter quadratic
  name Blur8
 }
 Unpremult {
  name Unpremult6
 }
 Expression {
  expr3 a==0?0:1
  name Expression5
 }
 FilterErode {
  channels alpha
  size {3 1.571428571}
  filter gaussian
  name FilterErode6
 }
 Premult {
  name Premult5
 }
 Blur {
  channels rgba
  size {6 3.142857143}
  name Blur9
 }
 Merge2 {
  inputs 2
  name Merge8
 }
push $N32fd4c80
 Blur {
  channels rgba
  size {7.2 3.771428571}
  filter quadratic
  name Blur10
 }
 Unpremult {
  name Unpremult7
 }
 Expression {
  expr3 a==0?0:1
  name Expression6
 }
 FilterErode {
  channels alpha
  size {3.6 1.885714286}
  filter gaussian
  name FilterErode7
 }
 Premult {
  name Premult6
 }
 Blur {
  channels rgba
  size {7.2 3.771428571}
  name Blur11
 }
 Merge2 {
  inputs 2
  name Merge9
 }
push $N32fd4c80
 Blur {
  channels rgba
  size {8.4 4.4}
  filter quadratic
  name Blur12
 }
 Unpremult {
  name Unpremult8
 }
 Expression {
  expr3 a==0?0:1
  name Expression7
 }
 FilterErode {
  channels alpha
  size {4.2 2.2}
  filter gaussian
  name FilterErode8
 }
 Premult {
  name Premult7
 }
 Blur {
  channels rgba
  size {8.4 4.4}
  name Blur13
 }
 Merge2 {
  inputs 2
  name Merge10
 }
 Unpremult {
  name Unpremult1
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 966
 }
 Dot {
  name Dot11
  xpos 258
  ypos 1020
 }
set N33247460 [stack 0]
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  mix {{matteOutput==0?1:0 i}}
  name Copy2
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1068
 }
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  mix {{matteOutput==1?1:0}}
  name Copy1
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1173
 }
 Dot {
  name Dot8
  xpos 258
  ypos 1227
 }
set N332691e0 [stack 0]
 Dot {
  name Dot9
  xpos 453
  ypos 1227
 }
 Expression {
  expr3 a<=0.000001?0:1
  name Expression12
  note_font "Bitstream Vera Sans"
  xpos 419
  ypos 1261
 }
 Dot {
  name Dot10
  xpos 453
  ypos 1303
 }
push $N33247460
 Dot {
  name Dot13
  xpos 521
  ypos 1020
 }
 Dot {
  name Dot12
  xpos 521
  ypos 1205
 }
push $N32f10c00
 Merge2 {
  inputs 2
  operation difference
  bbox B
  name Merge14
  xpos 563
  ypos 1201
 }
 Keyer {
  operation "luminance key"
  range {0 1e-05 1 1}
  name Keyer1
  xpos 563
  ypos 1243
 }
 Merge2 {
  inputs 2
  operation mask
  bbox B
  name Merge15
  xpos 563
  ypos 1299
 }
 Dot {
  name Dot14
  xpos 597
  ypos 1341
 }
push $N332691e0
 Copy {
  inputs 2
  from0 rgba.alpha
  to0 rgba.alpha
  mix {{matteOutput==4?1:0 i}}
  name Copy3
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1331
 }
 Expression {
  expr3 a<=0.000001?0:1
  mix {{matteOutput==3?1:0}}
  name Expression8
  note_font "Bitstream Vera Sans"
  xpos 224
  ypos 1418
 }
push $N32f10c00
 Merge2 {
  inputs 2
  operation copy
  bbox B
  name Merge4
  xpos 932
  ypos 1418
 }
 Output {
  name Output1
  note_font "Bitstream Vera Sans"
  xpos 932
  ypos 1579
 }
end_group
Copy {
 inputs 2
 from0 rgba.alpha
 to0 rgba.alpha
 name Copy7
 selected true
 xpos -28984
 ypos 3106
}
Premult {
 name Premult15
 selected true
 xpos -28984
 ypos 3177
}
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message ColorDilate
 old_message {{67 111 108 111 114 68 105 108 97 116 101}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 0 70}
   }
 cursor_position 11
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text3
 selected true
 xpos -28984
 ypos 3978
}
Dot {
 name Dot32
 selected true
 xpos -28950
 ypos 4061
}
push $N2f716590
Dot {
 name Dot21
 selected true
 xpos -31020
 ypos 2873
}
set N33332ae0 [stack 0]
Dot {
 name Dot22
 selected true
 xpos -30910
 ypos 2873
}
Dot {
 name Dot23
 selected true
 xpos -30910
 ypos 3136
}
push $N33332ae0
Group {
 name AAQuickFill1
 tile_color 0x7f9900ff
 selected true
 xpos -31054
 ypos 3022
 addUserKnob {20 User l "Quick Fill"}
 addUserKnob {41 size l extend T Blur_extend.size}
 addUserKnob {20 clip l "Alpha Clip"}
 addUserKnob {41 blackpoint l "alpha blackpoint" T Grade3.blackpoint}
 addUserKnob {41 whitepoint l "alpa whitepoint" T Grade3.whitepoint}
 addUserKnob {41 disable_2 l disable T Grade3.disable}
 addUserKnob {26 ""}
 addUserKnob {41 size_5 l "blur alpha" T Blur1.size}
 addUserKnob {41 disable_4 l disable T Blur1.disable}
 addUserKnob {20 adjustments l Adjustments}
 addUserKnob {26 "" -STARTLINE T "limits the sample area to the edge"}
 addUserKnob {41 size_2 l "edge sample size" T FilterErode1.size}
 addUserKnob {41 disable_1 l "clip to edge" T ChannelMerge1.disable}
 addUserKnob {26 ""}
 addUserKnob {26 "" -STARTLINE T "overal blur"}
 addUserKnob {41 size_1 l "overal blur size" T Blur_post.size}
 addUserKnob {41 size_3 l "dialate matte" T FilterErode_edgePost.size}
 addUserKnob {41 size_4 l "soft matte" T Blur_edgePost.size}
 addUserKnob {41 disable_3 l disable T Blur_post.disable}
}
 Input {
  inputs 0
  name Input1
  xpos 260
  ypos -263
 }
 Unpremult {
  name Unpremult2
  xpos 260
  ypos -179
 }
 Grade {
  channels alpha
  blackpoint 0.95
  whitepoint 0.999
  white_clamp true
  name Grade3
  xpos 260
  ypos -86
 }
set N3335ce90 [stack 0]
 FilterErode {
  size 1.6
  name FilterErode_edgePost
  xpos 260
  ypos 222
 }
 Blur {
  channels alpha
  size 2.3
  name Blur_edgePost
  xpos 260
  ypos 272
 }
push $N3335ce90
 FilterErode {
  size 5
  name FilterErode1
  xpos 560
  ypos 8
 }
push $N3335ce90
 ChannelMerge {
  inputs 2
  operation stencil
  name ChannelMerge1
  xpos 460
  ypos 8
 }
 Premult {
  name Premult1
  xpos 460
  ypos 63
 }
 Blur {
  channels rgba
  size {10 6}
  name Blur_extend
  tile_color 0x2d5e05ff
  xpos 460
  ypos 99
 }
 Unpremult {
  name Unpremult1
  xpos 460
  ypos 134
 }
 Grade {
  channels alpha
  blackpoint 0.0001
  whitepoint 0.001
  white_clamp true
  name alpha_solid
  xpos 460
  ypos 169
 }
 Premult {
  name Premult2
  xpos 460
  ypos 218
 }
push $N3335ce90
 Erode {
  size 0
  name Erode1
  xpos 360
  ypos -15
  disable true
 }
 Blur {
  channels alpha
  size 3.5
  name Blur1
  xpos 360
  ypos 31
  disable true
 }
 Premult {
  name Premult8
  xpos 360
  ypos 85
 }
 Merge2 {
  inputs 2
  operation under
  name Merge1
  xpos 360
  ypos 218
 }
 Blur {
  inputs 1+1
  channels rgba
  size 3.4
  invert_mask true
  name Blur_post
  xpos 360
  ypos 278
 }
 Output {
  name Output1
  xpos 360
  ypos 402
 }
end_group
Copy {
 inputs 2
 from0 rgba.alpha
 to0 rgba.alpha
 name Copy17
 selected true
 xpos -31054
 ypos 3126
}
Premult {
 name Premult17
 selected true
 xpos -31054
 ypos 3206
}
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message AAQuickFill
 old_message {{65 65 81 117 105 99 107 70 105 108 108}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 0 70}
   }
 cursor_position 11
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text2
 selected true
 xpos -31054
 ypos 3978
}
Dot {
 name Dot31
 selected true
 xpos -31020
 ypos 4061
}
push $N2f711730
Text2 {
 font_size_toolbar 40
 font_width_toolbar 100
 font_height_toolbar 100
 message "NO TREATMENT"
 old_message {{78 79 32 84 82 69 65 84 77 69 78 84}
   }
 box {0 979 1920 1080}
 xjustify center
 yjustify center
 transforms {{0 2}
   }
 font_size_values {{0 40 1 40 2 40 3 40 4 40 5 40 6 40 7 40 8 40 9 40 10 40 11 40 0 70 1 70 2 70 3 70 4 70 5 70 6 70 7 70 8 70 9 70 10 70 11 70}
   }
 font {{ Artifakt Element : Regular : ArtifaktElement/Artifakt Element Regular.ttf : 0 }}
 font_size 40
 scale {1 1}
 cursor_initialised true
 autofit_bbox false
 initial_cursor_position {{0 1080}
   }
 group_animations {{0} imported: 0 selected: items: "root transform"}
 animation_layers {{1 11 960 540 0 -30 1 1 0 0 0 0}
   }
 name Text1
 selected true
 xpos -31290
 ypos 3978
}
Switch {
 inputs 16
 name Switch1
 selected true
 xpos -31290
 ypos 5304
}
Dot {
 name Dot30
 selected true
 xpos -31256
 ypos 5784
}
Constant {
 inputs 0
 channels rgb
 color {0.113 0.032 -0.002 0.012}
 format "1920 1080 0 0 1920 1080 1 HD_1080"
 name Constant8
 selected true
 xpos -31553
 ypos 5563
}
Shuffle2 {
 fromInput1 {{0} B}
 fromInput2 {{0} B}
 mappings "4 rgba.red 0 0 rgba.red 0 0 rgba.green 0 1 rgba.green 0 1 rgba.blue 0 2 rgba.blue 0 2 white -1 -1 rgba.alpha 0 3"
 name Shuffle10
 selected true
 xpos -31553
 ypos 5671
}
Merge2 {
 inputs 2
 name Merge22
 selected true
 xpos -31553
 ypos 5781
}
push $N3272cd10
Shuffle {
 in edge
 red alpha
 green alpha
 blue alpha
 name Shuffle3
 label "Regrain this edge"
 selected true
 xpos -27060
 ypos 3095
}
StickyNote {
 inputs 0
 name StickyNote1
 label "\n<b>AAQuickFill</b>\n\n- blur, unpremult technique\n\n\n<font color=green>- quick & simple\n- extend size can be split</font>\n\n<font color=red>- only 1 Blur iteration\n- adjustment knobs can be a bit &nbsp;&nbsp;confusing\n- alpha has to be shuffled in again\n\n</font>\n"
 note_font_size 30
 selected true
 xpos -30811
 ypos 2839
}
StickyNote {
 inputs 0
 name StickyNote2
 label "\n<b>ColorDilate</b>\n\n- blur, unpremult technique\n\n\n<font color=green>- quick to set up\n- separate mask input (core matte)\n- choice of iterations & distribution (created &nbsp;&nbsp;dynamically)\n- choice of matte output\n</font>\n\n<font color=red>- Blur Center breaks when grow texture split up\n- default value for grow texture too high\n\n\n</font>\n"
 note_font_size 30
 selected true
 xpos -28693
 ypos 2828
}
StickyNote {
 inputs 0
 name StickyNote4
 label "\n<b>Edge (by Rob Bannister)</b>\n\n- blur, unpremult technique\n\n\n<font color=green>- complex but straight forward to set up\n- choice of iterations & distribution (created dynamically)\n- separate matte inputs\n- option to preview edge matte\n- goes beyond edge extend (options to blend with BG)\n- 2 output options\n- can output edge matte\n</font>\n\n<font color=red>- splitting slice start knob doesn't work (has to be manually &nbsp;&nbsp;adjusted inside)\n- slice width can not be split\n\n</font>\n"
 note_font_size 30
 selected true
 xpos -26681
 ypos 2841
}
StickyNote {
 inputs 0
 name StickyNote5
 label "\n<b>EdgeExtendV2</b>\n\n- blur, unpremult technique\n\n\n<font color=green>- easy to set up\n- separate (core) matte input\n- option to output extension only\n</font>\n\n<font color=red>- erode alpha and slice width can not &nbsp;&nbsp;be split\n- maximum of 10 slices (not &nbsp;&nbsp;dynamically)\n- alpha needs to be shuffled in\n\n</font>\n"
 note_font_size 30
 selected true
 xpos -24124
 ypos 2855
}
StickyNote {
 inputs 0
 name StickyNote7
 label "\n<b>Edge_Extrude_Directional</b>\n\n- blur, unpremult technique\n- re-using PxF_Filler (improving ease of use)\n\n\n<font color=green>- easy to set up\n- knobs can be split up\n- option to choose angle\n- additional core matte & mask inputs\n\n</font>\n\n<font color=red>- angle and size direction working against each other (just &nbsp;&nbsp;to be aware of)\n\n</font>\n"
 note_font_size 30
 selected true
 xpos -18674
 ypos 2825
}
StickyNote {
 inputs 0
 name StickyNote9
 label "\n<b>PxF_Filler (by Xavier Bourque)</b>\n\n- blur, unpremult technique\n\n\n<font color=green>- easy to set up\n- size can be split up\n- choice of iterations (dynamically)\n- option to choose angle\n- separate core matte & mask inputs\n\n</font>\n\n<font color=red>- too simple\n- matte has to be inverted for edge extend &nbsp;&nbsp;purpose\n- edge blur can't be adjusted\n- angle and size direction working against each other (just &nbsp;&nbsp;to be aware of)\n\n</font>\n"
 note_font_size 30
 selected true
 xpos -20468
 ypos 2843
}
StickyNote {
 inputs 0
 name StickyNote3
 label "Frank Rueter's Edge Extend"
 selected true
 xpos -17000
 ypos 2883
}
StickyNote {
 inputs 0
 name StickyNote11
 label "\n<b>EdgeWarp</b>\n\n- vector extend technique\n- using Matrix as an edge detect to determine &nbsp;&nbsp;vectors\n- get fed into STmap\n\n\n<font color=green>- easy to set up\n- maintains details and shapes\n- perpendicular spread\n\n</font>\n\n<font color=red>- knobs can't be split\n- alpha has to be shuffled in if it is treated &nbsp;&nbsp;prior to node\n- a bit slower\n\n</font>\n"
 note_font_size 30
 selected true
 xpos -11921
 ypos 2817
}
StickyNote {
 inputs 0
 name StickyNote12
 label "\n<b>PxF_Distort (by Xavier Bourque)</b>\n\n- vector extend technique\n- detects edges and direction/vector\n- affected region gets calculated via &nbsp;&nbsp;expression\n- internally using an iDistort to perform the &nbsp;&nbsp;stretching\n\n\n<font color=green>- easy to set up\n- maintains details and shapes\n- perpendicular spread\n\n</font>\n\n<font color=red>- knobs can't be split\n- watch out for artifacts (filter setting)\n- a bit slower\n\n</font>\n"
 note_font_size 30
 selected true
 xpos -9871
 ypos 2820
}
StickyNote {
 inputs 0
 name StickyNote13
 label "\n<b>VectorExtendEdge</b>\n\n- mix of vector extend & blur/unpremult technique\n- detects edges and direction/vector\n- used to apply multiple blur/unpremult combos but in this case &nbsp;&nbsp;VectorBlurs\n\n\n<font color=green>- easy to set up\n- maintains details and shapes\n- perpendicular spread\n- separate ctrl_matte (core matte) input\n- can output vectors / edges if needed\n\n</font>\n\n<font color=red>- knobs can't be split\n- a bit slower\n\n</font>\n"
 note_font_size 30
 selected true
 xpos -7819
 ypos 2827
}
StickyNote {
 inputs 0
 name StickyNote14
 label "\n<b>Edge_Expand (by SpinVFX)</b>\n\n- all techniques available (erode/dilate, blur/unpremult, &nbsp;&nbsp;warp, distort)\n\n\n<font color=green>- easy to set up\n- great option to flip through different techniques\n- separate mask input (not for core!)\n- can shuffle out edge matte\n\n</font>\n\n<font color=red>- alpha needs to be shuffled in again if it is treated prior &nbsp;&nbsp;to node\n- can be a bit slower\n\n</font>\n"
 note_font_size 30
 selected true
 xpos -3576
 ypos 2838
}
StickyNote {
 inputs 0
 name StickyNote16
 label "\n- manual smear technique\n\n\n<font color=green>- easy to use for selective areas\n- full control\n\n</font>\n\n<font color=red>- not procedural (unless maybe tracked / smart &nbsp;&nbsp;vector)\n- can become very slow when overused\n\n</font>\n"
 note_font_size 30
 selected true
 xpos -1512
 ypos 2891
}
